word32 fn00421620(selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
fn00421620_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc80
	struct <anonymous> tLoc68
l00421620:
	word32 esp_10045
	word32 ebp_10221
	word32 edi_10265
	word32 ebx_10222
	word32 eax_10263
	word32 ebp_10116
	word32 ebx_10117
	word32 eax_10160
	word32 esp_10155
	word128 xmm0_10056
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	Mem40[&tLoc80 + 20<i32>:word32] = 0x4329C0<32>
	word32 ebx_10976
	fn00402890(&tLoc68, Mem40[&tLoc80 + 16<i32>:word32], Mem40[&tLoc80 + 20<i32>:word32], out ebx_10976)
	word32 edi_58 = Mem51[dwArg04:word32]
	fn00403B80(&tLoc80)
	word32 ebp_72
	word32 ebx_73 = fn00402BB0(&tLoc80, fp - 4<i32>, edi_58, edi_58, out ebp_72)
	Mem84[ebp_72 - 4<i32>:byte] = 0<8>
	Mem86[ebp_72 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_10427 = <invalid>
	word32 esi_10980
	word32 edi_10981
	word32 ecx_10977
	word32 edx_10978
	word32 ebx_10979
	word32 ebp_10420
	branch SLICE(fn0041C1F0(ebx_73, ebx_73, ebp_72, es, ds, Mem86[esp_10427 + 40<i32>:word32], out ecx_10977, out edx_10978, out ebx_10979, out ebp_10420, out esi_10980, out edi_10981), byte, 0) == 0<8> l00421705
l00421705:
	Mem113[ebp_10420 - 28<i32>:word32] = esp_10427 - 0x18<32>
	Mem115[esp_10427 - 0x1C<32>:word32] = 0x4329C8<32>
	word32 ebx_10982
	fn00402890(esp_10427 - 0x18<32>, Mem115[esp_10427 - 0x20<32>:word32], Mem115[esp_10427 - 0x1C<32>:word32], out ebx_10982)
	Mem126[ebp_10420 - 4<i32>:word32] = 2<32>
	word32 edi_132 = Mem126[Mem126[ebp_10420 + 8<i32>:word32]:word32]
	Mem135[esp_10427 - 0x34<32>:word32] = ebp_10420 - 13<i32>
	Mem136[ebp_10420 - 24<i32>:word32] = esp_10427 - 0x30<32>
	Mem139[esp_10427 - 0x38<32>:word32] = Mem136[ebp_10420 + 8<i32>:word32]
	fn00403B80(esp_10427 - 0x30<32>)
	Mem143[esp_10427 - 0x34<32>:word32] = edi_132
	Mem145[ebp_10420 - 4<i32>:byte] = 3<8>
	word32 ebp_147
	word32 ebx_148 = fn00402BB0(esp_10427 - 0x30<32>, ebp_10420, edi_132, Mem145[esp_10427 - 0x34<32>:word32], out ebp_147)
	Mem159[ebp_147 - 4<i32>:byte] = 2<8>
	Mem161[ebp_147 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_153 = <invalid>
	word32 ebp_163
	word32 esi_10986
	word32 edi_10987
	word32 ecx_10983
	word32 edx_10984
	word32 ebx_10985
	branch SLICE(fn0041C1F0(ebx_148, ebx_148, ebp_147, es, ds, Mem161[esp_153 + 40<i32>:word32], out ecx_10983, out edx_10984, out ebx_10985, out ebp_163, out esi_10986, out edi_10987), byte, 0) == 0<8> l004217C2
l004217C2:
	Mem183[ebp_163 - 28<i32>:word32] = esp_153 - 0x18<32>
	Mem185[esp_153 - 0x1C<32>:word32] = 0x4329D0<32>
	word32 ebx_10988
	fn00402890(esp_153 - 0x18<32>, Mem185[esp_153 - 0x20<32>:word32], Mem185[esp_153 - 0x1C<32>:word32], out ebx_10988)
	Mem196[ebp_163 - 4<i32>:word32] = 4<32>
	word32 edi_202 = Mem196[Mem196[ebp_163 + 8<i32>:word32]:word32]
	Mem205[esp_153 - 0x34<32>:word32] = ebp_163 - 13<i32>
	Mem206[ebp_163 - 24<i32>:word32] = esp_153 - 0x30<32>
	Mem209[esp_153 - 0x38<32>:word32] = Mem206[ebp_163 + 8<i32>:word32]
	fn00403B80(esp_153 - 0x30<32>)
	Mem213[esp_153 - 0x34<32>:word32] = edi_202
	Mem215[ebp_163 - 4<i32>:byte] = 5<8>
	word32 ebp_217
	word32 ebx_218 = fn00402BB0(esp_153 - 0x30<32>, ebp_163, edi_202, Mem215[esp_153 - 0x34<32>:word32], out ebp_217)
	Mem229[ebp_217 - 4<i32>:byte] = 4<8>
	Mem231[ebp_217 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_223 = <invalid>
	word32 ebp_233
	word32 ebx_234
	word32 edi_10992
	word32 ecx_10989
	word32 edx_10990
	word32 esi_10991
	branch SLICE(fn0041C1F0(ebx_218, ebx_218, ebp_217, es, ds, Mem231[esp_223 + 40<i32>:word32], out ecx_10989, out edx_10990, out ebx_234, out ebp_233, out esi_10991, out edi_10992), byte, 0) == 0<8> l00421868
l00421868:
	Mem253[ebp_233 - 28<i32>:word32] = esp_223 - 0x18<32>
	Mem255[esp_223 - 0x1C<32>:word32] = 0x4329D4<32>
	word32 ebx_11011
	fn00402890(esp_223 - 0x18<32>, Mem255[esp_223 - 0x20<32>:word32], Mem255[esp_223 - 0x1C<32>:word32], out ebx_11011)
	Mem266[ebp_233 - 4<i32>:word32] = 6<32>
	word32 edi_272 = Mem266[Mem266[ebp_233 + 8<i32>:word32]:word32]
	Mem275[esp_223 - 0x34<32>:word32] = ebp_233 - 13<i32>
	Mem276[ebp_233 - 24<i32>:word32] = esp_223 - 0x30<32>
	Mem279[esp_223 - 0x38<32>:word32] = Mem276[ebp_233 + 8<i32>:word32]
	fn00403B80(esp_223 - 0x30<32>)
	Mem283[esp_223 - 0x34<32>:word32] = edi_272
	Mem285[ebp_233 - 4<i32>:byte] = 7<8>
	word32 ebp_287
	word32 ebx_288 = fn00402BB0(esp_223 - 0x30<32>, ebp_233, edi_272, Mem285[esp_223 - 0x34<32>:word32], out ebp_287)
	Mem299[ebp_287 - 4<i32>:byte] = 6<8>
	Mem301[ebp_287 - 4<i32>:word32] = 0xFFFFFFFF<32>
	esp_10427 = <invalid>
	word32 ecx_11012
	word32 edx_11013
	word32 ebx_11014
	word32 esi_11015
	word32 edi_11016
	branch SLICE(fn0041C1F0(ebx_288, ebx_288, ebp_287, es, ds, Mem301[esp_10427 + 40<i32>:word32], out ecx_11012, out edx_11013, out ebx_11014, out ebp_10420, out esi_11015, out edi_11016), byte, 0) == 0<8> l004218D8
l004218D8:
	word128 xmm0_10064
	Mem323[ebp_10420 - 28<i32>:word32] = esp_10427 - 0x18<32>
	Mem325[esp_10427 - 0x1C<32>:word32] = 0x4329DC<32>
	word32 ebx_11023
	fn00402890(esp_10427 - 0x18<32>, Mem325[esp_10427 - 0x20<32>:word32], Mem325[esp_10427 - 0x1C<32>:word32], out ebx_11023)
	Mem336[ebp_10420 - 4<i32>:word32] = 8<32>
	word32 edi_342 = Mem336[Mem336[ebp_10420 + 8<i32>:word32]:word32]
	Mem345[esp_10427 - 0x34<32>:word32] = ebp_10420 - 13<i32>
	Mem346[ebp_10420 - 24<i32>:word32] = esp_10427 - 0x30<32>
	Mem349[esp_10427 - 0x38<32>:word32] = Mem346[ebp_10420 + 8<i32>:word32]
	fn00403B80(esp_10427 - 0x30<32>)
	Mem353[esp_10427 - 0x34<32>:word32] = edi_342
	Mem355[ebp_10420 - 4<i32>:byte] = 9<8>
	word32 ebp_357
	word32 ebx_358 = fn00402BB0(esp_10427 - 0x30<32>, ebp_10420, edi_342, Mem355[esp_10427 - 0x34<32>:word32], out ebp_357)
	Mem369[ebp_357 - 4<i32>:byte] = 8<8>
	Mem371[ebp_357 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_10104 = <invalid>
	word32 ecx_11024
	word32 edx_11025
	word32 ebx_11026
	word32 esi_11027
	word32 edi_11028
	word32 ebp_10097
	branch SLICE(fn0041C1F0(ebx_358, ebx_358, ebp_357, es, ds, Mem371[esp_10104 + 40<i32>:word32], out ecx_11024, out edx_11025, out ebx_11026, out ebp_10097, out esi_11027, out edi_11028), byte, 0) == 0<8> l0042197B
l0042197B:
	Mem393[ebp_10097 - 28<i32>:word32] = esp_10104 - 0x18<32>
	Mem395[esp_10104 - 0x1C<32>:word32] = 0x4329E4<32>
	word32 ebx_11034
	fn00402890(esp_10104 - 0x18<32>, Mem395[esp_10104 - 0x20<32>:word32], Mem395[esp_10104 - 0x1C<32>:word32], out ebx_11034)
	Mem406[ebp_10097 - 4<i32>:word32] = 0xA<32>
	word32 edi_412 = Mem406[Mem406[ebp_10097 + 8<i32>:word32]:word32]
	Mem415[esp_10104 - 0x34<32>:word32] = ebp_10097 - 13<i32>
	Mem416[ebp_10097 - 24<i32>:word32] = esp_10104 - 0x30<32>
	Mem419[esp_10104 - 0x38<32>:word32] = Mem416[ebp_10097 + 8<i32>:word32]
	fn00403B80(esp_10104 - 0x30<32>)
	Mem423[esp_10104 - 0x34<32>:word32] = edi_412
	Mem425[ebp_10097 - 4<i32>:byte] = 0xB<8>
	word32 ebp_427
	word32 ebx_428 = fn00402BB0(esp_10104 - 0x30<32>, ebp_10097, edi_412, Mem425[esp_10104 - 0x34<32>:word32], out ebp_427)
	Mem439[ebp_427 - 4<i32>:byte] = 0xA<8>
	Mem441[ebp_427 - 4<i32>:word32] = 0xFFFFFFFF<32>
	esp_10427 = <invalid>
	word32 ecx_11035
	word32 edx_11036
	word32 ebx_11037
	word32 esi_11038
	word32 edi_11039
	branch SLICE(fn0041C1F0(ebx_428, ebx_428, ebp_427, es, ds, Mem441[esp_10427 + 40<i32>:word32], out ecx_11035, out edx_11036, out ebx_11037, out ebp_10420, out esi_11038, out edi_11039), byte, 0) == 0<8> l004219EB
l004219EB:
	Mem463[ebp_10420 - 28<i32>:word32] = esp_10427 - 0x18<32>
	Mem465[esp_10427 - 0x1C<32>:word32] = 0x4329EC<32>
	word32 ebx_11044
	fn00402890(esp_10427 - 0x18<32>, Mem465[esp_10427 - 0x20<32>:word32], Mem465[esp_10427 - 0x1C<32>:word32], out ebx_11044)
	Mem476[ebp_10420 - 4<i32>:word32] = 0xC<32>
	word32 edi_482 = Mem476[Mem476[ebp_10420 + 8<i32>:word32]:word32]
	Mem485[esp_10427 - 0x34<32>:word32] = ebp_10420 - 13<i32>
	Mem486[ebp_10420 - 24<i32>:word32] = esp_10427 - 0x30<32>
	Mem489[esp_10427 - 0x38<32>:word32] = Mem486[ebp_10420 + 8<i32>:word32]
	fn00403B80(esp_10427 - 0x30<32>)
	Mem493[esp_10427 - 0x34<32>:word32] = edi_482
	Mem495[ebp_10420 - 4<i32>:byte] = 0xD<8>
	word32 ebp_497
	word32 ebx_498 = fn00402BB0(esp_10427 - 0x30<32>, ebp_10420, edi_482, Mem495[esp_10427 - 0x34<32>:word32], out ebp_497)
	Mem509[ebp_497 - 4<i32>:byte] = 0xC<8>
	Mem511[ebp_497 - 4<i32>:word32] = 0xFFFFFFFF<32>
	esp_10104 = <invalid>
	word32 ecx_11045
	word32 edx_11046
	word32 ebx_11047
	word32 esi_11048
	word32 edi_11049
	branch SLICE(fn0041C1F0(ebx_498, ebx_498, ebp_497, es, ds, Mem511[esp_10104 + 40<i32>:word32], out ecx_11045, out edx_11046, out ebx_11047, out ebp_10097, out esi_11048, out edi_11049), byte, 0) == 0<8> l00421A5B
l00421A5B:
	Mem533[ebp_10097 - 28<i32>:word32] = esp_10104 - 0x18<32>
	Mem535[esp_10104 - 0x1C<32>:word32] = 0x4329F4<32>
	word32 ebx_11050
	fn00402890(esp_10104 - 0x18<32>, Mem535[esp_10104 - 0x20<32>:word32], Mem535[esp_10104 - 0x1C<32>:word32], out ebx_11050)
	Mem546[ebp_10097 - 4<i32>:word32] = 0xE<32>
	word32 edi_552 = Mem546[Mem546[ebp_10097 + 8<i32>:word32]:word32]
	Mem555[esp_10104 - 0x34<32>:word32] = ebp_10097 - 13<i32>
	Mem556[ebp_10097 - 24<i32>:word32] = esp_10104 - 0x30<32>
	Mem559[esp_10104 - 0x38<32>:word32] = Mem556[ebp_10097 + 8<i32>:word32]
	fn00403B80(esp_10104 - 0x30<32>)
	Mem563[esp_10104 - 0x34<32>:word32] = edi_552
	Mem565[ebp_10097 - 4<i32>:byte] = 0xF<8>
	word32 ebp_567
	word32 ebx_568 = fn00402BB0(esp_10104 - 0x30<32>, ebp_10097, edi_552, Mem565[esp_10104 - 0x34<32>:word32], out ebp_567)
	Mem579[ebp_567 - 4<i32>:byte] = 0xE<8>
	Mem581[ebp_567 - 4<i32>:word32] = 0xFFFFFFFF<32>
	esp_10427 = <invalid>
	word32 ecx_11051
	word32 edx_11052
	word32 ebx_11053
	word32 esi_11054
	word32 edi_11055
	branch SLICE(fn0041C1F0(ebx_568, ebx_568, ebp_567, es, ds, Mem581[esp_10427 + 40<i32>:word32], out ecx_11051, out edx_11052, out ebx_11053, out ebp_10420, out esi_11054, out edi_11055), byte, 0) == 0<8> l00421ACB
l00421ACB:
	word32 ebx_765
	word32 edi_767
	word32 eax_9893
	word32 esp_9888
	word32 esp_9831
	Mem603[ebp_10420 - 28<i32>:word32] = esp_10427 - 0x18<32>
	Mem605[esp_10427 - 0x1C<32>:word32] = 0x4329FC<32>
	word32 ebx_607
	fn00402890(esp_10427 - 0x18<32>, Mem605[esp_10427 - 0x20<32>:word32], Mem605[esp_10427 - 0x1C<32>:word32], out ebx_607)
	Mem618[ebp_10420 - 4<i32>:word32] = 0x10<32>
	word32 edi_619 = Mem618[ebp_10420 + 8<i32>:word32]
	Mem623[esp_10427 - 0x34<32>:word32] = 0<32>
	Mem628[esp_10427 - 0x34<32>:word32] = fn0040F760(edi_619, Mem623[esp_10427 - 0x34<32>:word32])
	word32 ebp_632
	word32 edx_11061
	fn004028D0(esp_10427 - 0x30<32>, edi_619, Mem628[esp_10427 - 0x34<32>:word32], out edx_11061, out ebp_632)
	Mem642[ebp_632 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_633 = <invalid>
	word32 ebp_644
	word32 ebx_645
	word32 edi_647
	word32 ecx_11062
	word32 edx_11063
	word32 esi_11064
	branch SLICE(fn0041C1F0(ebx_607, ebx_607, ebp_632, es, ds, Mem642[esp_633 + 0x2C<32>:word32], out ecx_11062, out edx_11063, out ebx_645, out ebp_644, out esi_11064, out edi_647), byte, 0) == 0<8> l00421B2A
l00421B2A:
	Mem664[ebp_644 + 8<i32>:word32] = esp_633 - 0x14<32>
	Mem666[esp_633 - 0x18<32>:word32] = 0x432A04<32>
	word32 ebx_668
	fn00402890(esp_633 - 0x14<32>, Mem666[esp_633 - 0x1C<32>:word32], Mem666[esp_633 - 0x18<32>:word32], out ebx_668)
	Mem679[ebp_644 - 4<i32>:word32] = 0x11<32>
	Mem683[esp_633 - 0x30<32>:word32] = 0<32>
	Mem688[esp_633 - 0x30<32>:word32] = fn0040F760(edi_647, Mem683[esp_633 - 0x30<32>:word32])
	word32 ebp_692
	word32 edx_11065
	fn004028D0(esp_633 - 0x2C<32>, edi_647, Mem688[esp_633 - 0x30<32>:word32], out edx_11065, out ebp_692)
	Mem702[ebp_692 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_693 = <invalid>
	word32 ebp_704
	word32 ebx_705
	word32 edi_707
	word32 ecx_11066
	word32 edx_11067
	word32 esi_11068
	branch SLICE(fn0041C1F0(ebx_668, ebx_668, ebp_692, es, ds, Mem702[esp_693 + 0x2C<32>:word32], out ecx_11066, out edx_11067, out ebx_705, out ebp_704, out esi_11068, out edi_707), byte, 0) == 0<8> l00421B9B
l00421B9B:
	Mem724[ebp_704 + 8<i32>:word32] = esp_693 - 0x14<32>
	Mem726[esp_693 - 0x18<32>:word32] = 0x4326DC<32>
	word32 ebx_728
	fn00402890(esp_693 - 0x14<32>, Mem726[esp_693 - 0x1C<32>:word32], Mem726[esp_693 - 0x18<32>:word32], out ebx_728)
	Mem739[ebp_704 - 4<i32>:word32] = 0x12<32>
	Mem743[esp_693 - 0x30<32>:word32] = 0<32>
	Mem748[esp_693 - 0x30<32>:word32] = fn0040F760(edi_707, Mem743[esp_693 - 0x30<32>:word32])
	word32 ebp_752
	word32 edx_11073
	fn004028D0(esp_693 - 0x2C<32>, edi_707, Mem748[esp_693 - 0x30<32>:word32], out edx_11073, out ebp_752)
	Mem762[ebp_752 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_753 = <invalid>
	word32 ebp_764
	word32 ecx_11074
	word32 edx_11075
	word32 esi_11076
	branch SLICE(fn0041C1F0(ebx_728, ebx_728, ebp_752, es, ds, Mem762[esp_753 + 0x2C<32>:word32], out ecx_11074, out edx_11075, out ebx_765, out ebp_764, out esi_11076, out edi_767), byte, 0) == 0<8> l00421C24
l00421C24:
	word32 esi_3692
	word32 eax_3710
	Mem784[ebp_764 + 8<i32>:word32] = esp_753 - 0x14<32>
	Mem786[esp_753 - 0x18<32>:word32] = 0x432A0C<32>
	word32 ebx_788
	fn00402890(esp_753 - 0x14<32>, Mem786[esp_753 - 0x1C<32>:word32], Mem786[esp_753 - 0x18<32>:word32], out ebx_788)
	Mem799[ebp_764 - 4<i32>:word32] = 0x13<32>
	Mem803[esp_753 - 0x30<32>:word32] = 0<32>
	Mem808[esp_753 - 0x30<32>:word32] = fn0040F760(edi_767, Mem803[esp_753 - 0x30<32>:word32])
	word32 ebp_812
	word32 edx_11084
	fn004028D0(esp_753 - 0x2C<32>, edi_767, Mem808[esp_753 - 0x30<32>:word32], out edx_11084, out ebp_812)
	Mem822[ebp_812 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_813 = <invalid>
	word32 ebp_824
	word32 ebx_825
	word32 edi_827
	word32 ecx_11085
	word32 edx_11086
	word32 esi_11087
	branch SLICE(fn0041C1F0(ebx_788, ebx_788, ebp_812, es, ds, Mem822[esp_813 + 0x2C<32>:word32], out ecx_11085, out edx_11086, out ebx_825, out ebp_824, out esi_11087, out edi_827), byte, 0) == 0<8> l00421CB5
l00421CB5:
	Mem844[ebp_824 + 8<i32>:word32] = esp_813 - 0x14<32>
	Mem846[esp_813 - 0x18<32>:word32] = 0x432A14<32>
	word32 ebx_848
	fn00402890(esp_813 - 0x14<32>, Mem846[esp_813 - 0x1C<32>:word32], Mem846[esp_813 - 0x18<32>:word32], out ebx_848)
	Mem859[ebp_824 - 4<i32>:word32] = 0x14<32>
	Mem863[esp_813 - 0x30<32>:word32] = 0<32>
	Mem868[esp_813 - 0x30<32>:word32] = fn0040F760(edi_827, Mem863[esp_813 - 0x30<32>:word32])
	word32 ebp_872
	word32 edx_11088
	fn004028D0(esp_813 - 0x2C<32>, edi_827, Mem868[esp_813 - 0x30<32>:word32], out edx_11088, out ebp_872)
	Mem882[ebp_872 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_873 = <invalid>
	word32 ebp_884
	word32 ebx_885
	word32 edi_887
	word32 ecx_11089
	word32 edx_11090
	word32 esi_11091
	branch SLICE(fn0041C1F0(ebx_848, ebx_848, ebp_872, es, ds, Mem882[esp_873 + 0x2C<32>:word32], out ecx_11089, out edx_11090, out ebx_885, out ebp_884, out esi_11091, out edi_887), byte, 0) == 0<8> l00421D46
l00421D46:
	Mem904[ebp_884 + 8<i32>:word32] = esp_873 - 0x14<32>
	Mem906[esp_873 - 0x18<32>:word32] = 0x432A1C<32>
	word32 ebx_908
	fn00402890(esp_873 - 0x14<32>, Mem906[esp_873 - 0x1C<32>:word32], Mem906[esp_873 - 0x18<32>:word32], out ebx_908)
	Mem919[ebp_884 - 4<i32>:word32] = 0x15<32>
	Mem923[esp_873 - 0x30<32>:word32] = 0<32>
	Mem928[esp_873 - 0x30<32>:word32] = fn0040F760(edi_887, Mem923[esp_873 - 0x30<32>:word32])
	word32 ebp_932
	word32 edx_11101
	fn004028D0(esp_873 - 0x2C<32>, edi_887, Mem928[esp_873 - 0x30<32>:word32], out edx_11101, out ebp_932)
	Mem942[ebp_932 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_933 = <invalid>
	word32 ebp_944
	word32 ebx_945
	word32 edi_947
	word32 ecx_11102
	word32 edx_11103
	word32 esi_11104
	branch SLICE(fn0041C1F0(ebx_908, ebx_908, ebp_932, es, ds, Mem942[esp_933 + 0x2C<32>:word32], out ecx_11102, out edx_11103, out ebx_945, out ebp_944, out esi_11104, out edi_947), byte, 0) == 0<8> l00421DD7
l00421DD7:
	Mem964[ebp_944 + 8<i32>:word32] = esp_933 - 0x14<32>
	Mem966[esp_933 - 0x18<32>:word32] = 0x432A24<32>
	word32 ebx_968
	fn00402890(esp_933 - 0x14<32>, Mem966[esp_933 - 0x1C<32>:word32], Mem966[esp_933 - 0x18<32>:word32], out ebx_968)
	Mem979[ebp_944 - 4<i32>:word32] = 0x16<32>
	Mem983[esp_933 - 0x30<32>:word32] = 0<32>
	Mem988[esp_933 - 0x30<32>:word32] = fn0040F760(edi_947, Mem983[esp_933 - 0x30<32>:word32])
	word32 ebp_992
	word32 edx_11114
	fn004028D0(esp_933 - 0x2C<32>, edi_947, Mem988[esp_933 - 0x30<32>:word32], out edx_11114, out ebp_992)
	Mem1002[ebp_992 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_993 = <invalid>
	word32 ebp_1004
	word32 ebx_1005
	word32 edi_1007
	word32 ecx_11115
	word32 edx_11116
	word32 esi_11117
	branch SLICE(fn0041C1F0(ebx_968, ebx_968, ebp_992, es, ds, Mem1002[esp_993 + 0x2C<32>:word32], out ecx_11115, out edx_11116, out ebx_1005, out ebp_1004, out esi_11117, out edi_1007), byte, 0) == 0<8> l00421E6A
l00421E6A:
	Mem1024[ebp_1004 + 8<i32>:word32] = esp_993 - 0x14<32>
	Mem1026[esp_993 - 0x18<32>:word32] = 0x432A2C<32>
	word32 ebx_1028
	fn00402890(esp_993 - 0x14<32>, Mem1026[esp_993 - 0x1C<32>:word32], Mem1026[esp_993 - 0x18<32>:word32], out ebx_1028)
	Mem1039[ebp_1004 - 4<i32>:word32] = 0x17<32>
	Mem1043[esp_993 - 0x30<32>:word32] = 0<32>
	Mem1048[esp_993 - 0x30<32>:word32] = fn0040F760(edi_1007, Mem1043[esp_993 - 0x30<32>:word32])
	word32 ebp_1052
	word32 edx_11127
	fn004028D0(esp_993 - 0x2C<32>, edi_1007, Mem1048[esp_993 - 0x30<32>:word32], out edx_11127, out ebp_1052)
	Mem1062[ebp_1052 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1053 = <invalid>
	word32 ebp_1064
	word32 ebx_1065
	word32 edi_1067
	word32 ecx_11128
	word32 edx_11129
	word32 esi_11130
	branch SLICE(fn0041C1F0(ebx_1028, ebx_1028, ebp_1052, es, ds, Mem1062[esp_1053 + 0x2C<32>:word32], out ecx_11128, out edx_11129, out ebx_1065, out ebp_1064, out esi_11130, out edi_1067), byte, 0) == 0<8> l00421EFD
l00421EFD:
	Mem1084[ebp_1064 + 8<i32>:word32] = esp_1053 - 0x14<32>
	Mem1086[esp_1053 - 0x18<32>:word32] = 0x432A34<32>
	word32 ebx_1088
	fn00402890(esp_1053 - 0x14<32>, Mem1086[esp_1053 - 0x1C<32>:word32], Mem1086[esp_1053 - 0x18<32>:word32], out ebx_1088)
	Mem1099[ebp_1064 - 4<i32>:word32] = 0x18<32>
	Mem1103[esp_1053 - 0x30<32>:word32] = 0<32>
	Mem1108[esp_1053 - 0x30<32>:word32] = fn0040F760(edi_1067, Mem1103[esp_1053 - 0x30<32>:word32])
	word32 ebp_1112
	word32 edx_11140
	fn004028D0(esp_1053 - 0x2C<32>, edi_1067, Mem1108[esp_1053 - 0x30<32>:word32], out edx_11140, out ebp_1112)
	Mem1122[ebp_1112 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1113 = <invalid>
	word32 ebp_1124
	word32 ebx_1125
	word32 edi_1127
	word32 ecx_11141
	word32 edx_11142
	word32 esi_11143
	branch SLICE(fn0041C1F0(ebx_1088, ebx_1088, ebp_1112, es, ds, Mem1122[esp_1113 + 0x2C<32>:word32], out ecx_11141, out edx_11142, out ebx_1125, out ebp_1124, out esi_11143, out edi_1127), byte, 0) == 0<8> l00421F90
l00421F90:
	Mem1144[ebp_1124 + 8<i32>:word32] = esp_1113 - 0x14<32>
	Mem1146[esp_1113 - 0x18<32>:word32] = 0x432A3C<32>
	word32 ebx_1148
	fn00402890(esp_1113 - 0x14<32>, Mem1146[esp_1113 - 0x1C<32>:word32], Mem1146[esp_1113 - 0x18<32>:word32], out ebx_1148)
	Mem1159[ebp_1124 - 4<i32>:word32] = 0x19<32>
	Mem1163[esp_1113 - 0x30<32>:word32] = 0<32>
	Mem1168[esp_1113 - 0x30<32>:word32] = fn0040F760(edi_1127, Mem1163[esp_1113 - 0x30<32>:word32])
	word32 ebp_1172
	word32 edx_11153
	fn004028D0(esp_1113 - 0x2C<32>, edi_1127, Mem1168[esp_1113 - 0x30<32>:word32], out edx_11153, out ebp_1172)
	Mem1182[ebp_1172 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1173 = <invalid>
	word32 ebp_1184
	word32 ebx_1185
	word32 edi_1187
	word32 ecx_11154
	word32 edx_11155
	word32 esi_11156
	branch SLICE(fn0041C1F0(ebx_1148, ebx_1148, ebp_1172, es, ds, Mem1182[esp_1173 + 0x2C<32>:word32], out ecx_11154, out edx_11155, out ebx_1185, out ebp_1184, out esi_11156, out edi_1187), byte, 0) == 0<8> l00422013
l00422013:
	Mem1204[ebp_1184 + 8<i32>:word32] = esp_1173 - 0x14<32>
	Mem1206[esp_1173 - 0x18<32>:word32] = 0x432A44<32>
	word32 ebx_1208
	fn00402890(esp_1173 - 0x14<32>, Mem1206[esp_1173 - 0x1C<32>:word32], Mem1206[esp_1173 - 0x18<32>:word32], out ebx_1208)
	Mem1219[ebp_1184 - 4<i32>:word32] = 0x1A<32>
	Mem1223[esp_1173 - 0x30<32>:word32] = 0<32>
	Mem1228[esp_1173 - 0x30<32>:word32] = fn0040F760(edi_1187, Mem1223[esp_1173 - 0x30<32>:word32])
	word32 ebp_1232
	word32 edx_11166
	fn004028D0(esp_1173 - 0x2C<32>, edi_1187, Mem1228[esp_1173 - 0x30<32>:word32], out edx_11166, out ebp_1232)
	Mem1242[ebp_1232 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1233 = <invalid>
	word32 ebp_1244
	word32 ebx_1245
	word32 edi_1247
	word32 ecx_11167
	word32 edx_11168
	word32 esi_11169
	branch SLICE(fn0041C1F0(ebx_1208, ebx_1208, ebp_1232, es, ds, Mem1242[esp_1233 + 0x2C<32>:word32], out ecx_11167, out edx_11168, out ebx_1245, out ebp_1244, out esi_11169, out edi_1247), byte, 0) == 0<8> l00422096
l00422096:
	Mem1264[ebp_1244 + 8<i32>:word32] = esp_1233 - 0x14<32>
	Mem1266[esp_1233 - 0x18<32>:word32] = 0x432A4C<32>
	word32 ebx_1268
	fn00402890(esp_1233 - 0x14<32>, Mem1266[esp_1233 - 0x1C<32>:word32], Mem1266[esp_1233 - 0x18<32>:word32], out ebx_1268)
	Mem1279[ebp_1244 - 4<i32>:word32] = 0x1B<32>
	Mem1283[esp_1233 - 0x30<32>:word32] = 0<32>
	Mem1288[esp_1233 - 0x30<32>:word32] = fn0040F760(edi_1247, Mem1283[esp_1233 - 0x30<32>:word32])
	word32 ebp_1292
	word32 edx_11176
	fn004028D0(esp_1233 - 0x2C<32>, edi_1247, Mem1288[esp_1233 - 0x30<32>:word32], out edx_11176, out ebp_1292)
	Mem1302[ebp_1292 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1293 = <invalid>
	word32 ebp_1304
	word32 ebx_1305
	word32 edi_1307
	word32 ecx_11177
	word32 edx_11178
	word32 esi_11179
	branch SLICE(fn0041C1F0(ebx_1268, ebx_1268, ebp_1292, es, ds, Mem1302[esp_1293 + 0x2C<32>:word32], out ecx_11177, out edx_11178, out ebx_1305, out ebp_1304, out esi_11179, out edi_1307), byte, 0) == 0<8> l00422119
l00422119:
	Mem1324[ebp_1304 + 8<i32>:word32] = esp_1293 - 0x14<32>
	Mem1326[esp_1293 - 0x18<32>:word32] = 0x432A54<32>
	word32 ebx_1328
	fn00402890(esp_1293 - 0x14<32>, Mem1326[esp_1293 - 0x1C<32>:word32], Mem1326[esp_1293 - 0x18<32>:word32], out ebx_1328)
	Mem1339[ebp_1304 - 4<i32>:word32] = 0x1C<32>
	Mem1343[esp_1293 - 0x30<32>:word32] = 0<32>
	Mem1348[esp_1293 - 0x30<32>:word32] = fn0040F760(edi_1307, Mem1343[esp_1293 - 0x30<32>:word32])
	word32 ebp_1352
	word32 edx_11186
	fn004028D0(esp_1293 - 0x2C<32>, edi_1307, Mem1348[esp_1293 - 0x30<32>:word32], out edx_11186, out ebp_1352)
	Mem1362[ebp_1352 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1353 = <invalid>
	word32 ebp_1364
	word32 ebx_1365
	word32 edi_1367
	word32 ecx_11187
	word32 edx_11188
	word32 esi_11189
	branch SLICE(fn0041C1F0(ebx_1328, ebx_1328, ebp_1352, es, ds, Mem1362[esp_1353 + 0x2C<32>:word32], out ecx_11187, out edx_11188, out ebx_1365, out ebp_1364, out esi_11189, out edi_1367), byte, 0) == 0<8> l0042219C
l0042219C:
	Mem1384[ebp_1364 + 8<i32>:word32] = esp_1353 - 0x14<32>
	Mem1386[esp_1353 - 0x18<32>:word32] = 0x432A5C<32>
	word32 ebx_1388
	fn00402890(esp_1353 - 0x14<32>, Mem1386[esp_1353 - 0x1C<32>:word32], Mem1386[esp_1353 - 0x18<32>:word32], out ebx_1388)
	Mem1399[ebp_1364 - 4<i32>:word32] = 0x1D<32>
	Mem1403[esp_1353 - 0x30<32>:word32] = 0<32>
	Mem1408[esp_1353 - 0x30<32>:word32] = fn0040F760(edi_1367, Mem1403[esp_1353 - 0x30<32>:word32])
	word32 ebp_1412
	word32 edx_11196
	fn004028D0(esp_1353 - 0x2C<32>, edi_1367, Mem1408[esp_1353 - 0x30<32>:word32], out edx_11196, out ebp_1412)
	Mem1422[ebp_1412 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1413 = <invalid>
	word32 ebp_1424
	word32 ebx_1425
	word32 edi_1427
	word32 ecx_11197
	word32 edx_11198
	word32 esi_11199
	branch SLICE(fn0041C1F0(ebx_1388, ebx_1388, ebp_1412, es, ds, Mem1422[esp_1413 + 0x2C<32>:word32], out ecx_11197, out edx_11198, out ebx_1425, out ebp_1424, out esi_11199, out edi_1427), byte, 0) == 0<8> l0042221F
l0042221F:
	Mem1444[ebp_1424 + 8<i32>:word32] = esp_1413 - 0x14<32>
	Mem1446[esp_1413 - 0x18<32>:word32] = 0x432A60<32>
	word32 ebx_1448
	fn00402890(esp_1413 - 0x14<32>, Mem1446[esp_1413 - 0x1C<32>:word32], Mem1446[esp_1413 - 0x18<32>:word32], out ebx_1448)
	Mem1459[ebp_1424 - 4<i32>:word32] = 0x1E<32>
	Mem1463[esp_1413 - 0x30<32>:word32] = 0<32>
	Mem1468[esp_1413 - 0x30<32>:word32] = fn0040F760(edi_1427, Mem1463[esp_1413 - 0x30<32>:word32])
	word32 ebp_1472
	word32 edx_11206
	fn004028D0(esp_1413 - 0x2C<32>, edi_1427, Mem1468[esp_1413 - 0x30<32>:word32], out edx_11206, out ebp_1472)
	Mem1482[ebp_1472 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1473 = <invalid>
	word32 ebp_1484
	word32 ebx_1485
	word32 edi_1487
	word32 ecx_11207
	word32 edx_11208
	word32 esi_11209
	branch SLICE(fn0041C1F0(ebx_1448, ebx_1448, ebp_1472, es, ds, Mem1482[esp_1473 + 0x2C<32>:word32], out ecx_11207, out edx_11208, out ebx_1485, out ebp_1484, out esi_11209, out edi_1487), byte, 0) == 0<8> l004222B2
l004222B2:
	Mem1504[ebp_1484 + 8<i32>:word32] = esp_1473 - 0x14<32>
	Mem1506[esp_1473 - 0x18<32>:word32] = 0x432A64<32>
	word32 ebx_1508
	fn00402890(esp_1473 - 0x14<32>, Mem1506[esp_1473 - 0x1C<32>:word32], Mem1506[esp_1473 - 0x18<32>:word32], out ebx_1508)
	Mem1519[ebp_1484 - 4<i32>:word32] = 0x1F<32>
	Mem1523[esp_1473 - 0x30<32>:word32] = 0<32>
	Mem1528[esp_1473 - 0x30<32>:word32] = fn0040F760(edi_1487, Mem1523[esp_1473 - 0x30<32>:word32])
	word32 ebp_1532
	word32 edx_11216
	fn004028D0(esp_1473 - 0x2C<32>, edi_1487, Mem1528[esp_1473 - 0x30<32>:word32], out edx_11216, out ebp_1532)
	Mem1542[ebp_1532 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1533 = <invalid>
	word32 ebp_1544
	word32 ebx_1545
	word32 edi_1547
	word32 ecx_11217
	word32 edx_11218
	word32 esi_11219
	branch SLICE(fn0041C1F0(ebx_1508, ebx_1508, ebp_1532, es, ds, Mem1542[esp_1533 + 0x2C<32>:word32], out ecx_11217, out edx_11218, out ebx_1545, out ebp_1544, out esi_11219, out edi_1547), byte, 0) == 0<8> l00422343
l00422343:
	Mem1564[ebp_1544 + 8<i32>:word32] = esp_1533 - 0x14<32>
	Mem1566[esp_1533 - 0x18<32>:word32] = 0x4326F0<32>
	word32 ebx_1568
	fn00402890(esp_1533 - 0x14<32>, Mem1566[esp_1533 - 0x1C<32>:word32], Mem1566[esp_1533 - 0x18<32>:word32], out ebx_1568)
	Mem1579[ebp_1544 - 4<i32>:word32] = 0x20<32>
	Mem1583[esp_1533 - 0x30<32>:word32] = 0<32>
	Mem1588[esp_1533 - 0x30<32>:word32] = fn0040F760(edi_1547, Mem1583[esp_1533 - 0x30<32>:word32])
	word32 ebp_1592
	word32 edx_11229
	fn004028D0(esp_1533 - 0x2C<32>, edi_1547, Mem1588[esp_1533 - 0x30<32>:word32], out edx_11229, out ebp_1592)
	Mem1602[ebp_1592 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1593 = <invalid>
	word32 ebp_1604
	word32 ebx_1605
	word32 edi_1607
	word32 ecx_11230
	word32 edx_11231
	word32 esi_11232
	branch SLICE(fn0041C1F0(ebx_1568, ebx_1568, ebp_1592, es, ds, Mem1602[esp_1593 + 0x2C<32>:word32], out ecx_11230, out edx_11231, out ebx_1605, out ebp_1604, out esi_11232, out edi_1607), byte, 0) == 0<8> l004223D4
l004223D4:
	Mem1624[ebp_1604 + 8<i32>:word32] = esp_1593 - 0x14<32>
	Mem1626[esp_1593 - 0x18<32>:word32] = 0x432A6C<32>
	word32 ebx_1628
	fn00402890(esp_1593 - 0x14<32>, Mem1626[esp_1593 - 0x1C<32>:word32], Mem1626[esp_1593 - 0x18<32>:word32], out ebx_1628)
	Mem1639[ebp_1604 - 4<i32>:word32] = 0x21<32>
	Mem1643[esp_1593 - 0x30<32>:word32] = 0<32>
	Mem1648[esp_1593 - 0x30<32>:word32] = fn0040F760(edi_1607, Mem1643[esp_1593 - 0x30<32>:word32])
	word32 ebp_1652
	word32 edx_11242
	fn004028D0(esp_1593 - 0x2C<32>, edi_1607, Mem1648[esp_1593 - 0x30<32>:word32], out edx_11242, out ebp_1652)
	Mem1662[ebp_1652 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1653 = <invalid>
	word32 ebp_1664
	word32 ebx_1665
	word32 edi_1667
	word32 ecx_11243
	word32 edx_11244
	word32 esi_11245
	branch SLICE(fn0041C1F0(ebx_1628, ebx_1628, ebp_1652, es, ds, Mem1662[esp_1653 + 0x2C<32>:word32], out ecx_11243, out edx_11244, out ebx_1665, out ebp_1664, out esi_11245, out edi_1667), byte, 0) == 0<8> l0042246D
l0042246D:
	Mem1684[ebp_1664 + 8<i32>:word32] = esp_1653 - 0x14<32>
	Mem1686[esp_1653 - 0x18<32>:word32] = 0x432A74<32>
	word32 ebx_1688
	fn00402890(esp_1653 - 0x14<32>, Mem1686[esp_1653 - 0x1C<32>:word32], Mem1686[esp_1653 - 0x18<32>:word32], out ebx_1688)
	Mem1699[ebp_1664 - 4<i32>:word32] = 0x22<32>
	Mem1703[esp_1653 - 0x30<32>:word32] = 0<32>
	Mem1708[esp_1653 - 0x30<32>:word32] = fn0040F760(edi_1667, Mem1703[esp_1653 - 0x30<32>:word32])
	word32 ebp_1712
	word32 edx_11255
	fn004028D0(esp_1653 - 0x2C<32>, edi_1667, Mem1708[esp_1653 - 0x30<32>:word32], out edx_11255, out ebp_1712)
	Mem1722[ebp_1712 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1713 = <invalid>
	word32 ebp_1724
	word32 ebx_1725
	word32 edi_1727
	word32 ecx_11256
	word32 edx_11257
	word32 esi_11258
	branch SLICE(fn0041C1F0(ebx_1688, ebx_1688, ebp_1712, es, ds, Mem1722[esp_1713 + 0x2C<32>:word32], out ecx_11256, out edx_11257, out ebx_1725, out ebp_1724, out esi_11258, out edi_1727), byte, 0) == 0<8> l00422500
l00422500:
	Mem1744[ebp_1724 + 8<i32>:word32] = esp_1713 - 0x14<32>
	Mem1746[esp_1713 - 0x18<32>:word32] = 0x432A7C<32>
	word32 ebx_1748
	fn00402890(esp_1713 - 0x14<32>, Mem1746[esp_1713 - 0x1C<32>:word32], Mem1746[esp_1713 - 0x18<32>:word32], out ebx_1748)
	Mem1759[ebp_1724 - 4<i32>:word32] = 0x23<32>
	Mem1763[esp_1713 - 0x30<32>:word32] = 0<32>
	Mem1768[esp_1713 - 0x30<32>:word32] = fn0040F760(edi_1727, Mem1763[esp_1713 - 0x30<32>:word32])
	word32 ebp_1772
	word32 edx_11266
	fn004028D0(esp_1713 - 0x2C<32>, edi_1727, Mem1768[esp_1713 - 0x30<32>:word32], out edx_11266, out ebp_1772)
	Mem1782[ebp_1772 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1773 = <invalid>
	word32 ebp_1784
	word32 ebx_1785
	word32 edi_1787
	word32 ecx_11267
	word32 edx_11268
	word32 esi_11269
	branch SLICE(fn0041C1F0(ebx_1748, ebx_1748, ebp_1772, es, ds, Mem1782[esp_1773 + 0x2C<32>:word32], out ecx_11267, out edx_11268, out ebx_1785, out ebp_1784, out esi_11269, out edi_1787), byte, 0) == 0<8> l00422593
l00422593:
	Mem1804[ebp_1784 + 8<i32>:word32] = esp_1773 - 0x14<32>
	Mem1806[esp_1773 - 0x18<32>:word32] = 0x432A84<32>
	word32 ebx_1808
	fn00402890(esp_1773 - 0x14<32>, Mem1806[esp_1773 - 0x1C<32>:word32], Mem1806[esp_1773 - 0x18<32>:word32], out ebx_1808)
	Mem1819[ebp_1784 - 4<i32>:word32] = 0x24<32>
	Mem1823[esp_1773 - 0x30<32>:word32] = 0<32>
	Mem1828[esp_1773 - 0x30<32>:word32] = fn0040F760(edi_1787, Mem1823[esp_1773 - 0x30<32>:word32])
	word32 ebp_1832
	word32 edx_11279
	fn004028D0(esp_1773 - 0x2C<32>, edi_1787, Mem1828[esp_1773 - 0x30<32>:word32], out edx_11279, out ebp_1832)
	Mem1842[ebp_1832 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1833 = <invalid>
	word32 ebp_1844
	word32 ebx_1845
	word32 edi_1847
	word32 ecx_11280
	word32 edx_11281
	word32 esi_11282
	branch SLICE(fn0041C1F0(ebx_1808, ebx_1808, ebp_1832, es, ds, Mem1842[esp_1833 + 0x2C<32>:word32], out ecx_11280, out edx_11281, out ebx_1845, out ebp_1844, out esi_11282, out edi_1847), byte, 0) == 0<8> l00422624
l00422624:
	Mem1864[ebp_1844 + 8<i32>:word32] = esp_1833 - 0x14<32>
	Mem1866[esp_1833 - 0x18<32>:word32] = 0x432A8C<32>
	word32 ebx_1868
	fn00402890(esp_1833 - 0x14<32>, Mem1866[esp_1833 - 0x1C<32>:word32], Mem1866[esp_1833 - 0x18<32>:word32], out ebx_1868)
	Mem1879[ebp_1844 - 4<i32>:word32] = 0x25<32>
	Mem1883[esp_1833 - 0x30<32>:word32] = 0<32>
	Mem1888[esp_1833 - 0x30<32>:word32] = fn0040F760(edi_1847, Mem1883[esp_1833 - 0x30<32>:word32])
	word32 ebp_1892
	word32 edx_11292
	fn004028D0(esp_1833 - 0x2C<32>, edi_1847, Mem1888[esp_1833 - 0x30<32>:word32], out edx_11292, out ebp_1892)
	Mem1902[ebp_1892 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1893 = <invalid>
	word32 ebp_1904
	word32 ebx_1905
	word32 edi_1907
	word32 ecx_11293
	word32 edx_11294
	word32 esi_11295
	branch SLICE(fn0041C1F0(ebx_1868, ebx_1868, ebp_1892, es, ds, Mem1902[esp_1893 + 0x2C<32>:word32], out ecx_11293, out edx_11294, out ebx_1905, out ebp_1904, out esi_11295, out edi_1907), byte, 0) == 0<8> l004226B5
l004226B5:
	Mem1924[ebp_1904 + 8<i32>:word32] = esp_1893 - 0x14<32>
	Mem1926[esp_1893 - 0x18<32>:word32] = 0x432A94<32>
	word32 ebx_1928
	fn00402890(esp_1893 - 0x14<32>, Mem1926[esp_1893 - 0x1C<32>:word32], Mem1926[esp_1893 - 0x18<32>:word32], out ebx_1928)
	Mem1939[ebp_1904 - 4<i32>:word32] = 0x26<32>
	Mem1943[esp_1893 - 0x30<32>:word32] = 0<32>
	Mem1948[esp_1893 - 0x30<32>:word32] = fn0040F760(edi_1907, Mem1943[esp_1893 - 0x30<32>:word32])
	word32 ebp_1952
	word32 edx_11305
	fn004028D0(esp_1893 - 0x2C<32>, edi_1907, Mem1948[esp_1893 - 0x30<32>:word32], out edx_11305, out ebp_1952)
	Mem1962[ebp_1952 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1953 = <invalid>
	word32 ebp_1964
	word32 ebx_1965
	word32 edi_1967
	word32 ecx_11306
	word32 edx_11307
	word32 esi_11308
	branch SLICE(fn0041C1F0(ebx_1928, ebx_1928, ebp_1952, es, ds, Mem1962[esp_1953 + 0x2C<32>:word32], out ecx_11306, out edx_11307, out ebx_1965, out ebp_1964, out esi_11308, out edi_1967), byte, 0) == 0<8> l00422748
l00422748:
	Mem1984[ebp_1964 + 8<i32>:word32] = esp_1953 - 0x14<32>
	Mem1986[esp_1953 - 0x18<32>:word32] = 0x432A9C<32>
	word32 ebx_1988
	fn00402890(esp_1953 - 0x14<32>, Mem1986[esp_1953 - 0x1C<32>:word32], Mem1986[esp_1953 - 0x18<32>:word32], out ebx_1988)
	Mem1999[ebp_1964 - 4<i32>:word32] = 0x27<32>
	Mem2003[esp_1953 - 0x30<32>:word32] = 0<32>
	Mem2008[esp_1953 - 0x30<32>:word32] = fn0040F760(edi_1967, Mem2003[esp_1953 - 0x30<32>:word32])
	word32 ebp_2012
	word32 edx_11318
	fn004028D0(esp_1953 - 0x2C<32>, edi_1967, Mem2008[esp_1953 - 0x30<32>:word32], out edx_11318, out ebp_2012)
	Mem2022[ebp_2012 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2013 = <invalid>
	word32 ebp_2024
	word32 ebx_2025
	word32 edi_2027
	word32 ecx_11319
	word32 edx_11320
	word32 esi_11321
	branch SLICE(fn0041C1F0(ebx_1988, ebx_1988, ebp_2012, es, ds, Mem2022[esp_2013 + 0x2C<32>:word32], out ecx_11319, out edx_11320, out ebx_2025, out ebp_2024, out esi_11321, out edi_2027), byte, 0) == 0<8> l004227DB
l004227DB:
	Mem2044[ebp_2024 + 8<i32>:word32] = esp_2013 - 0x14<32>
	Mem2046[esp_2013 - 0x18<32>:word32] = 0x432AA4<32>
	word32 ebx_2048
	fn00402890(esp_2013 - 0x14<32>, Mem2046[esp_2013 - 0x1C<32>:word32], Mem2046[esp_2013 - 0x18<32>:word32], out ebx_2048)
	Mem2059[ebp_2024 - 4<i32>:word32] = 0x28<32>
	Mem2063[esp_2013 - 0x30<32>:word32] = 0<32>
	Mem2068[esp_2013 - 0x30<32>:word32] = fn0040F760(edi_2027, Mem2063[esp_2013 - 0x30<32>:word32])
	word32 ebp_2072
	word32 edx_11331
	fn004028D0(esp_2013 - 0x2C<32>, edi_2027, Mem2068[esp_2013 - 0x30<32>:word32], out edx_11331, out ebp_2072)
	Mem2082[ebp_2072 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2073 = <invalid>
	word32 ebp_2084
	word32 ebx_2085
	word32 edi_2087
	word32 ecx_11332
	word32 edx_11333
	word32 esi_11334
	branch SLICE(fn0041C1F0(ebx_2048, ebx_2048, ebp_2072, es, ds, Mem2082[esp_2073 + 0x2C<32>:word32], out ecx_11332, out edx_11333, out ebx_2085, out ebp_2084, out esi_11334, out edi_2087), byte, 0) == 0<8> l0042286E
l0042286E:
	Mem2104[ebp_2084 + 8<i32>:word32] = esp_2073 - 0x14<32>
	Mem2106[esp_2073 - 0x18<32>:word32] = 0x432AAC<32>
	word32 ebx_2108
	fn00402890(esp_2073 - 0x14<32>, Mem2106[esp_2073 - 0x1C<32>:word32], Mem2106[esp_2073 - 0x18<32>:word32], out ebx_2108)
	Mem2119[ebp_2084 - 4<i32>:word32] = 0x29<32>
	Mem2123[esp_2073 - 0x30<32>:word32] = 0<32>
	Mem2128[esp_2073 - 0x30<32>:word32] = fn0040F760(edi_2087, Mem2123[esp_2073 - 0x30<32>:word32])
	word32 ebp_2132
	word32 edx_11344
	fn004028D0(esp_2073 - 0x2C<32>, edi_2087, Mem2128[esp_2073 - 0x30<32>:word32], out edx_11344, out ebp_2132)
	Mem2142[ebp_2132 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2133 = <invalid>
	word32 ebp_2144
	word32 ebx_2145
	word32 edi_2147
	word32 ecx_11345
	word32 edx_11346
	word32 esi_11347
	branch SLICE(fn0041C1F0(ebx_2108, ebx_2108, ebp_2132, es, ds, Mem2142[esp_2133 + 0x2C<32>:word32], out ecx_11345, out edx_11346, out ebx_2145, out ebp_2144, out esi_11347, out edi_2147), byte, 0) == 0<8> l00422901
l00422901:
	Mem2164[ebp_2144 + 8<i32>:word32] = esp_2133 - 0x14<32>
	Mem2166[esp_2133 - 0x18<32>:word32] = 0x432AB4<32>
	word32 ebx_2168
	fn00402890(esp_2133 - 0x14<32>, Mem2166[esp_2133 - 0x1C<32>:word32], Mem2166[esp_2133 - 0x18<32>:word32], out ebx_2168)
	Mem2179[ebp_2144 - 4<i32>:word32] = 0x2A<32>
	Mem2183[esp_2133 - 0x30<32>:word32] = 0<32>
	Mem2188[esp_2133 - 0x30<32>:word32] = fn0040F760(edi_2147, Mem2183[esp_2133 - 0x30<32>:word32])
	word32 ebp_2192
	word32 edx_11357
	fn004028D0(esp_2133 - 0x2C<32>, edi_2147, Mem2188[esp_2133 - 0x30<32>:word32], out edx_11357, out ebp_2192)
	Mem2202[ebp_2192 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2193 = <invalid>
	word32 ebp_2204
	word32 ebx_2205
	word32 edi_2207
	word32 ecx_11358
	word32 edx_11359
	word32 esi_11360
	branch SLICE(fn0041C1F0(ebx_2168, ebx_2168, ebp_2192, es, ds, Mem2202[esp_2193 + 0x2C<32>:word32], out ecx_11358, out edx_11359, out ebx_2205, out ebp_2204, out esi_11360, out edi_2207), byte, 0) == 0<8> l00422994
l00422994:
	Mem2224[ebp_2204 + 8<i32>:word32] = esp_2193 - 0x14<32>
	Mem2226[esp_2193 - 0x18<32>:word32] = 0x432ABC<32>
	word32 ebx_2228
	fn00402890(esp_2193 - 0x14<32>, Mem2226[esp_2193 - 0x1C<32>:word32], Mem2226[esp_2193 - 0x18<32>:word32], out ebx_2228)
	Mem2239[ebp_2204 - 4<i32>:word32] = 0x2B<32>
	Mem2243[esp_2193 - 0x30<32>:word32] = 0<32>
	Mem2248[esp_2193 - 0x30<32>:word32] = fn0040F760(edi_2207, Mem2243[esp_2193 - 0x30<32>:word32])
	word32 ebp_2252
	word32 edx_11370
	fn004028D0(esp_2193 - 0x2C<32>, edi_2207, Mem2248[esp_2193 - 0x30<32>:word32], out edx_11370, out ebp_2252)
	Mem2262[ebp_2252 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2253 = <invalid>
	word32 ebp_2264
	word32 ebx_2265
	word32 edi_2267
	word32 ecx_11371
	word32 edx_11372
	word32 esi_11373
	branch SLICE(fn0041C1F0(ebx_2228, ebx_2228, ebp_2252, es, ds, Mem2262[esp_2253 + 0x2C<32>:word32], out ecx_11371, out edx_11372, out ebx_2265, out ebp_2264, out esi_11373, out edi_2267), byte, 0) == 0<8> l00422A27
l00422A27:
	Mem2284[ebp_2264 + 8<i32>:word32] = esp_2253 - 0x14<32>
	Mem2286[esp_2253 - 0x18<32>:word32] = 0x432AC4<32>
	word32 ebx_2288
	fn00402890(esp_2253 - 0x14<32>, Mem2286[esp_2253 - 0x1C<32>:word32], Mem2286[esp_2253 - 0x18<32>:word32], out ebx_2288)
	Mem2299[ebp_2264 - 4<i32>:word32] = 0x2C<32>
	Mem2303[esp_2253 - 0x30<32>:word32] = 0<32>
	Mem2308[esp_2253 - 0x30<32>:word32] = fn0040F760(edi_2267, Mem2303[esp_2253 - 0x30<32>:word32])
	word32 ebp_2312
	word32 edx_11383
	fn004028D0(esp_2253 - 0x2C<32>, edi_2267, Mem2308[esp_2253 - 0x30<32>:word32], out edx_11383, out ebp_2312)
	Mem2322[ebp_2312 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2313 = <invalid>
	word32 ebp_2324
	word32 ebx_2325
	word32 edi_2327
	word32 ecx_11384
	word32 edx_11385
	word32 esi_11386
	branch SLICE(fn0041C1F0(ebx_2288, ebx_2288, ebp_2312, es, ds, Mem2322[esp_2313 + 0x2C<32>:word32], out ecx_11384, out edx_11385, out ebx_2325, out ebp_2324, out esi_11386, out edi_2327), byte, 0) == 0<8> l00422AC0
l00422AC0:
	Mem2344[ebp_2324 + 8<i32>:word32] = esp_2313 - 0x14<32>
	Mem2346[esp_2313 - 0x18<32>:word32] = 0x432ACC<32>
	word32 ebx_2348
	fn00402890(esp_2313 - 0x14<32>, Mem2346[esp_2313 - 0x1C<32>:word32], Mem2346[esp_2313 - 0x18<32>:word32], out ebx_2348)
	Mem2359[ebp_2324 - 4<i32>:word32] = 0x2D<32>
	Mem2363[esp_2313 - 0x30<32>:word32] = 0<32>
	Mem2368[esp_2313 - 0x30<32>:word32] = fn0040F760(edi_2327, Mem2363[esp_2313 - 0x30<32>:word32])
	word32 ebp_2372
	word32 edx_11396
	fn004028D0(esp_2313 - 0x2C<32>, edi_2327, Mem2368[esp_2313 - 0x30<32>:word32], out edx_11396, out ebp_2372)
	Mem2382[ebp_2372 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2373 = <invalid>
	word32 ebp_2384
	word32 ebx_2385
	word32 edi_2387
	word32 ecx_11397
	word32 edx_11398
	word32 esi_11399
	branch SLICE(fn0041C1F0(ebx_2348, ebx_2348, ebp_2372, es, ds, Mem2382[esp_2373 + 0x2C<32>:word32], out ecx_11397, out edx_11398, out ebx_2385, out ebp_2384, out esi_11399, out edi_2387), byte, 0) == 0<8> l00422B59
l00422B59:
	Mem2404[ebp_2384 + 8<i32>:word32] = esp_2373 - 0x14<32>
	Mem2406[esp_2373 - 0x18<32>:word32] = 0x432AD4<32>
	word32 ebx_2408
	fn00402890(esp_2373 - 0x14<32>, Mem2406[esp_2373 - 0x1C<32>:word32], Mem2406[esp_2373 - 0x18<32>:word32], out ebx_2408)
	Mem2419[ebp_2384 - 4<i32>:word32] = 0x2E<32>
	Mem2423[esp_2373 - 0x30<32>:word32] = 0<32>
	Mem2428[esp_2373 - 0x30<32>:word32] = fn0040F760(edi_2387, Mem2423[esp_2373 - 0x30<32>:word32])
	word32 ebp_2432
	word32 edx_11407
	fn004028D0(esp_2373 - 0x2C<32>, edi_2387, Mem2428[esp_2373 - 0x30<32>:word32], out edx_11407, out ebp_2432)
	Mem2442[ebp_2432 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2433 = <invalid>
	word32 ebp_2444
	word32 ebx_2445
	word32 edi_2447
	word32 ecx_11408
	word32 edx_11409
	word32 esi_11410
	branch SLICE(fn0041C1F0(ebx_2408, ebx_2408, ebp_2432, es, ds, Mem2442[esp_2433 + 0x2C<32>:word32], out ecx_11408, out edx_11409, out ebx_2445, out ebp_2444, out esi_11410, out edi_2447), byte, 0) == 0<8> l00422BF2
l00422BF2:
	Mem2464[ebp_2444 + 8<i32>:word32] = esp_2433 - 0x14<32>
	Mem2466[esp_2433 - 0x18<32>:word32] = 0x432ADC<32>
	word32 ebx_2468
	fn00402890(esp_2433 - 0x14<32>, Mem2466[esp_2433 - 0x1C<32>:word32], Mem2466[esp_2433 - 0x18<32>:word32], out ebx_2468)
	Mem2479[ebp_2444 - 4<i32>:word32] = 0x2F<32>
	Mem2483[esp_2433 - 0x30<32>:word32] = 0<32>
	Mem2488[esp_2433 - 0x30<32>:word32] = fn0040F760(edi_2447, Mem2483[esp_2433 - 0x30<32>:word32])
	word32 ebp_2492
	word32 edx_11418
	fn004028D0(esp_2433 - 0x2C<32>, edi_2447, Mem2488[esp_2433 - 0x30<32>:word32], out edx_11418, out ebp_2492)
	Mem2502[ebp_2492 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2493 = <invalid>
	word32 ebp_2504
	word32 ebx_2505
	word32 edi_2507
	word32 ecx_11419
	word32 edx_11420
	word32 esi_11421
	branch SLICE(fn0041C1F0(ebx_2468, ebx_2468, ebp_2492, es, ds, Mem2502[esp_2493 + 0x2C<32>:word32], out ecx_11419, out edx_11420, out ebx_2505, out ebp_2504, out esi_11421, out edi_2507), byte, 0) == 0<8> l00422C8B
l00422C8B:
	Mem2524[ebp_2504 + 8<i32>:word32] = esp_2493 - 0x14<32>
	Mem2526[esp_2493 - 0x18<32>:word32] = 0x432AE4<32>
	word32 ebx_2528
	fn00402890(esp_2493 - 0x14<32>, Mem2526[esp_2493 - 0x1C<32>:word32], Mem2526[esp_2493 - 0x18<32>:word32], out ebx_2528)
	Mem2539[ebp_2504 - 4<i32>:word32] = 0x30<32>
	Mem2543[esp_2493 - 0x30<32>:word32] = 0<32>
	Mem2548[esp_2493 - 0x30<32>:word32] = fn0040F760(edi_2507, Mem2543[esp_2493 - 0x30<32>:word32])
	word32 ebp_2552
	word32 edx_11429
	fn004028D0(esp_2493 - 0x2C<32>, edi_2507, Mem2548[esp_2493 - 0x30<32>:word32], out edx_11429, out ebp_2552)
	Mem2562[ebp_2552 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2553 = <invalid>
	word32 ebp_2564
	word32 ebx_2565
	word32 edi_2567
	word32 ecx_11430
	word32 edx_11431
	word32 esi_11432
	branch SLICE(fn0041C1F0(ebx_2528, ebx_2528, ebp_2552, es, ds, Mem2562[esp_2553 + 0x2C<32>:word32], out ecx_11430, out edx_11431, out ebx_2565, out ebp_2564, out esi_11432, out edi_2567), byte, 0) == 0<8> l00422D24
l00422D24:
	Mem2584[ebp_2564 + 8<i32>:word32] = esp_2553 - 0x14<32>
	Mem2586[esp_2553 - 0x18<32>:word32] = 0x432AEC<32>
	word32 ebx_2588
	fn00402890(esp_2553 - 0x14<32>, Mem2586[esp_2553 - 0x1C<32>:word32], Mem2586[esp_2553 - 0x18<32>:word32], out ebx_2588)
	Mem2599[ebp_2564 - 4<i32>:word32] = 0x31<32>
	Mem2603[esp_2553 - 0x30<32>:word32] = 0<32>
	Mem2608[esp_2553 - 0x30<32>:word32] = fn0040F760(edi_2567, Mem2603[esp_2553 - 0x30<32>:word32])
	word32 ebp_2612
	word32 edx_11440
	fn004028D0(esp_2553 - 0x2C<32>, edi_2567, Mem2608[esp_2553 - 0x30<32>:word32], out edx_11440, out ebp_2612)
	Mem2622[ebp_2612 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2613 = <invalid>
	word32 ebp_2624
	word32 ebx_2625
	word32 edi_2627
	word32 ecx_11441
	word32 edx_11442
	word32 esi_11443
	branch SLICE(fn0041C1F0(ebx_2588, ebx_2588, ebp_2612, es, ds, Mem2622[esp_2613 + 0x2C<32>:word32], out ecx_11441, out edx_11442, out ebx_2625, out ebp_2624, out esi_11443, out edi_2627), byte, 0) == 0<8> l00422DBD
l00422DBD:
	Mem2644[ebp_2624 + 8<i32>:word32] = esp_2613 - 0x14<32>
	Mem2646[esp_2613 - 0x18<32>:word32] = 0x432AF0<32>
	word32 ebx_2648
	fn00402890(esp_2613 - 0x14<32>, Mem2646[esp_2613 - 0x1C<32>:word32], Mem2646[esp_2613 - 0x18<32>:word32], out ebx_2648)
	Mem2659[ebp_2624 - 4<i32>:word32] = 0x32<32>
	Mem2663[esp_2613 - 0x30<32>:word32] = 0<32>
	Mem2668[esp_2613 - 0x30<32>:word32] = fn0040F760(edi_2627, Mem2663[esp_2613 - 0x30<32>:word32])
	word32 ebp_2672
	word32 edx_11451
	fn004028D0(esp_2613 - 0x2C<32>, edi_2627, Mem2668[esp_2613 - 0x30<32>:word32], out edx_11451, out ebp_2672)
	Mem2682[ebp_2672 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2673 = <invalid>
	word32 ecx_11452
	word32 edx_11453
	word32 esi_11454
	branch SLICE(fn0041C1F0(ebx_2648, ebx_2648, ebp_2672, es, ds, Mem2682[esp_2673 + 0x2C<32>:word32], out ecx_11452, out edx_11453, out ebx_10222, out ebp_10221, out esi_11454, out edi_10265), byte, 0) == 0<8> l00422E0C
l00422E0C:
	Mem2704[ebp_10221 + 8<i32>:word32] = esp_2673 - 0x14<32>
	Mem2706[esp_2673 - 0x18<32>:word32] = 0x432AF4<32>
	word32 ebx_2708
	fn00402890(esp_2673 - 0x14<32>, Mem2706[esp_2673 - 0x1C<32>:word32], Mem2706[esp_2673 - 0x18<32>:word32], out ebx_2708)
	Mem2719[ebp_10221 - 4<i32>:word32] = 0x33<32>
	Mem2723[esp_2673 - 0x30<32>:word32] = 0<32>
	Mem2728[esp_2673 - 0x30<32>:word32] = fn0040F760(edi_10265, Mem2723[esp_2673 - 0x30<32>:word32])
	word32 ebp_2732
	word32 edx_11462
	fn004028D0(esp_2673 - 0x2C<32>, edi_10265, Mem2728[esp_2673 - 0x30<32>:word32], out edx_11462, out ebp_2732)
	Mem2742[ebp_2732 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2733 = <invalid>
	word32 ebp_2744
	word32 ebx_2745
	word32 edi_2747
	word32 ecx_11463
	word32 edx_11464
	word32 esi_11465
	branch SLICE(fn0041C1F0(ebx_2708, ebx_2708, ebp_2732, es, ds, Mem2742[esp_2733 + 0x2C<32>:word32], out ecx_11463, out edx_11464, out ebx_2745, out ebp_2744, out esi_11465, out edi_2747), byte, 0) == 0<8> l00422E9D
l00422E9D:
	Mem2764[ebp_2744 + 8<i32>:word32] = esp_2733 - 0x14<32>
	Mem2766[esp_2733 - 0x18<32>:word32] = 0x432AFC<32>
	word32 ebx_2768
	fn00402890(esp_2733 - 0x14<32>, Mem2766[esp_2733 - 0x1C<32>:word32], Mem2766[esp_2733 - 0x18<32>:word32], out ebx_2768)
	Mem2779[ebp_2744 - 4<i32>:word32] = 0x34<32>
	Mem2783[esp_2733 - 0x30<32>:word32] = 0<32>
	Mem2788[esp_2733 - 0x30<32>:word32] = fn0040F760(edi_2747, Mem2783[esp_2733 - 0x30<32>:word32])
	word32 ebp_2792
	word32 edx_11466
	fn004028D0(esp_2733 - 0x2C<32>, edi_2747, Mem2788[esp_2733 - 0x30<32>:word32], out edx_11466, out ebp_2792)
	Mem2802[ebp_2792 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2793 = <invalid>
	word32 ebp_2804
	word32 ebx_2805
	word32 edi_2807
	word32 ecx_11467
	word32 edx_11468
	word32 esi_11469
	branch SLICE(fn0041C1F0(ebx_2768, ebx_2768, ebp_2792, es, ds, Mem2802[esp_2793 + 0x2C<32>:word32], out ecx_11467, out edx_11468, out ebx_2805, out ebp_2804, out esi_11469, out edi_2807), byte, 0) == 0<8> l00422F2E
l00422F2E:
	Mem2824[ebp_2804 + 8<i32>:word32] = esp_2793 - 0x14<32>
	Mem2826[esp_2793 - 0x18<32>:word32] = 0x432B00<32>
	word32 ebx_2828
	fn00402890(esp_2793 - 0x14<32>, Mem2826[esp_2793 - 0x1C<32>:word32], Mem2826[esp_2793 - 0x18<32>:word32], out ebx_2828)
	Mem2839[ebp_2804 - 4<i32>:word32] = 0x35<32>
	Mem2843[esp_2793 - 0x30<32>:word32] = 0<32>
	Mem2848[esp_2793 - 0x30<32>:word32] = fn0040F760(edi_2807, Mem2843[esp_2793 - 0x30<32>:word32])
	word32 ebp_2852
	word32 edx_11479
	fn004028D0(esp_2793 - 0x2C<32>, edi_2807, Mem2848[esp_2793 - 0x30<32>:word32], out edx_11479, out ebp_2852)
	Mem2862[ebp_2852 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2853 = <invalid>
	word32 ebp_2864
	word32 ebx_2865
	word32 edi_2867
	word32 ecx_11480
	word32 edx_11481
	word32 esi_11482
	branch SLICE(fn0041C1F0(ebx_2828, ebx_2828, ebp_2852, es, ds, Mem2862[esp_2853 + 0x2C<32>:word32], out ecx_11480, out edx_11481, out ebx_2865, out ebp_2864, out esi_11482, out edi_2867), byte, 0) == 0<8> l00422FC1
l00422FC1:
	Mem2884[ebp_2864 + 8<i32>:word32] = esp_2853 - 0x14<32>
	Mem2886[esp_2853 - 0x18<32>:word32] = 0x432B08<32>
	word32 ebx_2888
	fn00402890(esp_2853 - 0x14<32>, Mem2886[esp_2853 - 0x1C<32>:word32], Mem2886[esp_2853 - 0x18<32>:word32], out ebx_2888)
	Mem2899[ebp_2864 - 4<i32>:word32] = 0x36<32>
	Mem2903[esp_2853 - 0x30<32>:word32] = 0<32>
	Mem2908[esp_2853 - 0x30<32>:word32] = fn0040F760(edi_2867, Mem2903[esp_2853 - 0x30<32>:word32])
	word32 ebp_2912
	word32 edx_11492
	fn004028D0(esp_2853 - 0x2C<32>, edi_2867, Mem2908[esp_2853 - 0x30<32>:word32], out edx_11492, out ebp_2912)
	Mem2922[ebp_2912 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2913 = <invalid>
	word32 ebp_2924
	word32 ebx_2925
	word32 edi_2927
	word32 ecx_11493
	word32 edx_11494
	word32 esi_11495
	branch SLICE(fn0041C1F0(ebx_2888, ebx_2888, ebp_2912, es, ds, Mem2922[esp_2913 + 0x2C<32>:word32], out ecx_11493, out edx_11494, out ebx_2925, out ebp_2924, out esi_11495, out edi_2927), byte, 0) == 0<8> l00423054
l00423054:
	Mem2944[ebp_2924 + 8<i32>:word32] = esp_2913 - 0x14<32>
	Mem2946[esp_2913 - 0x18<32>:word32] = 0x432B0C<32>
	word32 ebx_2948
	fn00402890(esp_2913 - 0x14<32>, Mem2946[esp_2913 - 0x1C<32>:word32], Mem2946[esp_2913 - 0x18<32>:word32], out ebx_2948)
	Mem2959[ebp_2924 - 4<i32>:word32] = 0x37<32>
	Mem2963[esp_2913 - 0x30<32>:word32] = 0<32>
	Mem2968[esp_2913 - 0x30<32>:word32] = fn0040F760(edi_2927, Mem2963[esp_2913 - 0x30<32>:word32])
	word32 ebp_2972
	word32 edx_11505
	fn004028D0(esp_2913 - 0x2C<32>, edi_2927, Mem2968[esp_2913 - 0x30<32>:word32], out edx_11505, out ebp_2972)
	Mem2982[ebp_2972 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2973 = <invalid>
	word32 ebp_2984
	word32 ebx_2985
	word32 edi_2987
	word32 ecx_11506
	word32 edx_11507
	word32 esi_11508
	branch SLICE(fn0041C1F0(ebx_2948, ebx_2948, ebp_2972, es, ds, Mem2982[esp_2973 + 0x2C<32>:word32], out ecx_11506, out edx_11507, out ebx_2985, out ebp_2984, out esi_11508, out edi_2987), byte, 0) == 0<8> l004230E7
l004230E7:
	Mem3004[ebp_2984 + 8<i32>:word32] = esp_2973 - 0x14<32>
	Mem3006[esp_2973 - 0x18<32>:word32] = 0x432B10<32>
	word32 ebx_3008
	fn00402890(esp_2973 - 0x14<32>, Mem3006[esp_2973 - 0x1C<32>:word32], Mem3006[esp_2973 - 0x18<32>:word32], out ebx_3008)
	Mem3019[ebp_2984 - 4<i32>:word32] = 0x38<32>
	Mem3023[esp_2973 - 0x30<32>:word32] = 0<32>
	Mem3028[esp_2973 - 0x30<32>:word32] = fn0040F760(edi_2987, Mem3023[esp_2973 - 0x30<32>:word32])
	word32 ebp_3032
	word32 edx_11518
	fn004028D0(esp_2973 - 0x2C<32>, edi_2987, Mem3028[esp_2973 - 0x30<32>:word32], out edx_11518, out ebp_3032)
	Mem3042[ebp_3032 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3033 = <invalid>
	word32 ebp_3044
	word32 ebx_3045
	word32 edi_3047
	word32 ecx_11519
	word32 edx_11520
	word32 esi_11521
	branch SLICE(fn0041C1F0(ebx_3008, ebx_3008, ebp_3032, es, ds, Mem3042[esp_3033 + 0x2C<32>:word32], out ecx_11519, out edx_11520, out ebx_3045, out ebp_3044, out esi_11521, out edi_3047), byte, 0) == 0<8> l0042317A
l0042317A:
	Mem3064[ebp_3044 + 8<i32>:word32] = esp_3033 - 0x14<32>
	Mem3066[esp_3033 - 0x18<32>:word32] = 0x4326E8<32>
	word32 ebx_3068
	fn00402890(esp_3033 - 0x14<32>, Mem3066[esp_3033 - 0x1C<32>:word32], Mem3066[esp_3033 - 0x18<32>:word32], out ebx_3068)
	Mem3079[ebp_3044 - 4<i32>:word32] = 0x39<32>
	Mem3083[esp_3033 - 0x30<32>:word32] = 0<32>
	Mem3088[esp_3033 - 0x30<32>:word32] = fn0040F760(edi_3047, Mem3083[esp_3033 - 0x30<32>:word32])
	word32 ebp_3092
	word32 edx_11531
	fn004028D0(esp_3033 - 0x2C<32>, edi_3047, Mem3088[esp_3033 - 0x30<32>:word32], out edx_11531, out ebp_3092)
	Mem3102[ebp_3092 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3093 = <invalid>
	word32 ebp_3104
	word32 ebx_3105
	word32 edi_3107
	word32 ecx_11532
	word32 edx_11533
	word32 esi_11534
	branch SLICE(fn0041C1F0(ebx_3068, ebx_3068, ebp_3092, es, ds, Mem3102[esp_3093 + 0x2C<32>:word32], out ecx_11532, out edx_11533, out ebx_3105, out ebp_3104, out esi_11534, out edi_3107), byte, 0) == 0<8> l0042320D
l0042320D:
	Mem3124[ebp_3104 + 8<i32>:word32] = esp_3093 - 0x14<32>
	Mem3126[esp_3093 - 0x18<32>:word32] = 0x432B14<32>
	word32 ebx_3128
	fn00402890(esp_3093 - 0x14<32>, Mem3126[esp_3093 - 0x1C<32>:word32], Mem3126[esp_3093 - 0x18<32>:word32], out ebx_3128)
	Mem3139[ebp_3104 - 4<i32>:word32] = 0x3A<32>
	Mem3143[esp_3093 - 0x30<32>:word32] = 0<32>
	Mem3148[esp_3093 - 0x30<32>:word32] = fn0040F760(edi_3107, Mem3143[esp_3093 - 0x30<32>:word32])
	word32 ebp_3152
	word32 edx_11544
	fn004028D0(esp_3093 - 0x2C<32>, edi_3107, Mem3148[esp_3093 - 0x30<32>:word32], out edx_11544, out ebp_3152)
	Mem3162[ebp_3152 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3153 = <invalid>
	word32 ebp_3164
	word32 ebx_3165
	word32 edi_3167
	word32 ecx_11545
	word32 edx_11546
	word32 esi_11547
	branch SLICE(fn0041C1F0(ebx_3128, ebx_3128, ebp_3152, es, ds, Mem3162[esp_3153 + 0x2C<32>:word32], out ecx_11545, out edx_11546, out ebx_3165, out ebp_3164, out esi_11547, out edi_3167), byte, 0) == 0<8> l004232A0
l004232A0:
	Mem3184[ebp_3164 + 8<i32>:word32] = esp_3153 - 0x14<32>
	Mem3186[esp_3153 - 0x18<32>:word32] = 0x432B18<32>
	word32 ebx_3188
	fn00402890(esp_3153 - 0x14<32>, Mem3186[esp_3153 - 0x1C<32>:word32], Mem3186[esp_3153 - 0x18<32>:word32], out ebx_3188)
	Mem3199[ebp_3164 - 4<i32>:word32] = 0x3B<32>
	Mem3203[esp_3153 - 0x30<32>:word32] = 0<32>
	Mem3208[esp_3153 - 0x30<32>:word32] = fn0040F760(edi_3167, Mem3203[esp_3153 - 0x30<32>:word32])
	word32 ebp_3212
	word32 edx_11557
	fn004028D0(esp_3153 - 0x2C<32>, edi_3167, Mem3208[esp_3153 - 0x30<32>:word32], out edx_11557, out ebp_3212)
	Mem3222[ebp_3212 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3213 = <invalid>
	word32 ebp_3224
	word32 ebx_3225
	word32 edi_3227
	word32 ecx_11558
	word32 edx_11559
	word32 esi_11560
	branch SLICE(fn0041C1F0(ebx_3188, ebx_3188, ebp_3212, es, ds, Mem3222[esp_3213 + 0x2C<32>:word32], out ecx_11558, out edx_11559, out ebx_3225, out ebp_3224, out esi_11560, out edi_3227), byte, 0) == 0<8> l00423333
l00423333:
	Mem3244[ebp_3224 + 8<i32>:word32] = esp_3213 - 0x14<32>
	Mem3246[esp_3213 - 0x18<32>:word32] = 0x432B1C<32>
	word32 ebx_3248
	fn00402890(esp_3213 - 0x14<32>, Mem3246[esp_3213 - 0x1C<32>:word32], Mem3246[esp_3213 - 0x18<32>:word32], out ebx_3248)
	Mem3259[ebp_3224 - 4<i32>:word32] = 0x3C<32>
	Mem3263[esp_3213 - 0x30<32>:word32] = 0<32>
	Mem3268[esp_3213 - 0x30<32>:word32] = fn0040F760(edi_3227, Mem3263[esp_3213 - 0x30<32>:word32])
	word32 ebp_3272
	word32 edx_11570
	fn004028D0(esp_3213 - 0x2C<32>, edi_3227, Mem3268[esp_3213 - 0x30<32>:word32], out edx_11570, out ebp_3272)
	Mem3282[ebp_3272 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3273 = <invalid>
	word32 ebp_3284
	word32 ebx_3285
	word32 edi_3287
	word32 ecx_11571
	word32 edx_11572
	word32 esi_11573
	branch SLICE(fn0041C1F0(ebx_3248, ebx_3248, ebp_3272, es, ds, Mem3282[esp_3273 + 0x2C<32>:word32], out ecx_11571, out edx_11572, out ebx_3285, out ebp_3284, out esi_11573, out edi_3287), byte, 0) == 0<8> l004233C6
l004233C6:
	Mem3304[ebp_3284 + 8<i32>:word32] = esp_3273 - 0x14<32>
	Mem3306[esp_3273 - 0x18<32>:word32] = 0x432B20<32>
	word32 ebx_3308
	fn00402890(esp_3273 - 0x14<32>, Mem3306[esp_3273 - 0x1C<32>:word32], Mem3306[esp_3273 - 0x18<32>:word32], out ebx_3308)
	Mem3319[ebp_3284 - 4<i32>:word32] = 0x3D<32>
	Mem3323[esp_3273 - 0x30<32>:word32] = 0<32>
	Mem3328[esp_3273 - 0x30<32>:word32] = fn0040F760(edi_3287, Mem3323[esp_3273 - 0x30<32>:word32])
	word32 ebp_3332
	word32 edx_11583
	fn004028D0(esp_3273 - 0x2C<32>, edi_3287, Mem3328[esp_3273 - 0x30<32>:word32], out edx_11583, out ebp_3332)
	Mem3342[ebp_3332 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3333 = <invalid>
	word32 ebp_3344
	word32 ebx_3345
	word32 edi_3347
	word32 ecx_11584
	word32 edx_11585
	word32 esi_11586
	branch SLICE(fn0041C1F0(ebx_3308, ebx_3308, ebp_3332, es, ds, Mem3342[esp_3333 + 0x2C<32>:word32], out ecx_11584, out edx_11585, out ebx_3345, out ebp_3344, out esi_11586, out edi_3347), byte, 0) == 0<8> l00423449
l00423449:
	Mem3364[ebp_3344 + 8<i32>:word32] = esp_3333 - 0x14<32>
	Mem3366[esp_3333 - 0x18<32>:word32] = 0x432B28<32>
	word32 ebx_3368
	fn00402890(esp_3333 - 0x14<32>, Mem3366[esp_3333 - 0x1C<32>:word32], Mem3366[esp_3333 - 0x18<32>:word32], out ebx_3368)
	Mem3379[ebp_3344 - 4<i32>:word32] = 0x3E<32>
	Mem3383[esp_3333 - 0x30<32>:word32] = 0<32>
	Mem3388[esp_3333 - 0x30<32>:word32] = fn0040F760(edi_3347, Mem3383[esp_3333 - 0x30<32>:word32])
	word32 ebp_3392
	word32 edx_11596
	fn004028D0(esp_3333 - 0x2C<32>, edi_3347, Mem3388[esp_3333 - 0x30<32>:word32], out edx_11596, out ebp_3392)
	Mem3402[ebp_3392 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3393 = <invalid>
	word32 ebp_3404
	word32 ebx_3405
	word32 edi_3407
	word32 ecx_11597
	word32 edx_11598
	word32 esi_11599
	branch SLICE(fn0041C1F0(ebx_3368, ebx_3368, ebp_3392, es, ds, Mem3402[esp_3393 + 0x2C<32>:word32], out ecx_11597, out edx_11598, out ebx_3405, out ebp_3404, out esi_11599, out edi_3407), byte, 0) == 0<8> l004234CC
l004234CC:
	Mem3424[ebp_3404 + 8<i32>:word32] = esp_3393 - 0x14<32>
	Mem3426[esp_3393 - 0x18<32>:word32] = 0x432B30<32>
	word32 ebx_3428
	fn00402890(esp_3393 - 0x14<32>, Mem3426[esp_3393 - 0x1C<32>:word32], Mem3426[esp_3393 - 0x18<32>:word32], out ebx_3428)
	Mem3439[ebp_3404 - 4<i32>:word32] = 0x3F<32>
	Mem3443[esp_3393 - 0x30<32>:word32] = 0<32>
	Mem3448[esp_3393 - 0x30<32>:word32] = fn0040F760(edi_3407, Mem3443[esp_3393 - 0x30<32>:word32])
	word32 ebp_3452
	word32 edx_11606
	fn004028D0(esp_3393 - 0x2C<32>, edi_3407, Mem3448[esp_3393 - 0x30<32>:word32], out edx_11606, out ebp_3452)
	Mem3462[ebp_3452 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3453 = <invalid>
	word32 ebp_3464
	word32 ebx_3465
	word32 edi_3467
	word32 ecx_11607
	word32 edx_11608
	word32 esi_11609
	branch SLICE(fn0041C1F0(ebx_3428, ebx_3428, ebp_3452, es, ds, Mem3462[esp_3453 + 0x2C<32>:word32], out ecx_11607, out edx_11608, out ebx_3465, out ebp_3464, out esi_11609, out edi_3467), byte, 0) == 0<8> l0042354F
l0042354F:
	Mem3484[ebp_3464 + 8<i32>:word32] = esp_3453 - 0x14<32>
	Mem3486[esp_3453 - 0x18<32>:word32] = 0x432B38<32>
	word32 ebx_3488
	fn00402890(esp_3453 - 0x14<32>, Mem3486[esp_3453 - 0x1C<32>:word32], Mem3486[esp_3453 - 0x18<32>:word32], out ebx_3488)
	Mem3499[ebp_3464 - 4<i32>:word32] = 0x40<32>
	Mem3503[esp_3453 - 0x30<32>:word32] = 0<32>
	Mem3508[esp_3453 - 0x30<32>:word32] = fn0040F760(edi_3467, Mem3503[esp_3453 - 0x30<32>:word32])
	word32 ebp_3512
	word32 edx_11616
	fn004028D0(esp_3453 - 0x2C<32>, edi_3467, Mem3508[esp_3453 - 0x30<32>:word32], out edx_11616, out ebp_3512)
	Mem3522[ebp_3512 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3513 = <invalid>
	word32 ebp_3524
	word32 ebx_3525
	word32 edi_3527
	word32 ecx_11617
	word32 edx_11618
	word32 esi_11619
	branch SLICE(fn0041C1F0(ebx_3488, ebx_3488, ebp_3512, es, ds, Mem3522[esp_3513 + 0x2C<32>:word32], out ecx_11617, out edx_11618, out ebx_3525, out ebp_3524, out esi_11619, out edi_3527), byte, 0) == 0<8> l004235CD
l004235CD:
	Mem3544[ebp_3524 + 8<i32>:word32] = esp_3513 - 0x14<32>
	Mem3546[esp_3513 - 0x18<32>:word32] = 0x432B40<32>
	word32 ebx_3548
	fn00402890(esp_3513 - 0x14<32>, Mem3546[esp_3513 - 0x1C<32>:word32], Mem3546[esp_3513 - 0x18<32>:word32], out ebx_3548)
	Mem3559[ebp_3524 - 4<i32>:word32] = 0x41<32>
	Mem3563[esp_3513 - 0x30<32>:word32] = 0<32>
	Mem3568[esp_3513 - 0x30<32>:word32] = fn0040F760(edi_3527, Mem3563[esp_3513 - 0x30<32>:word32])
	word32 ebp_3572
	word32 edx_11626
	fn004028D0(esp_3513 - 0x2C<32>, edi_3527, Mem3568[esp_3513 - 0x30<32>:word32], out edx_11626, out ebp_3572)
	Mem3582[ebp_3572 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_3573 = <invalid>
	esp_10045 = esp_3573 + 4<32>
	word32 ecx_11627
	word32 edx_11628
	word32 esi_11629
	branch SLICE(fn0041C1F0(ebx_3548, ebx_3548, ebp_3572, es, ds, Mem3582[esp_3573 + 0x2C<32>:word32], out ecx_11627, out edx_11628, out ebx_10222, out ebp_10221, out esi_11629, out edi_10265), byte, 0) == 0<8> l0042364E
l0042360E:
	Mem3602[esp_3573:word32] = 0<32>
	Mem3604[esp_3573 - 4<i32>:word32] = 1<32>
	Mem3610[esp_3573 - 4<i32>:word32] = fn0040F760(edi_10265, Mem3604[esp_3573 - 4<i32>:word32])
	word32 esp_3627 = <invalid>
	word32 ebx_3614
	word32 edi_3616
	word32 ecx_11636
	word32 ebp_11637
	word32 esi_11638
	Mem3636[esp_3627:word32] = fn0041C910(ebx_10222, es, ds, Mem3610[esp_3573 - 4<i32>:word32], Mem3610[esp_3573 + 32<i32>:word32], out ecx_11636, out ebx_3614, out ebp_11637, out esi_11638, out edi_3616)
	Mem3638[esp_3627 - 4<i32>:word32] = 2<32>
	Mem3644[esp_3627 - 4<i32>:word32] = fn0040F760(edi_3616, Mem3638[esp_3627 - 4<i32>:word32])
	word32 esp_3661 = <invalid>
	word32 ecx_11639
	word32 esi_11640
	Mem3670[esp_3661:word32] = fn0041C910(ebx_3614, es, ds, Mem3644[esp_3627 - 4<i32>:word32], Mem3644[esp_3627 + 32<i32>:word32], out ecx_11639, out ebx_10222, out ebp_10221, out esi_11640, out edi_10265)
	word32 ecx_11641
	word32 eax_3672 = fn0041C680(Mem3670[esp_3661:word32], Mem3670[esp_3661 + 4<i32>:word32], Mem3670[esp_3661 + 8<i32>:word32], out ecx_11641)
	Mem3690[esp_3661 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_3672
	esp_10045 = esp_3661 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem3690[esp_3661 + 8<32>:word32]) + 0x34<32>
l00423590:
	Mem3713[esp_3513:word32] = 0<32>
	Mem3715[esp_3513 - 4<i32>:word32] = 1<32>
	Mem3721[esp_3513 - 4<i32>:word32] = fn0040F760(edi_3527, Mem3715[esp_3513 - 4<i32>:word32])
	word32 esp_3738 = <invalid>
	word32 ebx_3725
	word32 edi_3727
	word32 ecx_11630
	word32 ebp_11631
	word32 esi_11632
	Mem3747[esp_3738:word32] = fn0041C910(ebx_3525, es, ds, Mem3721[esp_3513 - 4<i32>:word32], Mem3721[esp_3513 + 32<i32>:word32], out ecx_11630, out ebx_3725, out ebp_11631, out esi_11632, out edi_3727)
	Mem3749[esp_3738 - 4<i32>:word32] = 2<32>
	Mem3755[esp_3738 - 4<i32>:word32] = fn0040F760(edi_3727, Mem3749[esp_3738 - 4<i32>:word32])
	word32 esp_3772 = <invalid>
	word32 ecx_11633
	word32 esi_11634
	Mem3781[esp_3772:word32] = fn0041C910(ebx_3725, es, ds, Mem3755[esp_3738 - 4<i32>:word32], Mem3755[esp_3738 + 32<i32>:word32], out ecx_11633, out ebx_10222, out ebp_10221, out esi_11634, out edi_10265)
	word32 ecx_11635
	word32 eax_3783 = fn0041C680(Mem3781[esp_3772:word32], Mem3781[esp_3772 + 4<i32>:word32], Mem3781[esp_3772 + 8<i32>:word32], out ecx_11635)
	Mem3801[esp_3772 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_3783
	esp_10045 = esp_3772 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem3801[esp_3772 + 8<32>:word32]) + 0x74<32>
l0042350D:
	Mem3824[esp_3453:word32] = 0<32>
	Mem3826[esp_3453 - 4<i32>:word32] = 1<32>
	Mem3832[esp_3453 - 4<i32>:word32] = fn0040F760(edi_3467, Mem3826[esp_3453 - 4<i32>:word32])
	word32 esp_3849 = <invalid>
	word32 ebx_3836
	word32 edi_3838
	word32 ecx_11620
	word32 ebp_11621
	word32 esi_11622
	Mem3858[esp_3849:word32] = fn0041C910(ebx_3465, es, ds, Mem3832[esp_3453 - 4<i32>:word32], Mem3832[esp_3453 + 32<i32>:word32], out ecx_11620, out ebx_3836, out ebp_11621, out esi_11622, out edi_3838)
	Mem3860[esp_3849 - 4<i32>:word32] = 2<32>
	Mem3866[esp_3849 - 4<i32>:word32] = fn0040F760(edi_3838, Mem3860[esp_3849 - 4<i32>:word32])
	word32 esp_3883 = <invalid>
	word32 ecx_11623
	word32 esi_11624
	Mem3892[esp_3883:word32] = fn0041C910(ebx_3836, es, ds, Mem3866[esp_3849 - 4<i32>:word32], Mem3866[esp_3849 + 32<i32>:word32], out ecx_11623, out ebx_10222, out ebp_10221, out esi_11624, out edi_10265)
	word32 ecx_11625
	word32 eax_3894 = fn0041C680(Mem3892[esp_3883:word32], Mem3892[esp_3883 + 4<i32>:word32], Mem3892[esp_3883 + 8<i32>:word32], out ecx_11625)
	Mem3912[esp_3883 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_3894
	esp_10045 = esp_3883 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem3912[esp_3883 + 8<32>:word32]) + 0x7B4<32>
l0042348A:
	Mem3935[esp_3393:word32] = 0<32>
	Mem3937[esp_3393 - 4<i32>:word32] = 1<32>
	Mem3943[esp_3393 - 4<i32>:word32] = fn0040F760(edi_3407, Mem3937[esp_3393 - 4<i32>:word32])
	word32 esp_3960 = <invalid>
	word32 ebx_3947
	word32 edi_3949
	word32 ecx_11610
	word32 ebp_11611
	word32 esi_11612
	Mem3969[esp_3960:word32] = fn0041C910(ebx_3405, es, ds, Mem3943[esp_3393 - 4<i32>:word32], Mem3943[esp_3393 + 32<i32>:word32], out ecx_11610, out ebx_3947, out ebp_11611, out esi_11612, out edi_3949)
	Mem3971[esp_3960 - 4<i32>:word32] = 2<32>
	Mem3977[esp_3960 - 4<i32>:word32] = fn0040F760(edi_3949, Mem3971[esp_3960 - 4<i32>:word32])
	word32 esp_3994 = <invalid>
	word32 ecx_11613
	word32 esi_11614
	Mem4003[esp_3994:word32] = fn0041C910(ebx_3947, es, ds, Mem3977[esp_3960 - 4<i32>:word32], Mem3977[esp_3960 + 32<i32>:word32], out ecx_11613, out ebx_10222, out ebp_10221, out esi_11614, out edi_10265)
	word32 ecx_11615
	word32 eax_4005 = fn0041C680(Mem4003[esp_3994:word32], Mem4003[esp_3994 + 4<i32>:word32], Mem4003[esp_3994 + 8<i32>:word32], out ecx_11615)
	Mem4023[esp_3994 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_4005
	esp_10045 = esp_3994 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem4023[esp_3994 + 8<32>:word32]) + 0x734<32>
l00423407:
	Mem4046[esp_3333:word32] = 0<32>
	Mem4048[esp_3333 - 4<i32>:word32] = 1<32>
	Mem4054[esp_3333 - 4<i32>:word32] = fn0040F760(edi_3347, Mem4048[esp_3333 - 4<i32>:word32])
	word32 esp_4071 = <invalid>
	word32 ebx_4058
	word32 edi_4060
	word32 ecx_11600
	word32 ebp_11601
	word32 esi_11602
	Mem4080[esp_4071:word32] = fn0041C910(ebx_3345, es, ds, Mem4054[esp_3333 - 4<i32>:word32], Mem4054[esp_3333 + 32<i32>:word32], out ecx_11600, out ebx_4058, out ebp_11601, out esi_11602, out edi_4060)
	Mem4082[esp_4071 - 4<i32>:word32] = 2<32>
	Mem4088[esp_4071 - 4<i32>:word32] = fn0040F760(edi_4060, Mem4082[esp_4071 - 4<i32>:word32])
	word32 esp_4105 = <invalid>
	word32 ecx_11603
	word32 esi_11604
	Mem4114[esp_4105:word32] = fn0041C910(ebx_4058, es, ds, Mem4088[esp_4071 - 4<i32>:word32], Mem4088[esp_4071 + 32<i32>:word32], out ecx_11603, out ebx_10222, out ebp_10221, out esi_11604, out edi_10265)
	word32 ecx_11605
	word32 eax_4116 = fn0041C680(Mem4114[esp_4105:word32], Mem4114[esp_4105 + 4<i32>:word32], Mem4114[esp_4105 + 8<i32>:word32], out ecx_11605)
	Mem4134[esp_4105 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_4116
	esp_10045 = esp_4105 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem4134[esp_4105 + 8<32>:word32]) + 0x774<32>
l00423374:
	Mem4157[esp_3273:word32] = 2<32>
	Mem4163[esp_3273:word32] = fn0040F760(edi_3287, Mem4157[esp_3273:word32])
	word32 esp_4180 = <invalid>
	word32 ebx_4167
	word32 edi_4169
	word32 ecx_11587
	word32 ebp_11588
	word32 esi_11589
	Mem4189[esp_4180:word32] = fn0041C910(ebx_3285, es, ds, Mem4163[esp_3273:word32], Mem4163[esp_3273 + 36<i32>:word32], out ecx_11587, out ebx_4167, out ebp_11588, out esi_11589, out edi_4169)
	Mem4191[esp_4180 - 4<i32>:word32] = 1<32>
	Mem4197[esp_4180 - 4<i32>:word32] = fn0040F760(edi_4169, Mem4191[esp_4180 - 4<i32>:word32])
	word32 esp_4214 = <invalid>
	word32 ebx_4201
	word32 edi_4203
	word32 ecx_11590
	word32 ebp_11591
	word32 esi_11592
	Mem4223[esp_4214:word32] = fn0041C910(ebx_4167, es, ds, Mem4197[esp_4180 - 4<i32>:word32], Mem4197[esp_4180 + 32<i32>:word32], out ecx_11590, out ebx_4201, out ebp_11591, out esi_11592, out edi_4203)
	Mem4225[esp_4214 - 4<i32>:word32] = 2<32>
	Mem4231[esp_4214 - 4<i32>:word32] = fn0040F760(edi_4203, Mem4225[esp_4214 - 4<i32>:word32])
	word32 esp_4248 = <invalid>
	word32 ecx_11593
	word32 esi_11594
	Mem4257[esp_4248:word32] = fn0041C910(ebx_4201, es, ds, Mem4231[esp_4214 - 4<i32>:word32], Mem4231[esp_4214 + 32<i32>:word32], out ecx_11593, out ebx_10222, out ebp_10221, out esi_11594, out edi_10265)
	word32 ecx_11595
	word32 eax_4259 = fn0041C680(Mem4257[esp_4248:word32], Mem4257[esp_4248 + 4<i32>:word32], Mem4257[esp_4248 + 8<i32>:word32], out ecx_11595)
	Mem4277[esp_4248 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_4259
	esp_10045 = esp_4248 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem4277[esp_4248 + 8<32>:word32]) + 0xF8<32>
l004232E1:
	Mem4300[esp_3213:word32] = 2<32>
	Mem4306[esp_3213:word32] = fn0040F760(edi_3227, Mem4300[esp_3213:word32])
	word32 esp_4323 = <invalid>
	word32 ebx_4310
	word32 edi_4312
	word32 ecx_11574
	word32 ebp_11575
	word32 esi_11576
	Mem4332[esp_4323:word32] = fn0041C910(ebx_3225, es, ds, Mem4306[esp_3213:word32], Mem4306[esp_3213 + 36<i32>:word32], out ecx_11574, out ebx_4310, out ebp_11575, out esi_11576, out edi_4312)
	Mem4334[esp_4323 - 4<i32>:word32] = 1<32>
	Mem4340[esp_4323 - 4<i32>:word32] = fn0040F760(edi_4312, Mem4334[esp_4323 - 4<i32>:word32])
	word32 esp_4357 = <invalid>
	word32 ebx_4344
	word32 edi_4346
	word32 ecx_11577
	word32 ebp_11578
	word32 esi_11579
	Mem4366[esp_4357:word32] = fn0041C910(ebx_4310, es, ds, Mem4340[esp_4323 - 4<i32>:word32], Mem4340[esp_4323 + 32<i32>:word32], out ecx_11577, out ebx_4344, out ebp_11578, out esi_11579, out edi_4346)
	Mem4368[esp_4357 - 4<i32>:word32] = 2<32>
	Mem4374[esp_4357 - 4<i32>:word32] = fn0040F760(edi_4346, Mem4368[esp_4357 - 4<i32>:word32])
	word32 esp_4391 = <invalid>
	word32 ecx_11580
	word32 esi_11581
	Mem4400[esp_4391:word32] = fn0041C910(ebx_4344, es, ds, Mem4374[esp_4357 - 4<i32>:word32], Mem4374[esp_4357 + 32<i32>:word32], out ecx_11580, out ebx_10222, out ebp_10221, out esi_11581, out edi_10265)
	word32 ecx_11582
	word32 eax_4402 = fn0041C680(Mem4400[esp_4391:word32], Mem4400[esp_4391 + 4<i32>:word32], Mem4400[esp_4391 + 8<i32>:word32], out ecx_11582)
	Mem4420[esp_4391 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_4402
	esp_10045 = esp_4391 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem4420[esp_4391 + 8<32>:word32]) + 0xF8<32>
l0042324E:
	Mem4443[esp_3153:word32] = 3<32>
	Mem4449[esp_3153:word32] = fn0040F760(edi_3167, Mem4443[esp_3153:word32])
	word32 esp_4466 = <invalid>
	word32 ebx_4453
	word32 edi_4455
	word32 ecx_11561
	word32 ebp_11562
	word32 esi_11563
	Mem4475[esp_4466:word32] = fn0041C910(ebx_3165, es, ds, Mem4449[esp_3153:word32], Mem4449[esp_3153 + 36<i32>:word32], out ecx_11561, out ebx_4453, out ebp_11562, out esi_11563, out edi_4455)
	Mem4477[esp_4466 - 4<i32>:word32] = 1<32>
	Mem4483[esp_4466 - 4<i32>:word32] = fn0040F760(edi_4455, Mem4477[esp_4466 - 4<i32>:word32])
	word32 esp_4500 = <invalid>
	word32 ebx_4487
	word32 edi_4489
	word32 ecx_11564
	word32 ebp_11565
	word32 esi_11566
	Mem4509[esp_4500:word32] = fn0041C910(ebx_4453, es, ds, Mem4483[esp_4466 - 4<i32>:word32], Mem4483[esp_4466 + 32<i32>:word32], out ecx_11564, out ebx_4487, out ebp_11565, out esi_11566, out edi_4489)
	Mem4511[esp_4500 - 4<i32>:word32] = 2<32>
	Mem4517[esp_4500 - 4<i32>:word32] = fn0040F760(edi_4489, Mem4511[esp_4500 - 4<i32>:word32])
	word32 esp_4534 = <invalid>
	word32 ecx_11567
	word32 esi_11568
	Mem4543[esp_4534:word32] = fn0041C910(ebx_4487, es, ds, Mem4517[esp_4500 - 4<i32>:word32], Mem4517[esp_4500 + 32<i32>:word32], out ecx_11567, out ebx_10222, out ebp_10221, out esi_11568, out edi_10265)
	word32 ecx_11569
	word32 eax_4545 = fn0041C680(Mem4543[esp_4534:word32], Mem4543[esp_4534 + 4<i32>:word32], Mem4543[esp_4534 + 8<i32>:word32], out ecx_11569)
	Mem4563[esp_4534 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_4545
	esp_10045 = esp_4534 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem4563[esp_4534 + 8<32>:word32]) + 0xF8<32>
l004231BB:
	Mem4586[esp_3093:word32] = 2<32>
	Mem4592[esp_3093:word32] = fn0040F760(edi_3107, Mem4586[esp_3093:word32])
	word32 esp_4609 = <invalid>
	word32 ebx_4596
	word32 edi_4598
	word32 ecx_11548
	word32 ebp_11549
	word32 esi_11550
	Mem4618[esp_4609:word32] = fn0041C910(ebx_3105, es, ds, Mem4592[esp_3093:word32], Mem4592[esp_3093 + 36<i32>:word32], out ecx_11548, out ebx_4596, out ebp_11549, out esi_11550, out edi_4598)
	Mem4620[esp_4609 - 4<i32>:word32] = 1<32>
	Mem4626[esp_4609 - 4<i32>:word32] = fn0040F760(edi_4598, Mem4620[esp_4609 - 4<i32>:word32])
	word32 esp_4643 = <invalid>
	word32 ebx_4630
	word32 edi_4632
	word32 ecx_11551
	word32 ebp_11552
	word32 esi_11553
	Mem4652[esp_4643:word32] = fn0041C910(ebx_4596, es, ds, Mem4626[esp_4609 - 4<i32>:word32], Mem4626[esp_4609 + 32<i32>:word32], out ecx_11551, out ebx_4630, out ebp_11552, out esi_11553, out edi_4632)
	Mem4654[esp_4643 - 4<i32>:word32] = 2<32>
	Mem4660[esp_4643 - 4<i32>:word32] = fn0040F760(edi_4632, Mem4654[esp_4643 - 4<i32>:word32])
	word32 esp_4677 = <invalid>
	word32 ecx_11554
	word32 esi_11555
	Mem4686[esp_4677:word32] = fn0041C910(ebx_4630, es, ds, Mem4660[esp_4643 - 4<i32>:word32], Mem4660[esp_4643 + 32<i32>:word32], out ecx_11554, out ebx_10222, out ebp_10221, out esi_11555, out edi_10265)
	word32 ecx_11556
	word32 eax_4688 = fn0041C680(Mem4686[esp_4677:word32], Mem4686[esp_4677 + 4<i32>:word32], Mem4686[esp_4677 + 8<i32>:word32], out ecx_11556)
	Mem4706[esp_4677 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_4688
	esp_10045 = esp_4677 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem4706[esp_4677 + 8<32>:word32]) + 0x378<32>
l00423128:
	Mem4729[esp_3033:word32] = 3<32>
	Mem4735[esp_3033:word32] = fn0040F760(edi_3047, Mem4729[esp_3033:word32])
	word32 esp_4752 = <invalid>
	word32 ebx_4739
	word32 edi_4741
	word32 ecx_11535
	word32 ebp_11536
	word32 esi_11537
	Mem4761[esp_4752:word32] = fn0041C910(ebx_3045, es, ds, Mem4735[esp_3033:word32], Mem4735[esp_3033 + 36<i32>:word32], out ecx_11535, out ebx_4739, out ebp_11536, out esi_11537, out edi_4741)
	Mem4763[esp_4752 - 4<i32>:word32] = 1<32>
	Mem4769[esp_4752 - 4<i32>:word32] = fn0040F760(edi_4741, Mem4763[esp_4752 - 4<i32>:word32])
	word32 esp_4786 = <invalid>
	word32 ebx_4773
	word32 edi_4775
	word32 ecx_11538
	word32 ebp_11539
	word32 esi_11540
	Mem4795[esp_4786:word32] = fn0041C910(ebx_4739, es, ds, Mem4769[esp_4752 - 4<i32>:word32], Mem4769[esp_4752 + 32<i32>:word32], out ecx_11538, out ebx_4773, out ebp_11539, out esi_11540, out edi_4775)
	Mem4797[esp_4786 - 4<i32>:word32] = 2<32>
	Mem4803[esp_4786 - 4<i32>:word32] = fn0040F760(edi_4775, Mem4797[esp_4786 - 4<i32>:word32])
	word32 esp_4820 = <invalid>
	word32 ecx_11541
	word32 esi_11542
	Mem4829[esp_4820:word32] = fn0041C910(ebx_4773, es, ds, Mem4803[esp_4786 - 4<i32>:word32], Mem4803[esp_4786 + 32<i32>:word32], out ecx_11541, out ebx_10222, out ebp_10221, out esi_11542, out edi_10265)
	word32 ecx_11543
	word32 eax_4831 = fn0041C680(Mem4829[esp_4820:word32], Mem4829[esp_4820 + 4<i32>:word32], Mem4829[esp_4820 + 8<i32>:word32], out ecx_11543)
	Mem4849[esp_4820 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_4831
	esp_10045 = esp_4820 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem4849[esp_4820 + 8<32>:word32]) + 0x378<32>
l00423095:
	Mem4872[esp_2973:word32] = 3<32>
	Mem4878[esp_2973:word32] = fn0040F760(edi_2987, Mem4872[esp_2973:word32])
	word32 esp_4895 = <invalid>
	word32 ebx_4882
	word32 edi_4884
	word32 ecx_11522
	word32 ebp_11523
	word32 esi_11524
	Mem4904[esp_4895:word32] = fn0041C910(ebx_2985, es, ds, Mem4878[esp_2973:word32], Mem4878[esp_2973 + 36<i32>:word32], out ecx_11522, out ebx_4882, out ebp_11523, out esi_11524, out edi_4884)
	Mem4906[esp_4895 - 4<i32>:word32] = 1<32>
	Mem4912[esp_4895 - 4<i32>:word32] = fn0040F760(edi_4884, Mem4906[esp_4895 - 4<i32>:word32])
	word32 esp_4929 = <invalid>
	word32 ebx_4916
	word32 edi_4918
	word32 ecx_11525
	word32 ebp_11526
	word32 esi_11527
	Mem4938[esp_4929:word32] = fn0041C910(ebx_4882, es, ds, Mem4912[esp_4895 - 4<i32>:word32], Mem4912[esp_4895 + 32<i32>:word32], out ecx_11525, out ebx_4916, out ebp_11526, out esi_11527, out edi_4918)
	Mem4940[esp_4929 - 4<i32>:word32] = 2<32>
	Mem4946[esp_4929 - 4<i32>:word32] = fn0040F760(edi_4918, Mem4940[esp_4929 - 4<i32>:word32])
	word32 esp_4963 = <invalid>
	word32 ecx_11528
	word32 esi_11529
	Mem4972[esp_4963:word32] = fn0041C910(ebx_4916, es, ds, Mem4946[esp_4929 - 4<i32>:word32], Mem4946[esp_4929 + 32<i32>:word32], out ecx_11528, out ebx_10222, out ebp_10221, out esi_11529, out edi_10265)
	word32 ecx_11530
	word32 eax_4974 = fn0041C680(Mem4972[esp_4963:word32], Mem4972[esp_4963 + 4<i32>:word32], Mem4972[esp_4963 + 8<i32>:word32], out ecx_11530)
	Mem4992[esp_4963 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_4974
	esp_10045 = esp_4963 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem4992[esp_4963 + 8<32>:word32]) + 0x338<32>
l00423002:
	Mem5015[esp_2913:word32] = 3<32>
	Mem5021[esp_2913:word32] = fn0040F760(edi_2927, Mem5015[esp_2913:word32])
	word32 esp_5038 = <invalid>
	word32 ebx_5025
	word32 edi_5027
	word32 ecx_11509
	word32 ebp_11510
	word32 esi_11511
	Mem5047[esp_5038:word32] = fn0041C910(ebx_2925, es, ds, Mem5021[esp_2913:word32], Mem5021[esp_2913 + 36<i32>:word32], out ecx_11509, out ebx_5025, out ebp_11510, out esi_11511, out edi_5027)
	Mem5049[esp_5038 - 4<i32>:word32] = 1<32>
	Mem5055[esp_5038 - 4<i32>:word32] = fn0040F760(edi_5027, Mem5049[esp_5038 - 4<i32>:word32])
	word32 esp_5072 = <invalid>
	word32 ebx_5059
	word32 edi_5061
	word32 ecx_11512
	word32 ebp_11513
	word32 esi_11514
	Mem5081[esp_5072:word32] = fn0041C910(ebx_5025, es, ds, Mem5055[esp_5038 - 4<i32>:word32], Mem5055[esp_5038 + 32<i32>:word32], out ecx_11512, out ebx_5059, out ebp_11513, out esi_11514, out edi_5061)
	Mem5083[esp_5072 - 4<i32>:word32] = 2<32>
	Mem5089[esp_5072 - 4<i32>:word32] = fn0040F760(edi_5061, Mem5083[esp_5072 - 4<i32>:word32])
	word32 esp_5106 = <invalid>
	word32 ecx_11515
	word32 esi_11516
	Mem5115[esp_5106:word32] = fn0041C910(ebx_5059, es, ds, Mem5089[esp_5072 - 4<i32>:word32], Mem5089[esp_5072 + 32<i32>:word32], out ecx_11515, out ebx_10222, out ebp_10221, out esi_11516, out edi_10265)
	word32 ecx_11517
	word32 eax_5117 = fn0041C680(Mem5115[esp_5106:word32], Mem5115[esp_5106 + 4<i32>:word32], Mem5115[esp_5106 + 8<i32>:word32], out ecx_11517)
	Mem5135[esp_5106 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_5117
	esp_10045 = esp_5106 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem5135[esp_5106 + 8<32>:word32]) + 0x278<32>
l00422F6F:
	Mem5158[esp_2853:word32] = 3<32>
	Mem5164[esp_2853:word32] = fn0040F760(edi_2867, Mem5158[esp_2853:word32])
	word32 esp_5181 = <invalid>
	word32 ebx_5168
	word32 edi_5170
	word32 ecx_11496
	word32 ebp_11497
	word32 esi_11498
	Mem5190[esp_5181:word32] = fn0041C910(ebx_2865, es, ds, Mem5164[esp_2853:word32], Mem5164[esp_2853 + 36<i32>:word32], out ecx_11496, out ebx_5168, out ebp_11497, out esi_11498, out edi_5170)
	Mem5192[esp_5181 - 4<i32>:word32] = 1<32>
	Mem5198[esp_5181 - 4<i32>:word32] = fn0040F760(edi_5170, Mem5192[esp_5181 - 4<i32>:word32])
	word32 esp_5215 = <invalid>
	word32 ebx_5202
	word32 edi_5204
	word32 ecx_11499
	word32 ebp_11500
	word32 esi_11501
	Mem5224[esp_5215:word32] = fn0041C910(ebx_5168, es, ds, Mem5198[esp_5181 - 4<i32>:word32], Mem5198[esp_5181 + 32<i32>:word32], out ecx_11499, out ebx_5202, out ebp_11500, out esi_11501, out edi_5204)
	Mem5226[esp_5215 - 4<i32>:word32] = 2<32>
	Mem5232[esp_5215 - 4<i32>:word32] = fn0040F760(edi_5204, Mem5226[esp_5215 - 4<i32>:word32])
	word32 esp_5249 = <invalid>
	word32 ecx_11502
	word32 esi_11503
	Mem5258[esp_5249:word32] = fn0041C910(ebx_5202, es, ds, Mem5232[esp_5215 - 4<i32>:word32], Mem5232[esp_5215 + 32<i32>:word32], out ecx_11502, out ebx_10222, out ebp_10221, out esi_11503, out edi_10265)
	word32 ecx_11504
	word32 eax_5260 = fn0041C680(Mem5258[esp_5249:word32], Mem5258[esp_5249 + 4<i32>:word32], Mem5258[esp_5249 + 8<i32>:word32], out ecx_11504)
	Mem5278[esp_5249 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_5260
	esp_10045 = esp_5249 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem5278[esp_5249 + 8<32>:word32]) + 0x3B8<32>
l00422EDE:
	Mem5301[esp_2793:word32] = 3<32>
	Mem5307[esp_2793:word32] = fn0040F760(edi_2807, Mem5301[esp_2793:word32])
	word32 esp_5324 = <invalid>
	word32 ebx_5311
	word32 edi_5313
	word32 ecx_11483
	word32 ebp_11484
	word32 esi_11485
	Mem5333[esp_5324:word32] = fn0041C910(ebx_2805, es, ds, Mem5307[esp_2793:word32], Mem5307[esp_2793 + 36<i32>:word32], out ecx_11483, out ebx_5311, out ebp_11484, out esi_11485, out edi_5313)
	Mem5335[esp_5324 - 4<i32>:word32] = 1<32>
	Mem5341[esp_5324 - 4<i32>:word32] = fn0040F760(edi_5313, Mem5335[esp_5324 - 4<i32>:word32])
	word32 esp_5358 = <invalid>
	word32 ebx_5345
	word32 edi_5347
	word32 ecx_11486
	word32 ebp_11487
	word32 esi_11488
	Mem5367[esp_5358:word32] = fn0041C910(ebx_5311, es, ds, Mem5341[esp_5324 - 4<i32>:word32], Mem5341[esp_5324 + 32<i32>:word32], out ecx_11486, out ebx_5345, out ebp_11487, out esi_11488, out edi_5347)
	Mem5369[esp_5358 - 4<i32>:word32] = 2<32>
	Mem5375[esp_5358 - 4<i32>:word32] = fn0040F760(edi_5347, Mem5369[esp_5358 - 4<i32>:word32])
	word32 esp_5392 = <invalid>
	word32 ecx_11489
	word32 esi_11490
	Mem5401[esp_5392:word32] = fn0041C910(ebx_5345, es, ds, Mem5375[esp_5358 - 4<i32>:word32], Mem5375[esp_5358 + 32<i32>:word32], out ecx_11489, out ebx_10222, out ebp_10221, out esi_11490, out edi_10265)
	word32 ecx_11491
	word32 eax_5403 = fn0041C680(Mem5401[esp_5392:word32], Mem5401[esp_5392 + 4<i32>:word32], Mem5401[esp_5392 + 8<i32>:word32], out ecx_11491)
	Mem5421[esp_5392 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_5403
	esp_10045 = esp_5392 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem5421[esp_5392 + 8<32>:word32]) + 0x38<32>
l00422E4D:
	Mem5444[esp_2733:word32] = 3<32>
	Mem5450[esp_2733:word32] = fn0040F760(edi_2747, Mem5444[esp_2733:word32])
	word32 esp_5467 = <invalid>
	word32 ebx_5454
	word32 edi_5456
	word32 ecx_11470
	word32 ebp_11471
	word32 esi_11472
	Mem5476[esp_5467:word32] = fn0041C910(ebx_2745, es, ds, Mem5450[esp_2733:word32], Mem5450[esp_2733 + 36<i32>:word32], out ecx_11470, out ebx_5454, out ebp_11471, out esi_11472, out edi_5456)
	Mem5478[esp_5467 - 4<i32>:word32] = 1<32>
	Mem5484[esp_5467 - 4<i32>:word32] = fn0040F760(edi_5456, Mem5478[esp_5467 - 4<i32>:word32])
	word32 esp_5501 = <invalid>
	word32 ebx_5488
	word32 edi_5490
	word32 ecx_11473
	word32 ebp_11474
	word32 esi_11475
	Mem5510[esp_5501:word32] = fn0041C910(ebx_5454, es, ds, Mem5484[esp_5467 - 4<i32>:word32], Mem5484[esp_5467 + 32<i32>:word32], out ecx_11473, out ebx_5488, out ebp_11474, out esi_11475, out edi_5490)
	Mem5512[esp_5501 - 4<i32>:word32] = 2<32>
	Mem5518[esp_5501 - 4<i32>:word32] = fn0040F760(edi_5490, Mem5512[esp_5501 - 4<i32>:word32])
	word32 esp_5535 = <invalid>
	word32 ecx_11476
	word32 esi_11477
	Mem5544[esp_5535:word32] = fn0041C910(ebx_5488, es, ds, Mem5518[esp_5501 - 4<i32>:word32], Mem5518[esp_5501 + 32<i32>:word32], out ecx_11476, out ebx_10222, out ebp_10221, out esi_11477, out edi_10265)
	word32 ecx_11478
	word32 eax_5546 = fn0041C680(Mem5544[esp_5535:word32], Mem5544[esp_5535 + 4<i32>:word32], Mem5544[esp_5535 + 8<i32>:word32], out ecx_11478)
	Mem5564[esp_5535 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_5546
	esp_10045 = esp_5535 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem5564[esp_5535 + 8<32>:word32]) + 0x78<32>
l00422DFE:
	Mem5587[esp_2673:word32] = 0x18<32>
	eax_10263 = fn0041C5C0(Mem5587[esp_2673:word32])
	esp_10045 = esp_2673 + 4<32>
l00422D65:
	Mem5607[esp_2613:word32] = 1<32>
	Mem5613[esp_2613:word32] = fn0040F760(edi_2627, Mem5607[esp_2613:word32])
	word32 esp_5630 = <invalid>
	word32 ebx_5617
	word32 edi_5619
	word32 ecx_11455
	word32 ebp_11456
	word32 esi_11457
	Mem5639[esp_5630:word32] = fn0041C910(ebx_2625, es, ds, Mem5613[esp_2613:word32], Mem5613[esp_2613 + 36<i32>:word32], out ecx_11455, out ebx_5617, out ebp_11456, out esi_11457, out edi_5619)
	Mem5641[esp_5630 - 4<i32>:word32] = 0<32>
	Mem5643[esp_5630 - 8<i32>:word32] = 3<32>
	word32 esi_11458
	Mem5665[esp_5630 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_5619, Mem5643[esp_5630 - 8<i32>:word32]), 0<32>, ebx_5617, es, ds, Mem5643[esp_5630 - 4<32>:word32], out esi_11458)
	Mem5667[esp_5630 - 8<i32>:word32] = 2<32>
	Mem5672[esp_5630 - 8<32>:word32] = fn0040F760(edi_5619, Mem5667[esp_5630 - 8<i32>:word32])
	word32 esp_5689 = <invalid>
	word32 ecx_11459
	word32 esi_11460
	Mem5698[esp_5689:word32] = fn0041C910(ebx_5617, es, ds, Mem5672[esp_5630 - 8<32>:word32], Mem5672[esp_5630 + 0x1C<32>:word32], out ecx_11459, out ebx_10222, out ebp_10221, out esi_11460, out edi_10265)
	word32 edx_11461
	word32 eax_5700 = fn0041C740(Mem5698[esp_5689:word32], Mem5698[esp_5689 + 4<i32>:word16], Mem5698[esp_5689 + 8<i32>:word32], out edx_11461)
	Mem5718[esp_5689 + 8<32>:word32] = 0x18<32>
	Mem5740[ebx_10222 + 96<i32>:word32] = eax_5700 + fn0041C5C0(Mem5718[esp_5689 + 8<32>:word32])
	esp_10045 = esp_5689 + 0xC<32>
l00422CCC:
	Mem5742[esp_2553:word32] = 1<32>
	Mem5748[esp_2553:word32] = fn0040F760(edi_2567, Mem5742[esp_2553:word32])
	word32 esp_5765 = <invalid>
	word32 ebx_5752
	word32 edi_5754
	word32 ecx_11444
	word32 ebp_11445
	word32 esi_11446
	Mem5774[esp_5765:word32] = fn0041C910(ebx_2565, es, ds, Mem5748[esp_2553:word32], Mem5748[esp_2553 + 36<i32>:word32], out ecx_11444, out ebx_5752, out ebp_11445, out esi_11446, out edi_5754)
	Mem5776[esp_5765 - 4<i32>:word32] = 0<32>
	Mem5778[esp_5765 - 8<i32>:word32] = 3<32>
	word32 esi_11447
	Mem5800[esp_5765 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_5754, Mem5778[esp_5765 - 8<i32>:word32]), 0<32>, ebx_5752, es, ds, Mem5778[esp_5765 - 4<32>:word32], out esi_11447)
	Mem5802[esp_5765 - 8<i32>:word32] = 2<32>
	Mem5807[esp_5765 - 8<32>:word32] = fn0040F760(edi_5754, Mem5802[esp_5765 - 8<i32>:word32])
	word32 esp_5824 = <invalid>
	word32 ecx_11448
	word32 esi_11449
	Mem5833[esp_5824:word32] = fn0041C910(ebx_5752, es, ds, Mem5807[esp_5765 - 8<32>:word32], Mem5807[esp_5765 + 0x1C<32>:word32], out ecx_11448, out ebx_10222, out ebp_10221, out esi_11449, out edi_10265)
	word32 edx_11450
	word32 eax_5835 = fn0041C740(Mem5833[esp_5824:word32], Mem5833[esp_5824 + 4<i32>:word16], Mem5833[esp_5824 + 8<i32>:word32], out edx_11450)
	Mem5853[esp_5824 + 8<32>:word32] = 0x19<32>
	Mem5875[ebx_10222 + 96<i32>:word32] = eax_5835 + fn0041C5C0(Mem5853[esp_5824 + 8<32>:word32])
	esp_10045 = esp_5824 + 0xC<32>
l00422C33:
	Mem5877[esp_2493:word32] = 1<32>
	Mem5883[esp_2493:word32] = fn0040F760(edi_2507, Mem5877[esp_2493:word32])
	word32 esp_5900 = <invalid>
	word32 ebx_5887
	word32 edi_5889
	word32 ecx_11433
	word32 ebp_11434
	word32 esi_11435
	Mem5909[esp_5900:word32] = fn0041C910(ebx_2505, es, ds, Mem5883[esp_2493:word32], Mem5883[esp_2493 + 36<i32>:word32], out ecx_11433, out ebx_5887, out ebp_11434, out esi_11435, out edi_5889)
	Mem5911[esp_5900 - 4<i32>:word32] = 0<32>
	Mem5913[esp_5900 - 8<i32>:word32] = 3<32>
	word32 esi_11436
	Mem5935[esp_5900 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_5889, Mem5913[esp_5900 - 8<i32>:word32]), 0<32>, ebx_5887, es, ds, Mem5913[esp_5900 - 4<32>:word32], out esi_11436)
	Mem5937[esp_5900 - 8<i32>:word32] = 2<32>
	Mem5942[esp_5900 - 8<32>:word32] = fn0040F760(edi_5889, Mem5937[esp_5900 - 8<i32>:word32])
	word32 esp_5959 = <invalid>
	word32 ecx_11437
	word32 esi_11438
	Mem5968[esp_5959:word32] = fn0041C910(ebx_5887, es, ds, Mem5942[esp_5900 - 8<32>:word32], Mem5942[esp_5900 + 0x1C<32>:word32], out ecx_11437, out ebx_10222, out ebp_10221, out esi_11438, out edi_10265)
	word32 edx_11439
	word32 eax_5970 = fn0041C740(Mem5968[esp_5959:word32], Mem5968[esp_5959 + 4<i32>:word16], Mem5968[esp_5959 + 8<i32>:word32], out edx_11439)
	Mem5988[esp_5959 + 8<32>:word32] = 0x1A<32>
	Mem6010[ebx_10222 + 96<i32>:word32] = eax_5970 + fn0041C5C0(Mem5988[esp_5959 + 8<32>:word32])
	esp_10045 = esp_5959 + 0xC<32>
l00422B9A:
	Mem6012[esp_2433:word32] = 1<32>
	Mem6018[esp_2433:word32] = fn0040F760(edi_2447, Mem6012[esp_2433:word32])
	word32 esp_6035 = <invalid>
	word32 ebx_6022
	word32 edi_6024
	word32 ecx_11422
	word32 ebp_11423
	word32 esi_11424
	Mem6044[esp_6035:word32] = fn0041C910(ebx_2445, es, ds, Mem6018[esp_2433:word32], Mem6018[esp_2433 + 36<i32>:word32], out ecx_11422, out ebx_6022, out ebp_11423, out esi_11424, out edi_6024)
	Mem6046[esp_6035 - 4<i32>:word32] = 0<32>
	Mem6048[esp_6035 - 8<i32>:word32] = 3<32>
	word32 esi_11425
	Mem6070[esp_6035 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_6024, Mem6048[esp_6035 - 8<i32>:word32]), 0<32>, ebx_6022, es, ds, Mem6048[esp_6035 - 4<32>:word32], out esi_11425)
	Mem6072[esp_6035 - 8<i32>:word32] = 2<32>
	Mem6077[esp_6035 - 8<32>:word32] = fn0040F760(edi_6024, Mem6072[esp_6035 - 8<i32>:word32])
	word32 esp_6094 = <invalid>
	word32 ecx_11426
	word32 esi_11427
	Mem6103[esp_6094:word32] = fn0041C910(ebx_6022, es, ds, Mem6077[esp_6035 - 8<32>:word32], Mem6077[esp_6035 + 0x1C<32>:word32], out ecx_11426, out ebx_10222, out ebp_10221, out esi_11427, out edi_10265)
	word32 edx_11428
	word32 eax_6105 = fn0041C740(Mem6103[esp_6094:word32], Mem6103[esp_6094 + 4<i32>:word16], Mem6103[esp_6094 + 8<i32>:word32], out edx_11428)
	Mem6123[esp_6094 + 8<32>:word32] = 0x1B<32>
	Mem6145[ebx_10222 + 96<i32>:word32] = eax_6105 + fn0041C5C0(Mem6123[esp_6094 + 8<32>:word32])
	esp_10045 = esp_6094 + 0xC<32>
l00422B01:
	Mem6147[esp_2373:word32] = 1<32>
	Mem6153[esp_2373:word32] = fn0040F760(edi_2387, Mem6147[esp_2373:word32])
	word32 esp_6170 = <invalid>
	word32 ebx_6157
	word32 edi_6159
	word32 ecx_11411
	word32 ebp_11412
	word32 esi_11413
	Mem6179[esp_6170:word32] = fn0041C910(ebx_2385, es, ds, Mem6153[esp_2373:word32], Mem6153[esp_2373 + 36<i32>:word32], out ecx_11411, out ebx_6157, out ebp_11412, out esi_11413, out edi_6159)
	Mem6181[esp_6170 - 4<i32>:word32] = 0<32>
	Mem6183[esp_6170 - 8<i32>:word32] = 3<32>
	word32 esi_11414
	Mem6205[esp_6170 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_6159, Mem6183[esp_6170 - 8<i32>:word32]), 0<32>, ebx_6157, es, ds, Mem6183[esp_6170 - 4<32>:word32], out esi_11414)
	Mem6207[esp_6170 - 8<i32>:word32] = 2<32>
	Mem6212[esp_6170 - 8<32>:word32] = fn0040F760(edi_6159, Mem6207[esp_6170 - 8<i32>:word32])
	word32 esp_6229 = <invalid>
	word32 ecx_11415
	word32 esi_11416
	Mem6238[esp_6229:word32] = fn0041C910(ebx_6157, es, ds, Mem6212[esp_6170 - 8<32>:word32], Mem6212[esp_6170 + 0x1C<32>:word32], out ecx_11415, out ebx_10222, out ebp_10221, out esi_11416, out edi_10265)
	word32 edx_11417
	word32 eax_6240 = fn0041C740(Mem6238[esp_6229:word32], Mem6238[esp_6229 + 4<i32>:word16], Mem6238[esp_6229 + 8<i32>:word32], out edx_11417)
	Mem6258[esp_6229 + 8<32>:word32] = 0x1C<32>
	Mem6280[ebx_10222 + 96<i32>:word32] = eax_6240 + fn0041C5C0(Mem6258[esp_6229 + 8<32>:word32])
	esp_10045 = esp_6229 + 0xC<32>
l00422A68:
	Mem6282[esp_2313:word32] = 1<32>
	Mem6288[esp_2313:word32] = fn0040F760(edi_2327, Mem6282[esp_2313:word32])
	word32 esp_6305 = <invalid>
	word32 ebx_6292
	word32 edi_6294
	word32 ecx_11400
	word32 ebp_11401
	word32 esi_11402
	Mem6314[esp_6305:word32] = fn0041C910(ebx_2325, es, ds, Mem6288[esp_2313:word32], Mem6288[esp_2313 + 36<i32>:word32], out ecx_11400, out ebx_6292, out ebp_11401, out esi_11402, out edi_6294)
	Mem6316[esp_6305 - 4<i32>:word32] = 0<32>
	Mem6318[esp_6305 - 8<i32>:word32] = 3<32>
	word32 esi_11403
	Mem6340[esp_6305 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_6294, Mem6318[esp_6305 - 8<i32>:word32]), 0<32>, ebx_6292, es, ds, Mem6318[esp_6305 - 4<32>:word32], out esi_11403)
	Mem6342[esp_6305 - 8<i32>:word32] = 2<32>
	Mem6347[esp_6305 - 8<32>:word32] = fn0040F760(edi_6294, Mem6342[esp_6305 - 8<i32>:word32])
	word32 esp_6364 = <invalid>
	word32 ecx_11404
	word32 esi_11405
	Mem6373[esp_6364:word32] = fn0041C910(ebx_6292, es, ds, Mem6347[esp_6305 - 8<32>:word32], Mem6347[esp_6305 + 0x1C<32>:word32], out ecx_11404, out ebx_10222, out ebp_10221, out esi_11405, out edi_10265)
	word32 edx_11406
	word32 eax_6375 = fn0041C740(Mem6373[esp_6364:word32], Mem6373[esp_6364 + 4<i32>:word16], Mem6373[esp_6364 + 8<i32>:word32], out edx_11406)
	Mem6393[esp_6364 + 8<32>:word32] = 0x1D<32>
	Mem6415[ebx_10222 + 96<i32>:word32] = eax_6375 + fn0041C5C0(Mem6393[esp_6364 + 8<32>:word32])
	esp_10045 = esp_6364 + 0xC<32>
l004229D5:
	Mem6417[esp_2253:word32] = 3<32>
	Mem6423[esp_2253:word32] = fn0040F760(edi_2267, Mem6417[esp_2253:word32])
	word32 esp_6440 = <invalid>
	word32 ebx_6427
	word32 edi_6429
	word32 ecx_11387
	word32 ebp_11388
	word32 esi_11389
	Mem6449[esp_6440:word32] = fn0041C910(ebx_2265, es, ds, Mem6423[esp_2253:word32], Mem6423[esp_2253 + 36<i32>:word32], out ecx_11387, out ebx_6427, out ebp_11388, out esi_11389, out edi_6429)
	Mem6451[esp_6440 - 4<i32>:word32] = 2<32>
	Mem6457[esp_6440 - 4<i32>:word32] = fn0040F760(edi_6429, Mem6451[esp_6440 - 4<i32>:word32])
	word32 esp_6474 = <invalid>
	word32 ebx_6461
	word32 edi_6463
	word32 ecx_11390
	word32 ebp_11391
	word32 esi_11392
	Mem6483[esp_6474:word32] = fn0041C910(ebx_6427, es, ds, Mem6457[esp_6440 - 4<i32>:word32], Mem6457[esp_6440 + 32<i32>:word32], out ecx_11390, out ebx_6461, out ebp_11391, out esi_11392, out edi_6463)
	Mem6485[esp_6474 - 4<i32>:word32] = 1<32>
	Mem6491[esp_6474 - 4<i32>:word32] = fn0040F760(edi_6463, Mem6485[esp_6474 - 4<i32>:word32])
	word32 esp_6508 = <invalid>
	word32 ecx_11393
	word32 esi_11394
	Mem6517[esp_6508:word32] = fn0041C910(ebx_6461, es, ds, Mem6491[esp_6474 - 4<i32>:word32], Mem6491[esp_6474 + 32<i32>:word32], out ecx_11393, out ebx_10222, out ebp_10221, out esi_11394, out edi_10265)
	word32 ecx_11395
	word32 eax_6519 = fn0041C680(Mem6517[esp_6508:word32], Mem6517[esp_6508 + 4<i32>:word32], Mem6517[esp_6508 + 8<i32>:word32], out ecx_11395)
	Mem6537[esp_6508 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_6519
	esp_10045 = esp_6508 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem6537[esp_6508 + 8<32>:word32]) + 0x3D6<32>
l00422942:
	Mem6560[esp_2193:word32] = 3<32>
	Mem6566[esp_2193:word32] = fn0040F760(edi_2207, Mem6560[esp_2193:word32])
	word32 esp_6583 = <invalid>
	word32 ebx_6570
	word32 edi_6572
	word32 ecx_11374
	word32 ebp_11375
	word32 esi_11376
	Mem6592[esp_6583:word32] = fn0041C910(ebx_2205, es, ds, Mem6566[esp_2193:word32], Mem6566[esp_2193 + 36<i32>:word32], out ecx_11374, out ebx_6570, out ebp_11375, out esi_11376, out edi_6572)
	Mem6594[esp_6583 - 4<i32>:word32] = 2<32>
	Mem6600[esp_6583 - 4<i32>:word32] = fn0040F760(edi_6572, Mem6594[esp_6583 - 4<i32>:word32])
	word32 esp_6617 = <invalid>
	word32 ebx_6604
	word32 edi_6606
	word32 ecx_11377
	word32 ebp_11378
	word32 esi_11379
	Mem6626[esp_6617:word32] = fn0041C910(ebx_6570, es, ds, Mem6600[esp_6583 - 4<i32>:word32], Mem6600[esp_6583 + 32<i32>:word32], out ecx_11377, out ebx_6604, out ebp_11378, out esi_11379, out edi_6606)
	Mem6628[esp_6617 - 4<i32>:word32] = 1<32>
	Mem6634[esp_6617 - 4<i32>:word32] = fn0040F760(edi_6606, Mem6628[esp_6617 - 4<i32>:word32])
	word32 esp_6651 = <invalid>
	word32 ecx_11380
	word32 esi_11381
	Mem6660[esp_6651:word32] = fn0041C910(ebx_6604, es, ds, Mem6634[esp_6617 - 4<i32>:word32], Mem6634[esp_6617 + 32<i32>:word32], out ecx_11380, out ebx_10222, out ebp_10221, out esi_11381, out edi_10265)
	word32 ecx_11382
	word32 eax_6662 = fn0041C680(Mem6660[esp_6651:word32], Mem6660[esp_6651 + 4<i32>:word32], Mem6660[esp_6651 + 8<i32>:word32], out ecx_11382)
	Mem6680[esp_6651 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_6662
	esp_10045 = esp_6651 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem6680[esp_6651 + 8<32>:word32]) + 0x3D2<32>
l004228AF:
	Mem6703[esp_2133:word32] = 3<32>
	Mem6709[esp_2133:word32] = fn0040F760(edi_2147, Mem6703[esp_2133:word32])
	word32 esp_6726 = <invalid>
	word32 ebx_6713
	word32 edi_6715
	word32 ecx_11361
	word32 ebp_11362
	word32 esi_11363
	Mem6735[esp_6726:word32] = fn0041C910(ebx_2145, es, ds, Mem6709[esp_2133:word32], Mem6709[esp_2133 + 36<i32>:word32], out ecx_11361, out ebx_6713, out ebp_11362, out esi_11363, out edi_6715)
	Mem6737[esp_6726 - 4<i32>:word32] = 2<32>
	Mem6743[esp_6726 - 4<i32>:word32] = fn0040F760(edi_6715, Mem6737[esp_6726 - 4<i32>:word32])
	word32 esp_6760 = <invalid>
	word32 ebx_6747
	word32 edi_6749
	word32 ecx_11364
	word32 ebp_11365
	word32 esi_11366
	Mem6769[esp_6760:word32] = fn0041C910(ebx_6713, es, ds, Mem6743[esp_6726 - 4<i32>:word32], Mem6743[esp_6726 + 32<i32>:word32], out ecx_11364, out ebx_6747, out ebp_11365, out esi_11366, out edi_6749)
	Mem6771[esp_6760 - 4<i32>:word32] = 1<32>
	Mem6777[esp_6760 - 4<i32>:word32] = fn0040F760(edi_6749, Mem6771[esp_6760 - 4<i32>:word32])
	word32 esp_6794 = <invalid>
	word32 ecx_11367
	word32 esi_11368
	Mem6803[esp_6794:word32] = fn0041C910(ebx_6747, es, ds, Mem6777[esp_6760 - 4<i32>:word32], Mem6777[esp_6760 + 32<i32>:word32], out ecx_11367, out ebx_10222, out ebp_10221, out esi_11368, out edi_10265)
	word32 ecx_11369
	word32 eax_6805 = fn0041C680(Mem6803[esp_6794:word32], Mem6803[esp_6794 + 4<i32>:word32], Mem6803[esp_6794 + 8<i32>:word32], out ecx_11369)
	Mem6823[esp_6794 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_6805
	esp_10045 = esp_6794 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem6823[esp_6794 + 8<32>:word32]) + 0x396<32>
l0042281C:
	Mem6846[esp_2073:word32] = 3<32>
	Mem6852[esp_2073:word32] = fn0040F760(edi_2087, Mem6846[esp_2073:word32])
	word32 esp_6869 = <invalid>
	word32 ebx_6856
	word32 edi_6858
	word32 ecx_11348
	word32 ebp_11349
	word32 esi_11350
	Mem6878[esp_6869:word32] = fn0041C910(ebx_2085, es, ds, Mem6852[esp_2073:word32], Mem6852[esp_2073 + 36<i32>:word32], out ecx_11348, out ebx_6856, out ebp_11349, out esi_11350, out edi_6858)
	Mem6880[esp_6869 - 4<i32>:word32] = 2<32>
	Mem6886[esp_6869 - 4<i32>:word32] = fn0040F760(edi_6858, Mem6880[esp_6869 - 4<i32>:word32])
	word32 esp_6903 = <invalid>
	word32 ebx_6890
	word32 edi_6892
	word32 ecx_11351
	word32 ebp_11352
	word32 esi_11353
	Mem6912[esp_6903:word32] = fn0041C910(ebx_6856, es, ds, Mem6886[esp_6869 - 4<i32>:word32], Mem6886[esp_6869 + 32<i32>:word32], out ecx_11351, out ebx_6890, out ebp_11352, out esi_11353, out edi_6892)
	Mem6914[esp_6903 - 4<i32>:word32] = 1<32>
	Mem6920[esp_6903 - 4<i32>:word32] = fn0040F760(edi_6892, Mem6914[esp_6903 - 4<i32>:word32])
	word32 esp_6937 = <invalid>
	word32 ecx_11354
	word32 esi_11355
	Mem6946[esp_6937:word32] = fn0041C910(ebx_6890, es, ds, Mem6920[esp_6903 - 4<i32>:word32], Mem6920[esp_6903 + 32<i32>:word32], out ecx_11354, out ebx_10222, out ebp_10221, out esi_11355, out edi_10265)
	word32 ecx_11356
	word32 eax_6948 = fn0041C680(Mem6946[esp_6937:word32], Mem6946[esp_6937 + 4<i32>:word32], Mem6946[esp_6937 + 8<i32>:word32], out ecx_11356)
	Mem6966[esp_6937 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_6948
	esp_10045 = esp_6937 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem6966[esp_6937 + 8<32>:word32]) + 0x392<32>
l00422789:
	Mem6989[esp_2013:word32] = 3<32>
	Mem6995[esp_2013:word32] = fn0040F760(edi_2027, Mem6989[esp_2013:word32])
	word32 esp_7012 = <invalid>
	word32 ebx_6999
	word32 edi_7001
	word32 ecx_11335
	word32 ebp_11336
	word32 esi_11337
	Mem7021[esp_7012:word32] = fn0041C910(ebx_2025, es, ds, Mem6995[esp_2013:word32], Mem6995[esp_2013 + 36<i32>:word32], out ecx_11335, out ebx_6999, out ebp_11336, out esi_11337, out edi_7001)
	Mem7023[esp_7012 - 4<i32>:word32] = 2<32>
	Mem7029[esp_7012 - 4<i32>:word32] = fn0040F760(edi_7001, Mem7023[esp_7012 - 4<i32>:word32])
	word32 esp_7046 = <invalid>
	word32 ebx_7033
	word32 edi_7035
	word32 ecx_11338
	word32 ebp_11339
	word32 esi_11340
	Mem7055[esp_7046:word32] = fn0041C910(ebx_6999, es, ds, Mem7029[esp_7012 - 4<i32>:word32], Mem7029[esp_7012 + 32<i32>:word32], out ecx_11338, out ebx_7033, out ebp_11339, out esi_11340, out edi_7035)
	Mem7057[esp_7046 - 4<i32>:word32] = 1<32>
	Mem7063[esp_7046 - 4<i32>:word32] = fn0040F760(edi_7035, Mem7057[esp_7046 - 4<i32>:word32])
	word32 esp_7080 = <invalid>
	word32 ecx_11341
	word32 esi_11342
	Mem7089[esp_7080:word32] = fn0041C910(ebx_7033, es, ds, Mem7063[esp_7046 - 4<i32>:word32], Mem7063[esp_7046 + 32<i32>:word32], out ecx_11341, out ebx_10222, out ebp_10221, out esi_11342, out edi_10265)
	word32 ecx_11343
	word32 eax_7091 = fn0041C680(Mem7089[esp_7080:word32], Mem7089[esp_7080 + 4<i32>:word32], Mem7089[esp_7080 + 8<i32>:word32], out ecx_11343)
	Mem7109[esp_7080 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_7091
	esp_10045 = esp_7080 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem7109[esp_7080 + 8<32>:word32]) + 0x96<32>
l004226F6:
	Mem7132[esp_1953:word32] = 3<32>
	Mem7138[esp_1953:word32] = fn0040F760(edi_1967, Mem7132[esp_1953:word32])
	word32 esp_7155 = <invalid>
	word32 ebx_7142
	word32 edi_7144
	word32 ecx_11322
	word32 ebp_11323
	word32 esi_11324
	Mem7164[esp_7155:word32] = fn0041C910(ebx_1965, es, ds, Mem7138[esp_1953:word32], Mem7138[esp_1953 + 36<i32>:word32], out ecx_11322, out ebx_7142, out ebp_11323, out esi_11324, out edi_7144)
	Mem7166[esp_7155 - 4<i32>:word32] = 2<32>
	Mem7172[esp_7155 - 4<i32>:word32] = fn0040F760(edi_7144, Mem7166[esp_7155 - 4<i32>:word32])
	word32 esp_7189 = <invalid>
	word32 ebx_7176
	word32 edi_7178
	word32 ecx_11325
	word32 ebp_11326
	word32 esi_11327
	Mem7198[esp_7189:word32] = fn0041C910(ebx_7142, es, ds, Mem7172[esp_7155 - 4<i32>:word32], Mem7172[esp_7155 + 32<i32>:word32], out ecx_11325, out ebx_7176, out ebp_11326, out esi_11327, out edi_7178)
	Mem7200[esp_7189 - 4<i32>:word32] = 1<32>
	Mem7206[esp_7189 - 4<i32>:word32] = fn0040F760(edi_7178, Mem7200[esp_7189 - 4<i32>:word32])
	word32 esp_7223 = <invalid>
	word32 ecx_11328
	word32 esi_11329
	Mem7232[esp_7223:word32] = fn0041C910(ebx_7176, es, ds, Mem7206[esp_7189 - 4<i32>:word32], Mem7206[esp_7189 + 32<i32>:word32], out ecx_11328, out ebx_10222, out ebp_10221, out esi_11329, out edi_10265)
	word32 ecx_11330
	word32 eax_7234 = fn0041C680(Mem7232[esp_7223:word32], Mem7232[esp_7223 + 4<i32>:word32], Mem7232[esp_7223 + 8<i32>:word32], out ecx_11330)
	Mem7252[esp_7223 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_7234
	esp_10045 = esp_7223 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem7252[esp_7223 + 8<32>:word32]) + 0x92<32>
l00422665:
	Mem7275[esp_1893:word32] = 3<32>
	Mem7281[esp_1893:word32] = fn0040F760(edi_1907, Mem7275[esp_1893:word32])
	word32 esp_7298 = <invalid>
	word32 ebx_7285
	word32 edi_7287
	word32 ecx_11309
	word32 ebp_11310
	word32 esi_11311
	Mem7307[esp_7298:word32] = fn0041C910(ebx_1905, es, ds, Mem7281[esp_1893:word32], Mem7281[esp_1893 + 36<i32>:word32], out ecx_11309, out ebx_7285, out ebp_11310, out esi_11311, out edi_7287)
	Mem7309[esp_7298 - 4<i32>:word32] = 2<32>
	Mem7315[esp_7298 - 4<i32>:word32] = fn0040F760(edi_7287, Mem7309[esp_7298 - 4<i32>:word32])
	word32 esp_7332 = <invalid>
	word32 ebx_7319
	word32 edi_7321
	word32 ecx_11312
	word32 ebp_11313
	word32 esi_11314
	Mem7341[esp_7332:word32] = fn0041C910(ebx_7285, es, ds, Mem7315[esp_7298 - 4<i32>:word32], Mem7315[esp_7298 + 32<i32>:word32], out ecx_11312, out ebx_7319, out ebp_11313, out esi_11314, out edi_7321)
	Mem7343[esp_7332 - 4<i32>:word32] = 1<32>
	Mem7349[esp_7332 - 4<i32>:word32] = fn0040F760(edi_7321, Mem7343[esp_7332 - 4<i32>:word32])
	word32 esp_7366 = <invalid>
	word32 ecx_11315
	word32 esi_11316
	Mem7375[esp_7366:word32] = fn0041C910(ebx_7319, es, ds, Mem7349[esp_7332 - 4<i32>:word32], Mem7349[esp_7332 + 32<i32>:word32], out ecx_11315, out ebx_10222, out ebp_10221, out esi_11316, out edi_10265)
	word32 ecx_11317
	word32 eax_7377 = fn0041C680(Mem7375[esp_7366:word32], Mem7375[esp_7366 + 4<i32>:word32], Mem7375[esp_7366 + 8<i32>:word32], out ecx_11317)
	Mem7395[esp_7366 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_7377
	esp_10045 = esp_7366 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem7395[esp_7366 + 8<32>:word32]) + 0x16<32>
l004225D4:
	Mem7418[esp_1833:word32] = 3<32>
	Mem7424[esp_1833:word32] = fn0040F760(edi_1847, Mem7418[esp_1833:word32])
	word32 esp_7441 = <invalid>
	word32 ebx_7428
	word32 edi_7430
	word32 ecx_11296
	word32 ebp_11297
	word32 esi_11298
	Mem7450[esp_7441:word32] = fn0041C910(ebx_1845, es, ds, Mem7424[esp_1833:word32], Mem7424[esp_1833 + 36<i32>:word32], out ecx_11296, out ebx_7428, out ebp_11297, out esi_11298, out edi_7430)
	Mem7452[esp_7441 - 4<i32>:word32] = 2<32>
	Mem7458[esp_7441 - 4<i32>:word32] = fn0040F760(edi_7430, Mem7452[esp_7441 - 4<i32>:word32])
	word32 esp_7475 = <invalid>
	word32 ebx_7462
	word32 edi_7464
	word32 ecx_11299
	word32 ebp_11300
	word32 esi_11301
	Mem7484[esp_7475:word32] = fn0041C910(ebx_7428, es, ds, Mem7458[esp_7441 - 4<i32>:word32], Mem7458[esp_7441 + 32<i32>:word32], out ecx_11299, out ebx_7462, out ebp_11300, out esi_11301, out edi_7464)
	Mem7486[esp_7475 - 4<i32>:word32] = 1<32>
	Mem7492[esp_7475 - 4<i32>:word32] = fn0040F760(edi_7464, Mem7486[esp_7475 - 4<i32>:word32])
	word32 esp_7509 = <invalid>
	word32 ecx_11302
	word32 esi_11303
	Mem7518[esp_7509:word32] = fn0041C910(ebx_7462, es, ds, Mem7492[esp_7475 - 4<i32>:word32], Mem7492[esp_7475 + 32<i32>:word32], out ecx_11302, out ebx_10222, out ebp_10221, out esi_11303, out edi_10265)
	word32 ecx_11304
	word32 eax_7520 = fn0041C680(Mem7518[esp_7509:word32], Mem7518[esp_7509 + 4<i32>:word32], Mem7518[esp_7509 + 8<i32>:word32], out ecx_11304)
	Mem7538[esp_7509 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_7520
	esp_10045 = esp_7509 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem7538[esp_7509 + 8<32>:word32]) + 0x12<32>
l00422541:
	Mem7561[esp_1773:word32] = 3<32>
	Mem7567[esp_1773:word32] = fn0040F760(edi_1787, Mem7561[esp_1773:word32])
	word32 esp_7584 = <invalid>
	word32 ebx_7571
	word32 edi_7573
	word32 ecx_11283
	word32 ebp_11284
	word32 esi_11285
	Mem7593[esp_7584:word32] = fn0041C910(ebx_1785, es, ds, Mem7567[esp_1773:word32], Mem7567[esp_1773 + 36<i32>:word32], out ecx_11283, out ebx_7571, out ebp_11284, out esi_11285, out edi_7573)
	Mem7595[esp_7584 - 4<i32>:word32] = 2<32>
	Mem7601[esp_7584 - 4<i32>:word32] = fn0040F760(edi_7573, Mem7595[esp_7584 - 4<i32>:word32])
	word32 esp_7618 = <invalid>
	word32 ebx_7605
	word32 edi_7607
	word32 ecx_11286
	word32 ebp_11287
	word32 esi_11288
	Mem7627[esp_7618:word32] = fn0041C910(ebx_7571, es, ds, Mem7601[esp_7584 - 4<i32>:word32], Mem7601[esp_7584 + 32<i32>:word32], out ecx_11286, out ebx_7605, out ebp_11287, out esi_11288, out edi_7607)
	Mem7629[esp_7618 - 4<i32>:word32] = 1<32>
	Mem7635[esp_7618 - 4<i32>:word32] = fn0040F760(edi_7607, Mem7629[esp_7618 - 4<i32>:word32])
	word32 esp_7652 = <invalid>
	word32 ecx_11289
	word32 esi_11290
	Mem7661[esp_7652:word32] = fn0041C910(ebx_7605, es, ds, Mem7635[esp_7618 - 4<i32>:word32], Mem7635[esp_7618 + 32<i32>:word32], out ecx_11289, out ebx_10222, out ebp_10221, out esi_11290, out edi_10265)
	word32 ecx_11291
	word32 eax_7663 = fn0041C680(Mem7661[esp_7652:word32], Mem7661[esp_7652 + 4<i32>:word32], Mem7661[esp_7652 + 8<i32>:word32], out ecx_11291)
	Mem7681[esp_7652 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_7663
	esp_10045 = esp_7652 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem7681[esp_7652 + 8<32>:word32]) + 0x1D6<32>
l004224AE:
	Mem7704[esp_1713:word32] = 3<32>
	Mem7710[esp_1713:word32] = fn0040F760(edi_1727, Mem7704[esp_1713:word32])
	word32 esp_7727 = <invalid>
	word32 ebx_7714
	word32 edi_7716
	word32 ecx_11270
	word32 ebp_11271
	word32 esi_11272
	Mem7736[esp_7727:word32] = fn0041C910(ebx_1725, es, ds, Mem7710[esp_1713:word32], Mem7710[esp_1713 + 36<i32>:word32], out ecx_11270, out ebx_7714, out ebp_11271, out esi_11272, out edi_7716)
	Mem7738[esp_7727 - 4<i32>:word32] = 2<32>
	Mem7744[esp_7727 - 4<i32>:word32] = fn0040F760(edi_7716, Mem7738[esp_7727 - 4<i32>:word32])
	word32 esp_7761 = <invalid>
	word32 ebx_7748
	word32 edi_7750
	word32 ecx_11273
	word32 ebp_11274
	word32 esi_11275
	Mem7770[esp_7761:word32] = fn0041C910(ebx_7714, es, ds, Mem7744[esp_7727 - 4<i32>:word32], Mem7744[esp_7727 + 32<i32>:word32], out ecx_11273, out ebx_7748, out ebp_11274, out esi_11275, out edi_7750)
	Mem7772[esp_7761 - 4<i32>:word32] = 1<32>
	Mem7778[esp_7761 - 4<i32>:word32] = fn0040F760(edi_7750, Mem7772[esp_7761 - 4<i32>:word32])
	word32 esp_7795 = <invalid>
	word32 ecx_11276
	word32 esi_11277
	Mem7804[esp_7795:word32] = fn0041C910(ebx_7748, es, ds, Mem7778[esp_7761 - 4<i32>:word32], Mem7778[esp_7761 + 32<i32>:word32], out ecx_11276, out ebx_10222, out ebp_10221, out esi_11277, out edi_10265)
	word32 ecx_11278
	word32 eax_7806 = fn0041C680(Mem7804[esp_7795:word32], Mem7804[esp_7795 + 4<i32>:word32], Mem7804[esp_7795 + 8<i32>:word32], out ecx_11278)
	Mem7824[esp_7795 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_7806
	esp_10045 = esp_7795 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem7824[esp_7795 + 8<32>:word32]) + 0x1D2<32>
l00422415:
	Mem7847[esp_1653:word32] = 2<32>
	Mem7853[esp_1653:word32] = fn0040F760(edi_1667, Mem7847[esp_1653:word32])
	word32 esp_7870 = <invalid>
	word32 ebx_7857
	word32 edi_7859
	word32 ecx_11259
	word32 ebp_11260
	word32 esi_11261
	Mem7879[esp_7870:word32] = fn0041C910(ebx_1665, es, ds, Mem7853[esp_1653:word32], Mem7853[esp_1653 + 36<i32>:word32], out ecx_11259, out ebx_7857, out ebp_11260, out esi_11261, out edi_7859)
	Mem7881[esp_7870 - 4<i32>:word32] = 0<32>
	Mem7883[esp_7870 - 8<i32>:word32] = 3<32>
	word32 esi_11262
	Mem7905[esp_7870 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_7859, Mem7883[esp_7870 - 8<i32>:word32]), 0<32>, ebx_7857, es, ds, Mem7883[esp_7870 - 4<32>:word32], out esi_11262)
	Mem7907[esp_7870 - 8<i32>:word32] = 1<32>
	Mem7912[esp_7870 - 8<32>:word32] = fn0040F760(edi_7859, Mem7907[esp_7870 - 8<i32>:word32])
	word32 esp_7929 = <invalid>
	word32 ecx_11263
	word32 esi_11264
	Mem7938[esp_7929:word32] = fn0041C910(ebx_7857, es, ds, Mem7912[esp_7870 - 8<32>:word32], Mem7912[esp_7870 + 0x1C<32>:word32], out ecx_11263, out ebx_10222, out ebp_10221, out esi_11264, out edi_10265)
	word32 edx_11265
	word32 eax_7940 = fn0041C740(Mem7938[esp_7929:word32], Mem7938[esp_7929 + 4<i32>:word16], Mem7938[esp_7929 + 8<i32>:word32], out edx_11265)
	Mem7958[esp_7929 + 8<32>:word32] = 7<32>
	Mem7980[ebx_10222 + 96<i32>:word32] = eax_7940 + fn0041C5C0(Mem7958[esp_7929 + 8<32>:word32])
	esp_10045 = esp_7929 + 0xC<32>
l00422384:
	Mem7982[esp_1593:word32] = 2<32>
	Mem7988[esp_1593:word32] = fn0040F760(edi_1607, Mem7982[esp_1593:word32])
	word32 esp_8005 = <invalid>
	word32 ebx_7992
	word32 edi_7994
	word32 ecx_11246
	word32 ebp_11247
	word32 esi_11248
	Mem8014[esp_8005:word32] = fn0041C910(ebx_1605, es, ds, Mem7988[esp_1593:word32], Mem7988[esp_1593 + 36<i32>:word32], out ecx_11246, out ebx_7992, out ebp_11247, out esi_11248, out edi_7994)
	Mem8016[esp_8005 - 4<i32>:word32] = 3<32>
	Mem8022[esp_8005 - 4<i32>:word32] = fn0040F760(edi_7994, Mem8016[esp_8005 - 4<i32>:word32])
	word32 esp_8039 = <invalid>
	word32 ebx_8026
	word32 edi_8028
	word32 ecx_11249
	word32 ebp_11250
	word32 esi_11251
	Mem8048[esp_8039:word32] = fn0041C910(ebx_7992, es, ds, Mem8022[esp_8005 - 4<i32>:word32], Mem8022[esp_8005 + 32<i32>:word32], out ecx_11249, out ebx_8026, out ebp_11250, out esi_11251, out edi_8028)
	Mem8050[esp_8039 - 4<i32>:word32] = 1<32>
	Mem8056[esp_8039 - 4<i32>:word32] = fn0040F760(edi_8028, Mem8050[esp_8039 - 4<i32>:word32])
	word32 esp_8073 = <invalid>
	word32 ecx_11252
	word32 esi_11253
	Mem8082[esp_8073:word32] = fn0041C910(ebx_8026, es, ds, Mem8056[esp_8039 - 4<i32>:word32], Mem8056[esp_8039 + 32<i32>:word32], out ecx_11252, out ebx_10222, out ebp_10221, out esi_11253, out edi_10265)
	word32 ecx_11254
	word32 eax_8084 = fn0041C680(Mem8082[esp_8073:word32], Mem8082[esp_8073 + 4<i32>:word32], Mem8082[esp_8073 + 8<i32>:word32], out ecx_11254)
	Mem8102[esp_8073 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_8084
	esp_10045 = esp_8073 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem8102[esp_8073 + 8<32>:word32]) + 0x50<32>
l004222F3:
	Mem8125[esp_1533:word32] = 3<32>
	Mem8131[esp_1533:word32] = fn0040F760(edi_1547, Mem8125[esp_1533:word32])
	word32 esp_8148 = <invalid>
	word32 ebx_8135
	word32 edi_8137
	word32 ecx_11233
	word32 ebp_11234
	word32 esi_11235
	Mem8157[esp_8148:word32] = fn0041C910(ebx_1545, es, ds, Mem8131[esp_1533:word32], Mem8131[esp_1533 + 36<i32>:word32], out ecx_11233, out ebx_8135, out ebp_11234, out esi_11235, out edi_8137)
	Mem8159[esp_8148 - 4<i32>:word32] = 2<32>
	Mem8165[esp_8148 - 4<i32>:word32] = fn0040F760(edi_8137, Mem8159[esp_8148 - 4<i32>:word32])
	word32 esp_8182 = <invalid>
	word32 ebx_8169
	word32 edi_8171
	word32 ecx_11236
	word32 ebp_11237
	word32 esi_11238
	Mem8191[esp_8182:word32] = fn0041C910(ebx_8135, es, ds, Mem8165[esp_8148 - 4<i32>:word32], Mem8165[esp_8148 + 32<i32>:word32], out ecx_11236, out ebx_8169, out ebp_11237, out esi_11238, out edi_8171)
	Mem8193[esp_8182 - 4<i32>:word32] = 1<32>
	Mem8199[esp_8182 - 4<i32>:word32] = fn0040F760(edi_8171, Mem8193[esp_8182 - 4<i32>:word32])
	word32 esp_8216 = <invalid>
	word32 ecx_11239
	word32 esi_11240
	Mem8225[esp_8216:word32] = fn0041C910(ebx_8169, es, ds, Mem8199[esp_8182 - 4<i32>:word32], Mem8199[esp_8182 + 32<i32>:word32], out ecx_11239, out ebx_10222, out ebp_10221, out esi_11240, out edi_10265)
	word32 ecx_11241
	word32 eax_8227 = fn0041C680(Mem8225[esp_8216:word32], Mem8225[esp_8216 + 4<i32>:word32], Mem8225[esp_8216 + 8<i32>:word32], out ecx_11241)
	Mem8245[esp_8216 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_8227
	esp_10045 = esp_8216 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem8245[esp_8216 + 8<32>:word32]) + 0x50<32>
l00422260:
	Mem8268[esp_1473:word32] = 3<32>
	Mem8274[esp_1473:word32] = fn0040F760(edi_1487, Mem8268[esp_1473:word32])
	word32 esp_8291 = <invalid>
	word32 ebx_8278
	word32 edi_8280
	word32 ecx_11220
	word32 ebp_11221
	word32 esi_11222
	Mem8300[esp_8291:word32] = fn0041C910(ebx_1485, es, ds, Mem8274[esp_1473:word32], Mem8274[esp_1473 + 36<i32>:word32], out ecx_11220, out ebx_8278, out ebp_11221, out esi_11222, out edi_8280)
	Mem8302[esp_8291 - 4<i32>:word32] = 2<32>
	Mem8308[esp_8291 - 4<i32>:word32] = fn0040F760(edi_8280, Mem8302[esp_8291 - 4<i32>:word32])
	word32 esp_8325 = <invalid>
	word32 ebx_8312
	word32 edi_8314
	word32 ecx_11223
	word32 ebp_11224
	word32 esi_11225
	Mem8334[esp_8325:word32] = fn0041C910(ebx_8278, es, ds, Mem8308[esp_8291 - 4<i32>:word32], Mem8308[esp_8291 + 32<i32>:word32], out ecx_11223, out ebx_8312, out ebp_11224, out esi_11225, out edi_8314)
	Mem8336[esp_8325 - 4<i32>:word32] = 1<32>
	Mem8342[esp_8325 - 4<i32>:word32] = fn0040F760(edi_8314, Mem8336[esp_8325 - 4<i32>:word32])
	word32 esp_8359 = <invalid>
	word32 ecx_11226
	word32 esi_11227
	Mem8368[esp_8359:word32] = fn0041C910(ebx_8312, es, ds, Mem8342[esp_8325 - 4<i32>:word32], Mem8342[esp_8325 + 32<i32>:word32], out ecx_11226, out ebx_10222, out ebp_10221, out esi_11227, out edi_10265)
	word32 ecx_11228
	word32 eax_8370 = fn0041C680(Mem8368[esp_8359:word32], Mem8368[esp_8359 + 4<i32>:word32], Mem8368[esp_8359 + 8<i32>:word32], out ecx_11228)
	Mem8388[esp_8359 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_8370
	esp_10045 = esp_8359 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem8388[esp_8359 + 8<32>:word32]) + 0x214<32>
l004221DD:
	Mem8411[esp_1413:word32] = 0<32>
	Mem8413[esp_1413 - 4<i32>:word32] = 2<32>
	Mem8419[esp_1413 - 4<i32>:word32] = fn0040F760(edi_1427, Mem8413[esp_1413 - 4<i32>:word32])
	word32 esp_8436 = <invalid>
	word32 ebx_8423
	word32 edi_8425
	word32 ecx_11210
	word32 ebp_11211
	word32 esi_11212
	Mem8445[esp_8436:word32] = fn0041C910(ebx_1425, es, ds, Mem8419[esp_1413 - 4<i32>:word32], Mem8419[esp_1413 + 32<i32>:word32], out ecx_11210, out ebx_8423, out ebp_11211, out esi_11212, out edi_8425)
	Mem8447[esp_8436 - 4<i32>:word32] = 1<32>
	Mem8453[esp_8436 - 4<i32>:word32] = fn0040F760(edi_8425, Mem8447[esp_8436 - 4<i32>:word32])
	word32 esp_8470 = <invalid>
	word32 ecx_11213
	word32 esi_11214
	Mem8479[esp_8470:word32] = fn0041C910(ebx_8423, es, ds, Mem8453[esp_8436 - 4<i32>:word32], Mem8453[esp_8436 + 32<i32>:word32], out ecx_11213, out ebx_10222, out ebp_10221, out esi_11214, out edi_10265)
	word32 ecx_11215
	word32 eax_8481 = fn0041C680(Mem8479[esp_8470:word32], Mem8479[esp_8470 + 4<i32>:word32], Mem8479[esp_8470 + 8<i32>:word32], out ecx_11215)
	Mem8499[esp_8470 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_8481
	esp_10045 = esp_8470 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem8499[esp_8470 + 8<32>:word32]) + 0xD0<32>
l0042215A:
	Mem8522[esp_1353:word32] = 0<32>
	Mem8524[esp_1353 - 4<i32>:word32] = 2<32>
	Mem8530[esp_1353 - 4<i32>:word32] = fn0040F760(edi_1367, Mem8524[esp_1353 - 4<i32>:word32])
	word32 esp_8547 = <invalid>
	word32 ebx_8534
	word32 edi_8536
	word32 ecx_11200
	word32 ebp_11201
	word32 esi_11202
	Mem8556[esp_8547:word32] = fn0041C910(ebx_1365, es, ds, Mem8530[esp_1353 - 4<i32>:word32], Mem8530[esp_1353 + 32<i32>:word32], out ecx_11200, out ebx_8534, out ebp_11201, out esi_11202, out edi_8536)
	Mem8558[esp_8547 - 4<i32>:word32] = 1<32>
	Mem8564[esp_8547 - 4<i32>:word32] = fn0040F760(edi_8536, Mem8558[esp_8547 - 4<i32>:word32])
	word32 esp_8581 = <invalid>
	word32 ecx_11203
	word32 esi_11204
	Mem8590[esp_8581:word32] = fn0041C910(ebx_8534, es, ds, Mem8564[esp_8547 - 4<i32>:word32], Mem8564[esp_8547 + 32<i32>:word32], out ecx_11203, out ebx_10222, out ebp_10221, out esi_11204, out edi_10265)
	word32 ecx_11205
	word32 eax_8592 = fn0041C680(Mem8590[esp_8581:word32], Mem8590[esp_8581 + 4<i32>:word32], Mem8590[esp_8581 + 8<i32>:word32], out ecx_11205)
	Mem8610[esp_8581 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_8592
	esp_10045 = esp_8581 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem8610[esp_8581 + 8<32>:word32]) + 0x190<32>
l004220D7:
	Mem8633[esp_1293:word32] = 0<32>
	Mem8635[esp_1293 - 4<i32>:word32] = 2<32>
	Mem8641[esp_1293 - 4<i32>:word32] = fn0040F760(edi_1307, Mem8635[esp_1293 - 4<i32>:word32])
	word32 esp_8658 = <invalid>
	word32 ebx_8645
	word32 edi_8647
	word32 ecx_11190
	word32 ebp_11191
	word32 esi_11192
	Mem8667[esp_8658:word32] = fn0041C910(ebx_1305, es, ds, Mem8641[esp_1293 - 4<i32>:word32], Mem8641[esp_1293 + 32<i32>:word32], out ecx_11190, out ebx_8645, out ebp_11191, out esi_11192, out edi_8647)
	Mem8669[esp_8658 - 4<i32>:word32] = 1<32>
	Mem8675[esp_8658 - 4<i32>:word32] = fn0040F760(edi_8647, Mem8669[esp_8658 - 4<i32>:word32])
	word32 esp_8692 = <invalid>
	word32 ecx_11193
	word32 esi_11194
	Mem8701[esp_8692:word32] = fn0041C910(ebx_8645, es, ds, Mem8675[esp_8658 - 4<i32>:word32], Mem8675[esp_8658 + 32<i32>:word32], out ecx_11193, out ebx_10222, out ebp_10221, out esi_11194, out edi_10265)
	word32 ecx_11195
	word32 eax_8703 = fn0041C680(Mem8701[esp_8692:word32], Mem8701[esp_8692 + 4<i32>:word32], Mem8701[esp_8692 + 8<i32>:word32], out ecx_11195)
	Mem8721[esp_8692 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_8703
	esp_10045 = esp_8692 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem8721[esp_8692 + 8<32>:word32]) + 0x194<32>
l00422054:
	Mem8744[esp_1233:word32] = 0<32>
	Mem8746[esp_1233 - 4<i32>:word32] = 2<32>
	Mem8752[esp_1233 - 4<i32>:word32] = fn0040F760(edi_1247, Mem8746[esp_1233 - 4<i32>:word32])
	word32 esp_8769 = <invalid>
	word32 ebx_8756
	word32 edi_8758
	word32 ecx_11180
	word32 ebp_11181
	word32 esi_11182
	Mem8778[esp_8769:word32] = fn0041C910(ebx_1245, es, ds, Mem8752[esp_1233 - 4<i32>:word32], Mem8752[esp_1233 + 32<i32>:word32], out ecx_11180, out ebx_8756, out ebp_11181, out esi_11182, out edi_8758)
	Mem8780[esp_8769 - 4<i32>:word32] = 1<32>
	Mem8786[esp_8769 - 4<i32>:word32] = fn0040F760(edi_8758, Mem8780[esp_8769 - 4<i32>:word32])
	word32 esp_8803 = <invalid>
	word32 ecx_11183
	word32 esi_11184
	Mem8812[esp_8803:word32] = fn0041C910(ebx_8756, es, ds, Mem8786[esp_8769 - 4<i32>:word32], Mem8786[esp_8769 + 32<i32>:word32], out ecx_11183, out ebx_10222, out ebp_10221, out esi_11184, out edi_10265)
	word32 ecx_11185
	word32 eax_8814 = fn0041C680(Mem8812[esp_8803:word32], Mem8812[esp_8803 + 4<i32>:word32], Mem8812[esp_8803 + 8<i32>:word32], out ecx_11185)
	Mem8832[esp_8803 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_8814
	esp_10045 = esp_8803 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem8832[esp_8803 + 8<32>:word32]) + 0x1D0<32>
l00421FD1:
	Mem8855[esp_1173:word32] = 0<32>
	Mem8857[esp_1173 - 4<i32>:word32] = 2<32>
	Mem8863[esp_1173 - 4<i32>:word32] = fn0040F760(edi_1187, Mem8857[esp_1173 - 4<i32>:word32])
	word32 esp_8880 = <invalid>
	word32 ebx_8867
	word32 edi_8869
	word32 ecx_11170
	word32 ebp_11171
	word32 esi_11172
	Mem8889[esp_8880:word32] = fn0041C910(ebx_1185, es, ds, Mem8863[esp_1173 - 4<i32>:word32], Mem8863[esp_1173 + 32<i32>:word32], out ecx_11170, out ebx_8867, out ebp_11171, out esi_11172, out edi_8869)
	Mem8891[esp_8880 - 4<i32>:word32] = 1<32>
	Mem8897[esp_8880 - 4<i32>:word32] = fn0040F760(edi_8869, Mem8891[esp_8880 - 4<i32>:word32])
	word32 esp_8914 = <invalid>
	word32 ecx_11173
	word32 esi_11174
	Mem8923[esp_8914:word32] = fn0041C910(ebx_8867, es, ds, Mem8897[esp_8880 - 4<i32>:word32], Mem8897[esp_8880 + 32<i32>:word32], out ecx_11173, out ebx_10222, out ebp_10221, out esi_11174, out edi_10265)
	word32 ecx_11175
	word32 eax_8925 = fn0041C680(Mem8923[esp_8914:word32], Mem8923[esp_8914 + 4<i32>:word32], Mem8923[esp_8914 + 8<i32>:word32], out ecx_11175)
	Mem8943[esp_8914 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_8925
	esp_10045 = esp_8914 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem8943[esp_8914 + 8<32>:word32]) + 0x1D4<32>
l00421F3E:
	Mem8966[esp_1113:word32] = 2<32>
	Mem8972[esp_1113:word32] = fn0040F760(edi_1127, Mem8966[esp_1113:word32])
	word32 esp_8989 = <invalid>
	word32 ebx_8976
	word32 edi_8978
	word32 ecx_11157
	word32 ebp_11158
	word32 esi_11159
	Mem8998[esp_8989:word32] = fn0041C910(ebx_1125, es, ds, Mem8972[esp_1113:word32], Mem8972[esp_1113 + 36<i32>:word32], out ecx_11157, out ebx_8976, out ebp_11158, out esi_11159, out edi_8978)
	Mem9000[esp_8989 - 4<i32>:word32] = 3<32>
	Mem9006[esp_8989 - 4<i32>:word32] = fn0040F760(edi_8978, Mem9000[esp_8989 - 4<i32>:word32])
	word32 esp_9023 = <invalid>
	word32 ebx_9010
	word32 edi_9012
	word32 ecx_11160
	word32 ebp_11161
	word32 esi_11162
	Mem9032[esp_9023:word32] = fn0041C910(ebx_8976, es, ds, Mem9006[esp_8989 - 4<i32>:word32], Mem9006[esp_8989 + 32<i32>:word32], out ecx_11160, out ebx_9010, out ebp_11161, out esi_11162, out edi_9012)
	Mem9034[esp_9023 - 4<i32>:word32] = 1<32>
	Mem9040[esp_9023 - 4<i32>:word32] = fn0040F760(edi_9012, Mem9034[esp_9023 - 4<i32>:word32])
	word32 esp_9057 = <invalid>
	word32 ecx_11163
	word32 esi_11164
	Mem9066[esp_9057:word32] = fn0041C910(ebx_9010, es, ds, Mem9040[esp_9023 - 4<i32>:word32], Mem9040[esp_9023 + 32<i32>:word32], out ecx_11163, out ebx_10222, out ebp_10221, out esi_11164, out edi_10265)
	word32 ecx_11165
	word32 eax_9068 = fn0041C680(Mem9066[esp_9057:word32], Mem9066[esp_9057 + 4<i32>:word32], Mem9066[esp_9057 + 8<i32>:word32], out ecx_11165)
	Mem9086[esp_9057 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_9068
	esp_10045 = esp_9057 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem9086[esp_9057 + 8<32>:word32]) + 0x110<32>
l00421EAB:
	Mem9109[esp_1053:word32] = 3<32>
	Mem9115[esp_1053:word32] = fn0040F760(edi_1067, Mem9109[esp_1053:word32])
	word32 esp_9132 = <invalid>
	word32 ebx_9119
	word32 edi_9121
	word32 ecx_11144
	word32 ebp_11145
	word32 esi_11146
	Mem9141[esp_9132:word32] = fn0041C910(ebx_1065, es, ds, Mem9115[esp_1053:word32], Mem9115[esp_1053 + 36<i32>:word32], out ecx_11144, out ebx_9119, out ebp_11145, out esi_11146, out edi_9121)
	Mem9143[esp_9132 - 4<i32>:word32] = 2<32>
	Mem9149[esp_9132 - 4<i32>:word32] = fn0040F760(edi_9121, Mem9143[esp_9132 - 4<i32>:word32])
	word32 esp_9166 = <invalid>
	word32 ebx_9153
	word32 edi_9155
	word32 ecx_11147
	word32 ebp_11148
	word32 esi_11149
	Mem9175[esp_9166:word32] = fn0041C910(ebx_9119, es, ds, Mem9149[esp_9132 - 4<i32>:word32], Mem9149[esp_9132 + 32<i32>:word32], out ecx_11147, out ebx_9153, out ebp_11148, out esi_11149, out edi_9155)
	Mem9177[esp_9166 - 4<i32>:word32] = 1<32>
	Mem9183[esp_9166 - 4<i32>:word32] = fn0040F760(edi_9155, Mem9177[esp_9166 - 4<i32>:word32])
	word32 esp_9200 = <invalid>
	word32 ecx_11150
	word32 esi_11151
	Mem9209[esp_9200:word32] = fn0041C910(ebx_9153, es, ds, Mem9183[esp_9166 - 4<i32>:word32], Mem9183[esp_9166 + 32<i32>:word32], out ecx_11150, out ebx_10222, out ebp_10221, out esi_11151, out edi_10265)
	word32 ecx_11152
	word32 eax_9211 = fn0041C680(Mem9209[esp_9200:word32], Mem9209[esp_9200 + 4<i32>:word32], Mem9209[esp_9200 + 8<i32>:word32], out ecx_11152)
	Mem9229[esp_9200 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_9211
	esp_10045 = esp_9200 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem9229[esp_9200 + 8<32>:word32]) + 0x110<32>
l00421E18:
	Mem9252[esp_993:word32] = 3<32>
	Mem9258[esp_993:word32] = fn0040F760(edi_1007, Mem9252[esp_993:word32])
	word32 esp_9275 = <invalid>
	word32 ebx_9262
	word32 edi_9264
	word32 ecx_11131
	word32 ebp_11132
	word32 esi_11133
	Mem9284[esp_9275:word32] = fn0041C910(ebx_1005, es, ds, Mem9258[esp_993:word32], Mem9258[esp_993 + 36<i32>:word32], out ecx_11131, out ebx_9262, out ebp_11132, out esi_11133, out edi_9264)
	Mem9286[esp_9275 - 4<i32>:word32] = 2<32>
	Mem9292[esp_9275 - 4<i32>:word32] = fn0040F760(edi_9264, Mem9286[esp_9275 - 4<i32>:word32])
	word32 esp_9309 = <invalid>
	word32 ebx_9296
	word32 edi_9298
	word32 ecx_11134
	word32 ebp_11135
	word32 esi_11136
	Mem9318[esp_9309:word32] = fn0041C910(ebx_9262, es, ds, Mem9292[esp_9275 - 4<i32>:word32], Mem9292[esp_9275 + 32<i32>:word32], out ecx_11134, out ebx_9296, out ebp_11135, out esi_11136, out edi_9298)
	Mem9320[esp_9309 - 4<i32>:word32] = 1<32>
	Mem9326[esp_9309 - 4<i32>:word32] = fn0040F760(edi_9298, Mem9320[esp_9309 - 4<i32>:word32])
	word32 esp_9343 = <invalid>
	word32 ecx_11137
	word32 esi_11138
	Mem9352[esp_9343:word32] = fn0041C910(ebx_9296, es, ds, Mem9326[esp_9309 - 4<i32>:word32], Mem9326[esp_9309 + 32<i32>:word32], out ecx_11137, out ebx_10222, out ebp_10221, out esi_11138, out edi_10265)
	word32 ecx_11139
	word32 eax_9354 = fn0041C680(Mem9352[esp_9343:word32], Mem9352[esp_9343 + 4<i32>:word32], Mem9352[esp_9343 + 8<i32>:word32], out ecx_11139)
	Mem9372[esp_9343 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_9354
	esp_10045 = esp_9343 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem9372[esp_9343 + 8<32>:word32]) + 0x114<32>
l00421D87:
	Mem9395[esp_933:word32] = 2<32>
	Mem9401[esp_933:word32] = fn0040F760(edi_947, Mem9395[esp_933:word32])
	word32 esp_9418 = <invalid>
	word32 ebx_9405
	word32 edi_9407
	word32 ecx_11118
	word32 ebp_11119
	word32 esi_11120
	Mem9427[esp_9418:word32] = fn0041C910(ebx_945, es, ds, Mem9401[esp_933:word32], Mem9401[esp_933 + 36<i32>:word32], out ecx_11118, out ebx_9405, out ebp_11119, out esi_11120, out edi_9407)
	Mem9429[esp_9418 - 4<i32>:word32] = 3<32>
	Mem9435[esp_9418 - 4<i32>:word32] = fn0040F760(edi_9407, Mem9429[esp_9418 - 4<i32>:word32])
	word32 esp_9452 = <invalid>
	word32 ebx_9439
	word32 edi_9441
	word32 ecx_11121
	word32 ebp_11122
	word32 esi_11123
	Mem9461[esp_9452:word32] = fn0041C910(ebx_9405, es, ds, Mem9435[esp_9418 - 4<i32>:word32], Mem9435[esp_9418 + 32<i32>:word32], out ecx_11121, out ebx_9439, out ebp_11122, out esi_11123, out edi_9441)
	Mem9463[esp_9452 - 4<i32>:word32] = 1<32>
	Mem9469[esp_9452 - 4<i32>:word32] = fn0040F760(edi_9441, Mem9463[esp_9452 - 4<i32>:word32])
	word32 esp_9486 = <invalid>
	word32 ecx_11124
	word32 esi_11125
	Mem9495[esp_9486:word32] = fn0041C910(ebx_9439, es, ds, Mem9469[esp_9452 - 4<i32>:word32], Mem9469[esp_9452 + 32<i32>:word32], out ecx_11124, out ebx_10222, out ebp_10221, out esi_11125, out edi_10265)
	word32 ecx_11126
	word32 eax_9497 = fn0041C680(Mem9495[esp_9486:word32], Mem9495[esp_9486 + 4<i32>:word32], Mem9495[esp_9486 + 8<i32>:word32], out ecx_11126)
	Mem9515[esp_9486 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_9497
	esp_10045 = esp_9486 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem9515[esp_9486 + 8<32>:word32]) + 0x10<32>
l00421CF6:
	Mem9538[esp_873:word32] = 3<32>
	Mem9544[esp_873:word32] = fn0040F760(edi_887, Mem9538[esp_873:word32])
	word32 esp_9561 = <invalid>
	word32 ebx_9548
	word32 edi_9550
	word32 ecx_11105
	word32 ebp_11106
	word32 esi_11107
	Mem9570[esp_9561:word32] = fn0041C910(ebx_885, es, ds, Mem9544[esp_873:word32], Mem9544[esp_873 + 36<i32>:word32], out ecx_11105, out ebx_9548, out ebp_11106, out esi_11107, out edi_9550)
	Mem9572[esp_9561 - 4<i32>:word32] = 2<32>
	Mem9578[esp_9561 - 4<i32>:word32] = fn0040F760(edi_9550, Mem9572[esp_9561 - 4<i32>:word32])
	word32 esp_9595 = <invalid>
	word32 ebx_9582
	word32 edi_9584
	word32 ecx_11108
	word32 ebp_11109
	word32 esi_11110
	Mem9604[esp_9595:word32] = fn0041C910(ebx_9548, es, ds, Mem9578[esp_9561 - 4<i32>:word32], Mem9578[esp_9561 + 32<i32>:word32], out ecx_11108, out ebx_9582, out ebp_11109, out esi_11110, out edi_9584)
	Mem9606[esp_9595 - 4<i32>:word32] = 1<32>
	Mem9612[esp_9595 - 4<i32>:word32] = fn0040F760(edi_9584, Mem9606[esp_9595 - 4<i32>:word32])
	word32 esp_9629 = <invalid>
	word32 ecx_11111
	word32 esi_11112
	Mem9638[esp_9629:word32] = fn0041C910(ebx_9582, es, ds, Mem9612[esp_9595 - 4<i32>:word32], Mem9612[esp_9595 + 32<i32>:word32], out ecx_11111, out ebx_10222, out ebp_10221, out esi_11112, out edi_10265)
	word32 ecx_11113
	word32 eax_9640 = fn0041C680(Mem9638[esp_9629:word32], Mem9638[esp_9629 + 4<i32>:word32], Mem9638[esp_9629 + 8<i32>:word32], out ecx_11113)
	Mem9658[esp_9629 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_9640
	esp_10045 = esp_9629 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem9658[esp_9629 + 8<32>:word32]) + 0x10<32>
l00421C65:
	Mem9681[esp_813:word32] = 3<32>
	Mem9687[esp_813:word32] = fn0040F760(edi_827, Mem9681[esp_813:word32])
	word32 esp_9704 = <invalid>
	word32 ebx_9691
	word32 edi_9693
	word32 ecx_11092
	word32 ebp_11093
	word32 esi_11094
	Mem9713[esp_9704:word32] = fn0041C910(ebx_825, es, ds, Mem9687[esp_813:word32], Mem9687[esp_813 + 36<i32>:word32], out ecx_11092, out ebx_9691, out ebp_11093, out esi_11094, out edi_9693)
	Mem9715[esp_9704 - 4<i32>:word32] = 2<32>
	Mem9721[esp_9704 - 4<i32>:word32] = fn0040F760(edi_9693, Mem9715[esp_9704 - 4<i32>:word32])
	word32 esp_9738 = <invalid>
	word32 ebx_9725
	word32 edi_9727
	word32 ecx_11095
	word32 ebp_11096
	word32 esi_11097
	Mem9747[esp_9738:word32] = fn0041C910(ebx_9691, es, ds, Mem9721[esp_9704 - 4<i32>:word32], Mem9721[esp_9704 + 32<i32>:word32], out ecx_11095, out ebx_9725, out ebp_11096, out esi_11097, out edi_9727)
	Mem9749[esp_9738 - 4<i32>:word32] = 1<32>
	Mem9755[esp_9738 - 4<i32>:word32] = fn0040F760(edi_9727, Mem9749[esp_9738 - 4<i32>:word32])
	word32 esp_9772 = <invalid>
	word32 ecx_11098
	word32 esi_11099
	Mem9781[esp_9772:word32] = fn0041C910(ebx_9725, es, ds, Mem9755[esp_9738 - 4<i32>:word32], Mem9755[esp_9738 + 32<i32>:word32], out ecx_11098, out ebx_10222, out ebp_10221, out esi_11099, out edi_10265)
	word32 ecx_11100
	word32 eax_9783 = fn0041C680(Mem9781[esp_9772:word32], Mem9781[esp_9772 + 4<i32>:word32], Mem9781[esp_9772 + 8<i32>:word32], out ecx_11100)
	Mem9801[esp_9772 + 8<32>:word32] = 0x1F<32>
	esi_3692 = eax_9783
	esp_10045 = esp_9772 + 0xC<32>
	eax_3710 = fn0041C5C0(Mem9801[esp_9772 + 8<32>:word32]) + 0x14<32>
l00423649:
	eax_10263 = eax_3710 + esi_3692
l00421BDC:
	Mem9828[esp_753:word32] = 0<32>
	Mem9830[esp_753 - 4<i32>:word32] = 0<32>
	Mem9832[esp_753 - 8<i32>:word32] = 2<32>
	esp_9831 = esp_753 - 8<i32>
l00421B6B:
	Mem9834[esp_693:word32] = 2<32>
	Mem9840[esp_693:word32] = fn0040F760(edi_707, Mem9834[esp_693:word32])
	word32 esp_9857 = <invalid>
	word32 ecx_11077
	word32 ebp_11078
	word32 esi_11079
	Mem9866[esp_9857:word32] = fn0041C910(ebx_705, es, ds, Mem9840[esp_693:word32], Mem9840[esp_693 + 36<i32>:word32], out ecx_11077, out ebx_765, out ebp_11078, out esi_11079, out edi_767)
	Mem9868[esp_9857 - 4<i32>:word32] = 0<32>
	Mem9870[esp_9857 - 8<i32>:word32] = 3<32>
	esp_9888 = esp_9857
	word32 esi_11080
	eax_9893 = CONVERT(SLICE(-fn00403C30(fn0040F760(edi_767, Mem9870[esp_9857 - 8<i32>:word32]), 0<32>, ebx_765, es, ds, Mem9870[esp_9857 - 4<32>:word32], out esi_11080), word16, 0), word16, word32)
l00421B0F:
	Mem9895[esp_633:word32] = 2<32>
	Mem9901[esp_633:word32] = fn0040F760(edi_647, Mem9895[esp_633:word32])
	word32 esp_9918 = <invalid>
	word32 ecx_11069
	word32 ebp_11070
	word32 esi_11071
	Mem9927[esp_9918:word32] = fn0041C910(ebx_645, es, ds, Mem9901[esp_633:word32], Mem9901[esp_633 + 36<i32>:word32], out ecx_11069, out ebx_765, out ebp_11070, out esi_11071, out edi_767)
	Mem9929[esp_9918 - 4<i32>:word32] = 0<32>
	Mem9931[esp_9918 - 8<i32>:word32] = 3<32>
	esp_9831 = esp_9918 - 8<i32>
l00421BE2:
	word32 esp_9938 = esp_9831 + 4<32>
	word32 esi_11072
	eax_9893 = fn00403C30(fn0040F760(edi_767, Mem9935[esp_9831:word32]), 0<32>, ebx_765, es, ds, Mem9935[esp_9938:word32], out esi_11072)
	esp_9888 = esp_9938 + 4<32>
l00421BF5:
	word32 esp_9962 = esp_9888 - 4<i32>
	Mem9964[esp_9962:word32] = eax_9893
	Mem9966[esp_9962 - 4<i32>:word32] = 1<32>
	Mem9973[esp_9962 - 4<i32>:word32] = fn0040F760(edi_767, Mem9966[esp_9962 - 4<i32>:word32])
	word32 esp_9997 = <invalid>
	word32 ecx_11081
	word32 esi_11082
	Mem10006[esp_9997:word32] = fn0041C910(ebx_765, es, ds, Mem9973[esp_9962 - 4<i32>:word32], Mem9973[esp_9962 + 32<i32>:word32], out ecx_11081, out ebx_10222, out ebp_10221, out esi_11082, out edi_10265)
	word32 edx_11083
	word32 eax_10008 = fn0041C740(Mem10006[esp_9997:word32], Mem10006[esp_9997 + 4<i32>:word16], Mem10006[esp_9997 + 8<i32>:word32], out edx_11083)
	Mem10026[esp_9997 + 8<32>:word32] = 0xE<32>
	Mem10048[ebx_10222 + 96<i32>:word32] = eax_10008 + fn0041C5C0(Mem10026[esp_9997 + 8<32>:word32])
	esp_10045 = esp_9997 + 0xC<32>
l00421AB1:
	word128 xmm0_10052 = fn00427210()
	xmm0_10056 = SEQ(SLICE(xmm0_10052, word64, 64), SLICE(xmm0_10052, real64, 0) * Mem581[0x00432E80<p32>:real64])
l00421A41:
	word128 xmm0_10060 = fn00427210()
	xmm0_10064 = SEQ(SLICE(xmm0_10060, word64, 64), SLICE(xmm0_10060, real64, 0) * Mem511[0x00432E98<p32>:real64])
l004219D1:
	word128 xmm0_10068 = fn00427210()
	xmm0_10056 = SEQ(SLICE(xmm0_10068, word64, 64), SLICE(xmm0_10068, real64, 0) * Mem441[0x00432E98<p32>:real64])
l0042192E:
	word128 xmm0_10076 = fn00427210()
	xmm0_10064 = SEQ(SLICE(xmm0_10076, word64, 64), SLICE(xmm0_10076, real64, 0) * Mem371[0x00432EA0<p32>:real64])
l00421943:
	word32 ecx_11056
	word32 edx_11057
	Mem10100[ebp_10097 - 24<i32>:word32] = fn0042D911(xmm0_10064, out ecx_11056, out edx_11057)
	word32 edx_10102 = Mem10100[Mem10100[ebp_10097 + 8<i32>:word32]:word32]
	word32 esp_10105 = esp_10104 - 4<i32>
	Mem10106[esp_10105:word32] = edx_10102 + 48<i32>
	word32 esp_10130 = <invalid>
	word32 edi_10119
	word32 ecx_11058
	word32 esi_11059
	Mem10139[esp_10130:word32] = fn0041C910(edx_10102 + 24<i32>, es, ds, Mem10106[esp_10105:word32], Mem10106[esp_10105 + 36<i32>:word32], out ecx_11058, out ebx_10117, out ebp_10116, out esi_11059, out edi_10119)
	Mem10141[esp_10130 - 4<i32>:word32] = 0<32>
	esp_10155 = esp_10130
	word32 esi_11060
	eax_10160 = CONVERT(SLICE(-fn00403C30(edi_10119, 0<32>, ebx_10117, es, ds, Mem10141[esp_10130 - 4<i32>:word32], out esi_11060), word16, 0), word16, word32)
l004218BE:
	word128 xmm0_10164 = fn00427210()
	xmm0_10056 = SEQ(SLICE(xmm0_10164, word64, 64), SLICE(xmm0_10164, real64, 0) * Mem301[0x00432EA0<p32>:real64])
l00421818:
	word128 xmm0_10172 = fn00427210()
	word32 ecx_11017
	word32 edx_11018
	fn0042D911(SEQ(SLICE(xmm0_10172, word64, 64), SLICE(xmm0_10172, real64, 0) * Mem231[0x00432EA8<p32>:real64]), out ecx_11017, out edx_11018)
	word32 eax_10193 = Mem231[ebp_233 + 8<i32>:word32]
	Mem10195[esp_223 - 4<i32>:word32] = 0<32>
	Mem10197[esp_223 - 8<i32>:word32] = 0<32>
	word32 esi_10206
	Mem10217[esp_223 - 8<32>:word32] = fn00403C30(Mem10197[eax_10193:word32] + 48<i32>, 0<32>, ebx_234, es, ds, Mem10197[esp_223 - 8<i32>:word32], out esi_10206)
	Mem10219[esp_223 - 0xC<32>:word32] = esi_10206
	word32 esp_10235 = <invalid>
	word32 edi_10224
	word32 ecx_11019
	word32 esi_11020
	Mem10244[esp_10235:word32] = fn0041C910(ebx_234, es, ds, Mem10219[esp_223 - 0xC<32>:word32], Mem10219[esp_223 + 0x18<32>:word32], out ecx_11019, out ebx_10222, out ebp_10221, out esi_11020, out edi_10224)
	word32 edx_11021
	eax_10263 = fn0041C740(Mem10244[esp_10235:word32], Mem10244[esp_10235 + 4<i32>:word16], Mem10244[esp_10235 + 8<i32>:word32], out edx_11021) + edi_10224
	esp_10045 = esp_10235 + 0xC<32>
	edi_10265 = Mem10244[ebp_10221 + 8<i32>:word32]
l0042175B:
	word128 xmm0_10269 = fn00427210()
	word32 ecx_10993
	word32 edx_10994
	Mem10290[ebp_163 - 24<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_10269, word64, 64), SLICE(xmm0_10269, real64, 0) * Mem161[0x00432EA8<p32>:real64]), out ecx_10993, out edx_10994)
	word32 edx_10292 = Mem10290[Mem10290[ebp_163 + 8<i32>:word32]:word32]
	Mem10295[esp_153 - 4<i32>:word32] = edx_10292 + 48<i32>
	word32 esp_10313 = <invalid>
	word32 ebp_10299
	word32 ebx_10300
	word32 edi_10302
	word32 ecx_10995
	word32 esi_10996
	Mem10322[esp_10313:word32] = fn0041C910(edx_10292 + 24<i32>, es, ds, Mem10295[esp_153 - 4<i32>:word32], Mem10295[esp_153 + 32<i32>:word32], out ecx_10995, out ebx_10300, out ebp_10299, out esi_10996, out edi_10302)
	Mem10324[esp_10313 - 4<i32>:word32] = 0<32>
	word32 esi_10997
	Mem10345[esp_10313 - 4<i32>:word32] = CONVERT(SLICE(-fn00403C30(edi_10302, 0<32>, ebx_10300, es, ds, Mem10324[esp_10313 - 4<i32>:word32], out esi_10997), word16, 0), word16, word32)
	Mem10347[esp_10313 - 8<i32>:word32] = ebx_10300
	word32 esp_10365 = <invalid>
	word32 ecx_10998
	word32 esi_10999
	word32 edi_11000
	Mem10374[esp_10365:word32] = fn0041C910(Mem10347[ebp_10299 - 20<i32>:word32], es, ds, Mem10347[esp_10313 - 8<i32>:word32], Mem10347[esp_10313 + 28<i32>:word32], out ecx_10998, out ebx_10222, out ebp_10221, out esi_10999, out edi_11000)
	word32 edx_11001
	eax_10263 = fn0041C740(Mem10374[esp_10365:word32], Mem10374[esp_10365 + 4<i32>:word16], Mem10374[esp_10365 + 8<i32>:word32], out edx_11001) + Mem10374[ebp_10221 - 24<i32>:word32]
	esp_10045 = esp_10365 + 0xC<32>
	edi_10265 = Mem10374[ebp_10221 + 8<i32>:word32]
l004216A3:
	word128 xmm0_10399 = fn00427210()
	xmm0_10056 = SEQ(SLICE(xmm0_10399, word64, 64), SLICE(xmm0_10399, real64, 0) * Mem86[0x00432EA8<p32>:real64])
l004216B8:
	word32 ecx_11029
	word32 edx_11030
	Mem10423[ebp_10420 - 24<i32>:word32] = fn0042D911(xmm0_10056, out ecx_11029, out edx_11030)
	word32 edx_10425 = Mem10423[Mem10423[ebp_10420 + 8<i32>:word32]:word32]
	word32 esp_10428 = esp_10427 - 4<i32>
	Mem10429[esp_10428:word32] = edx_10425 + 48<i32>
	word32 esp_10453 = <invalid>
	word32 edi_10442
	word32 ecx_11031
	word32 esi_11032
	Mem10462[esp_10453:word32] = fn0041C910(edx_10425 + 24<i32>, es, ds, Mem10429[esp_10428:word32], Mem10429[esp_10428 + 36<i32>:word32], out ecx_11031, out ebx_10117, out ebp_10116, out esi_11032, out edi_10442)
	Mem10464[esp_10453 - 4<i32>:word32] = 0<32>
	word32 esi_11033
	eax_10160 = fn00403C30(edi_10442, 0<32>, ebx_10117, es, ds, Mem10464[esp_10453 - 4<i32>:word32], out esi_11033)
	esp_10155 = esp_10453
l004216E6:
	word32 esp_10481 = esp_10155 - 4<i32>
	Mem10483[esp_10481:word32] = eax_10160
	Mem10486[esp_10481 - 4<i32>:word32] = ebx_10117
	word32 esp_10511 = <invalid>
	word32 ecx_11040
	word32 esi_11041
	word32 edi_11042
	Mem10520[esp_10511:word32] = fn0041C910(Mem10486[ebp_10116 - 20<i32>:word32], es, ds, Mem10486[esp_10481 - 4<i32>:word32], Mem10486[esp_10481 + 32<i32>:word32], out ecx_11040, out ebx_10222, out ebp_10221, out esi_11041, out edi_11042)
	word32 edx_11043
	eax_10263 = fn0041C740(Mem10520[esp_10511:word32], Mem10520[esp_10511 + 4<i32>:word16], Mem10520[esp_10511 + 8<i32>:word32], out edx_11043) + Mem10520[ebp_10221 - 24<i32>:word32]
	esp_10045 = esp_10511 + 0xC<32>
	edi_10265 = Mem10520[ebp_10221 + 8<i32>:word32]
l0042364B:
	Mem10545[ebx_10222 + 96<i32>:word32] = eax_10263
l0042364E:
	branch fn0041C5B0(ebx_10222) != 0x1F<32> l00423781
l0042365E:
	word32 eax_10562 = fn00401420(ebp_10221 - 36<i32>)
	word32 esp_10572 = esp_10045 - 4<i32>
	Mem10573[esp_10572:word32] = 2<32>
	Mem10575[esp_10572 - 4<i32>:word32] = 0<32>
	Mem10580[ebp_10221 - 4<i32>:word32] = 0x42<32>
	Mem10590[esp_10572 - 4<i32>:word32] = fn00402A60(fn0040F760(edi_10265, Mem10580[esp_10572 - 4<i32>:word32])) - 2<32>
	Mem10593[esp_10572 - 8<i32>:word32] = ebp_10221 - 60<i32>
	Mem10595[esp_10572 - 12<i32>:word32] = 0<32>
	word32 ebp_10601
	word32 esi_10606
	word32 ebx_11003
	word32 edi_11004
	word32 edx_11002
	word32 eax_10600 = fn0040F7F0(fn0040F760(edi_10265, Mem10595[esp_10572 - 12<i32>:word32]), ebp_10221, eax_10562, edi_10265, Mem10595[esp_10572 - 8<32>:word32], Mem10595[esp_10572 - 4<32>:word32], Mem10595[esp_10572:word32], out edx_11002, out ebx_11003, out ebp_10601, out esi_10606, out edi_11004)
	word32 esp_10608 = <invalid>
	Mem10615[esp_10608:word32] = esi_10606
	Mem10617[ebp_10601 - 4<i32>:byte] = 0x43<8>
	word32 esp_10641 = <invalid>
	word32 ebx_11007
	word32 edi_10637
	word32 ebp_10640
	word32 edx_11006
	word32 ecx_11005
	word32 esi_11008
	byte al_10652 = fn00411F00(eax_10600, 0x00432B48<p32>, es, ds, Mem10617[esp_10608:word32], out ecx_11005, out edx_11006, out ebx_11007, out ebp_10640, out esi_11008, out edi_10637)
	word32 esi_11009
	fn00402800(ebp_10640 - 60<i32>, Mem10617[esp_10641:word32], out esi_11009)
	Mem10665[ebp_10640 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 edx_11010
	fn00401470(ebp_10640 - 36<i32>, out edx_11010)
	word32 esp_10658 = <invalid>
	branch al_10652 == 0<8> l004236E8
l004236E8:
	Mem10677[esp_10658 - 4<i32>:word32] = 0<32>
	Mem10688[esp_10658 - 4<i32>:word32] = fn00402A60(fn0040F760(edi_10637, Mem10677[esp_10658 - 4<i32>:word32])) - 1<32>
	Mem10690[esp_10658 - 8<i32>:word32] = 0<32>
	word32 esp_10702 = <invalid>
	esp_10045 = esp_10702 + 4<32>
	word32 edi_10699
	branch Mem10690[fn0040F870(fn0040F760(edi_10637, Mem10690[esp_10658 - 8<i32>:word32]), ebp_10640, Mem10690[esp_10658 + 0xFFFFFFF8<32>:word32], Mem10690[esp_10658 - 4<32>:word32], out ebp_10221, out edi_10699):byte] == 0x6F<8> l00423777
l0042370F:
	Mem10712[esp_10702:word32] = 0<32>
	Mem10723[esp_10702:word32] = fn00402A60(fn0040F760(edi_10699, Mem10712[esp_10702:word32])) - 1<32>
	Mem10725[esp_10702 - 4<i32>:word32] = 0<32>
	word32 esp_10737 = <invalid>
	esp_10045 = esp_10737 + 4<32>
	word32 edi_10734
	branch Mem10725[fn0040F870(fn0040F760(edi_10699, Mem10725[esp_10702 - 4<i32>:word32]), ebp_10221, Mem10725[esp_10702 + -4<i32>:word32], Mem10725[esp_10702:word32], out ebp_10221, out edi_10734):byte] == 0x4F<8> l00423777
l00423777:
	word32 eax_10748 = Mem10747[ebp_10221 - 20<i32>:word32]
	Mem10750[eax_10748 + 96<i32>:word32] = Mem10747[eax_10748 + 96<i32>:word32] + 0x190<32>
l00423736:
	Mem10753[esp_10737:word32] = 0<32>
	Mem10764[esp_10737:word32] = fn00402A60(fn0040F760(edi_10734, Mem10753[esp_10737:word32])) - 1<32>
	Mem10766[esp_10737 - 4<i32>:word32] = 0<32>
	word32 esp_10778 = <invalid>
	esp_10045 = esp_10778 + 4<32>
	word32 edi_11022
	branch Mem10766[fn0040F870(fn0040F760(edi_10734, Mem10766[esp_10737 - 4<i32>:word32]), ebp_10221, Mem10766[esp_10737 + -4<i32>:word32], Mem10766[esp_10737:word32], out ebp_10221, out edi_11022):byte] != 0x2E<8> l00423781
l00423781:
	Mem10793[fs:0x00000000<p32>:word32] = Mem10788[ebp_10221 - 12<i32>:word32]
	word32 ecx_10796 = Mem10793[esp_10045:word32]
	word32 esi_10800 = Mem10793[esp_10045 + 8<i32>:word32]
	ebpOut = Mem10793[ebp_10221:word32]
	esiOut = esi_10800
	return ecx_10796
l0042375D:
	word32 eax_10806 = Mem10766[ebp_10221 - 20<i32>:word32]
	Mem10808[eax_10806 + 96<i32>:word32] = Mem10766[eax_10806 + 96<i32>:word32] + 1<32>
	Mem10811[fs:0x00000000<p32>:word32] = Mem10808[ebp_10221 - 12<i32>:word32]
	word32 ecx_10812 = Mem10811[esp_10778 + 4<32>:word32]
	word32 esi_10816 = Mem10811[esp_10778 + 0xC<32>:word32]
	ebpOut = Mem10811[ebp_10221:word32]
	esiOut = esi_10816
	return ecx_10812
l004236CA:
	word32 eax_10822 = Mem10665[ebp_10640 - 20<i32>:word32]
	Mem10824[eax_10822 + 96<i32>:word32] = Mem10665[eax_10822 + 96<i32>:word32] + 0x191<32>
	Mem10827[fs:0x00000000<p32>:word32] = Mem10824[ebp_10640 - 12<i32>:word32]
	word32 ecx_10828 = Mem10827[esp_10658:word32]
	word32 esi_10832 = Mem10827[esp_10658 + 8<i32>:word32]
	ebpOut = Mem10827[ebp_10640:word32]
	esiOut = esi_10832
	return ecx_10828
fn00421620_exit:


word32 fn004237A0(word32 ecx, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn004237A0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc50
l004237A0:
	word32 ecx_1062
	word32 ebx_1038
	word32 ebp_1037
	word32 esp_1077
	word32 esp_1670
	word32 ebx_1322
	word32 esp_1442
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word128 xmm0_39 = fn00427210()
	word32 edx_2778
	word32 ecx_2777
	Mem62[ecx + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_39, word64, 64), SLICE(xmm0_39, real64, 0) * Mem41[0x00432EE0<p32>:real64]), out ecx_2777, out edx_2778)
	Mem67[&tLoc50 + 16<i32>:word32] = 0<32>
	Mem68[&tLoc50 + 20<i32>:word32] = 0xF<32>
	Mem71[&tLoc50:byte] = 0<8>
	word32 ebp_73
	word32 edi_76
	word32 esi_2782
	word32 edx_2780
	word32 ebx_2781
	word32 ecx_2779
	fn00402A70(&tLoc50, ecx, 0x432B4C<32>, 5<32>, Mem71[&tLoc50 + 12<i32>:word32], out ecx_2779, out edx_2780, out ebx_2781, out ebp_73, out esi_2782, out edi_76)
	Mem86[ebp_73 - 4<i32>:word32] = 0<32>
	word32 ebx_89 = Mem86[ebp_73 + 8<i32>:word32]
	word32 esp_80 = <invalid>
	Mem93[esp_80 - 0x14<32>:word32] = Mem86[ebx_89:word32]
	word32 ebp_96
	word32 edx_2783
	fn004028D0(esp_80 - 0x10<32>, edi_76, Mem93[esp_80 - 0x14<32>:word32], out edx_2783, out ebp_96)
	Mem106[ebp_96 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_97 = <invalid>
	word32 ebp_113
	word32 ebx_114
	word32 edi_116
	word32 edx_2785
	word32 ecx_2784
	word32 esi_2786
	branch SLICE(fn0041C1F0(edi_76, ebx_89, ebp_96, es, ds, Mem106[esp_97 + 0x2C<32>:word32], out ecx_2784, out edx_2785, out ebx_114, out ebp_113, out esi_2786, out edi_116), byte, 0) == 0<8> l00423A20
l00423A20:
	Mem133[ebp_113 + 8<i32>:word32] = esp_97 - 0x14<32>
	Mem135[esp_97 - 0x18<32>:word32] = 4<32>
	Mem136[esp_97 - 4<32>:word32] = 0<32>
	Mem137[esp_97:word32] = 0xF<32>
	Mem139[esp_97 - 0x1C<32>:word32] = 0x432B58<32>
	Mem140[esp_97 - 0x14<32>:byte] = 0<8>
	word32 ebp_142
	word32 ebx_143
	word32 edi_145
	word32 esi_2789
	word32 edx_2788
	word32 ecx_2787
	fn00402A70(esp_97 - 0x14<32>, edi_116, Mem140[esp_97 - 0x1C<32>:word32], Mem140[esp_97 - 0x18<32>:word32], Mem140[esp_97 - 8<32>:word32], out ecx_2787, out edx_2788, out ebx_143, out ebp_142, out esi_2789, out edi_145)
	Mem157[ebp_142 - 4<i32>:word32] = 0xA<32>
	word32 esp_149 = <invalid>
	Mem161[esp_149 - 0x14<32>:word32] = Mem157[ebx_143:word32]
	word32 ebp_164
	word32 edx_2790
	fn004028D0(esp_149 - 0x10<32>, edi_145, Mem161[esp_149 - 0x14<32>:word32], out edx_2790, out ebp_164)
	Mem174[ebp_164 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_165 = <invalid>
	word32 ebp_176
	word32 ebx_177
	word32 edi_179
	word32 edx_2792
	word32 ecx_2791
	word32 esi_2793
	branch SLICE(fn0041C1F0(edi_145, ebx_143, ebp_164, es, ds, Mem174[esp_165 + 0x2C<32>:word32], out ecx_2791, out edx_2792, out ebx_177, out ebp_176, out esi_2793, out edi_179), byte, 0) == 0<8> l00423A8C
l00423A8C:
	Mem196[ebp_176 + 8<i32>:word32] = esp_165 - 0x14<32>
	Mem198[esp_165 - 0x18<32>:word32] = 5<32>
	Mem199[esp_165 - 4<32>:word32] = 0<32>
	Mem200[esp_165:word32] = 0xF<32>
	Mem202[esp_165 - 0x1C<32>:word32] = 0x432B60<32>
	Mem203[esp_165 - 0x14<32>:byte] = 0<8>
	word32 ebp_205
	word32 ebx_206
	word32 edi_208
	word32 ecx_2799
	word32 esi_2801
	word32 edx_2800
	fn00402A70(esp_165 - 0x14<32>, edi_179, Mem203[esp_165 - 0x1C<32>:word32], Mem203[esp_165 - 0x18<32>:word32], Mem203[esp_165 - 8<32>:word32], out ecx_2799, out edx_2800, out ebx_206, out ebp_205, out esi_2801, out edi_208)
	Mem220[ebp_205 - 4<i32>:word32] = 0xB<32>
	word32 esp_212 = <invalid>
	Mem224[esp_212 - 0x14<32>:word32] = Mem220[ebx_206:word32]
	word32 ebp_227
	word32 edx_2802
	fn004028D0(esp_212 - 0x10<32>, edi_208, Mem224[esp_212 - 0x14<32>:word32], out edx_2802, out ebp_227)
	Mem237[ebp_227 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_228 = <invalid>
	word32 ebp_239
	word32 ebx_240
	word32 edi_242
	word32 ecx_2803
	word32 esi_2805
	word32 edx_2804
	branch SLICE(fn0041C1F0(edi_208, ebx_206, ebp_227, es, ds, Mem237[esp_228 + 0x2C<32>:word32], out ecx_2803, out edx_2804, out ebx_240, out ebp_239, out esi_2805, out edi_242), byte, 0) == 0<8> l00423AF8
l00423AF8:
	Mem259[ebp_239 + 8<i32>:word32] = esp_228 - 0x14<32>
	Mem261[esp_228 - 0x18<32>:word32] = 5<32>
	Mem262[esp_228 - 4<32>:word32] = 0<32>
	Mem263[esp_228:word32] = 0xF<32>
	Mem265[esp_228 - 0x1C<32>:word32] = 0x432B68<32>
	Mem266[esp_228 - 0x14<32>:byte] = 0<8>
	word32 ebp_268
	word32 ebx_269
	word32 edi_271
	word32 esi_2810
	word32 edx_2809
	word32 ecx_2808
	fn00402A70(esp_228 - 0x14<32>, edi_242, Mem266[esp_228 - 0x1C<32>:word32], Mem266[esp_228 - 0x18<32>:word32], Mem266[esp_228 - 8<32>:word32], out ecx_2808, out edx_2809, out ebx_269, out ebp_268, out esi_2810, out edi_271)
	Mem283[ebp_268 - 4<i32>:word32] = 0xC<32>
	word32 esp_275 = <invalid>
	Mem287[esp_275 - 0x14<32>:word32] = Mem283[ebx_269:word32]
	word32 ebp_290
	word32 edx_2811
	fn004028D0(esp_275 - 0x10<32>, edi_271, Mem287[esp_275 - 0x14<32>:word32], out edx_2811, out ebp_290)
	Mem300[ebp_290 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_291 = <invalid>
	word32 ebp_302
	word32 ebx_303
	word32 edi_305
	word32 edx_2813
	word32 ecx_2812
	word32 esi_2814
	branch SLICE(fn0041C1F0(edi_271, ebx_269, ebp_290, es, ds, Mem300[esp_291 + 0x2C<32>:word32], out ecx_2812, out edx_2813, out ebx_303, out ebp_302, out esi_2814, out edi_305), byte, 0) == 0<8> l00423B64
l00423B64:
	Mem322[ebp_302 + 8<i32>:word32] = esp_291 - 0x14<32>
	Mem324[esp_291 - 0x18<32>:word32] = 5<32>
	Mem325[esp_291 - 4<32>:word32] = 0<32>
	Mem326[esp_291:word32] = 0xF<32>
	Mem328[esp_291 - 0x1C<32>:word32] = 0x432B70<32>
	Mem329[esp_291 - 0x14<32>:byte] = 0<8>
	word32 ebp_331
	word32 ebx_332
	word32 edi_334
	word32 ecx_2817
	word32 edx_2818
	word32 esi_2819
	fn00402A70(esp_291 - 0x14<32>, edi_305, Mem329[esp_291 - 0x1C<32>:word32], Mem329[esp_291 - 0x18<32>:word32], Mem329[esp_291 - 8<32>:word32], out ecx_2817, out edx_2818, out ebx_332, out ebp_331, out esi_2819, out edi_334)
	Mem346[ebp_331 - 4<i32>:word32] = 0xD<32>
	word32 esp_338 = <invalid>
	Mem350[esp_338 - 0x14<32>:word32] = Mem346[ebx_332:word32]
	word32 ebp_353
	word32 edx_2820
	fn004028D0(esp_338 - 0x10<32>, edi_334, Mem350[esp_338 - 0x14<32>:word32], out edx_2820, out ebp_353)
	Mem363[ebp_353 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_354 = <invalid>
	word32 ebp_365
	word32 ebx_366
	word32 edi_368
	word32 ecx_2821
	word32 esi_2823
	word32 edx_2822
	branch SLICE(fn0041C1F0(edi_334, ebx_332, ebp_353, es, ds, Mem363[esp_354 + 0x2C<32>:word32], out ecx_2821, out edx_2822, out ebx_366, out ebp_365, out esi_2823, out edi_368), byte, 0) == 0<8> l00423D16
l00423D16:
	Mem385[ebp_365 + 8<i32>:word32] = esp_354 - 0x14<32>
	Mem387[esp_354 - 0x18<32>:word32] = 4<32>
	Mem388[esp_354 - 4<32>:word32] = 0<32>
	Mem389[esp_354:word32] = 0xF<32>
	Mem391[esp_354 - 0x1C<32>:word32] = 0x432B78<32>
	Mem392[esp_354 - 0x14<32>:byte] = 0<8>
	word32 ebp_394
	word32 ebx_395
	word32 edi_397
	word32 edx_2827
	word32 esi_2828
	word32 ecx_2826
	fn00402A70(esp_354 - 0x14<32>, edi_368, Mem392[esp_354 - 0x1C<32>:word32], Mem392[esp_354 - 0x18<32>:word32], Mem392[esp_354 - 8<32>:word32], out ecx_2826, out edx_2827, out ebx_395, out ebp_394, out esi_2828, out edi_397)
	Mem409[ebp_394 - 4<i32>:word32] = 0x14<32>
	word32 esp_401 = <invalid>
	Mem413[esp_401 - 0x14<32>:word32] = Mem409[ebx_395:word32]
	word32 ebp_416
	word32 edx_2829
	fn004028D0(esp_401 - 0x10<32>, edi_397, Mem413[esp_401 - 0x14<32>:word32], out edx_2829, out ebp_416)
	Mem426[ebp_416 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_417 = <invalid>
	word32 ebp_428
	word32 ebx_429
	word32 edi_431
	word32 ecx_2830
	word32 edx_2831
	word32 esi_2832
	branch SLICE(fn0041C1F0(edi_397, ebx_395, ebp_416, es, ds, Mem426[esp_417 + 0x2C<32>:word32], out ecx_2830, out edx_2831, out ebx_429, out ebp_428, out esi_2832, out edi_431), byte, 0) == 0<8> l00423D82
l00423D82:
	Mem448[ebp_428 + 8<i32>:word32] = esp_417 - 0x14<32>
	Mem450[esp_417 - 0x18<32>:word32] = 5<32>
	Mem451[esp_417 - 4<32>:word32] = 0<32>
	Mem452[esp_417:word32] = 0xF<32>
	Mem454[esp_417 - 0x1C<32>:word32] = 0x432B80<32>
	Mem455[esp_417 - 0x14<32>:byte] = 0<8>
	word32 ebp_457
	word32 ebx_458
	word32 edi_460
	word32 ecx_2839
	word32 edx_2840
	word32 esi_2841
	fn00402A70(esp_417 - 0x14<32>, edi_431, Mem455[esp_417 - 0x1C<32>:word32], Mem455[esp_417 - 0x18<32>:word32], Mem455[esp_417 - 8<32>:word32], out ecx_2839, out edx_2840, out ebx_458, out ebp_457, out esi_2841, out edi_460)
	Mem472[ebp_457 - 4<i32>:word32] = 0x15<32>
	word32 esp_464 = <invalid>
	Mem476[esp_464 - 0x14<32>:word32] = Mem472[ebx_458:word32]
	word32 ebp_479
	word32 edx_2842
	fn004028D0(esp_464 - 0x10<32>, edi_460, Mem476[esp_464 - 0x14<32>:word32], out edx_2842, out ebp_479)
	Mem489[ebp_479 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_480 = <invalid>
	word32 ebp_491
	word32 ebx_492
	word32 edi_494
	word32 ecx_2843
	word32 edx_2844
	word32 esi_2845
	branch SLICE(fn0041C1F0(edi_460, ebx_458, ebp_479, es, ds, Mem489[esp_480 + 0x2C<32>:word32], out ecx_2843, out edx_2844, out ebx_492, out ebp_491, out esi_2845, out edi_494), byte, 0) == 0<8> l00423DEE
l00423DEE:
	Mem511[ebp_491 + 8<i32>:word32] = esp_480 - 0x14<32>
	Mem513[esp_480 - 0x18<32>:word32] = 5<32>
	Mem514[esp_480 - 4<32>:word32] = 0<32>
	Mem515[esp_480:word32] = 0xF<32>
	Mem517[esp_480 - 0x1C<32>:word32] = 0x432B88<32>
	Mem518[esp_480 - 0x14<32>:byte] = 0<8>
	word32 ebp_520
	word32 ebx_521
	word32 edi_523
	word32 ecx_2856
	word32 edx_2857
	word32 esi_2858
	fn00402A70(esp_480 - 0x14<32>, edi_494, Mem518[esp_480 - 0x1C<32>:word32], Mem518[esp_480 - 0x18<32>:word32], Mem518[esp_480 - 8<32>:word32], out ecx_2856, out edx_2857, out ebx_521, out ebp_520, out esi_2858, out edi_523)
	Mem535[ebp_520 - 4<i32>:word32] = 0x16<32>
	word32 esp_527 = <invalid>
	Mem539[esp_527 - 0x14<32>:word32] = Mem535[ebx_521:word32]
	word32 ebp_542
	word32 edx_2859
	fn004028D0(esp_527 - 0x10<32>, edi_523, Mem539[esp_527 - 0x14<32>:word32], out edx_2859, out ebp_542)
	Mem552[ebp_542 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_543 = <invalid>
	word32 ebp_554
	word32 ebx_555
	word32 edi_557
	word32 ecx_2860
	word32 edx_2861
	word32 esi_2862
	branch SLICE(fn0041C1F0(edi_523, ebx_521, ebp_542, es, ds, Mem552[esp_543 + 0x2C<32>:word32], out ecx_2860, out edx_2861, out ebx_555, out ebp_554, out esi_2862, out edi_557), byte, 0) == 0<8> l00423E5A
l00423E5A:
	Mem574[ebp_554 + 8<i32>:word32] = esp_543 - 0x14<32>
	Mem576[esp_543 - 0x18<32>:word32] = 4<32>
	Mem577[esp_543 - 4<32>:word32] = 0<32>
	Mem578[esp_543:word32] = 0xF<32>
	Mem580[esp_543 - 0x1C<32>:word32] = 0x432B90<32>
	Mem581[esp_543 - 0x14<32>:byte] = 0<8>
	word32 ebp_583
	word32 ebx_584
	word32 edi_586
	word32 ecx_2873
	word32 edx_2874
	word32 esi_2875
	fn00402A70(esp_543 - 0x14<32>, edi_557, Mem581[esp_543 - 0x1C<32>:word32], Mem581[esp_543 - 0x18<32>:word32], Mem581[esp_543 - 8<32>:word32], out ecx_2873, out edx_2874, out ebx_584, out ebp_583, out esi_2875, out edi_586)
	Mem598[ebp_583 - 4<i32>:word32] = 0x17<32>
	word32 esp_590 = <invalid>
	Mem602[esp_590 - 0x14<32>:word32] = Mem598[ebx_584:word32]
	word32 ebp_605
	word32 edx_2876
	fn004028D0(esp_590 - 0x10<32>, edi_586, Mem602[esp_590 - 0x14<32>:word32], out edx_2876, out ebp_605)
	Mem615[ebp_605 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_606 = <invalid>
	word32 ebp_617
	word32 ebx_618
	word32 edi_620
	word32 ecx_2877
	word32 edx_2878
	word32 esi_2879
	branch SLICE(fn0041C1F0(edi_586, ebx_584, ebp_605, es, ds, Mem615[esp_606 + 0x2C<32>:word32], out ecx_2877, out edx_2878, out ebx_618, out ebp_617, out esi_2879, out edi_620), byte, 0) == 0<8> l00423EC4
l00423EC4:
	word32 edi_1040
	word32 eax_1079
	Mem637[ebp_617 + 8<i32>:word32] = esp_606 - 0x14<32>
	Mem639[esp_606 - 0x18<32>:word32] = 4<32>
	Mem640[esp_606 - 4<32>:word32] = 0<32>
	Mem641[esp_606:word32] = 0xF<32>
	Mem643[esp_606 - 0x1C<32>:word32] = 0x432B98<32>
	Mem644[esp_606 - 0x14<32>:byte] = 0<8>
	word32 ebp_646
	word32 ebx_647
	word32 edi_649
	word32 ecx_2884
	word32 edx_2885
	word32 esi_2886
	fn00402A70(esp_606 - 0x14<32>, edi_620, Mem644[esp_606 - 0x1C<32>:word32], Mem644[esp_606 - 0x18<32>:word32], Mem644[esp_606 - 8<32>:word32], out ecx_2884, out edx_2885, out ebx_647, out ebp_646, out esi_2886, out edi_649)
	Mem661[ebp_646 - 4<i32>:word32] = 0x18<32>
	word32 esp_653 = <invalid>
	Mem665[esp_653 - 0x14<32>:word32] = Mem661[ebx_647:word32]
	word32 ebp_668
	word32 edx_2887
	fn004028D0(esp_653 - 0x10<32>, edi_649, Mem665[esp_653 - 0x14<32>:word32], out edx_2887, out ebp_668)
	Mem678[ebp_668 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_669 = <invalid>
	word32 ebp_680
	word32 ebx_681
	word32 edi_683
	word32 ecx_2888
	word32 edx_2889
	word32 esi_2890
	branch SLICE(fn0041C1F0(edi_649, ebx_647, ebp_668, es, ds, Mem678[esp_669 + 0x2C<32>:word32], out ecx_2888, out edx_2889, out ebx_681, out ebp_680, out esi_2890, out edi_683), byte, 0) == 0<8> l00423F43
l00423F43:
	word128 xmm1_882
	Mem700[ebp_680 + 8<i32>:word32] = esp_669 - 0x14<32>
	Mem702[esp_669 - 0x18<32>:word32] = 5<32>
	Mem703[esp_669 - 4<32>:word32] = 0<32>
	Mem704[esp_669:word32] = 0xF<32>
	Mem706[esp_669 - 0x1C<32>:word32] = 0x432BA0<32>
	Mem707[esp_669 - 0x14<32>:byte] = 0<8>
	word32 ebp_709
	word32 ebx_710
	word32 edi_712
	word32 ecx_2893
	word32 edx_2894
	word32 esi_2895
	fn00402A70(esp_669 - 0x14<32>, edi_683, Mem707[esp_669 - 0x1C<32>:word32], Mem707[esp_669 - 0x18<32>:word32], Mem707[esp_669 - 8<32>:word32], out ecx_2893, out edx_2894, out ebx_710, out ebp_709, out esi_2895, out edi_712)
	Mem724[ebp_709 - 4<i32>:word32] = 0x19<32>
	word32 esp_716 = <invalid>
	Mem728[esp_716 - 0x14<32>:word32] = Mem724[ebx_710:word32]
	word32 ebp_731
	word32 edx_2896
	fn004028D0(esp_716 - 0x10<32>, edi_712, Mem728[esp_716 - 0x14<32>:word32], out edx_2896, out ebp_731)
	Mem741[ebp_731 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_732 = <invalid>
	word32 ebp_743
	word32 ebx_744
	word32 edi_746
	word32 ecx_2897
	word32 edx_2898
	word32 esi_2899
	branch SLICE(fn0041C1F0(edi_712, ebx_710, ebp_731, es, ds, Mem741[esp_732 + 0x2C<32>:word32], out ecx_2897, out edx_2898, out ebx_744, out ebp_743, out esi_2899, out edi_746), byte, 0) == 0<8> l00424014
l00424014:
	Mem763[ebp_743 + 8<i32>:word32] = esp_732 - 0x14<32>
	Mem765[esp_732 - 0x18<32>:word32] = 4<32>
	Mem766[esp_732 - 4<32>:word32] = 0<32>
	Mem767[esp_732:word32] = 0xF<32>
	Mem769[esp_732 - 0x1C<32>:word32] = 0x432BA8<32>
	Mem770[esp_732 - 0x14<32>:byte] = 0<8>
	word32 ebp_772
	word32 ebx_773
	word32 edi_775
	word32 ecx_2903
	word32 edx_2904
	word32 esi_2905
	fn00402A70(esp_732 - 0x14<32>, edi_746, Mem770[esp_732 - 0x1C<32>:word32], Mem770[esp_732 - 0x18<32>:word32], Mem770[esp_732 - 8<32>:word32], out ecx_2903, out edx_2904, out ebx_773, out ebp_772, out esi_2905, out edi_775)
	Mem787[ebp_772 - 4<i32>:word32] = 0x1A<32>
	word32 esp_779 = <invalid>
	Mem791[esp_779 - 0x14<32>:word32] = Mem787[ebx_773:word32]
	word32 ebp_794
	word32 edx_2906
	fn004028D0(esp_779 - 0x10<32>, edi_775, Mem791[esp_779 - 0x14<32>:word32], out edx_2906, out ebp_794)
	Mem804[ebp_794 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_795 = <invalid>
	esp_1077 = esp_795 + 4<32>
	word32 edx_2907
	word32 esi_2908
	word32 edi_2909
	branch SLICE(fn0041C1F0(edi_775, ebx_773, ebp_794, es, ds, Mem804[esp_795 + 0x2C<32>:word32], out ecx_1062, out edx_2907, out ebx_1038, out ebp_1037, out esi_2908, out edi_2909), byte, 0) == 0<8> l004240E4
l00424062:
	Mem827[esp_795:word32] = Mem804[ebx_1038:word32] + 0x18<32>
	word32 ecx_2922
	word32 esi_2923
	word32 eax_828 = fn0041C910(ebx_1038, es, ds, Mem827[esp_795:word32], Mem827[esp_795 + 36<i32>:word32], out ecx_2922, out ebx_1038, out ebp_1037, out esi_2923, out edi_1040)
	Mem860[ebp_1037 - 20<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_828, word32, word128)), real64, 0) + Mem827[(eax_828 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem869[ebp_1037 - 20<i32>:real64] = Mem860[ebp_1037 - 20<i32>:real64] * SLICE(fn00427210(), real64, 0)
	word32 esp_843 = <invalid>
	esp_1077 = esp_843 + 4<32>
	xmm1_882 = SEQ(0<64>, Mem869[ebp_1037 - 20<i32>:real64] + (SLICE(fn00427210(), real64, 0) * Mem869[0x00432F60<p32>:real64] + Mem869[0x00432F68<p32>:real64]))
l00423F91:
	Mem886[esp_732:word32] = Mem741[ebx_744:word32] + 24<i32>
	word32 ebp_889
	word32 ebx_890
	word32 esi_894
	word32 ecx_2910
	word32 edi_2911
	word32 eax_888 = fn0041C910(ebx_744, es, ds, Mem886[esp_732:word32], Mem886[esp_732 + 36<i32>:word32], out ecx_2910, out ebx_890, out ebp_889, out esi_894, out edi_2911)
	Mem920[ebp_889 - 20<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_888, word32, word128)), real64, 0) + Mem886[(eax_888 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_903 = <invalid>
	real64 v49_925 = Mem920[ebp_889 - 20<i32>:real64] * SLICE(fn00427210(), real64, 0)
	Mem929[esp_903:word32] = esi_894
	Mem933[ebp_889 - 20<i32>:real64] = v49_925 + Mem929[0x00432F68<p32>:real64]
	word32 ecx_2912
	word32 esi_2913
	word32 eax_934 = fn0041C910(ebx_890, es, ds, Mem933[esp_903:word32], Mem933[esp_903 + 36<i32>:word32], out ecx_2912, out ebx_1038, out ebp_1037, out esi_2913, out edi_1040)
	Mem966[ebp_1037 - 28<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_934, word32, word128)), real64, 0) + Mem933[(eax_934 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_949 = <invalid>
	esp_1077 = esp_949 + 4<32>
	xmm1_882 = SEQ(0<64>, Mem966[ebp_1037 - 28<i32>:real64] * SLICE(fn00427210(), real64, 0) + Mem966[ebp_1037 - 20<i32>:real64])
l004240C1:
	word32 eax_979 = Mem978[edi_1040 + 96<i32>:word32]
	word128 xmm0_982 = __cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_979, word32, word128))
	word32 edx_2914
	eax_1079 = fn0042D911(SEQ(SLICE(xmm0_982, word64, 64), SLICE(xmm0_982, real64, 0) + Mem978[(eax_979 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64] + SLICE(xmm1_882, real64, 0)), out ecx_1062, out edx_2914)
l00423F0E:
	word32 ecx_2900
	word32 edx_2901
	fn0042D911(SEQ(0<64>, Mem678[ebp_680 - 28<i32>:real64] * Mem678[0x00432F58<p32>:real64]), out ecx_2900, out edx_2901)
	word32 ecx_1026 = Mem678[ebx_681:word32]
	Mem1029[esp_669:word32] = 0<32>
	Mem1033[esp_669 - 4<i32>:word32] = 0<32>
	Mem1035[esp_669 - 8<i32>:word32] = ecx_1026 + 0x18<32>
	word32 esp_1051 = <invalid>
	word32 esi_1042
	word32 ecx_2902
	Mem1060[esp_1051:word32] = fn0041C910(ebx_681, es, ds, Mem1035[esp_669 - 8<i32>:word32], Mem1035[esp_669 + 28<i32>:word32], out ecx_2902, out ebx_1038, out ebp_1037, out esi_1042, out edi_1040)
	esp_1077 = esp_1051 + 0xC<32>
	eax_1079 = fn0041C680(Mem1060[esp_1051:word32], Mem1060[esp_1051 + 4<i32>:word32], Mem1060[esp_1051 + 8<i32>:word32], out ecx_1062) + 0x48E<32> + esi_1042
l004240E1:
	Mem1083[edi_1040 + 96<i32>:word32] = eax_1079
l00423EA4:
	word32 eax_1084 = Mem615[ebx_618:word32]
	Mem1086[esp_606:word32] = 0<32>
	Mem1090[esp_606 - 4<i32>:word32] = 0<32>
	Mem1092[esp_606 - 8<i32>:word32] = eax_1084 + 0x18<32>
	word32 esp_1108 = <invalid>
	word32 edi_1097
	word32 ecx_2891
	word32 esi_2892
	Mem1117[esp_1108:word32] = fn0041C910(ebx_618, es, ds, Mem1092[esp_606 - 8<i32>:word32], Mem1092[esp_606 + 28<i32>:word32], out ecx_2891, out ebx_1038, out ebp_1037, out esi_2892, out edi_1097)
	Mem1137[edi_1097 + 96<i32>:word32] = Mem1117[edi_1097 + 96<i32>:word32] + (fn0041C680(Mem1117[esp_1108:word32], Mem1117[esp_1108 + 4<i32>:word32], Mem1117[esp_1108 + 8<i32>:word32], out ecx_1062) + 0x26<32>)
	esp_1077 = esp_1108 + 0xC<32>
l00423E38:
	word32 eax_1139 = Mem552[ebx_555:word32]
	Mem1141[esp_543:word32] = 0<32>
	Mem1145[esp_543 - 4<i32>:word32] = 1<32>
	Mem1147[esp_543 - 8<i32>:word32] = eax_1139 + 0x18<32>
	word32 esp_1163 = <invalid>
	word32 edi_1152
	word32 ecx_2880
	word32 esi_2881
	Mem1172[esp_1163:word32] = fn0041C910(ebx_555, es, ds, Mem1147[esp_543 - 8<i32>:word32], Mem1147[esp_543 + 28<i32>:word32], out ecx_2880, out ebx_1038, out ebp_1037, out esi_2881, out edi_1152)
	Mem1192[edi_1152 + 96<i32>:word32] = Mem1172[edi_1152 + 96<i32>:word32] + (fn0041C680(Mem1172[esp_1163:word32], Mem1172[esp_1163 + 4<i32>:word32], Mem1172[esp_1163 + 8<i32>:word32], out ecx_1062) + 0x2A6<32>)
	esp_1077 = esp_1163 + 0xC<32>
l00423DCC:
	word32 eax_1194 = Mem489[ebx_492:word32]
	Mem1196[esp_480:word32] = 0<32>
	Mem1200[esp_480 - 4<i32>:word32] = 9<32>
	Mem1202[esp_480 - 8<i32>:word32] = eax_1194 + 0x18<32>
	word32 esp_1218 = <invalid>
	word32 edi_1207
	word32 ecx_2863
	word32 esi_2864
	Mem1227[esp_1218:word32] = fn0041C910(ebx_492, es, ds, Mem1202[esp_480 - 8<i32>:word32], Mem1202[esp_480 + 28<i32>:word32], out ecx_2863, out ebx_1038, out ebp_1037, out esi_2864, out edi_1207)
	Mem1247[edi_1207 + 96<i32>:word32] = Mem1227[edi_1207 + 96<i32>:word32] + (fn0041C680(Mem1227[esp_1218:word32], Mem1227[esp_1218 + 4<i32>:word32], Mem1227[esp_1218 + 8<i32>:word32], out ecx_1062) + 0x2A6<32>)
	esp_1077 = esp_1218 + 0xC<32>
l00423D60:
	word32 eax_1249 = Mem426[ebx_429:word32]
	Mem1251[esp_417:word32] = 0<32>
	Mem1255[esp_417 - 4<i32>:word32] = 8<32>
	Mem1257[esp_417 - 8<i32>:word32] = eax_1249 + 0x18<32>
	word32 esp_1273 = <invalid>
	word32 edi_1262
	word32 ecx_2846
	word32 esi_2847
	Mem1282[esp_1273:word32] = fn0041C910(ebx_429, es, ds, Mem1257[esp_417 - 8<i32>:word32], Mem1257[esp_417 + 28<i32>:word32], out ecx_2846, out ebx_1038, out ebp_1037, out esi_2847, out edi_1262)
	Mem1302[edi_1262 + 96<i32>:word32] = Mem1282[edi_1262 + 96<i32>:word32] + (fn0041C680(Mem1282[esp_1273:word32], Mem1282[esp_1273 + 4<i32>:word32], Mem1282[esp_1273 + 8<i32>:word32], out ecx_1062) + 0x2A6<32>)
	esp_1077 = esp_1273 + 0xC<32>
l00423BB2:
	Mem1305[edi_368 + 96<i32>:word32] = Mem363[edi_368 + 96<i32>:word32] + 0x2A6<32>
	Mem1306[ebp_365 - 4<i32>:word32] = 0xE<32>
	Mem1309[esp_354:word32] = 1<32>
	Mem1311[ebp_365 - 24<i32>:word32] = _Init(Mem1309[esp_354:(ptr32 (struct "std::locale"))], Mem1309[esp_354 + 4<i32>:bool])
	Mem1312[ebp_365 - 4<i32>:word32] = 0xF<32>
	word32 ecx_1314 = Mem1312[ebx_366:word32]
	Mem1318[ebp_365 - 16<i32>:word32] = 8<32>
	Mem1320[esp_354 - 4<i32>:word32] = ebp_365 - 28<i32>
	word32 esp_1328 = <invalid>
	word32 esp_1336 = esp_1328 + 8<32>
	word32 ecx_2833
	word32 edx_2834
	word32 edi_2835
	word32 ebp_1327
	word32 esi_1326
	branch fn00411F00(ecx_1314 + 0x30<32>, 0x004326F8<p32>, es, ds, Mem1320[esp_354 - 4<i32>:word32], out ecx_2833, out edx_2834, out ebx_1322, out ebp_1327, out esi_1326, out edi_2835) != 0<8> l00423C09
l00423BF5:
	Mem1345[esp_1328 + 4<32>:word32] = Mem1320[ebx_1322:word32] + 0x30<32>
	word32 ecx_2836
	word32 edi_2837
	word32 eax_1346 = fn0041C910(ebx_1322, es, ds, Mem1345[esp_1328 + 4<32>:word32], Mem1345[esp_1328 + 0x28<32>:word32], out ecx_2836, out ebx_1322, out ebp_1327, out esi_1326, out edi_2837)
	Mem1369[ebp_1327 + 11<i32>:byte] = 0<8>
	word32 esp_1361 = <invalid>
	esp_1336 = esp_1361 + 4<32>
	branch eax_1346 != 8<32> l00423C0D
l00423C09:
	Mem1373[ebp_1327 + 11<i32>:byte] = 1<8>
l00423C0D:
	Mem1376[ebp_1327 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 edx_2838
	word32 ecx_1380 = fn00401470(ebp_1327 - 28<i32>, out edx_2838)
	branch Mem1376[ebp_1327 + 11<i32>:byte] == 0<8> l00423C2B
l00423C2B:
	Mem1391[esp_1336 - 4<i32>:word32] = 1<32>
	Mem1392[ebp_1327 - 4<i32>:word32] = 0x10<32>
	word32 esp_1411
	word32 eax_1412
	call esi_1326 (retsize: 4;)
		uses: ecx:ecx_1380
		defs: eax:eax_1412,esp:esp_1411
	Mem1417[ebp_1327 - 24<i32>:word32] = eax_1412
	Mem1418[ebp_1327 - 4<i32>:word32] = 0x11<32>
	word32 ecx_1420 = Mem1418[ebx_1322:word32]
	Mem1424[ebp_1327 - 16<i32>:word32] = 0x10<32>
	Mem1426[esp_1411 - 4<i32>:word32] = ebp_1327 - 28<i32>
	word32 esp_1434 = <invalid>
	esp_1442 = esp_1434 + 8<32>
	word32 ecx_2848
	word32 edx_2849
	word32 edi_2850
	word32 ebp_1433
	word32 esi_1432
	branch fn00411F00(ecx_1420 + 0x30<32>, 0x004326FC<p32>, es, ds, Mem1426[esp_1411 - 4<i32>:word32], out ecx_2848, out edx_2849, out ebx_1322, out ebp_1433, out esi_1432, out edi_2850) != 0<8> l00423C75
l00423C61:
	Mem1451[esp_1434 + 4<32>:word32] = Mem1426[ebx_1322:word32] + 0x30<32>
	word32 ecx_2853
	word32 edi_2854
	word32 eax_1452 = fn0041C910(ebx_1322, es, ds, Mem1451[esp_1434 + 4<32>:word32], Mem1451[esp_1434 + 0x28<32>:word32], out ecx_2853, out ebx_1322, out ebp_1433, out esi_1432, out edi_2854)
	Mem1475[ebp_1433 + 11<i32>:byte] = 0<8>
	word32 esp_1467 = <invalid>
	esp_1442 = esp_1467 + 4<32>
	branch eax_1452 != 9<32> l00423C79
l00423C75:
	Mem1479[ebp_1433 + 11<i32>:byte] = 1<8>
l00423C79:
	Mem1482[ebp_1433 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 edx_2855
	word32 ecx_1486 = fn00401470(ebp_1433 - 28<i32>, out edx_2855)
	branch Mem1482[ebp_1433 + 11<i32>:byte] != 0<8> l00423963
l00423C92:
	Mem1497[esp_1442 - 4<i32>:word32] = 1<32>
	Mem1498[ebp_1433 - 4<i32>:word32] = 0x12<32>
	word32 esp_1517
	word32 eax_1518
	call esi_1432 (retsize: 4;)
		uses: ecx:ecx_1486
		defs: eax:eax_1518,esp:esp_1517
	Mem1523[ebp_1433 - 24<i32>:word32] = eax_1518
	Mem1524[ebp_1433 - 4<i32>:word32] = 0x13<32>
	word32 ecx_1526 = Mem1524[ebx_1322:word32]
	Mem1530[ebp_1433 - 16<i32>:word32] = 0x20<32>
	Mem1532[esp_1517 - 4<i32>:word32] = ebp_1433 - 28<i32>
	word32 esp_1540 = <invalid>
	esp_1077 = esp_1540 + 8<32>
	word32 ecx_2865
	word32 edx_2866
	word32 esi_2867
	word32 edi_2868
	branch fn00411F00(ecx_1526 + 0x30<32>, 0x00432B54<p32>, es, ds, Mem1532[esp_1517 - 4<i32>:word32], out ecx_2865, out edx_2866, out ebx_1038, out ebp_1037, out esi_2867, out edi_2868) != 0<8> l00423CDC
l00423CC8:
	Mem1557[esp_1540 + 4<32>:word32] = Mem1532[ebx_1038:word32] + 0x30<32>
	word32 ecx_2869
	word32 esi_2870
	word32 edi_2871
	word32 eax_1558 = fn0041C910(ebx_1038, es, ds, Mem1557[esp_1540 + 4<32>:word32], Mem1557[esp_1540 + 0x28<32>:word32], out ecx_2869, out ebx_1038, out ebp_1037, out esi_2870, out edi_2871)
	Mem1581[ebp_1037 + 11<i32>:byte] = 0<8>
	word32 esp_1573 = <invalid>
	esp_1077 = esp_1573 + 4<32>
	branch eax_1558 != 1<32> l00423CE0
l00423CDC:
	Mem1585[ebp_1037 + 11<i32>:byte] = 1<8>
l00423CE0:
	Mem1588[ebp_1037 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 edx_2872
	ecx_1062 = fn00401470(ebp_1037 - 28<i32>, out edx_2872)
	branch Mem1588[ebp_1037 + 11<i32>:byte] == 0<8> l004240E4
l00423CF9:
	word32 eax_1602 = Mem1588[ebx_1038:word32]
	word32 esp_1605 = esp_1077 - 4<i32>
	Mem1606[esp_1605:word32] = 0<32>
	Mem1610[esp_1605 - 4<i32>:word32] = 1<32>
	Mem1612[esp_1605 - 8<i32>:word32] = eax_1602 + 0x18<32>
	word32 esp_1638 = <invalid>
	word32 edi_1627
	word32 ecx_2882
	word32 esi_2883
	Mem1647[esp_1638:word32] = fn0041C910(ebx_1038, es, ds, Mem1612[esp_1605 - 8<i32>:word32], Mem1612[esp_1605 + 28<i32>:word32], out ecx_2882, out ebx_1038, out ebp_1037, out esi_2883, out edi_1627)
	Mem1666[edi_1627 + 96<i32>:word32] = Mem1647[edi_1627 + 96<i32>:word32] + fn0041C680(Mem1647[esp_1638:word32], Mem1647[esp_1638 + 4<i32>:word32], Mem1647[esp_1638 + 8<i32>:word32], out ecx_1062)
	esp_1077 = esp_1638 + 0xC<32>
l00423C22:
	word32 esp_1668 = esp_1336 - 4<i32>
	Mem1669[esp_1668:word32] = 0<32>
	Mem1671[esp_1668 - 4<i32>:word32] = 8<32>
	esp_1670 = esp_1668 - 4<i32>
l00423B42:
	word32 eax_1672 = Mem300[ebx_303:word32]
	Mem1674[esp_291:word32] = 0<32>
	Mem1678[esp_291 - 4<i32>:word32] = 1<32>
	Mem1680[esp_291 - 8<i32>:word32] = eax_1672 + 0x18<32>
	word32 esp_1696 = <invalid>
	word32 edi_1685
	word32 ecx_2824
	word32 esi_2825
	Mem1705[esp_1696:word32] = fn0041C910(ebx_303, es, ds, Mem1680[esp_291 - 8<i32>:word32], Mem1680[esp_291 + 28<i32>:word32], out ecx_2824, out ebx_1038, out ebp_1037, out esi_2825, out edi_1685)
	Mem1725[edi_1685 + 96<i32>:word32] = Mem1705[edi_1685 + 96<i32>:word32] + (fn0041C680(Mem1705[esp_1696:word32], Mem1705[esp_1696 + 4<i32>:word32], Mem1705[esp_1696 + 8<i32>:word32], out ecx_1062) + 0x3A6<32>)
	esp_1077 = esp_1696 + 0xC<32>
l00423AD6:
	word32 eax_1727 = Mem237[ebx_240:word32]
	Mem1729[esp_228:word32] = 0<32>
	Mem1733[esp_228 - 4<i32>:word32] = 9<32>
	Mem1735[esp_228 - 8<i32>:word32] = eax_1727 + 0x18<32>
	word32 esp_1751 = <invalid>
	word32 edi_1740
	word32 ecx_2815
	word32 esi_2816
	Mem1760[esp_1751:word32] = fn0041C910(ebx_240, es, ds, Mem1735[esp_228 - 8<i32>:word32], Mem1735[esp_228 + 28<i32>:word32], out ecx_2815, out ebx_1038, out ebp_1037, out esi_2816, out edi_1740)
	Mem1780[edi_1740 + 96<i32>:word32] = Mem1760[edi_1740 + 96<i32>:word32] + (fn0041C680(Mem1760[esp_1751:word32], Mem1760[esp_1751 + 4<i32>:word32], Mem1760[esp_1751 + 8<i32>:word32], out ecx_1062) + 0x3A6<32>)
	esp_1077 = esp_1751 + 0xC<32>
l00423A6A:
	word32 eax_1782 = Mem174[ebx_177:word32]
	Mem1784[esp_165:word32] = 0<32>
	Mem1788[esp_165 - 4<i32>:word32] = 8<32>
	Mem1790[esp_165 - 8<i32>:word32] = eax_1782 + 0x18<32>
	word32 esp_1806 = <invalid>
	word32 edi_1795
	word32 ecx_2806
	word32 esi_2807
	Mem1815[esp_1806:word32] = fn0041C910(ebx_177, es, ds, Mem1790[esp_165 - 8<i32>:word32], Mem1790[esp_165 + 28<i32>:word32], out ecx_2806, out ebx_1038, out ebp_1037, out esi_2807, out edi_1795)
	Mem1835[edi_1795 + 96<i32>:word32] = Mem1815[edi_1795 + 96<i32>:word32] + (fn0041C680(Mem1815[esp_1806:word32], Mem1815[esp_1806 + 4<i32>:word32], Mem1815[esp_1806 + 8<i32>:word32], out ecx_1062) + 0x3A6<32>)
	esp_1077 = esp_1806 + 0xC<32>
l00423841:
	Mem1838[edi_116 + 96<i32>:word32] = Mem106[edi_116 + 96<i32>:word32] + 0x3A6<32>
	Mem1840[esp_97:word32] = 1<32>
	Mem1841[ebp_113 - 4<i32>:word32] = 1<32>
	Mem1844[ebp_113 - 24<i32>:word32] = _Init(Mem1841[esp_97:(ptr32 (struct "std::locale"))], Mem1841[esp_97 + 4<i32>:bool])
	Mem1845[ebp_113 - 4<i32>:word32] = 2<32>
	word32 ecx_1847 = Mem1845[ebx_114:word32]
	Mem1851[ebp_113 - 16<i32>:word32] = 1<32>
	Mem1853[esp_97 - 4<i32>:word32] = ebp_113 - 28<i32>
	word32 esp_1861 = <invalid>
	word32 esp_1869 = esp_1861 + 8<32>
	word32 edi_2796
	word32 edx_2795
	word32 ecx_2794
	word32 ebp_1860
	word32 esi_1859
	word32 ebx_1855
	branch fn00411F00(ecx_1847 + 0x30<32>, 0x004326F8<p32>, es, ds, Mem1853[esp_97 - 4<i32>:word32], out ecx_2794, out edx_2795, out ebx_1855, out ebp_1860, out esi_1859, out edi_2796) != 0<8> l00423898
l00423884:
	Mem1878[esp_1861 + 4<32>:word32] = Mem1853[ebx_1855:word32] + 0x30<32>
	word32 edi_2798
	word32 ecx_2797
	word32 eax_1879 = fn0041C910(ebx_1855, es, ds, Mem1878[esp_1861 + 4<32>:word32], Mem1878[esp_1861 + 0x28<32>:word32], out ecx_2797, out ebx_1855, out ebp_1860, out esi_1859, out edi_2798)
	Mem1902[ebp_1860 + 11<i32>:byte] = 0<8>
	word32 esp_1894 = <invalid>
	esp_1869 = esp_1894 + 4<32>
	branch eax_1879 != 8<32> l0042389C
l00423898:
	Mem1906[ebp_1860 + 11<i32>:byte] = 1<8>
l0042389C:
	Mem1908[ebp_1860 - 4<i32>:word32] = 3<32>
	branch esi_1859 == 0<32> l004238BA
l004238A7:
	word32 eax_1914 = Mem1908[esi_1859:word32]
	word32 eax_1937
	call Mem1908[eax_1914 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_1914,ecx:esi_1909
		defs: eax:eax_1937,esp:esp_1936
	branch eax_1937 == 0<32> l004238BA
l004238B2:
	word32 edx_1945 = Mem1908[eax_1937:word32]
	Mem1948[esp_1869 - 4<i32>:word32] = 1<32>
	call Mem1948[edx_1945:word32] (retsize: 4;)
		uses: ecx:eax_1937,edx:edx_1945
		defs: esp:esp_1949
l004238BA:
	Mem1956[ebp_1860 - 4<i32>:word32] = 0xFFFFFFFF<32>
	branch Mem1956[ebp_1860 + 11<i32>:byte] == 0<8> l004238E4
l004238E4:
	word32 esp_1960 = esp_1869 - 4<i32>
	Mem1961[esp_1960:word32] = 1<32>
	Mem1962[ebp_1860 - 4<i32>:word32] = 4<32>
	Mem1965[ebp_1860 - 24<i32>:word32] = _Init(Mem1962[esp_1960:(ptr32 (struct "std::locale"))], Mem1962[esp_1960 + 4<i32>:bool])
	Mem1966[ebp_1860 - 4<i32>:word32] = 5<32>
	word32 ecx_1969 = Mem1966[ebx_1855:word32]
	Mem1973[ebp_1860 - 16<i32>:word32] = 2<32>
	Mem1975[esp_1960 - 4<i32>:word32] = ebp_1860 - 28<i32>
	word32 esp_1989 = <invalid>
	esp_1442 = esp_1989 + 8<32>
	word32 ecx_2915
	word32 edx_2916
	word32 edi_2917
	word32 ebp_1988
	word32 esi_1987
	branch fn00411F00(ecx_1969 + 0x30<32>, 0x004326FC<p32>, es, ds, Mem1975[esp_1960 - 4<i32>:word32], out ecx_2915, out edx_2916, out ebx_1322, out ebp_1988, out esi_1987, out edi_2917) != 0<8> l00423934
l00423920:
	Mem2006[esp_1989 + 4<32>:word32] = Mem1975[ebx_1322:word32] + 0x30<32>
	word32 ecx_2920
	word32 edi_2921
	word32 eax_2007 = fn0041C910(ebx_1322, es, ds, Mem2006[esp_1989 + 4<32>:word32], Mem2006[esp_1989 + 0x28<32>:word32], out ecx_2920, out ebx_1322, out ebp_1988, out esi_1987, out edi_2921)
	Mem2030[ebp_1988 + 11<i32>:byte] = 0<8>
	word32 esp_2022 = <invalid>
	esp_1442 = esp_2022 + 4<32>
	branch eax_2007 != 9<32> l00423938
l00423934:
	Mem2034[ebp_1988 + 11<i32>:byte] = 1<8>
l00423938:
	Mem2036[ebp_1988 - 4<i32>:word32] = 6<32>
	branch esi_1987 == 0<32> l00423956
l00423943:
	word32 eax_2042 = Mem2036[esi_1987:word32]
	word32 eax_2066
	call Mem2036[eax_2042 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_2042,ecx:esi_2037
		defs: eax:eax_2066,esp:esp_2065
	branch eax_2066 == 0<32> l00423956
l0042394E:
	word32 edx_2074 = Mem2036[eax_2066:word32]
	Mem2077[esp_1442 - 4<i32>:word32] = 1<32>
	call Mem2077[edx_2074:word32] (retsize: 4;)
		uses: ecx:eax_2066,edx:edx_2074
		defs: esp:esp_2078
l00423956:
	Mem2085[ebp_1988 - 4<i32>:word32] = 0xFFFFFFFF<32>
	branch Mem2085[ebp_1988 + 11<i32>:byte] == 0<8> l00423980
l00423980:
	word32 esp_2089 = esp_1442 - 4<i32>
	Mem2090[esp_2089:word32] = 1<32>
	Mem2091[ebp_1988 - 4<i32>:word32] = 7<32>
	Mem2094[ebp_1988 - 24<i32>:word32] = _Init(Mem2091[esp_2089:(ptr32 (struct "std::locale"))], Mem2091[esp_2089 + 4<i32>:bool])
	Mem2095[ebp_1988 - 4<i32>:word32] = 8<32>
	word32 ecx_2098 = Mem2095[ebx_1322:word32]
	Mem2102[ebp_1988 - 16<i32>:word32] = 4<32>
	Mem2104[esp_2089 - 4<i32>:word32] = ebp_1988 - 28<i32>
	word32 esp_2118 = <invalid>
	esp_1077 = esp_2118 + 8<32>
	word32 edx_2924
	word32 edi_2925
	word32 esi_2116
	branch fn00411F00(ecx_2098 + 0x30<32>, 0x00432B54<p32>, es, ds, Mem2104[esp_2089 - 4<i32>:word32], out ecx_1062, out edx_2924, out ebx_1038, out ebp_1037, out esi_2116, out edi_2925) != 0<8> l004239D0
l004239BC:
	Mem2135[esp_2118 + 4<32>:word32] = Mem2104[ebx_1038:word32] + 0x30<32>
	word32 edi_2926
	word32 eax_2136 = fn0041C910(ebx_1038, es, ds, Mem2135[esp_2118 + 4<32>:word32], Mem2135[esp_2118 + 0x28<32>:word32], out ecx_1062, out ebx_1038, out ebp_1037, out esi_2116, out edi_2926)
	Mem2159[ebp_1037 + 11<i32>:byte] = 0<8>
	word32 esp_2151 = <invalid>
	esp_1077 = esp_2151 + 4<32>
	branch eax_2136 != 1<32> l004239D4
l004239D0:
	Mem2163[ebp_1037 + 11<i32>:byte] = 1<8>
l004239D4:
	Mem2165[ebp_1037 - 4<i32>:word32] = 9<32>
	branch esi_2116 == 0<32> l004239F2
l004239DF:
	word32 eax_2171 = Mem2165[esi_2116:word32]
	word32 eax_2195
	call Mem2165[eax_2171 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_2171,ecx:esi_2166
		defs: eax:eax_2195,ecx:ecx_2196,esp:esp_2194
	branch eax_2195 == 0<32> l004239F2
l004239EA:
	word32 edx_2203 = Mem2165[eax_2195:word32]
	Mem2206[esp_1077 - 4<i32>:word32] = 1<32>
	call Mem2206[edx_2203:word32] (retsize: 4;)
		uses: ecx:eax_2195,edx:edx_2203
		defs: ecx:ecx_2209,esp:esp_2207
l004239F2:
	Mem2214[ebp_1037 - 4<i32>:word32] = 0xFFFFFFFF<32>
	branch Mem2214[ebp_1037 + 11<i32>:byte] == 0<8> l004240E4
l00423A03:
	word32 eax_2218 = Mem2214[ebx_1038:word32]
	word32 esp_2220 = esp_1077 - 4<i32>
	Mem2221[esp_2220:word32] = 0<32>
	Mem2225[esp_2220 - 4<i32>:word32] = 1<32>
	Mem2227[esp_2220 - 8<i32>:word32] = eax_2218 + 0x18<32>
	word32 esp_2249 = <invalid>
	word32 edi_2238
	word32 ecx_2927
	word32 esi_2928
	Mem2258[esp_2249:word32] = fn0041C910(ebx_1038, es, ds, Mem2227[esp_2220 - 8<i32>:word32], Mem2227[esp_2220 + 28<i32>:word32], out ecx_2927, out ebx_1038, out ebp_1037, out esi_2928, out edi_2238)
	Mem2277[edi_2238 + 96<i32>:word32] = Mem2258[edi_2238 + 96<i32>:word32] + fn0041C680(Mem2258[esp_2249:word32], Mem2258[esp_2249 + 4<i32>:word32], Mem2258[esp_2249 + 8<i32>:word32], out ecx_1062)
	esp_1077 = esp_2249 + 0xC<32>
l00423963:
	word32 esp_2280 = esp_1442 - 4<i32>
	Mem2281[esp_2280:word32] = 0<32>
	Mem2283[esp_2280 - 4<i32>:word32] = 9<32>
	esp_1670 = esp_2280 - 4<i32>
l00423967:
	word32 esp_2291 = esp_1670 - 4<i32>
	Mem2292[esp_2291:word32] = Mem2286[ebx_1322:word32] + 0x18<32>
	word32 esp_2320 = <invalid>
	word32 edi_2309
	word32 ecx_2851
	word32 esi_2852
	Mem2329[esp_2320:word32] = fn0041C910(ebx_1322, es, ds, Mem2292[esp_2291:word32], Mem2292[esp_2291 + 36<i32>:word32], out ecx_2851, out ebx_1038, out ebp_1037, out esi_2852, out edi_2309)
	Mem2348[edi_2309 + 96<i32>:word32] = Mem2329[edi_2309 + 96<i32>:word32] + fn0041C680(Mem2329[esp_2320:word32], Mem2329[esp_2320 + 4<i32>:word32], Mem2329[esp_2320 + 8<i32>:word32], out ecx_1062)
	esp_1077 = esp_2320 + 0xC<32>
l004238C7:
	word32 eax_2350 = Mem1956[ebx_1855:word32]
	word32 esp_2351 = esp_1869 - 4<i32>
	Mem2352[esp_2351:word32] = 0<32>
	Mem2356[esp_2351 - 4<i32>:word32] = 8<32>
	Mem2358[esp_2351 - 8<i32>:word32] = eax_2350 + 0x18<32>
	word32 esp_2374 = <invalid>
	word32 edi_2363
	word32 ecx_2918
	word32 esi_2919
	Mem2383[esp_2374:word32] = fn0041C910(ebx_1855, es, ds, Mem2358[esp_2351 - 8<i32>:word32], Mem2358[esp_2351 + 28<i32>:word32], out ecx_2918, out ebx_1038, out ebp_1037, out esi_2919, out edi_2363)
	Mem2402[edi_2363 + 96<i32>:word32] = Mem2383[edi_2363 + 96<i32>:word32] + fn0041C680(Mem2383[esp_2374:word32], Mem2383[esp_2374 + 4<i32>:word32], Mem2383[esp_2374 + 8<i32>:word32], out ecx_1062)
	esp_1077 = esp_2374 + 0xC<32>
l004240E4:
	word32 ebx_2492
	word32 esp_2407 = esp_1077 - 4<i32>
	Mem2408[esp_2407:word32] = 1<32>
	Mem2412[ebp_1037 - 4<i32>:word32] = 0x1B<32>
	Mem2417[ebp_1037 - 24<i32>:word32] = _Init(Mem2412[esp_2407:(ptr32 (struct "std::locale"))], Mem2412[esp_2407 + 4<i32>:bool])
	Mem2419[ebp_1037 - 4<i32>:word32] = 0x1C<32>
	word32 edx_2423 = Mem2419[ebx_1038:word32]
	Mem2425[esp_2407:word32] = ebp_1037 - 28<i32>
	Mem2432[esp_2407 - 4<i32>:word32] = ecx_1062
	Mem2434[ebp_1037 - 16<i32>:word32] = 0x40<32>
	word32 esp_2460 = <invalid>
	word32 ebx_2454
	word32 edi_2456
	word32 esi_2457
	word32 ebp_2459
	word32 eax_2453 = fn00427230(ebp_1037 - 36<i32>, edx_2423, es, ds, Mem2434[esp_2407:word32], out ebx_2454, out ebp_2459, out esi_2457, out edi_2456)
	word24 ebx_24_8_2493 = SLICE(ebx_2454, word24, 8)
	word32 esp_2468 = esp_2460 + 8<32>
	branch Mem2434[eax_2453:word32] == Mem2434[eax_2453 + 4<i32>:word32] l00424135
l00424122:
	branch (Mem2434[edi_2456 + 96<i32>:word32] & 0xFC000000<32>) != 0xFC000000<32> l00424135
l00424135:
	ebx_2492 = SEQ(ebx_24_8_2493, 0<8>) (alias)
l00424131:
	ebx_2492 = SEQ(ebx_24_8_2493, 1<8>) (alias)
l00424137:
	Mem2482[ebp_2459 - 4<i32>:word32] = 0x1D<32>
	byte bl_2541 = SLICE(ebx_2492, byte, 0)
	branch esi_2457 == 0<32> l00424155
l00424142:
	word32 eax_2488 = Mem2482[esi_2457:word32]
	word32 eax_2522
	call Mem2482[eax_2488 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_2488,ecx:esi_2457
		defs: eax:eax_2522,esp:esp_2521
	branch eax_2522 == 0<32> l00424155
l0042414D:
	word32 edx_2530 = Mem2482[eax_2522:word32]
	Mem2533[esp_2468 - 4<i32>:word32] = 1<32>
	call Mem2533[edx_2530:word32] (retsize: 4;)
		uses: ecx:eax_2522,edx:edx_2530
		defs: esp:esp_2534
l00424155:
	branch bl_2541 == 0<8> l0042415C
l00424159:
	Mem2548[edi_2456 + 96<i32>:word32] = Mem2546[edi_2456 + 96<i32>:word32] + 1<32>
l0042415C:
	Mem2556[fs:0x00000000<p32>:word32] = Mem2552[ebp_2459 - 12<i32>:word32]
	word32 ecx_2559 = Mem2556[esp_2468:word32]
	word32 esi_2563 = Mem2556[esp_2468 + 8<i32>:word32]
	ebpOut = Mem2556[ebp_2459:word32]
	esiOut = esi_2563
	return ecx_2559
fn004237A0_exit:


word32 fn00424170(word32 ecx, selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn00424170_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc6C
	struct <anonymous> tLoc54
l00424170:
	word32 esp_2315
	word32 ebp_2319
	word32 eax_2458
	word32 ebx_2415
	word32 ebx_7145
	word32 esi_7149
	word32 edx_7173
	word32 esp_7165
	word32 esp_7203
	word32 ebx_7182
	word32 esi_7186
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word128 xmm0_39 = fn00427210()
	word32 ecx_7568
	word32 edx_7569
	Mem61[ecx + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_39, word64, 64), SLICE(xmm0_39, real64, 0) * Mem33[0x00432E70<p32>:real64]), out ecx_7568, out edx_7569)
	Mem65[&tLoc6C + 20<i32>:word32] = 0x432BB4<32>
	word32 ebx_7570
	fn00402890(&tLoc54, Mem65[&tLoc6C + 16<i32>:word32], Mem65[&tLoc6C + 20<i32>:word32], out ebx_7570)
	word32 edi_83 = Mem76[dwArg04:word32]
	fn00403B80(&tLoc6C)
	word32 ebp_97
	word32 ebx_98 = fn00402BB0(&tLoc6C, fp - 4<i32>, edi_83, edi_83, out ebp_97)
	Mem109[ebp_97 - 4<i32>:byte] = 0<8>
	Mem111[ebp_97 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_103 = <invalid>
	word32 ebp_118
	word32 ebx_119
	word32 ecx_7571
	word32 edx_7572
	word32 esi_7573
	word32 edi_7574
	branch SLICE(fn0041C1F0(ebx_98, ebx_98, ebp_97, es, ds, Mem111[esp_103 + 40<i32>:word32], out ecx_7571, out edx_7572, out ebx_119, out ebp_118, out esi_7573, out edi_7574), byte, 0) == 0<8> l00424263
l00424263:
	Mem138[ebp_118 - 28<i32>:word32] = esp_103 - 0x18<32>
	Mem140[esp_103 - 0x1C<32>:word32] = 0x432BBC<32>
	word32 ebx_7575
	fn00402890(esp_103 - 0x18<32>, Mem140[esp_103 - 0x20<32>:word32], Mem140[esp_103 - 0x1C<32>:word32], out ebx_7575)
	Mem151[ebp_118 - 4<i32>:word32] = 2<32>
	word32 edi_157 = Mem151[Mem151[ebp_118 + 8<i32>:word32]:word32]
	Mem160[esp_103 - 0x34<32>:word32] = ebp_118 - 13<i32>
	Mem161[ebp_118 - 20<i32>:word32] = esp_103 - 0x30<32>
	Mem164[esp_103 - 0x38<32>:word32] = Mem161[ebp_118 + 8<i32>:word32]
	fn00403B80(esp_103 - 0x30<32>)
	Mem168[esp_103 - 0x34<32>:word32] = edi_157
	Mem170[ebp_118 - 4<i32>:byte] = 3<8>
	word32 ebp_172
	word32 ebx_173 = fn00402BB0(esp_103 - 0x30<32>, ebp_118, edi_157, Mem170[esp_103 - 0x34<32>:word32], out ebp_172)
	Mem184[ebp_172 - 4<i32>:byte] = 2<8>
	Mem186[ebp_172 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_178 = <invalid>
	word32 ebp_188
	word32 ebx_189
	word32 ecx_7576
	word32 edx_7577
	word32 esi_7578
	word32 edi_7579
	branch SLICE(fn0041C1F0(ebx_173, ebx_173, ebp_172, es, ds, Mem186[esp_178 + 40<i32>:word32], out ecx_7576, out edx_7577, out ebx_189, out ebp_188, out esi_7578, out edi_7579), byte, 0) == 0<8> l004242EB
l004242EB:
	Mem208[ebp_188 - 28<i32>:word32] = esp_178 - 0x18<32>
	Mem210[esp_178 - 0x1C<32>:word32] = 0x432BC4<32>
	word32 ebx_7583
	fn00402890(esp_178 - 0x18<32>, Mem210[esp_178 - 0x20<32>:word32], Mem210[esp_178 - 0x1C<32>:word32], out ebx_7583)
	Mem221[ebp_188 - 4<i32>:word32] = 4<32>
	word32 edi_227 = Mem221[Mem221[ebp_188 + 8<i32>:word32]:word32]
	Mem230[esp_178 - 0x34<32>:word32] = ebp_188 - 13<i32>
	Mem231[ebp_188 - 20<i32>:word32] = esp_178 - 0x30<32>
	Mem234[esp_178 - 0x38<32>:word32] = Mem231[ebp_188 + 8<i32>:word32]
	fn00403B80(esp_178 - 0x30<32>)
	Mem238[esp_178 - 0x34<32>:word32] = edi_227
	Mem240[ebp_188 - 4<i32>:byte] = 5<8>
	word32 ebp_242
	word32 ebx_243 = fn00402BB0(esp_178 - 0x30<32>, ebp_188, edi_227, Mem240[esp_178 - 0x34<32>:word32], out ebp_242)
	Mem254[ebp_242 - 4<i32>:byte] = 4<8>
	Mem256[ebp_242 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_248 = <invalid>
	word32 ebp_258
	word32 ebx_259
	word32 ecx_7584
	word32 edx_7585
	word32 esi_7586
	word32 edi_7587
	branch SLICE(fn0041C1F0(ebx_243, ebx_243, ebp_242, es, ds, Mem256[esp_248 + 40<i32>:word32], out ecx_7584, out edx_7585, out ebx_259, out ebp_258, out esi_7586, out edi_7587), byte, 0) == 0<8> l00424358
l00424358:
	Mem278[ebp_258 - 28<i32>:word32] = esp_248 - 0x18<32>
	Mem280[esp_248 - 0x1C<32>:word32] = 0x432BD0<32>
	word32 ebx_7604
	fn00402890(esp_248 - 0x18<32>, Mem280[esp_248 - 0x20<32>:word32], Mem280[esp_248 - 0x1C<32>:word32], out ebx_7604)
	Mem291[ebp_258 - 4<i32>:word32] = 6<32>
	word32 edi_297 = Mem291[Mem291[ebp_258 + 8<i32>:word32]:word32]
	Mem300[esp_248 - 0x34<32>:word32] = ebp_258 - 13<i32>
	Mem301[ebp_258 - 20<i32>:word32] = esp_248 - 0x30<32>
	Mem304[esp_248 - 0x38<32>:word32] = Mem301[ebp_258 + 8<i32>:word32]
	fn00403B80(esp_248 - 0x30<32>)
	Mem308[esp_248 - 0x34<32>:word32] = edi_297
	Mem310[ebp_258 - 4<i32>:byte] = 7<8>
	word32 ebp_312
	word32 ebx_313 = fn00402BB0(esp_248 - 0x30<32>, ebp_258, edi_297, Mem310[esp_248 - 0x34<32>:word32], out ebp_312)
	Mem324[ebp_312 - 4<i32>:byte] = 6<8>
	Mem326[ebp_312 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_318 = <invalid>
	word32 ebp_328
	word32 ebx_329
	word32 ecx_7605
	word32 edx_7606
	word32 esi_7607
	word32 edi_7608
	branch SLICE(fn0041C1F0(ebx_313, ebx_313, ebp_312, es, ds, Mem326[esp_318 + 40<i32>:word32], out ecx_7605, out edx_7606, out ebx_329, out ebp_328, out esi_7607, out edi_7608), byte, 0) == 0<8> l004243E0
l004243E0:
	Mem348[ebp_328 - 28<i32>:word32] = esp_318 - 0x18<32>
	Mem350[esp_318 - 0x1C<32>:word32] = 0x432BD8<32>
	word32 ebx_7615
	fn00402890(esp_318 - 0x18<32>, Mem350[esp_318 - 0x20<32>:word32], Mem350[esp_318 - 0x1C<32>:word32], out ebx_7615)
	Mem361[ebp_328 - 4<i32>:word32] = 8<32>
	word32 edi_367 = Mem361[Mem361[ebp_328 + 8<i32>:word32]:word32]
	Mem370[esp_318 - 0x34<32>:word32] = ebp_328 - 14<i32>
	Mem371[ebp_328 - 20<i32>:word32] = esp_318 - 0x30<32>
	Mem374[esp_318 - 0x38<32>:word32] = Mem371[ebp_328 + 8<i32>:word32]
	fn00403B80(esp_318 - 0x30<32>)
	Mem378[esp_318 - 0x34<32>:word32] = edi_367
	Mem380[ebp_328 - 4<i32>:byte] = 9<8>
	word32 ebp_382
	word32 ebx_383 = fn00402BB0(esp_318 - 0x30<32>, ebp_328, edi_367, Mem380[esp_318 - 0x34<32>:word32], out ebp_382)
	Mem394[ebp_382 - 4<i32>:byte] = 8<8>
	Mem396[ebp_382 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_388 = <invalid>
	word32 ebp_398
	word32 ebx_399
	word32 ecx_7616
	word32 edx_7617
	word32 esi_7618
	word32 edi_7619
	branch SLICE(fn0041C1F0(ebx_383, ebx_383, ebp_382, es, ds, Mem396[esp_388 + 40<i32>:word32], out ecx_7616, out edx_7617, out ebx_399, out ebp_398, out esi_7618, out edi_7619), byte, 0) == 0<8> l004245A3
l004245A3:
	Mem418[ebp_398 - 28<i32>:word32] = esp_388 - 0x18<32>
	Mem420[esp_388 - 0x1C<32>:word32] = 0x432BE0<32>
	word32 ebx_422
	fn00402890(esp_388 - 0x18<32>, Mem420[esp_388 - 0x20<32>:word32], Mem420[esp_388 - 0x1C<32>:word32], out ebx_422)
	Mem433[ebp_398 - 4<i32>:word32] = 0xA<32>
	word32 edi_434 = Mem433[ebp_398 + 8<i32>:word32]
	Mem438[esp_388 - 0x34<32>:word32] = 0<32>
	Mem443[esp_388 - 0x34<32>:word32] = fn0040F760(edi_434, Mem438[esp_388 - 0x34<32>:word32])
	word32 ebp_447
	word32 edx_7626
	fn004028D0(esp_388 - 0x30<32>, edi_434, Mem443[esp_388 - 0x34<32>:word32], out edx_7626, out ebp_447)
	Mem457[ebp_447 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_448 = <invalid>
	word32 ebp_459
	word32 ebx_460
	word32 edi_462
	word32 ecx_7627
	word32 edx_7628
	word32 esi_7629
	branch SLICE(fn0041C1F0(ebx_422, ebx_422, ebp_447, es, ds, Mem457[esp_448 + 0x2C<32>:word32], out ecx_7627, out edx_7628, out ebx_460, out ebp_459, out esi_7629, out edi_462), byte, 0) == 0<8> l00424752
l00424752:
	Mem479[ebp_459 + 8<i32>:word32] = esp_448 - 0x14<32>
	Mem481[esp_448 - 0x18<32>:word32] = 0x432BE8<32>
	word32 ebx_483
	fn00402890(esp_448 - 0x14<32>, Mem481[esp_448 - 0x1C<32>:word32], Mem481[esp_448 - 0x18<32>:word32], out ebx_483)
	Mem494[ebp_459 - 4<i32>:word32] = 0xB<32>
	Mem498[esp_448 - 0x30<32>:word32] = 0<32>
	Mem503[esp_448 - 0x30<32>:word32] = fn0040F760(edi_462, Mem498[esp_448 - 0x30<32>:word32])
	word32 ebp_507
	word32 edx_7644
	fn004028D0(esp_448 - 0x2C<32>, edi_462, Mem503[esp_448 - 0x30<32>:word32], out edx_7644, out ebp_507)
	Mem517[ebp_507 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_508 = <invalid>
	word32 ebp_519
	word32 ebx_520
	word32 edi_522
	word32 ecx_7645
	word32 edx_7646
	word32 esi_7647
	branch SLICE(fn0041C1F0(ebx_483, ebx_483, ebp_507, es, ds, Mem517[esp_508 + 0x2C<32>:word32], out ecx_7645, out edx_7646, out ebx_520, out ebp_519, out esi_7647, out edi_522), byte, 0) == 0<8> l004248FE
l004248FE:
	Mem539[ebp_519 + 8<i32>:word32] = esp_508 - 0x14<32>
	Mem541[esp_508 - 0x18<32>:word32] = 0x432BF0<32>
	word32 ebx_543
	fn00402890(esp_508 - 0x14<32>, Mem541[esp_508 - 0x1C<32>:word32], Mem541[esp_508 - 0x18<32>:word32], out ebx_543)
	Mem554[ebp_519 - 4<i32>:word32] = 0xC<32>
	Mem558[esp_508 - 0x30<32>:word32] = 0<32>
	Mem563[esp_508 - 0x30<32>:word32] = fn0040F760(edi_522, Mem558[esp_508 - 0x30<32>:word32])
	word32 ebp_567
	word32 edx_7660
	fn004028D0(esp_508 - 0x2C<32>, edi_522, Mem563[esp_508 - 0x30<32>:word32], out edx_7660, out ebp_567)
	Mem577[ebp_567 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_568 = <invalid>
	word32 ebp_579
	word32 ebx_580
	word32 edi_582
	word32 ecx_7661
	word32 edx_7662
	word32 esi_7663
	branch SLICE(fn0041C1F0(ebx_543, ebx_543, ebp_567, es, ds, Mem577[esp_568 + 0x2C<32>:word32], out ecx_7661, out edx_7662, out ebx_580, out ebp_579, out esi_7663, out edi_582), byte, 0) == 0<8> l00424AAA
l00424AAA:
	Mem599[ebp_579 + 8<i32>:word32] = esp_568 - 0x14<32>
	Mem601[esp_568 - 0x18<32>:word32] = 0x432BF8<32>
	word32 ebx_603
	fn00402890(esp_568 - 0x14<32>, Mem601[esp_568 - 0x1C<32>:word32], Mem601[esp_568 - 0x18<32>:word32], out ebx_603)
	Mem614[ebp_579 - 4<i32>:word32] = 0xD<32>
	Mem618[esp_568 - 0x30<32>:word32] = 0<32>
	Mem623[esp_568 - 0x30<32>:word32] = fn0040F760(edi_582, Mem618[esp_568 - 0x30<32>:word32])
	word32 ebp_627
	word32 edx_7676
	fn004028D0(esp_568 - 0x2C<32>, edi_582, Mem623[esp_568 - 0x30<32>:word32], out edx_7676, out ebp_627)
	Mem637[ebp_627 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_628 = <invalid>
	word32 ebp_639
	word32 ebx_640
	word32 edi_642
	word32 ecx_7677
	word32 edx_7678
	word32 esi_7679
	branch SLICE(fn0041C1F0(ebx_603, ebx_603, ebp_627, es, ds, Mem637[esp_628 + 0x2C<32>:word32], out ecx_7677, out edx_7678, out ebx_640, out ebp_639, out esi_7679, out edi_642), byte, 0) == 0<8> l00424B22
l00424B22:
	Mem659[ebp_639 + 8<i32>:word32] = esp_628 - 0x14<32>
	Mem661[esp_628 - 0x18<32>:word32] = 0x432C00<32>
	word32 ebx_663
	fn00402890(esp_628 - 0x14<32>, Mem661[esp_628 - 0x1C<32>:word32], Mem661[esp_628 - 0x18<32>:word32], out ebx_663)
	Mem674[ebp_639 - 4<i32>:word32] = 0xE<32>
	Mem678[esp_628 - 0x30<32>:word32] = 0<32>
	Mem683[esp_628 - 0x30<32>:word32] = fn0040F760(edi_642, Mem678[esp_628 - 0x30<32>:word32])
	word32 ebp_687
	word32 edx_7692
	fn004028D0(esp_628 - 0x2C<32>, edi_642, Mem683[esp_628 - 0x30<32>:word32], out edx_7692, out ebp_687)
	Mem697[ebp_687 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_688 = <invalid>
	word32 ebp_699
	word32 ebx_700
	word32 edi_702
	word32 ecx_7693
	word32 edx_7694
	word32 esi_7695
	branch SLICE(fn0041C1F0(ebx_663, ebx_663, ebp_687, es, ds, Mem697[esp_688 + 0x2C<32>:word32], out ecx_7693, out edx_7694, out ebx_700, out ebp_699, out esi_7695, out edi_702), byte, 0) == 0<8> l00424B9A
l00424B9A:
	Mem719[ebp_699 + 8<i32>:word32] = esp_688 - 0x14<32>
	Mem721[esp_688 - 0x18<32>:word32] = 0x432C08<32>
	word32 ebx_723
	fn00402890(esp_688 - 0x14<32>, Mem721[esp_688 - 0x1C<32>:word32], Mem721[esp_688 - 0x18<32>:word32], out ebx_723)
	Mem734[ebp_699 - 4<i32>:word32] = 0xF<32>
	Mem738[esp_688 - 0x30<32>:word32] = 0<32>
	Mem743[esp_688 - 0x30<32>:word32] = fn0040F760(edi_702, Mem738[esp_688 - 0x30<32>:word32])
	word32 ebp_747
	word32 edx_7703
	fn004028D0(esp_688 - 0x2C<32>, edi_702, Mem743[esp_688 - 0x30<32>:word32], out edx_7703, out ebp_747)
	Mem757[ebp_747 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_748 = <invalid>
	word32 ebp_759
	word32 ebx_760
	word32 edi_762
	word32 ecx_7704
	word32 edx_7705
	word32 esi_7706
	branch SLICE(fn0041C1F0(ebx_723, ebx_723, ebp_747, es, ds, Mem757[esp_748 + 0x2C<32>:word32], out ecx_7704, out edx_7705, out ebx_760, out ebp_759, out esi_7706, out edi_762), byte, 0) == 0<8> l00424C12
l00424C12:
	Mem779[ebp_759 + 8<i32>:word32] = esp_748 - 0x14<32>
	Mem781[esp_748 - 0x18<32>:word32] = 0x432C10<32>
	word32 ebx_783
	fn00402890(esp_748 - 0x14<32>, Mem781[esp_748 - 0x1C<32>:word32], Mem781[esp_748 - 0x18<32>:word32], out ebx_783)
	Mem794[ebp_759 - 4<i32>:word32] = 0x10<32>
	Mem798[esp_748 - 0x30<32>:word32] = 0<32>
	Mem803[esp_748 - 0x30<32>:word32] = fn0040F760(edi_762, Mem798[esp_748 - 0x30<32>:word32])
	word32 ebp_807
	word32 edx_7714
	fn004028D0(esp_748 - 0x2C<32>, edi_762, Mem803[esp_748 - 0x30<32>:word32], out edx_7714, out ebp_807)
	Mem817[ebp_807 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_808 = <invalid>
	word32 ebp_819
	word32 ebx_820
	word32 edi_822
	word32 ecx_7715
	word32 edx_7716
	word32 esi_7717
	branch SLICE(fn0041C1F0(ebx_783, ebx_783, ebp_807, es, ds, Mem817[esp_808 + 0x2C<32>:word32], out ecx_7715, out edx_7716, out ebx_820, out ebp_819, out esi_7717, out edi_822), byte, 0) == 0<8> l00424C88
l00424C88:
	Mem839[ebp_819 + 8<i32>:word32] = esp_808 - 0x14<32>
	Mem841[esp_808 - 0x18<32>:word32] = 0x432C18<32>
	word32 ebx_843
	fn00402890(esp_808 - 0x14<32>, Mem841[esp_808 - 0x1C<32>:word32], Mem841[esp_808 - 0x18<32>:word32], out ebx_843)
	Mem854[ebp_819 - 4<i32>:word32] = 0x11<32>
	Mem858[esp_808 - 0x30<32>:word32] = 0<32>
	Mem863[esp_808 - 0x30<32>:word32] = fn0040F760(edi_822, Mem858[esp_808 - 0x30<32>:word32])
	word32 ebp_867
	word32 edx_7725
	fn004028D0(esp_808 - 0x2C<32>, edi_822, Mem863[esp_808 - 0x30<32>:word32], out edx_7725, out ebp_867)
	Mem877[ebp_867 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_868 = <invalid>
	word32 ebp_879
	word32 ebx_880
	word32 edi_882
	word32 ecx_7726
	word32 edx_7727
	word32 esi_7728
	branch SLICE(fn0041C1F0(ebx_843, ebx_843, ebp_867, es, ds, Mem877[esp_868 + 0x2C<32>:word32], out ecx_7726, out edx_7727, out ebx_880, out ebp_879, out esi_7728, out edi_882), byte, 0) == 0<8> l00424CFE
l00424CFE:
	Mem899[ebp_879 + 8<i32>:word32] = esp_868 - 0x14<32>
	Mem901[esp_868 - 0x18<32>:word32] = 0x432C20<32>
	word32 ebx_903
	fn00402890(esp_868 - 0x14<32>, Mem901[esp_868 - 0x1C<32>:word32], Mem901[esp_868 - 0x18<32>:word32], out ebx_903)
	Mem914[ebp_879 - 4<i32>:word32] = 0x12<32>
	Mem918[esp_868 - 0x30<32>:word32] = 0<32>
	Mem923[esp_868 - 0x30<32>:word32] = fn0040F760(edi_882, Mem918[esp_868 - 0x30<32>:word32])
	word32 ebp_927
	word32 edx_7736
	fn004028D0(esp_868 - 0x2C<32>, edi_882, Mem923[esp_868 - 0x30<32>:word32], out edx_7736, out ebp_927)
	Mem937[ebp_927 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_928 = <invalid>
	word32 ebp_939
	word32 ebx_940
	word32 edi_942
	word32 ecx_7737
	word32 edx_7738
	word32 esi_7739
	branch SLICE(fn0041C1F0(ebx_903, ebx_903, ebp_927, es, ds, Mem937[esp_928 + 0x2C<32>:word32], out ecx_7737, out edx_7738, out ebx_940, out ebp_939, out esi_7739, out edi_942), byte, 0) == 0<8> l00424D74
l00424D74:
	Mem959[ebp_939 + 8<i32>:word32] = esp_928 - 0x14<32>
	Mem961[esp_928 - 0x18<32>:word32] = 0x432C2C<32>
	word32 ebx_963
	fn00402890(esp_928 - 0x14<32>, Mem961[esp_928 - 0x1C<32>:word32], Mem961[esp_928 - 0x18<32>:word32], out ebx_963)
	Mem974[ebp_939 - 4<i32>:word32] = 0x13<32>
	Mem978[esp_928 - 0x30<32>:word32] = 0<32>
	Mem983[esp_928 - 0x30<32>:word32] = fn0040F760(edi_942, Mem978[esp_928 - 0x30<32>:word32])
	word32 ebp_987
	word32 edx_7747
	fn004028D0(esp_928 - 0x2C<32>, edi_942, Mem983[esp_928 - 0x30<32>:word32], out edx_7747, out ebp_987)
	Mem997[ebp_987 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_988 = <invalid>
	word32 ebp_999
	word32 ebx_1000
	word32 edi_1002
	word32 ecx_7748
	word32 edx_7749
	word32 esi_7750
	branch SLICE(fn0041C1F0(ebx_963, ebx_963, ebp_987, es, ds, Mem997[esp_988 + 0x2C<32>:word32], out ecx_7748, out edx_7749, out ebx_1000, out ebp_999, out esi_7750, out edi_1002), byte, 0) == 0<8> l00424DFA
l00424DFA:
	Mem1019[ebp_999 + 8<i32>:word32] = esp_988 - 0x14<32>
	Mem1021[esp_988 - 0x18<32>:word32] = 0x432C34<32>
	word32 ebx_1023
	fn00402890(esp_988 - 0x14<32>, Mem1021[esp_988 - 0x1C<32>:word32], Mem1021[esp_988 - 0x18<32>:word32], out ebx_1023)
	Mem1034[ebp_999 - 4<i32>:word32] = 0x14<32>
	Mem1038[esp_988 - 0x30<32>:word32] = 0<32>
	Mem1043[esp_988 - 0x30<32>:word32] = fn0040F760(edi_1002, Mem1038[esp_988 - 0x30<32>:word32])
	word32 ebp_1047
	word32 edx_7758
	fn004028D0(esp_988 - 0x2C<32>, edi_1002, Mem1043[esp_988 - 0x30<32>:word32], out edx_7758, out ebp_1047)
	Mem1057[ebp_1047 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1048 = <invalid>
	word32 ebp_1059
	word32 ebx_1060
	word32 edi_1062
	word32 ecx_7759
	word32 edx_7760
	word32 esi_7761
	branch SLICE(fn0041C1F0(ebx_1023, ebx_1023, ebp_1047, es, ds, Mem1057[esp_1048 + 0x2C<32>:word32], out ecx_7759, out edx_7760, out ebx_1060, out ebp_1059, out esi_7761, out edi_1062), byte, 0) == 0<8> l00424E80
l00424E80:
	Mem1079[ebp_1059 + 8<i32>:word32] = esp_1048 - 0x14<32>
	Mem1081[esp_1048 - 0x18<32>:word32] = 0x432C3C<32>
	word32 ebx_1083
	fn00402890(esp_1048 - 0x14<32>, Mem1081[esp_1048 - 0x1C<32>:word32], Mem1081[esp_1048 - 0x18<32>:word32], out ebx_1083)
	Mem1094[ebp_1059 - 4<i32>:word32] = 0x15<32>
	Mem1098[esp_1048 - 0x30<32>:word32] = 0<32>
	Mem1103[esp_1048 - 0x30<32>:word32] = fn0040F760(edi_1062, Mem1098[esp_1048 - 0x30<32>:word32])
	word32 ebp_1107
	word32 edx_7772
	fn004028D0(esp_1048 - 0x2C<32>, edi_1062, Mem1103[esp_1048 - 0x30<32>:word32], out edx_7772, out ebp_1107)
	Mem1117[ebp_1107 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1108 = <invalid>
	word32 ebp_1119
	word32 ebx_1120
	word32 edi_1122
	word32 ecx_7773
	word32 edx_7774
	word32 esi_7775
	branch SLICE(fn0041C1F0(ebx_1083, ebx_1083, ebp_1107, es, ds, Mem1117[esp_1108 + 0x2C<32>:word32], out ecx_7773, out edx_7774, out ebx_1120, out ebp_1119, out esi_7775, out edi_1122), byte, 0) == 0<8> l00424F0E
l00424F0E:
	Mem1139[ebp_1119 + 8<i32>:word32] = esp_1108 - 0x14<32>
	Mem1141[esp_1108 - 0x18<32>:word32] = 0x432C48<32>
	word32 ebx_1143
	fn00402890(esp_1108 - 0x14<32>, Mem1141[esp_1108 - 0x1C<32>:word32], Mem1141[esp_1108 - 0x18<32>:word32], out ebx_1143)
	Mem1154[ebp_1119 - 4<i32>:word32] = 0x16<32>
	Mem1158[esp_1108 - 0x30<32>:word32] = 0<32>
	Mem1163[esp_1108 - 0x30<32>:word32] = fn0040F760(edi_1122, Mem1158[esp_1108 - 0x30<32>:word32])
	word32 ebp_1167
	word32 edx_7786
	fn004028D0(esp_1108 - 0x2C<32>, edi_1122, Mem1163[esp_1108 - 0x30<32>:word32], out edx_7786, out ebp_1167)
	Mem1177[ebp_1167 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1168 = <invalid>
	word32 ebp_1179
	word32 ebx_1180
	word32 edi_1182
	word32 ecx_7787
	word32 edx_7788
	word32 esi_7789
	branch SLICE(fn0041C1F0(ebx_1143, ebx_1143, ebp_1167, es, ds, Mem1177[esp_1168 + 0x2C<32>:word32], out ecx_7787, out edx_7788, out ebx_1180, out ebp_1179, out esi_7789, out edi_1182), byte, 0) == 0<8> l00424F9C
l00424F9C:
	Mem1199[ebp_1179 + 8<i32>:word32] = esp_1168 - 0x14<32>
	Mem1201[esp_1168 - 0x18<32>:word32] = 0x432C54<32>
	word32 ebx_1203
	fn00402890(esp_1168 - 0x14<32>, Mem1201[esp_1168 - 0x1C<32>:word32], Mem1201[esp_1168 - 0x18<32>:word32], out ebx_1203)
	Mem1214[ebp_1179 - 4<i32>:word32] = 0x17<32>
	Mem1218[esp_1168 - 0x30<32>:word32] = 0<32>
	Mem1223[esp_1168 - 0x30<32>:word32] = fn0040F760(edi_1182, Mem1218[esp_1168 - 0x30<32>:word32])
	word32 ebp_1227
	word32 edx_7799
	fn004028D0(esp_1168 - 0x2C<32>, edi_1182, Mem1223[esp_1168 - 0x30<32>:word32], out edx_7799, out ebp_1227)
	Mem1237[ebp_1227 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1228 = <invalid>
	word32 ebp_1239
	word32 ebx_1240
	word32 edi_1242
	word32 ecx_7800
	word32 edx_7801
	word32 esi_7802
	branch SLICE(fn0041C1F0(ebx_1203, ebx_1203, ebp_1227, es, ds, Mem1237[esp_1228 + 0x2C<32>:word32], out ecx_7800, out edx_7801, out ebx_1240, out ebp_1239, out esi_7802, out edi_1242), byte, 0) == 0<8> l0042502A
l0042502A:
	Mem1259[ebp_1239 + 8<i32>:word32] = esp_1228 - 0x14<32>
	Mem1261[esp_1228 - 0x18<32>:word32] = 0x432C5C<32>
	word32 ebx_1263
	fn00402890(esp_1228 - 0x14<32>, Mem1261[esp_1228 - 0x1C<32>:word32], Mem1261[esp_1228 - 0x18<32>:word32], out ebx_1263)
	Mem1274[ebp_1239 - 4<i32>:word32] = 0x18<32>
	Mem1278[esp_1228 - 0x30<32>:word32] = 0<32>
	Mem1283[esp_1228 - 0x30<32>:word32] = fn0040F760(edi_1242, Mem1278[esp_1228 - 0x30<32>:word32])
	word32 ebp_1287
	word32 edx_7812
	fn004028D0(esp_1228 - 0x2C<32>, edi_1242, Mem1283[esp_1228 - 0x30<32>:word32], out edx_7812, out ebp_1287)
	Mem1297[ebp_1287 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1288 = <invalid>
	word32 ebp_1299
	word32 ebx_1300
	word32 edi_1302
	word32 ecx_7813
	word32 edx_7814
	word32 esi_7815
	branch SLICE(fn0041C1F0(ebx_1263, ebx_1263, ebp_1287, es, ds, Mem1297[esp_1288 + 0x2C<32>:word32], out ecx_7813, out edx_7814, out ebx_1300, out ebp_1299, out esi_7815, out edi_1302), byte, 0) == 0<8> l004250C1
l004250C1:
	Mem1319[ebp_1299 + 8<i32>:word32] = esp_1288 - 0x14<32>
	Mem1321[esp_1288 - 0x18<32>:word32] = 0x432C68<32>
	word32 ebx_1323
	fn00402890(esp_1288 - 0x14<32>, Mem1321[esp_1288 - 0x1C<32>:word32], Mem1321[esp_1288 - 0x18<32>:word32], out ebx_1323)
	Mem1334[ebp_1299 - 4<i32>:word32] = 0x19<32>
	Mem1338[esp_1288 - 0x30<32>:word32] = 0<32>
	Mem1343[esp_1288 - 0x30<32>:word32] = fn0040F760(edi_1302, Mem1338[esp_1288 - 0x30<32>:word32])
	word32 ebp_1347
	word32 edx_7825
	fn004028D0(esp_1288 - 0x2C<32>, edi_1302, Mem1343[esp_1288 - 0x30<32>:word32], out edx_7825, out ebp_1347)
	Mem1357[ebp_1347 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1348 = <invalid>
	word32 ebp_1359
	word32 ebx_1360
	word32 edi_1362
	word32 ecx_7826
	word32 edx_7827
	word32 esi_7828
	branch SLICE(fn0041C1F0(ebx_1323, ebx_1323, ebp_1347, es, ds, Mem1357[esp_1348 + 0x2C<32>:word32], out ecx_7826, out edx_7827, out ebx_1360, out ebp_1359, out esi_7828, out edi_1362), byte, 0) == 0<8> l00425158
l00425158:
	Mem1379[ebp_1359 + 8<i32>:word32] = esp_1348 - 0x14<32>
	Mem1381[esp_1348 - 0x18<32>:word32] = 0x432C74<32>
	word32 ebx_1383
	fn00402890(esp_1348 - 0x14<32>, Mem1381[esp_1348 - 0x1C<32>:word32], Mem1381[esp_1348 - 0x18<32>:word32], out ebx_1383)
	Mem1394[ebp_1359 - 4<i32>:word32] = 0x1A<32>
	Mem1398[esp_1348 - 0x30<32>:word32] = 0<32>
	Mem1403[esp_1348 - 0x30<32>:word32] = fn0040F760(edi_1362, Mem1398[esp_1348 - 0x30<32>:word32])
	word32 ebp_1407
	word32 edx_7842
	fn004028D0(esp_1348 - 0x2C<32>, edi_1362, Mem1403[esp_1348 - 0x30<32>:word32], out edx_7842, out ebp_1407)
	Mem1417[ebp_1407 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1408 = <invalid>
	word32 esp_1415 = esp_1408 + 4<32>
	word32 ebp_1419
	word32 ecx_7843
	word32 edx_7844
	word32 esi_7845
	word32 edi_1422
	word32 ebx_1420
	branch SLICE(fn0041C1F0(ebx_1383, ebx_1383, ebp_1407, es, ds, Mem1417[esp_1408 + 0x2C<32>:word32], out ecx_7843, out edx_7844, out ebx_1420, out ebp_1419, out esi_7845, out edi_1422), byte, 0) == 0<8> l004251EF
l004251EF:
	Mem1439[ebp_1419 + 8<i32>:word32] = esp_1408 - 0x14<32>
	Mem1441[esp_1408 - 0x18<32>:word32] = 0x432C7C<32>
	word32 ebx_1443
	fn00402890(esp_1408 - 0x14<32>, Mem1441[esp_1408 - 0x1C<32>:word32], Mem1441[esp_1408 - 0x18<32>:word32], out ebx_1443)
	Mem1454[ebp_1419 - 4<i32>:word32] = 0x1B<32>
	Mem1458[esp_1408 - 0x30<32>:word32] = 0<32>
	Mem1463[esp_1408 - 0x30<32>:word32] = fn0040F760(edi_1422, Mem1458[esp_1408 - 0x30<32>:word32])
	word32 ebp_1467
	word32 edx_7859
	fn004028D0(esp_1408 - 0x2C<32>, edi_1422, Mem1463[esp_1408 - 0x30<32>:word32], out edx_7859, out ebp_1467)
	Mem1477[ebp_1467 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1468 = <invalid>
	word32 ebp_1479
	word32 ebx_1480
	word32 edi_1482
	word32 ecx_7860
	word32 edx_7861
	word32 esi_7862
	branch SLICE(fn0041C1F0(ebx_1443, ebx_1443, ebp_1467, es, ds, Mem1477[esp_1468 + 0x2C<32>:word32], out ecx_7860, out edx_7861, out ebx_1480, out ebp_1479, out esi_7862, out edi_1482), byte, 0) == 0<8> l00425277
l00425277:
	Mem1499[ebp_1479 + 8<i32>:word32] = esp_1468 - 0x14<32>
	Mem1501[esp_1468 - 0x18<32>:word32] = 0x432C88<32>
	word32 ebx_1503
	fn00402890(esp_1468 - 0x14<32>, Mem1501[esp_1468 - 0x1C<32>:word32], Mem1501[esp_1468 - 0x18<32>:word32], out ebx_1503)
	Mem1514[ebp_1479 - 4<i32>:word32] = 0x1C<32>
	Mem1518[esp_1468 - 0x30<32>:word32] = 0<32>
	Mem1523[esp_1468 - 0x30<32>:word32] = fn0040F760(edi_1482, Mem1518[esp_1468 - 0x30<32>:word32])
	word32 ebp_1527
	word32 edx_7876
	fn004028D0(esp_1468 - 0x2C<32>, edi_1482, Mem1523[esp_1468 - 0x30<32>:word32], out edx_7876, out ebp_1527)
	Mem1537[ebp_1527 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1528 = <invalid>
	word32 ebp_1539
	word32 ebx_1540
	word32 edi_1542
	word32 ecx_7877
	word32 edx_7878
	word32 esi_7879
	branch SLICE(fn0041C1F0(ebx_1503, ebx_1503, ebp_1527, es, ds, Mem1537[esp_1528 + 0x2C<32>:word32], out ecx_7877, out edx_7878, out ebx_1540, out ebp_1539, out esi_7879, out edi_1542), byte, 0) == 0<8> l004252FF
l004252FF:
	Mem1559[ebp_1539 + 8<i32>:word32] = esp_1528 - 0x14<32>
	Mem1561[esp_1528 - 0x18<32>:word32] = 0x432C94<32>
	word32 ebx_1563
	fn00402890(esp_1528 - 0x14<32>, Mem1561[esp_1528 - 0x1C<32>:word32], Mem1561[esp_1528 - 0x18<32>:word32], out ebx_1563)
	Mem1574[ebp_1539 - 4<i32>:word32] = 0x1D<32>
	Mem1578[esp_1528 - 0x30<32>:word32] = 0<32>
	Mem1583[esp_1528 - 0x30<32>:word32] = fn0040F760(edi_1542, Mem1578[esp_1528 - 0x30<32>:word32])
	word32 ebp_1587
	word32 edx_7890
	fn004028D0(esp_1528 - 0x2C<32>, edi_1542, Mem1583[esp_1528 - 0x30<32>:word32], out edx_7890, out ebp_1587)
	Mem1597[ebp_1587 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1588 = <invalid>
	word32 ebp_1599
	word32 ebx_1600
	word32 edi_1602
	word32 ecx_7891
	word32 edx_7892
	word32 esi_7893
	branch SLICE(fn0041C1F0(ebx_1563, ebx_1563, ebp_1587, es, ds, Mem1597[esp_1588 + 0x2C<32>:word32], out ecx_7891, out edx_7892, out ebx_1600, out ebp_1599, out esi_7893, out edi_1602), byte, 0) == 0<8> l00425387
l00425387:
	Mem1619[ebp_1599 + 8<i32>:word32] = esp_1588 - 0x14<32>
	Mem1621[esp_1588 - 0x18<32>:word32] = 0x432CA0<32>
	word32 ebx_1623
	fn00402890(esp_1588 - 0x14<32>, Mem1621[esp_1588 - 0x1C<32>:word32], Mem1621[esp_1588 - 0x18<32>:word32], out ebx_1623)
	Mem1634[ebp_1599 - 4<i32>:word32] = 0x1E<32>
	Mem1638[esp_1588 - 0x30<32>:word32] = 0<32>
	Mem1643[esp_1588 - 0x30<32>:word32] = fn0040F760(edi_1602, Mem1638[esp_1588 - 0x30<32>:word32])
	word32 ebp_1647
	word32 edx_7904
	fn004028D0(esp_1588 - 0x2C<32>, edi_1602, Mem1643[esp_1588 - 0x30<32>:word32], out edx_7904, out ebp_1647)
	Mem1657[ebp_1647 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1648 = <invalid>
	word32 ebp_1659
	word32 ebx_1660
	word32 edi_1662
	word32 ecx_7905
	word32 edx_7906
	word32 esi_7907
	branch SLICE(fn0041C1F0(ebx_1623, ebx_1623, ebp_1647, es, ds, Mem1657[esp_1648 + 0x2C<32>:word32], out ecx_7905, out edx_7906, out ebx_1660, out ebp_1659, out esi_7907, out edi_1662), byte, 0) == 0<8> l0042540F
l0042540F:
	Mem1679[ebp_1659 + 8<i32>:word32] = esp_1648 - 0x14<32>
	Mem1681[esp_1648 - 0x18<32>:word32] = 0x432CAC<32>
	word32 ebx_1683
	fn00402890(esp_1648 - 0x14<32>, Mem1681[esp_1648 - 0x1C<32>:word32], Mem1681[esp_1648 - 0x18<32>:word32], out ebx_1683)
	Mem1694[ebp_1659 - 4<i32>:word32] = 0x1F<32>
	Mem1698[esp_1648 - 0x30<32>:word32] = 0<32>
	Mem1703[esp_1648 - 0x30<32>:word32] = fn0040F760(edi_1662, Mem1698[esp_1648 - 0x30<32>:word32])
	word32 ebp_1707
	word32 edx_7918
	fn004028D0(esp_1648 - 0x2C<32>, edi_1662, Mem1703[esp_1648 - 0x30<32>:word32], out edx_7918, out ebp_1707)
	Mem1717[ebp_1707 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1708 = <invalid>
	word32 ebp_1719
	word32 ebx_1720
	word32 edi_1722
	word32 ecx_7919
	word32 edx_7920
	word32 esi_7921
	branch SLICE(fn0041C1F0(ebx_1683, ebx_1683, ebp_1707, es, ds, Mem1717[esp_1708 + 0x2C<32>:word32], out ecx_7919, out edx_7920, out ebx_1720, out ebp_1719, out esi_7921, out edi_1722), byte, 0) == 0<8> l004254A6
l004254A6:
	Mem1739[ebp_1719 + 8<i32>:word32] = esp_1708 - 0x14<32>
	Mem1741[esp_1708 - 0x18<32>:word32] = 0x432CB8<32>
	word32 ebx_1743
	fn00402890(esp_1708 - 0x14<32>, Mem1741[esp_1708 - 0x1C<32>:word32], Mem1741[esp_1708 - 0x18<32>:word32], out ebx_1743)
	Mem1754[ebp_1719 - 4<i32>:word32] = 0x20<32>
	Mem1758[esp_1708 - 0x30<32>:word32] = 0<32>
	Mem1763[esp_1708 - 0x30<32>:word32] = fn0040F760(edi_1722, Mem1758[esp_1708 - 0x30<32>:word32])
	word32 ebp_1767
	word32 edx_7932
	fn004028D0(esp_1708 - 0x2C<32>, edi_1722, Mem1763[esp_1708 - 0x30<32>:word32], out edx_7932, out ebp_1767)
	Mem1777[ebp_1767 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1768 = <invalid>
	word32 ebp_1779
	word32 ebx_1780
	word32 edi_1782
	word32 ecx_7933
	word32 edx_7934
	word32 esi_7935
	branch SLICE(fn0041C1F0(ebx_1743, ebx_1743, ebp_1767, es, ds, Mem1777[esp_1768 + 0x2C<32>:word32], out ecx_7933, out edx_7934, out ebx_1780, out ebp_1779, out esi_7935, out edi_1782), byte, 0) == 0<8> l0042553D
l0042553D:
	Mem1799[ebp_1779 + 8<i32>:word32] = esp_1768 - 0x14<32>
	Mem1801[esp_1768 - 0x18<32>:word32] = 0x432C74<32>
	word32 ebx_1803
	fn00402890(esp_1768 - 0x14<32>, Mem1801[esp_1768 - 0x1C<32>:word32], Mem1801[esp_1768 - 0x18<32>:word32], out ebx_1803)
	Mem1814[ebp_1779 - 4<i32>:word32] = 0x21<32>
	Mem1818[esp_1768 - 0x30<32>:word32] = 0<32>
	Mem1823[esp_1768 - 0x30<32>:word32] = fn0040F760(edi_1782, Mem1818[esp_1768 - 0x30<32>:word32])
	word32 ebp_1827
	word32 edx_7949
	fn004028D0(esp_1768 - 0x2C<32>, edi_1782, Mem1823[esp_1768 - 0x30<32>:word32], out edx_7949, out ebp_1827)
	Mem1837[ebp_1827 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1828 = <invalid>
	esp_1415 = esp_1828 + 4<32>
	word32 ebp_1839
	word32 ecx_7950
	word32 edx_7951
	word32 esi_7952
	branch SLICE(fn0041C1F0(ebx_1803, ebx_1803, ebp_1827, es, ds, Mem1837[esp_1828 + 0x2C<32>:word32], out ecx_7950, out edx_7951, out ebx_1420, out ebp_1839, out esi_7952, out edi_1422), byte, 0) != 0<8> l00425199
l00425582:
	Mem1859[ebp_1839 + 8<i32>:word32] = esp_1828 - 0x14<32>
	Mem1861[esp_1828 - 0x18<32>:word32] = 0x432CC4<32>
	word32 ebx_1863
	fn00402890(esp_1828 - 0x14<32>, Mem1861[esp_1828 - 0x1C<32>:word32], Mem1861[esp_1828 - 0x18<32>:word32], out ebx_1863)
	Mem1874[ebp_1839 - 4<i32>:word32] = 0x22<32>
	Mem1878[esp_1828 - 0x30<32>:word32] = 0<32>
	Mem1883[esp_1828 - 0x30<32>:word32] = fn0040F760(edi_1422, Mem1878[esp_1828 - 0x30<32>:word32])
	word32 ebp_1887
	word32 edx_7966
	fn004028D0(esp_1828 - 0x2C<32>, edi_1422, Mem1883[esp_1828 - 0x30<32>:word32], out edx_7966, out ebp_1887)
	Mem1897[ebp_1887 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1888 = <invalid>
	word32 ebp_1899
	word32 ebx_1900
	word32 edi_1902
	word32 ecx_7967
	word32 edx_7968
	word32 esi_7969
	branch SLICE(fn0041C1F0(ebx_1863, ebx_1863, ebp_1887, es, ds, Mem1897[esp_1888 + 0x2C<32>:word32], out ecx_7967, out edx_7968, out ebx_1900, out ebp_1899, out esi_7969, out edi_1902), byte, 0) == 0<8> l00425619
l00425619:
	Mem1919[ebp_1899 + 8<i32>:word32] = esp_1888 - 0x14<32>
	Mem1921[esp_1888 - 0x18<32>:word32] = 0x432CCC<32>
	word32 ebx_1923
	fn00402890(esp_1888 - 0x14<32>, Mem1921[esp_1888 - 0x1C<32>:word32], Mem1921[esp_1888 - 0x18<32>:word32], out ebx_1923)
	Mem1934[ebp_1899 - 4<i32>:word32] = 0x23<32>
	Mem1938[esp_1888 - 0x30<32>:word32] = 0<32>
	Mem1943[esp_1888 - 0x30<32>:word32] = fn0040F760(edi_1902, Mem1938[esp_1888 - 0x30<32>:word32])
	word32 ebp_1947
	word32 edx_7970
	fn004028D0(esp_1888 - 0x2C<32>, edi_1902, Mem1943[esp_1888 - 0x30<32>:word32], out edx_7970, out ebp_1947)
	Mem1957[ebp_1947 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1948 = <invalid>
	word32 ebp_1959
	word32 ebx_1960
	word32 edi_1962
	word32 ecx_7971
	word32 edx_7972
	word32 esi_7973
	branch SLICE(fn0041C1F0(ebx_1923, ebx_1923, ebp_1947, es, ds, Mem1957[esp_1948 + 0x2C<32>:word32], out ecx_7971, out edx_7972, out ebx_1960, out ebp_1959, out esi_7973, out edi_1962), byte, 0) == 0<8> l004256B0
l004256B0:
	Mem1979[ebp_1959 + 8<i32>:word32] = esp_1948 - 0x14<32>
	Mem1981[esp_1948 - 0x18<32>:word32] = 0x432CD4<32>
	word32 ebx_1983
	fn00402890(esp_1948 - 0x14<32>, Mem1981[esp_1948 - 0x1C<32>:word32], Mem1981[esp_1948 - 0x18<32>:word32], out ebx_1983)
	Mem1994[ebp_1959 - 4<i32>:word32] = 0x24<32>
	Mem1998[esp_1948 - 0x30<32>:word32] = 0<32>
	Mem2003[esp_1948 - 0x30<32>:word32] = fn0040F760(edi_1962, Mem1998[esp_1948 - 0x30<32>:word32])
	word32 ebp_2007
	word32 edx_7987
	fn004028D0(esp_1948 - 0x2C<32>, edi_1962, Mem2003[esp_1948 - 0x30<32>:word32], out edx_7987, out ebp_2007)
	Mem2017[ebp_2007 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2008 = <invalid>
	word32 ebp_2019
	word32 ebx_2020
	word32 edi_2022
	word32 ecx_7988
	word32 edx_7989
	word32 esi_7990
	branch SLICE(fn0041C1F0(ebx_1983, ebx_1983, ebp_2007, es, ds, Mem2017[esp_2008 + 0x2C<32>:word32], out ecx_7988, out edx_7989, out ebx_2020, out ebp_2019, out esi_7990, out edi_2022), byte, 0) == 0<8> l00425747
l00425747:
	Mem2039[ebp_2019 + 8<i32>:word32] = esp_2008 - 0x14<32>
	Mem2041[esp_2008 - 0x18<32>:word32] = 0x432CDC<32>
	word32 ebx_2043
	fn00402890(esp_2008 - 0x14<32>, Mem2041[esp_2008 - 0x1C<32>:word32], Mem2041[esp_2008 - 0x18<32>:word32], out ebx_2043)
	Mem2054[ebp_2019 - 4<i32>:word32] = 0x25<32>
	Mem2058[esp_2008 - 0x30<32>:word32] = 0<32>
	Mem2063[esp_2008 - 0x30<32>:word32] = fn0040F760(edi_2022, Mem2058[esp_2008 - 0x30<32>:word32])
	word32 ebp_2067
	word32 edx_8004
	fn004028D0(esp_2008 - 0x2C<32>, edi_2022, Mem2063[esp_2008 - 0x30<32>:word32], out edx_8004, out ebp_2067)
	Mem2077[ebp_2067 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2068 = <invalid>
	word32 ebp_2079
	word32 ebx_2080
	word32 edi_2082
	word32 ecx_8005
	word32 edx_8006
	word32 esi_8007
	branch SLICE(fn0041C1F0(ebx_2043, ebx_2043, ebp_2067, es, ds, Mem2077[esp_2068 + 0x2C<32>:word32], out ecx_8005, out edx_8006, out ebx_2080, out ebp_2079, out esi_8007, out edi_2082), byte, 0) == 0<8> l004257DE
l004257DE:
	Mem2099[ebp_2079 + 8<i32>:word32] = esp_2068 - 0x14<32>
	Mem2101[esp_2068 - 0x18<32>:word32] = 0x432CE4<32>
	word32 ebx_2103
	fn00402890(esp_2068 - 0x14<32>, Mem2101[esp_2068 - 0x1C<32>:word32], Mem2101[esp_2068 - 0x18<32>:word32], out ebx_2103)
	Mem2114[ebp_2079 - 4<i32>:word32] = 0x26<32>
	Mem2118[esp_2068 - 0x30<32>:word32] = 0<32>
	Mem2123[esp_2068 - 0x30<32>:word32] = fn0040F760(edi_2082, Mem2118[esp_2068 - 0x30<32>:word32])
	word32 ebp_2127
	word32 edx_8021
	fn004028D0(esp_2068 - 0x2C<32>, edi_2082, Mem2123[esp_2068 - 0x30<32>:word32], out edx_8021, out ebp_2127)
	Mem2137[ebp_2127 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2128 = <invalid>
	word32 ebp_2139
	word32 ebx_2140
	word32 edi_2142
	word32 ecx_8022
	word32 edx_8023
	word32 esi_8024
	branch SLICE(fn0041C1F0(ebx_2103, ebx_2103, ebp_2127, es, ds, Mem2137[esp_2128 + 0x2C<32>:word32], out ecx_8022, out edx_8023, out ebx_2140, out ebp_2139, out esi_8024, out edi_2142), byte, 0) == 0<8> l00425867
l00425867:
	Mem2159[ebp_2139 + 8<i32>:word32] = esp_2128 - 0x14<32>
	Mem2161[esp_2128 - 0x18<32>:word32] = 0x432CF0<32>
	word32 ebx_2163
	fn00402890(esp_2128 - 0x14<32>, Mem2161[esp_2128 - 0x1C<32>:word32], Mem2161[esp_2128 - 0x18<32>:word32], out ebx_2163)
	Mem2174[ebp_2139 - 4<i32>:word32] = 0x27<32>
	Mem2178[esp_2128 - 0x30<32>:word32] = 0<32>
	Mem2183[esp_2128 - 0x30<32>:word32] = fn0040F760(edi_2142, Mem2178[esp_2128 - 0x30<32>:word32])
	word32 ebp_2187
	word32 edx_8038
	fn004028D0(esp_2128 - 0x2C<32>, edi_2142, Mem2183[esp_2128 - 0x30<32>:word32], out edx_8038, out ebp_2187)
	Mem2197[ebp_2187 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2188 = <invalid>
	word32 ebp_2199
	word32 ebx_2200
	word32 edi_2202
	word32 ecx_8039
	word32 edx_8040
	word32 esi_8041
	branch SLICE(fn0041C1F0(ebx_2163, ebx_2163, ebp_2187, es, ds, Mem2197[esp_2188 + 0x2C<32>:word32], out ecx_8039, out edx_8040, out ebx_2200, out ebp_2199, out esi_8041, out edi_2202), byte, 0) == 0<8> l004258F2
l004258F2:
	Mem2219[ebp_2199 + 8<i32>:word32] = esp_2188 - 0x14<32>
	Mem2221[esp_2188 - 0x18<32>:word32] = 0x432CFC<32>
	word32 ebx_2223
	fn00402890(esp_2188 - 0x14<32>, Mem2221[esp_2188 - 0x1C<32>:word32], Mem2221[esp_2188 - 0x18<32>:word32], out ebx_2223)
	Mem2234[ebp_2199 - 4<i32>:word32] = 0x28<32>
	Mem2238[esp_2188 - 0x30<32>:word32] = 0<32>
	Mem2243[esp_2188 - 0x30<32>:word32] = fn0040F760(edi_2202, Mem2238[esp_2188 - 0x30<32>:word32])
	word32 ebp_2247
	word32 edx_8052
	fn004028D0(esp_2188 - 0x2C<32>, edi_2202, Mem2243[esp_2188 - 0x30<32>:word32], out edx_8052, out ebp_2247)
	Mem2257[ebp_2247 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2248 = <invalid>
	word32 ebp_2259
	word32 ebx_2260
	word32 edi_2262
	word32 ecx_8053
	word32 edx_8054
	word32 esi_8055
	branch SLICE(fn0041C1F0(ebx_2223, ebx_2223, ebp_2247, es, ds, Mem2257[esp_2248 + 0x2C<32>:word32], out ecx_8053, out edx_8054, out ebx_2260, out ebp_2259, out esi_8055, out edi_2262), byte, 0) == 0<8> l00425978
l00425978:
	Mem2279[ebp_2259 + 8<i32>:word32] = esp_2248 - 0x14<32>
	Mem2281[esp_2248 - 0x18<32>:word32] = 0x432D08<32>
	word32 ebx_2283
	fn00402890(esp_2248 - 0x14<32>, Mem2281[esp_2248 - 0x1C<32>:word32], Mem2281[esp_2248 - 0x18<32>:word32], out ebx_2283)
	Mem2294[ebp_2259 - 4<i32>:word32] = 0x29<32>
	Mem2298[esp_2248 - 0x30<32>:word32] = 0<32>
	Mem2303[esp_2248 - 0x30<32>:word32] = fn0040F760(edi_2262, Mem2298[esp_2248 - 0x30<32>:word32])
	word32 ebp_2307
	word32 edx_8066
	fn004028D0(esp_2248 - 0x2C<32>, edi_2262, Mem2303[esp_2248 - 0x30<32>:word32], out edx_8066, out ebp_2307)
	Mem2317[ebp_2307 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2308 = <invalid>
	esp_2315 = esp_2308 + 4<32>
	word32 ebx_2320
	word32 edi_2322
	word32 ecx_8067
	word32 edx_8068
	word32 esi_8069
	branch SLICE(fn0041C1F0(ebx_2283, ebx_2283, ebp_2307, es, ds, Mem2317[esp_2308 + 0x2C<32>:word32], out ecx_8067, out edx_8068, out ebx_2320, out ebp_2319, out esi_8069, out edi_2322), byte, 0) == 0<8> l004259FF
l004259B9:
	Mem2337[esp_2308:word32] = 3<32>
	Mem2343[esp_2308:word32] = fn0040F760(edi_2322, Mem2337[esp_2308:word32])
	word32 esp_2360 = <invalid>
	word32 ebx_2347
	word32 edi_2349
	word32 ecx_8080
	word32 ebp_8081
	word32 esi_8082
	Mem2369[esp_2360:word32] = fn0041C910(ebx_2320, es, ds, Mem2343[esp_2308:word32], Mem2343[esp_2308 + 36<i32>:word32], out ecx_8080, out ebx_2347, out ebp_8081, out esi_8082, out edi_2349)
	Mem2371[esp_2360 - 4<i32>:word32] = 2<32>
	Mem2377[esp_2360 - 4<i32>:word32] = fn0040F760(edi_2349, Mem2371[esp_2360 - 4<i32>:word32])
	word32 esp_2394 = <invalid>
	word32 ebx_2381
	word32 edi_2383
	word32 ecx_8083
	word32 ebp_8084
	word32 esi_8085
	Mem2403[esp_2394:word32] = fn0041C910(ebx_2347, es, ds, Mem2377[esp_2360 - 4<i32>:word32], Mem2377[esp_2360 + 32<i32>:word32], out ecx_8083, out ebx_2381, out ebp_8084, out esi_8085, out edi_2383)
	Mem2405[esp_2394 - 4<i32>:word32] = 1<32>
	Mem2411[esp_2394 - 4<i32>:word32] = fn0040F760(edi_2383, Mem2405[esp_2394 - 4<i32>:word32])
	word32 esp_2428 = <invalid>
	word32 ecx_8086
	word32 esi_8087
	word32 edi_8088
	Mem2440[esp_2428:word32] = fn0041C910(ebx_2381, es, ds, Mem2411[esp_2394 - 4<i32>:word32], Mem2411[esp_2394 + 32<i32>:word32], out ecx_8086, out ebx_2415, out ebp_2319, out esi_8087, out edi_8088) << 2<32>
	esp_2315 = esp_2428 + 0xC<32>
	word32 ecx_8089
	eax_2458 = fn0041C680(Mem2440[esp_2428:word32], Mem2440[esp_2428 + 4<i32>:word32], Mem2440[esp_2428 + 8<i32>:word32], out ecx_8089) - 0xFFFFFF80<32>
l00425933:
	Mem2461[esp_2248:word32] = 3<32>
	Mem2467[esp_2248:word32] = fn0040F760(edi_2262, Mem2461[esp_2248:word32])
	word32 esp_2484 = <invalid>
	word32 ebx_2471
	word32 edi_2473
	word32 ecx_8070
	word32 ebp_8071
	word32 esi_8072
	Mem2493[esp_2484:word32] = fn0041C910(ebx_2260, es, ds, Mem2467[esp_2248:word32], Mem2467[esp_2248 + 36<i32>:word32], out ecx_8070, out ebx_2471, out ebp_8071, out esi_8072, out edi_2473)
	Mem2495[esp_2484 - 4<i32>:word32] = 2<32>
	Mem2501[esp_2484 - 4<i32>:word32] = fn0040F760(edi_2473, Mem2495[esp_2484 - 4<i32>:word32])
	word32 esp_2518 = <invalid>
	word32 ebx_2505
	word32 edi_2507
	word32 ecx_8073
	word32 ebp_8074
	word32 esi_8075
	Mem2527[esp_2518:word32] = fn0041C910(ebx_2471, es, ds, Mem2501[esp_2484 - 4<i32>:word32], Mem2501[esp_2484 + 32<i32>:word32], out ecx_8073, out ebx_2505, out ebp_8074, out esi_8075, out edi_2507)
	Mem2529[esp_2518 - 4<i32>:word32] = 1<32>
	Mem2535[esp_2518 - 4<i32>:word32] = fn0040F760(edi_2507, Mem2529[esp_2518 - 4<i32>:word32])
	word32 esp_2552 = <invalid>
	word32 ecx_8076
	word32 esi_8077
	word32 edi_8078
	Mem2564[esp_2552:word32] = fn0041C910(ebx_2505, es, ds, Mem2535[esp_2518 - 4<i32>:word32], Mem2535[esp_2518 + 32<i32>:word32], out ecx_8076, out ebx_2415, out ebp_2319, out esi_8077, out edi_8078) << 2<32>
	word32 ecx_8079
	eax_2458 = fn0041C680(Mem2564[esp_2552:word32], Mem2564[esp_2552 + 4<i32>:word32], Mem2564[esp_2552 + 8<i32>:word32], out ecx_8079)
	esp_2315 = esp_2552 + 0xC<32>
l004258A8:
	Mem2583[esp_2188:word32] = 3<32>
	Mem2589[esp_2188:word32] = fn0040F760(edi_2202, Mem2583[esp_2188:word32])
	word32 esp_2606 = <invalid>
	word32 ebx_2593
	word32 edi_2595
	word32 ecx_8056
	word32 ebp_8057
	word32 esi_8058
	Mem2615[esp_2606:word32] = fn0041C910(ebx_2200, es, ds, Mem2589[esp_2188:word32], Mem2589[esp_2188 + 36<i32>:word32], out ecx_8056, out ebx_2593, out ebp_8057, out esi_8058, out edi_2595)
	Mem2617[esp_2606 - 4<i32>:word32] = 2<32>
	Mem2623[esp_2606 - 4<i32>:word32] = fn0040F760(edi_2595, Mem2617[esp_2606 - 4<i32>:word32])
	word32 esp_2640 = <invalid>
	word32 ebx_2627
	word32 edi_2629
	word32 ecx_8059
	word32 ebp_8060
	word32 esi_8061
	Mem2649[esp_2640:word32] = fn0041C910(ebx_2593, es, ds, Mem2623[esp_2606 - 4<i32>:word32], Mem2623[esp_2606 + 32<i32>:word32], out ecx_8059, out ebx_2627, out ebp_8060, out esi_8061, out edi_2629)
	Mem2651[esp_2640 - 4<i32>:word32] = 1<32>
	Mem2657[esp_2640 - 4<i32>:word32] = fn0040F760(edi_2629, Mem2651[esp_2640 - 4<i32>:word32])
	word32 esp_2674 = <invalid>
	word32 ecx_8062
	word32 esi_8063
	word32 edi_8064
	Mem2686[esp_2674:word32] = fn0041C910(ebx_2627, es, ds, Mem2657[esp_2640 - 4<i32>:word32], Mem2657[esp_2640 + 32<i32>:word32], out ecx_8062, out ebx_2415, out ebp_2319, out esi_8063, out edi_8064) << 2<32>
	esp_2315 = esp_2674 + 0xC<32>
	word32 ecx_8065
	eax_2458 = fn0041C680(Mem2686[esp_2674:word32], Mem2686[esp_2674 + 4<i32>:word32], Mem2686[esp_2674 + 8<i32>:word32], out ecx_8065) + 0xC0<32>
l0042581F:
	Mem2707[esp_2128:word32] = 3<32>
	Mem2713[esp_2128:word32] = fn0040F760(edi_2142, Mem2707[esp_2128:word32])
	word32 esp_2730 = <invalid>
	word32 ebx_2717
	word32 edi_2719
	word32 ecx_8042
	word32 ebp_8043
	word32 esi_8044
	Mem2739[esp_2730:word32] = fn0041C910(ebx_2140, es, ds, Mem2713[esp_2128:word32], Mem2713[esp_2128 + 36<i32>:word32], out ecx_8042, out ebx_2717, out ebp_8043, out esi_8044, out edi_2719)
	Mem2741[esp_2730 - 4<i32>:word32] = 2<32>
	Mem2747[esp_2730 - 4<i32>:word32] = fn0040F760(edi_2719, Mem2741[esp_2730 - 4<i32>:word32])
	word32 esp_2764 = <invalid>
	word32 ebx_2751
	word32 edi_2753
	word32 ecx_8045
	word32 ebp_8046
	word32 esi_8047
	Mem2773[esp_2764:word32] = fn0041C910(ebx_2717, es, ds, Mem2747[esp_2730 - 4<i32>:word32], Mem2747[esp_2730 + 32<i32>:word32], out ecx_8045, out ebx_2751, out ebp_8046, out esi_8047, out edi_2753)
	Mem2775[esp_2764 - 4<i32>:word32] = 1<32>
	Mem2781[esp_2764 - 4<i32>:word32] = fn0040F760(edi_2753, Mem2775[esp_2764 - 4<i32>:word32])
	word32 esp_2798 = <invalid>
	word32 ecx_8048
	word32 esi_8049
	word32 edi_8050
	Mem2810[esp_2798:word32] = fn0041C910(ebx_2751, es, ds, Mem2781[esp_2764 - 4<i32>:word32], Mem2781[esp_2764 + 32<i32>:word32], out ecx_8048, out ebx_2415, out ebp_2319, out esi_8049, out edi_8050) << 2<32>
	esp_2315 = esp_2798 + 0xC<32>
	word32 ecx_8051
	eax_2458 = fn0041C680(Mem2810[esp_2798:word32], Mem2810[esp_2798 + 4<i32>:word32], Mem2810[esp_2798 + 8<i32>:word32], out ecx_8051) + 0x40<32>
l00425788:
	Mem2831[esp_2068:word32] = 0x17<32>
	Mem2833[esp_2068 - 4<i32>:word32] = 3<32>
	Mem2839[esp_2068 - 4<i32>:word32] = fn0040F760(edi_2082, Mem2833[esp_2068 - 4<i32>:word32])
	word32 esp_2856 = <invalid>
	word32 ebx_2843
	word32 edi_2845
	word32 ecx_8025
	word32 ebp_8026
	word32 esi_8027
	Mem2865[esp_2856:word32] = fn0041C910(ebx_2080, es, ds, Mem2839[esp_2068 - 4<i32>:word32], Mem2839[esp_2068 + 32<i32>:word32], out ecx_8025, out ebx_2843, out ebp_8026, out esi_8027, out edi_2845)
	Mem2867[esp_2856 - 4<i32>:word32] = 4<32>
	Mem2873[esp_2856 - 4<i32>:word32] = fn0040F760(edi_2845, Mem2867[esp_2856 - 4<i32>:word32])
	word32 esp_2890 = <invalid>
	word32 ebx_2877
	word32 edi_2879
	word32 ecx_8028
	word32 ebp_8029
	word32 esi_8030
	Mem2899[esp_2890:word32] = fn0041C910(ebx_2843, es, ds, Mem2873[esp_2856 - 4<i32>:word32], Mem2873[esp_2856 + 32<i32>:word32], out ecx_8028, out ebx_2877, out ebp_8029, out esi_8030, out edi_2879)
	Mem2901[esp_2890 - 4<i32>:word32] = 1<32>
	Mem2907[esp_2890 - 4<i32>:word32] = fn0040F760(edi_2879, Mem2901[esp_2890 - 4<i32>:word32])
	word32 esp_2924 = <invalid>
	word32 ebx_2911
	word32 edi_2913
	word32 ecx_8031
	word32 ebp_8032
	word32 esi_8033
	Mem2933[esp_2924:word32] = fn0041C910(ebx_2877, es, ds, Mem2907[esp_2890 - 4<i32>:word32], Mem2907[esp_2890 + 32<i32>:word32], out ecx_8031, out ebx_2911, out ebp_8032, out esi_8033, out edi_2913)
	Mem2935[esp_2924 - 4<i32>:word32] = 2<32>
	Mem2941[esp_2924 - 4<i32>:word32] = fn0040F760(edi_2913, Mem2935[esp_2924 - 4<i32>:word32])
	word32 esp_2958 = <invalid>
	word32 ecx_8034
	word32 esi_8035
	word32 edi_8036
	Mem2967[esp_2958:word32] = fn0041C910(ebx_2911, es, ds, Mem2941[esp_2924 - 4<i32>:word32], Mem2941[esp_2924 + 32<i32>:word32], out ecx_8034, out ebx_2415, out ebp_2319, out esi_8035, out edi_8036)
	word32 ecx_8037
	eax_2458 = fn0041C7E0(Mem2967[esp_2958:word32], Mem2967[esp_2958 + 4<i32>:word32], Mem2967[esp_2958 + 8<i32>:word32], Mem2967[esp_2958 + 12<i32>:word32], Mem2967[esp_2958 + 16<i32>:word32], out ecx_8037)
	esp_2315 = esp_2958 + 0x14<32>
l004256F1:
	Mem2987[esp_2008:word32] = 0xB<32>
	Mem2989[esp_2008 - 4<i32>:word32] = 3<32>
	Mem2995[esp_2008 - 4<i32>:word32] = fn0040F760(edi_2022, Mem2989[esp_2008 - 4<i32>:word32])
	word32 esp_3012 = <invalid>
	word32 ebx_2999
	word32 edi_3001
	word32 ecx_8008
	word32 ebp_8009
	word32 esi_8010
	Mem3021[esp_3012:word32] = fn0041C910(ebx_2020, es, ds, Mem2995[esp_2008 - 4<i32>:word32], Mem2995[esp_2008 + 32<i32>:word32], out ecx_8008, out ebx_2999, out ebp_8009, out esi_8010, out edi_3001)
	Mem3023[esp_3012 - 4<i32>:word32] = 4<32>
	Mem3029[esp_3012 - 4<i32>:word32] = fn0040F760(edi_3001, Mem3023[esp_3012 - 4<i32>:word32])
	word32 esp_3046 = <invalid>
	word32 ebx_3033
	word32 edi_3035
	word32 ecx_8011
	word32 ebp_8012
	word32 esi_8013
	Mem3055[esp_3046:word32] = fn0041C910(ebx_2999, es, ds, Mem3029[esp_3012 - 4<i32>:word32], Mem3029[esp_3012 + 32<i32>:word32], out ecx_8011, out ebx_3033, out ebp_8012, out esi_8013, out edi_3035)
	Mem3057[esp_3046 - 4<i32>:word32] = 1<32>
	Mem3063[esp_3046 - 4<i32>:word32] = fn0040F760(edi_3035, Mem3057[esp_3046 - 4<i32>:word32])
	word32 esp_3080 = <invalid>
	word32 ebx_3067
	word32 edi_3069
	word32 ecx_8014
	word32 ebp_8015
	word32 esi_8016
	Mem3089[esp_3080:word32] = fn0041C910(ebx_3033, es, ds, Mem3063[esp_3046 - 4<i32>:word32], Mem3063[esp_3046 + 32<i32>:word32], out ecx_8014, out ebx_3067, out ebp_8015, out esi_8016, out edi_3069)
	Mem3091[esp_3080 - 4<i32>:word32] = 2<32>
	Mem3097[esp_3080 - 4<i32>:word32] = fn0040F760(edi_3069, Mem3091[esp_3080 - 4<i32>:word32])
	word32 esp_3114 = <invalid>
	word32 ecx_8017
	word32 esi_8018
	word32 edi_8019
	Mem3123[esp_3114:word32] = fn0041C910(ebx_3067, es, ds, Mem3097[esp_3080 - 4<i32>:word32], Mem3097[esp_3080 + 32<i32>:word32], out ecx_8017, out ebx_2415, out ebp_2319, out esi_8018, out edi_8019)
	word32 ecx_8020
	eax_2458 = fn0041C7E0(Mem3123[esp_3114:word32], Mem3123[esp_3114 + 4<i32>:word32], Mem3123[esp_3114 + 8<i32>:word32], Mem3123[esp_3114 + 12<i32>:word32], Mem3123[esp_3114 + 16<i32>:word32], out ecx_8020)
	esp_2315 = esp_3114 + 0x14<32>
l0042565A:
	Mem3143[esp_1948:word32] = 0xA<32>
	Mem3145[esp_1948 - 4<i32>:word32] = 3<32>
	Mem3151[esp_1948 - 4<i32>:word32] = fn0040F760(edi_1962, Mem3145[esp_1948 - 4<i32>:word32])
	word32 esp_3168 = <invalid>
	word32 ebx_3155
	word32 edi_3157
	word32 ecx_7991
	word32 ebp_7992
	word32 esi_7993
	Mem3177[esp_3168:word32] = fn0041C910(ebx_1960, es, ds, Mem3151[esp_1948 - 4<i32>:word32], Mem3151[esp_1948 + 32<i32>:word32], out ecx_7991, out ebx_3155, out ebp_7992, out esi_7993, out edi_3157)
	Mem3179[esp_3168 - 4<i32>:word32] = 4<32>
	Mem3185[esp_3168 - 4<i32>:word32] = fn0040F760(edi_3157, Mem3179[esp_3168 - 4<i32>:word32])
	word32 esp_3202 = <invalid>
	word32 ebx_3189
	word32 edi_3191
	word32 ecx_7994
	word32 ebp_7995
	word32 esi_7996
	Mem3211[esp_3202:word32] = fn0041C910(ebx_3155, es, ds, Mem3185[esp_3168 - 4<i32>:word32], Mem3185[esp_3168 + 32<i32>:word32], out ecx_7994, out ebx_3189, out ebp_7995, out esi_7996, out edi_3191)
	Mem3213[esp_3202 - 4<i32>:word32] = 1<32>
	Mem3219[esp_3202 - 4<i32>:word32] = fn0040F760(edi_3191, Mem3213[esp_3202 - 4<i32>:word32])
	word32 esp_3236 = <invalid>
	word32 ebx_3223
	word32 edi_3225
	word32 ecx_7997
	word32 ebp_7998
	word32 esi_7999
	Mem3245[esp_3236:word32] = fn0041C910(ebx_3189, es, ds, Mem3219[esp_3202 - 4<i32>:word32], Mem3219[esp_3202 + 32<i32>:word32], out ecx_7997, out ebx_3223, out ebp_7998, out esi_7999, out edi_3225)
	Mem3247[esp_3236 - 4<i32>:word32] = 2<32>
	Mem3253[esp_3236 - 4<i32>:word32] = fn0040F760(edi_3225, Mem3247[esp_3236 - 4<i32>:word32])
	word32 esp_3270 = <invalid>
	word32 ecx_8000
	word32 esi_8001
	word32 edi_8002
	Mem3279[esp_3270:word32] = fn0041C910(ebx_3223, es, ds, Mem3253[esp_3236 - 4<i32>:word32], Mem3253[esp_3236 + 32<i32>:word32], out ecx_8000, out ebx_2415, out ebp_2319, out esi_8001, out edi_8002)
	word32 ecx_8003
	eax_2458 = fn0041C7E0(Mem3279[esp_3270:word32], Mem3279[esp_3270 + 4<i32>:word32], Mem3279[esp_3270 + 8<i32>:word32], Mem3279[esp_3270 + 12<i32>:word32], Mem3279[esp_3270 + 16<i32>:word32], out ecx_8003)
	esp_2315 = esp_3270 + 0x14<32>
l004255C3:
	Mem3299[esp_1888:word32] = 0x1C<32>
	Mem3301[esp_1888 - 4<i32>:word32] = 3<32>
	Mem3307[esp_1888 - 4<i32>:word32] = fn0040F760(edi_1902, Mem3301[esp_1888 - 4<i32>:word32])
	word32 esp_3324 = <invalid>
	word32 ebx_3311
	word32 edi_3313
	word32 ecx_7974
	word32 ebp_7975
	word32 esi_7976
	Mem3333[esp_3324:word32] = fn0041C910(ebx_1900, es, ds, Mem3307[esp_1888 - 4<i32>:word32], Mem3307[esp_1888 + 32<i32>:word32], out ecx_7974, out ebx_3311, out ebp_7975, out esi_7976, out edi_3313)
	Mem3335[esp_3324 - 4<i32>:word32] = 4<32>
	Mem3341[esp_3324 - 4<i32>:word32] = fn0040F760(edi_3313, Mem3335[esp_3324 - 4<i32>:word32])
	word32 esp_3358 = <invalid>
	word32 ebx_3345
	word32 edi_3347
	word32 ecx_7977
	word32 ebp_7978
	word32 esi_7979
	Mem3367[esp_3358:word32] = fn0041C910(ebx_3311, es, ds, Mem3341[esp_3324 - 4<i32>:word32], Mem3341[esp_3324 + 32<i32>:word32], out ecx_7977, out ebx_3345, out ebp_7978, out esi_7979, out edi_3347)
	Mem3369[esp_3358 - 4<i32>:word32] = 1<32>
	Mem3375[esp_3358 - 4<i32>:word32] = fn0040F760(edi_3347, Mem3369[esp_3358 - 4<i32>:word32])
	word32 esp_3392 = <invalid>
	word32 ebx_3379
	word32 edi_3381
	word32 ecx_7980
	word32 ebp_7981
	word32 esi_7982
	Mem3401[esp_3392:word32] = fn0041C910(ebx_3345, es, ds, Mem3375[esp_3358 - 4<i32>:word32], Mem3375[esp_3358 + 32<i32>:word32], out ecx_7980, out ebx_3379, out ebp_7981, out esi_7982, out edi_3381)
	Mem3403[esp_3392 - 4<i32>:word32] = 2<32>
	Mem3409[esp_3392 - 4<i32>:word32] = fn0040F760(edi_3381, Mem3403[esp_3392 - 4<i32>:word32])
	word32 esp_3426 = <invalid>
	word32 ecx_7983
	word32 esi_7984
	word32 edi_7985
	Mem3435[esp_3426:word32] = fn0041C910(ebx_3379, es, ds, Mem3409[esp_3392 - 4<i32>:word32], Mem3409[esp_3392 + 32<i32>:word32], out ecx_7983, out ebx_2415, out ebp_2319, out esi_7984, out edi_7985)
	word32 ecx_7986
	eax_2458 = fn0041C7E0(Mem3435[esp_3426:word32], Mem3435[esp_3426 + 4<i32>:word32], Mem3435[esp_3426 + 8<i32>:word32], Mem3435[esp_3426 + 12<i32>:word32], Mem3435[esp_3426 + 16<i32>:word32], out ecx_7986)
	esp_2315 = esp_3426 + 0x14<32>
l004254E7:
	Mem3455[esp_1768:word32] = 0x1E<32>
	Mem3457[esp_1768 - 4<i32>:word32] = 3<32>
	Mem3463[esp_1768 - 4<i32>:word32] = fn0040F760(edi_1782, Mem3457[esp_1768 - 4<i32>:word32])
	word32 esp_3480 = <invalid>
	word32 ebx_3467
	word32 edi_3469
	word32 ecx_7953
	word32 ebp_7954
	word32 esi_7955
	Mem3489[esp_3480:word32] = fn0041C910(ebx_1780, es, ds, Mem3463[esp_1768 - 4<i32>:word32], Mem3463[esp_1768 + 32<i32>:word32], out ecx_7953, out ebx_3467, out ebp_7954, out esi_7955, out edi_3469)
	Mem3491[esp_3480 - 4<i32>:word32] = 4<32>
	Mem3497[esp_3480 - 4<i32>:word32] = fn0040F760(edi_3469, Mem3491[esp_3480 - 4<i32>:word32])
	word32 esp_3514 = <invalid>
	word32 ebx_3501
	word32 edi_3503
	word32 ecx_7956
	word32 ebp_7957
	word32 esi_7958
	Mem3523[esp_3514:word32] = fn0041C910(ebx_3467, es, ds, Mem3497[esp_3480 - 4<i32>:word32], Mem3497[esp_3480 + 32<i32>:word32], out ecx_7956, out ebx_3501, out ebp_7957, out esi_7958, out edi_3503)
	Mem3525[esp_3514 - 4<i32>:word32] = 1<32>
	Mem3531[esp_3514 - 4<i32>:word32] = fn0040F760(edi_3503, Mem3525[esp_3514 - 4<i32>:word32])
	word32 esp_3548 = <invalid>
	word32 ebx_3535
	word32 edi_3537
	word32 ecx_7959
	word32 ebp_7960
	word32 esi_7961
	Mem3557[esp_3548:word32] = fn0041C910(ebx_3501, es, ds, Mem3531[esp_3514 - 4<i32>:word32], Mem3531[esp_3514 + 32<i32>:word32], out ecx_7959, out ebx_3535, out ebp_7960, out esi_7961, out edi_3537)
	Mem3559[esp_3548 - 4<i32>:word32] = 2<32>
	Mem3565[esp_3548 - 4<i32>:word32] = fn0040F760(edi_3537, Mem3559[esp_3548 - 4<i32>:word32])
	word32 esp_3582 = <invalid>
	word32 ecx_7962
	word32 esi_7963
	word32 edi_7964
	Mem3591[esp_3582:word32] = fn0041C910(ebx_3535, es, ds, Mem3565[esp_3548 - 4<i32>:word32], Mem3565[esp_3548 + 32<i32>:word32], out ecx_7962, out ebx_2415, out ebp_2319, out esi_7963, out edi_7964)
	word32 ecx_7965
	eax_2458 = fn0041C7E0(Mem3591[esp_3582:word32], Mem3591[esp_3582 + 4<i32>:word32], Mem3591[esp_3582 + 8<i32>:word32], Mem3591[esp_3582 + 12<i32>:word32], Mem3591[esp_3582 + 16<i32>:word32], out ecx_7965)
	esp_2315 = esp_3582 + 0x14<32>
l00425450:
	Mem3611[esp_1708:word32] = 0x1F<32>
	Mem3613[esp_1708 - 4<i32>:word32] = 3<32>
	Mem3619[esp_1708 - 4<i32>:word32] = fn0040F760(edi_1722, Mem3613[esp_1708 - 4<i32>:word32])
	word32 esp_3636 = <invalid>
	word32 ebx_3623
	word32 edi_3625
	word32 ecx_7936
	word32 ebp_7937
	word32 esi_7938
	Mem3645[esp_3636:word32] = fn0041C910(ebx_1720, es, ds, Mem3619[esp_1708 - 4<i32>:word32], Mem3619[esp_1708 + 32<i32>:word32], out ecx_7936, out ebx_3623, out ebp_7937, out esi_7938, out edi_3625)
	Mem3647[esp_3636 - 4<i32>:word32] = 4<32>
	Mem3653[esp_3636 - 4<i32>:word32] = fn0040F760(edi_3625, Mem3647[esp_3636 - 4<i32>:word32])
	word32 esp_3670 = <invalid>
	word32 ebx_3657
	word32 edi_3659
	word32 ecx_7939
	word32 ebp_7940
	word32 esi_7941
	Mem3679[esp_3670:word32] = fn0041C910(ebx_3623, es, ds, Mem3653[esp_3636 - 4<i32>:word32], Mem3653[esp_3636 + 32<i32>:word32], out ecx_7939, out ebx_3657, out ebp_7940, out esi_7941, out edi_3659)
	Mem3681[esp_3670 - 4<i32>:word32] = 1<32>
	Mem3687[esp_3670 - 4<i32>:word32] = fn0040F760(edi_3659, Mem3681[esp_3670 - 4<i32>:word32])
	word32 esp_3704 = <invalid>
	word32 ebx_3691
	word32 edi_3693
	word32 ecx_7942
	word32 ebp_7943
	word32 esi_7944
	Mem3713[esp_3704:word32] = fn0041C910(ebx_3657, es, ds, Mem3687[esp_3670 - 4<i32>:word32], Mem3687[esp_3670 + 32<i32>:word32], out ecx_7942, out ebx_3691, out ebp_7943, out esi_7944, out edi_3693)
	Mem3715[esp_3704 - 4<i32>:word32] = 2<32>
	Mem3721[esp_3704 - 4<i32>:word32] = fn0040F760(edi_3693, Mem3715[esp_3704 - 4<i32>:word32])
	word32 esp_3738 = <invalid>
	word32 ecx_7945
	word32 esi_7946
	word32 edi_7947
	Mem3747[esp_3738:word32] = fn0041C910(ebx_3691, es, ds, Mem3721[esp_3704 - 4<i32>:word32], Mem3721[esp_3704 + 32<i32>:word32], out ecx_7945, out ebx_2415, out ebp_2319, out esi_7946, out edi_7947)
	word32 ecx_7948
	eax_2458 = fn0041C7E0(Mem3747[esp_3738:word32], Mem3747[esp_3738 + 4<i32>:word32], Mem3747[esp_3738 + 8<i32>:word32], Mem3747[esp_3738 + 12<i32>:word32], Mem3747[esp_3738 + 16<i32>:word32], out ecx_7948)
	esp_2315 = esp_3738 + 0x14<32>
l004253C8:
	Mem3767[esp_1648:word32] = 3<32>
	Mem3773[esp_1648:word32] = fn0040F760(edi_1662, Mem3767[esp_1648:word32])
	word32 esp_3790 = <invalid>
	word32 ebx_3777
	word32 edi_3779
	word32 ecx_7922
	word32 ebp_7923
	word32 esi_7924
	Mem3799[esp_3790:word32] = fn0041C910(ebx_1660, es, ds, Mem3773[esp_1648:word32], Mem3773[esp_1648 + 36<i32>:word32], out ecx_7922, out ebx_3777, out ebp_7923, out esi_7924, out edi_3779)
	Mem3801[esp_3790 - 4<i32>:word32] = 2<32>
	Mem3807[esp_3790 - 4<i32>:word32] = fn0040F760(edi_3779, Mem3801[esp_3790 - 4<i32>:word32])
	word32 esp_3824 = <invalid>
	word32 ebx_3811
	word32 edi_3813
	word32 ecx_7925
	word32 ebp_7926
	word32 esi_7927
	Mem3833[esp_3824:word32] = fn0041C910(ebx_3777, es, ds, Mem3807[esp_3790 - 4<i32>:word32], Mem3807[esp_3790 + 32<i32>:word32], out ecx_7925, out ebx_3811, out ebp_7926, out esi_7927, out edi_3813)
	Mem3835[esp_3824 - 4<i32>:word32] = 1<32>
	Mem3841[esp_3824 - 4<i32>:word32] = fn0040F760(edi_3813, Mem3835[esp_3824 - 4<i32>:word32])
	word32 esp_3858 = <invalid>
	word32 ecx_7928
	word32 esi_7929
	word32 edi_7930
	Mem3867[esp_3858:word32] = fn0041C910(ebx_3811, es, ds, Mem3841[esp_3824 - 4<i32>:word32], Mem3841[esp_3824 + 32<i32>:word32], out ecx_7928, out ebx_2415, out ebp_2319, out esi_7929, out edi_7930)
	esp_2315 = esp_3858 + 0xC<32>
	word32 ecx_7931
	eax_2458 = fn0041C680(Mem3867[esp_3858:word32], Mem3867[esp_3858 + 4<i32>:word32], Mem3867[esp_3858 + 8<i32>:word32], out ecx_7931) + 0x4E0<32>
l00425340:
	Mem3889[esp_1588:word32] = 3<32>
	Mem3895[esp_1588:word32] = fn0040F760(edi_1602, Mem3889[esp_1588:word32])
	word32 esp_3912 = <invalid>
	word32 ebx_3899
	word32 edi_3901
	word32 ecx_7908
	word32 ebp_7909
	word32 esi_7910
	Mem3921[esp_3912:word32] = fn0041C910(ebx_1600, es, ds, Mem3895[esp_1588:word32], Mem3895[esp_1588 + 36<i32>:word32], out ecx_7908, out ebx_3899, out ebp_7909, out esi_7910, out edi_3901)
	Mem3923[esp_3912 - 4<i32>:word32] = 2<32>
	Mem3929[esp_3912 - 4<i32>:word32] = fn0040F760(edi_3901, Mem3923[esp_3912 - 4<i32>:word32])
	word32 esp_3946 = <invalid>
	word32 ebx_3933
	word32 edi_3935
	word32 ecx_7911
	word32 ebp_7912
	word32 esi_7913
	Mem3955[esp_3946:word32] = fn0041C910(ebx_3899, es, ds, Mem3929[esp_3912 - 4<i32>:word32], Mem3929[esp_3912 + 32<i32>:word32], out ecx_7911, out ebx_3933, out ebp_7912, out esi_7913, out edi_3935)
	Mem3957[esp_3946 - 4<i32>:word32] = 1<32>
	Mem3963[esp_3946 - 4<i32>:word32] = fn0040F760(edi_3935, Mem3957[esp_3946 - 4<i32>:word32])
	word32 esp_3980 = <invalid>
	word32 ecx_7914
	word32 esi_7915
	word32 edi_7916
	Mem3989[esp_3980:word32] = fn0041C910(ebx_3933, es, ds, Mem3963[esp_3946 - 4<i32>:word32], Mem3963[esp_3946 + 32<i32>:word32], out ecx_7914, out ebx_2415, out ebp_2319, out esi_7915, out edi_7916)
	esp_2315 = esp_3980 + 0xC<32>
	word32 ecx_7917
	eax_2458 = fn0041C680(Mem3989[esp_3980:word32], Mem3989[esp_3980 + 4<i32>:word32], Mem3989[esp_3980 + 8<i32>:word32], out ecx_7917) + 0x4A0<32>
l004252B8:
	Mem4011[esp_1528:word32] = 3<32>
	Mem4017[esp_1528:word32] = fn0040F760(edi_1542, Mem4011[esp_1528:word32])
	word32 esp_4034 = <invalid>
	word32 ebx_4021
	word32 edi_4023
	word32 ecx_7894
	word32 ebp_7895
	word32 esi_7896
	Mem4043[esp_4034:word32] = fn0041C910(ebx_1540, es, ds, Mem4017[esp_1528:word32], Mem4017[esp_1528 + 36<i32>:word32], out ecx_7894, out ebx_4021, out ebp_7895, out esi_7896, out edi_4023)
	Mem4045[esp_4034 - 4<i32>:word32] = 2<32>
	Mem4051[esp_4034 - 4<i32>:word32] = fn0040F760(edi_4023, Mem4045[esp_4034 - 4<i32>:word32])
	word32 esp_4068 = <invalid>
	word32 ebx_4055
	word32 edi_4057
	word32 ecx_7897
	word32 ebp_7898
	word32 esi_7899
	Mem4077[esp_4068:word32] = fn0041C910(ebx_4021, es, ds, Mem4051[esp_4034 - 4<i32>:word32], Mem4051[esp_4034 + 32<i32>:word32], out ecx_7897, out ebx_4055, out ebp_7898, out esi_7899, out edi_4057)
	Mem4079[esp_4068 - 4<i32>:word32] = 1<32>
	Mem4085[esp_4068 - 4<i32>:word32] = fn0040F760(edi_4057, Mem4079[esp_4068 - 4<i32>:word32])
	word32 esp_4102 = <invalid>
	word32 ecx_7900
	word32 esi_7901
	word32 edi_7902
	Mem4111[esp_4102:word32] = fn0041C910(ebx_4055, es, ds, Mem4085[esp_4068 - 4<i32>:word32], Mem4085[esp_4068 + 32<i32>:word32], out ecx_7900, out ebx_2415, out ebp_2319, out esi_7901, out edi_7902)
	esp_2315 = esp_4102 + 0xC<32>
	word32 ecx_7903
	eax_2458 = fn0041C680(Mem4111[esp_4102:word32], Mem4111[esp_4102 + 4<i32>:word32], Mem4111[esp_4102 + 8<i32>:word32], out ecx_7903) + 0x460<32>
l00425230:
	Mem4133[esp_1468:word32] = 3<32>
	Mem4139[esp_1468:word32] = fn0040F760(edi_1482, Mem4133[esp_1468:word32])
	word32 esp_4156 = <invalid>
	word32 ebx_4143
	word32 edi_4145
	word32 ecx_7880
	word32 ebp_7881
	word32 esi_7882
	Mem4165[esp_4156:word32] = fn0041C910(ebx_1480, es, ds, Mem4139[esp_1468:word32], Mem4139[esp_1468 + 36<i32>:word32], out ecx_7880, out ebx_4143, out ebp_7881, out esi_7882, out edi_4145)
	Mem4167[esp_4156 - 4<i32>:word32] = 2<32>
	Mem4173[esp_4156 - 4<i32>:word32] = fn0040F760(edi_4145, Mem4167[esp_4156 - 4<i32>:word32])
	word32 esp_4190 = <invalid>
	word32 ebx_4177
	word32 edi_4179
	word32 ecx_7883
	word32 ebp_7884
	word32 esi_7885
	Mem4199[esp_4190:word32] = fn0041C910(ebx_4143, es, ds, Mem4173[esp_4156 - 4<i32>:word32], Mem4173[esp_4156 + 32<i32>:word32], out ecx_7883, out ebx_4177, out ebp_7884, out esi_7885, out edi_4179)
	Mem4201[esp_4190 - 4<i32>:word32] = 1<32>
	Mem4207[esp_4190 - 4<i32>:word32] = fn0040F760(edi_4179, Mem4201[esp_4190 - 4<i32>:word32])
	word32 esp_4224 = <invalid>
	word32 ecx_7886
	word32 esi_7887
	word32 edi_7888
	Mem4233[esp_4224:word32] = fn0041C910(ebx_4177, es, ds, Mem4207[esp_4190 - 4<i32>:word32], Mem4207[esp_4190 + 32<i32>:word32], out ecx_7886, out ebx_2415, out ebp_2319, out esi_7887, out edi_7888)
	esp_2315 = esp_4224 + 0xC<32>
	word32 ecx_7889
	eax_2458 = fn0041C680(Mem4233[esp_4224:word32], Mem4233[esp_4224 + 4<i32>:word32], Mem4233[esp_4224 + 8<i32>:word32], out ecx_7889) + 0x420<32>
l00425199:
	word32 esp_4255 = esp_1415 - 4<i32>
	Mem4256[esp_4255:word32] = 0x1D<32>
	Mem4258[esp_4255 - 4<i32>:word32] = 3<32>
	Mem4265[esp_4255 - 4<i32>:word32] = fn0040F760(edi_1422, Mem4258[esp_4255 - 4<i32>:word32])
	word32 esp_4289 = <invalid>
	word32 ebx_4276
	word32 edi_4278
	word32 ecx_7863
	word32 ebp_7864
	word32 esi_7865
	Mem4298[esp_4289:word32] = fn0041C910(ebx_1420, es, ds, Mem4265[esp_4255 - 4<i32>:word32], Mem4265[esp_4255 + 32<i32>:word32], out ecx_7863, out ebx_4276, out ebp_7864, out esi_7865, out edi_4278)
	Mem4300[esp_4289 - 4<i32>:word32] = 4<32>
	Mem4306[esp_4289 - 4<i32>:word32] = fn0040F760(edi_4278, Mem4300[esp_4289 - 4<i32>:word32])
	word32 esp_4323 = <invalid>
	word32 ebx_4310
	word32 edi_4312
	word32 ecx_7866
	word32 ebp_7867
	word32 esi_7868
	Mem4332[esp_4323:word32] = fn0041C910(ebx_4276, es, ds, Mem4306[esp_4289 - 4<i32>:word32], Mem4306[esp_4289 + 32<i32>:word32], out ecx_7866, out ebx_4310, out ebp_7867, out esi_7868, out edi_4312)
	Mem4334[esp_4323 - 4<i32>:word32] = 1<32>
	Mem4340[esp_4323 - 4<i32>:word32] = fn0040F760(edi_4312, Mem4334[esp_4323 - 4<i32>:word32])
	word32 esp_4357 = <invalid>
	word32 ebx_4344
	word32 edi_4346
	word32 ecx_7869
	word32 ebp_7870
	word32 esi_7871
	Mem4366[esp_4357:word32] = fn0041C910(ebx_4310, es, ds, Mem4340[esp_4323 - 4<i32>:word32], Mem4340[esp_4323 + 32<i32>:word32], out ecx_7869, out ebx_4344, out ebp_7870, out esi_7871, out edi_4346)
	Mem4368[esp_4357 - 4<i32>:word32] = 2<32>
	Mem4374[esp_4357 - 4<i32>:word32] = fn0040F760(edi_4346, Mem4368[esp_4357 - 4<i32>:word32])
	word32 esp_4391 = <invalid>
	word32 ecx_7872
	word32 esi_7873
	word32 edi_7874
	Mem4400[esp_4391:word32] = fn0041C910(ebx_4344, es, ds, Mem4374[esp_4357 - 4<i32>:word32], Mem4374[esp_4357 + 32<i32>:word32], out ecx_7872, out ebx_2415, out ebp_2319, out esi_7873, out edi_7874)
	word32 ecx_7875
	eax_2458 = fn0041C7E0(Mem4400[esp_4391:word32], Mem4400[esp_4391 + 4<i32>:word32], Mem4400[esp_4391 + 8<i32>:word32], Mem4400[esp_4391 + 12<i32>:word32], Mem4400[esp_4391 + 16<i32>:word32], out ecx_7875)
	esp_2315 = esp_4391 + 0x14<32>
l00425102:
	Mem4420[esp_1348:word32] = 0xF<32>
	Mem4422[esp_1348 - 4<i32>:word32] = 3<32>
	Mem4428[esp_1348 - 4<i32>:word32] = fn0040F760(edi_1362, Mem4422[esp_1348 - 4<i32>:word32])
	word32 esp_4445 = <invalid>
	word32 ebx_4432
	word32 edi_4434
	word32 ecx_7846
	word32 ebp_7847
	word32 esi_7848
	Mem4454[esp_4445:word32] = fn0041C910(ebx_1360, es, ds, Mem4428[esp_1348 - 4<i32>:word32], Mem4428[esp_1348 + 32<i32>:word32], out ecx_7846, out ebx_4432, out ebp_7847, out esi_7848, out edi_4434)
	Mem4456[esp_4445 - 4<i32>:word32] = 4<32>
	Mem4462[esp_4445 - 4<i32>:word32] = fn0040F760(edi_4434, Mem4456[esp_4445 - 4<i32>:word32])
	word32 esp_4479 = <invalid>
	word32 ebx_4466
	word32 edi_4468
	word32 ecx_7849
	word32 ebp_7850
	word32 esi_7851
	Mem4488[esp_4479:word32] = fn0041C910(ebx_4432, es, ds, Mem4462[esp_4445 - 4<i32>:word32], Mem4462[esp_4445 + 32<i32>:word32], out ecx_7849, out ebx_4466, out ebp_7850, out esi_7851, out edi_4468)
	Mem4490[esp_4479 - 4<i32>:word32] = 1<32>
	Mem4496[esp_4479 - 4<i32>:word32] = fn0040F760(edi_4468, Mem4490[esp_4479 - 4<i32>:word32])
	word32 esp_4513 = <invalid>
	word32 ebx_4500
	word32 edi_4502
	word32 ecx_7852
	word32 ebp_7853
	word32 esi_7854
	Mem4522[esp_4513:word32] = fn0041C910(ebx_4466, es, ds, Mem4496[esp_4479 - 4<i32>:word32], Mem4496[esp_4479 + 32<i32>:word32], out ecx_7852, out ebx_4500, out ebp_7853, out esi_7854, out edi_4502)
	Mem4524[esp_4513 - 4<i32>:word32] = 2<32>
	Mem4530[esp_4513 - 4<i32>:word32] = fn0040F760(edi_4502, Mem4524[esp_4513 - 4<i32>:word32])
	word32 esp_4547 = <invalid>
	word32 ecx_7855
	word32 esi_7856
	word32 edi_7857
	Mem4556[esp_4547:word32] = fn0041C910(ebx_4500, es, ds, Mem4530[esp_4513 - 4<i32>:word32], Mem4530[esp_4513 + 32<i32>:word32], out ecx_7855, out ebx_2415, out ebp_2319, out esi_7856, out edi_7857)
	word32 ecx_7858
	eax_2458 = fn0041C7E0(Mem4556[esp_4547:word32], Mem4556[esp_4547 + 4<i32>:word32], Mem4556[esp_4547 + 8<i32>:word32], Mem4556[esp_4547 + 12<i32>:word32], Mem4556[esp_4547 + 16<i32>:word32], out ecx_7858)
	esp_2315 = esp_4547 + 0x14<32>
l0042506B:
	Mem4576[esp_1288:word32] = 0xE<32>
	Mem4578[esp_1288 - 4<i32>:word32] = 3<32>
	Mem4584[esp_1288 - 4<i32>:word32] = fn0040F760(edi_1302, Mem4578[esp_1288 - 4<i32>:word32])
	word32 esp_4601 = <invalid>
	word32 ebx_4588
	word32 edi_4590
	word32 ecx_7829
	word32 ebp_7830
	word32 esi_7831
	Mem4610[esp_4601:word32] = fn0041C910(ebx_1300, es, ds, Mem4584[esp_1288 - 4<i32>:word32], Mem4584[esp_1288 + 32<i32>:word32], out ecx_7829, out ebx_4588, out ebp_7830, out esi_7831, out edi_4590)
	Mem4612[esp_4601 - 4<i32>:word32] = 4<32>
	Mem4618[esp_4601 - 4<i32>:word32] = fn0040F760(edi_4590, Mem4612[esp_4601 - 4<i32>:word32])
	word32 esp_4635 = <invalid>
	word32 ebx_4622
	word32 edi_4624
	word32 ecx_7832
	word32 ebp_7833
	word32 esi_7834
	Mem4644[esp_4635:word32] = fn0041C910(ebx_4588, es, ds, Mem4618[esp_4601 - 4<i32>:word32], Mem4618[esp_4601 + 32<i32>:word32], out ecx_7832, out ebx_4622, out ebp_7833, out esi_7834, out edi_4624)
	Mem4646[esp_4635 - 4<i32>:word32] = 1<32>
	Mem4652[esp_4635 - 4<i32>:word32] = fn0040F760(edi_4624, Mem4646[esp_4635 - 4<i32>:word32])
	word32 esp_4669 = <invalid>
	word32 ebx_4656
	word32 edi_4658
	word32 ecx_7835
	word32 ebp_7836
	word32 esi_7837
	Mem4678[esp_4669:word32] = fn0041C910(ebx_4622, es, ds, Mem4652[esp_4635 - 4<i32>:word32], Mem4652[esp_4635 + 32<i32>:word32], out ecx_7835, out ebx_4656, out ebp_7836, out esi_7837, out edi_4658)
	Mem4680[esp_4669 - 4<i32>:word32] = 2<32>
	Mem4686[esp_4669 - 4<i32>:word32] = fn0040F760(edi_4658, Mem4680[esp_4669 - 4<i32>:word32])
	word32 esp_4703 = <invalid>
	word32 ecx_7838
	word32 esi_7839
	word32 edi_7840
	Mem4712[esp_4703:word32] = fn0041C910(ebx_4656, es, ds, Mem4686[esp_4669 - 4<i32>:word32], Mem4686[esp_4669 + 32<i32>:word32], out ecx_7838, out ebx_2415, out ebp_2319, out esi_7839, out edi_7840)
	word32 ecx_7841
	eax_2458 = fn0041C7E0(Mem4712[esp_4703:word32], Mem4712[esp_4703 + 4<i32>:word32], Mem4712[esp_4703 + 8<i32>:word32], Mem4712[esp_4703 + 12<i32>:word32], Mem4712[esp_4703 + 16<i32>:word32], out ecx_7841)
	esp_2315 = esp_4703 + 0x14<32>
l00424FDD:
	Mem4732[esp_1228:word32] = 0<32>
	Mem4734[esp_1228 - 4<i32>:word32] = 2<32>
	Mem4740[esp_1228 - 4<i32>:word32] = fn0040F760(edi_1242, Mem4734[esp_1228 - 4<i32>:word32])
	word32 esp_4757 = <invalid>
	word32 ebx_4744
	word32 edi_4746
	word32 ecx_7816
	word32 ebp_7817
	word32 esi_7818
	Mem4766[esp_4757:word32] = fn0041C910(ebx_1240, es, ds, Mem4740[esp_1228 - 4<i32>:word32], Mem4740[esp_1228 + 32<i32>:word32], out ecx_7816, out ebx_4744, out ebp_7817, out esi_7818, out edi_4746)
	Mem4768[esp_4757 - 4<i32>:word32] = 1<32>
	Mem4774[esp_4757 - 4<i32>:word32] = fn0040F760(edi_4746, Mem4768[esp_4757 - 4<i32>:word32])
	word32 esp_4791 = <invalid>
	word32 ebx_4778
	word32 edi_4780
	word32 ecx_7819
	word32 ebp_7820
	word32 esi_7821
	Mem4800[esp_4791:word32] = fn0041C910(ebx_4744, es, ds, Mem4774[esp_4757 - 4<i32>:word32], Mem4774[esp_4757 + 32<i32>:word32], out ecx_7819, out ebx_4778, out ebp_7820, out esi_7821, out edi_4780)
	word32 ecx_7822
	fn0041C680(Mem4800[esp_4791:word32], Mem4800[esp_4791 + 4<i32>:word32], Mem4800[esp_4791 + 8<i32>:word32], out ecx_7822)
	Mem4820[esp_4791 + 8<32>:word32] = 3<32>
	Mem4827[esp_4791 + 8<32>:word32] = fn0040F760(edi_4780, Mem4820[esp_4791 + 8<32>:word32])
	word32 esp_4844 = <invalid>
	esp_2315 = esp_4844 + 4<32>
	word32 esi_4835
	word32 ecx_7823
	word32 edi_7824
	eax_2458 = (fn0041C910(ebx_4778, es, ds, Mem4827[esp_4791 + 8<32>:word32], Mem4827[esp_4791 + 0x2C<32>:word32], out ecx_7823, out ebx_2415, out ebp_2319, out esi_4835, out edi_7824) << 6<32>) + 0x32<32> + esi_4835
l00424F4F:
	Mem4857[esp_1168:word32] = 0<32>
	Mem4859[esp_1168 - 4<i32>:word32] = 2<32>
	Mem4865[esp_1168 - 4<i32>:word32] = fn0040F760(edi_1182, Mem4859[esp_1168 - 4<i32>:word32])
	word32 esp_4882 = <invalid>
	word32 ebx_4869
	word32 edi_4871
	word32 ecx_7803
	word32 ebp_7804
	word32 esi_7805
	Mem4891[esp_4882:word32] = fn0041C910(ebx_1180, es, ds, Mem4865[esp_1168 - 4<i32>:word32], Mem4865[esp_1168 + 32<i32>:word32], out ecx_7803, out ebx_4869, out ebp_7804, out esi_7805, out edi_4871)
	Mem4893[esp_4882 - 4<i32>:word32] = 1<32>
	Mem4899[esp_4882 - 4<i32>:word32] = fn0040F760(edi_4871, Mem4893[esp_4882 - 4<i32>:word32])
	word32 esp_4916 = <invalid>
	word32 ebx_4903
	word32 edi_4905
	word32 ecx_7806
	word32 ebp_7807
	word32 esi_7808
	Mem4925[esp_4916:word32] = fn0041C910(ebx_4869, es, ds, Mem4899[esp_4882 - 4<i32>:word32], Mem4899[esp_4882 + 32<i32>:word32], out ecx_7806, out ebx_4903, out ebp_7807, out esi_7808, out edi_4905)
	word32 ecx_7809
	fn0041C680(Mem4925[esp_4916:word32], Mem4925[esp_4916 + 4<i32>:word32], Mem4925[esp_4916 + 8<i32>:word32], out ecx_7809)
	Mem4945[esp_4916 + 8<32>:word32] = 3<32>
	Mem4952[esp_4916 + 8<32>:word32] = fn0040F760(edi_4905, Mem4945[esp_4916 + 8<32>:word32])
	word32 esp_4969 = <invalid>
	esp_2315 = esp_4969 + 4<32>
	word32 esi_4960
	word32 ecx_7810
	word32 edi_7811
	eax_2458 = (fn0041C910(ebx_4903, es, ds, Mem4952[esp_4916 + 8<32>:word32], Mem4952[esp_4916 + 0x2C<32>:word32], out ecx_7810, out ebx_2415, out ebp_2319, out esi_4960, out edi_7811) << 6<32>) + 0x1A<32> + esi_4960
l00424EC1:
	Mem4982[esp_1108:word32] = 0<32>
	Mem4984[esp_1108 - 4<i32>:word32] = 2<32>
	Mem4990[esp_1108 - 4<i32>:word32] = fn0040F760(edi_1122, Mem4984[esp_1108 - 4<i32>:word32])
	word32 esp_5007 = <invalid>
	word32 ebx_4994
	word32 edi_4996
	word32 ecx_7790
	word32 ebp_7791
	word32 esi_7792
	Mem5016[esp_5007:word32] = fn0041C910(ebx_1120, es, ds, Mem4990[esp_1108 - 4<i32>:word32], Mem4990[esp_1108 + 32<i32>:word32], out ecx_7790, out ebx_4994, out ebp_7791, out esi_7792, out edi_4996)
	Mem5018[esp_5007 - 4<i32>:word32] = 1<32>
	Mem5024[esp_5007 - 4<i32>:word32] = fn0040F760(edi_4996, Mem5018[esp_5007 - 4<i32>:word32])
	word32 esp_5041 = <invalid>
	word32 ebx_5028
	word32 edi_5030
	word32 ecx_7793
	word32 ebp_7794
	word32 esi_7795
	Mem5050[esp_5041:word32] = fn0041C910(ebx_4994, es, ds, Mem5024[esp_5007 - 4<i32>:word32], Mem5024[esp_5007 + 32<i32>:word32], out ecx_7793, out ebx_5028, out ebp_7794, out esi_7795, out edi_5030)
	word32 ecx_7796
	fn0041C680(Mem5050[esp_5041:word32], Mem5050[esp_5041 + 4<i32>:word32], Mem5050[esp_5041 + 8<i32>:word32], out ecx_7796)
	Mem5070[esp_5041 + 8<32>:word32] = 3<32>
	Mem5077[esp_5041 + 8<32>:word32] = fn0040F760(edi_5030, Mem5070[esp_5041 + 8<32>:word32])
	word32 esp_5094 = <invalid>
	esp_2315 = esp_5094 + 4<32>
	word32 esi_5085
	word32 ecx_7797
	word32 edi_7798
	eax_2458 = (fn0041C910(ebx_5028, es, ds, Mem5077[esp_5041 + 8<32>:word32], Mem5077[esp_5041 + 0x2C<32>:word32], out ecx_7797, out ebx_2415, out ebp_2319, out esi_5085, out edi_7798) << 6<32>) + 0x18<32> + esi_5085
l00424E3B:
	Mem5107[esp_1048:word32] = 3<32>
	Mem5113[esp_1048:word32] = fn0040F760(edi_1062, Mem5107[esp_1048:word32])
	word32 esp_5130 = <invalid>
	word32 ebx_5117
	word32 edi_5119
	word32 ecx_7776
	word32 ebp_7777
	word32 esi_7778
	Mem5139[esp_5130:word32] = fn0041C910(ebx_1060, es, ds, Mem5113[esp_1048:word32], Mem5113[esp_1048 + 36<i32>:word32], out ecx_7776, out ebx_5117, out ebp_7777, out esi_7778, out edi_5119)
	Mem5141[esp_5130 - 4<i32>:word32] = 2<32>
	Mem5147[esp_5130 - 4<i32>:word32] = fn0040F760(edi_5119, Mem5141[esp_5130 - 4<i32>:word32])
	word32 esp_5164 = <invalid>
	word32 ebx_5151
	word32 edi_5153
	word32 ecx_7779
	word32 ebp_7780
	word32 esi_7781
	Mem5173[esp_5164:word32] = fn0041C910(ebx_5117, es, ds, Mem5147[esp_5130 - 4<i32>:word32], Mem5147[esp_5130 + 32<i32>:word32], out ecx_7779, out ebx_5151, out ebp_7780, out esi_7781, out edi_5153)
	Mem5175[esp_5164 - 4<i32>:word32] = 1<32>
	Mem5181[esp_5164 - 4<i32>:word32] = fn0040F760(edi_5153, Mem5175[esp_5164 - 4<i32>:word32])
	word32 esp_5198 = <invalid>
	word32 ecx_7782
	word32 esi_7783
	word32 edi_7784
	Mem5207[esp_5198:word32] = fn0041C910(ebx_5151, es, ds, Mem5181[esp_5164 - 4<i32>:word32], Mem5181[esp_5164 + 32<i32>:word32], out ecx_7782, out ebx_2415, out ebp_2319, out esi_7783, out edi_7784)
	esp_2315 = esp_5198 + 0xC<32>
	word32 ecx_7785
	eax_2458 = fn0041C680(Mem5207[esp_5198:word32], Mem5207[esp_5198 + 4<i32>:word32], Mem5207[esp_5198 + 8<i32>:word32], out ecx_7785) + 0x28<32>
l00424DB5:
	Mem5229[esp_988:word32] = 3<32>
	Mem5235[esp_988:word32] = fn0040F760(edi_1002, Mem5229[esp_988:word32])
	word32 esp_5252 = <invalid>
	word32 ebx_5239
	word32 edi_5241
	word32 ecx_7762
	word32 ebp_7763
	word32 esi_7764
	Mem5261[esp_5252:word32] = fn0041C910(ebx_1000, es, ds, Mem5235[esp_988:word32], Mem5235[esp_988 + 36<i32>:word32], out ecx_7762, out ebx_5239, out ebp_7763, out esi_7764, out edi_5241)
	Mem5263[esp_5252 - 4<i32>:word32] = 2<32>
	Mem5269[esp_5252 - 4<i32>:word32] = fn0040F760(edi_5241, Mem5263[esp_5252 - 4<i32>:word32])
	word32 esp_5286 = <invalid>
	word32 ebx_5273
	word32 edi_5275
	word32 ecx_7765
	word32 ebp_7766
	word32 esi_7767
	Mem5295[esp_5286:word32] = fn0041C910(ebx_5239, es, ds, Mem5269[esp_5252 - 4<i32>:word32], Mem5269[esp_5252 + 32<i32>:word32], out ecx_7765, out ebx_5273, out ebp_7766, out esi_7767, out edi_5275)
	Mem5297[esp_5286 - 4<i32>:word32] = 1<32>
	Mem5303[esp_5286 - 4<i32>:word32] = fn0040F760(edi_5275, Mem5297[esp_5286 - 4<i32>:word32])
	word32 esp_5320 = <invalid>
	word32 ecx_7768
	word32 esi_7769
	word32 edi_7770
	Mem5329[esp_5320:word32] = fn0041C910(ebx_5273, es, ds, Mem5303[esp_5286 - 4<i32>:word32], Mem5303[esp_5286 + 32<i32>:word32], out ecx_7768, out ebx_2415, out ebp_2319, out esi_7769, out edi_7770)
	esp_2315 = esp_5320 + 0xC<32>
	word32 ecx_7771
	eax_2458 = fn0041C680(Mem5329[esp_5320:word32], Mem5329[esp_5320 + 4<i32>:word32], Mem5329[esp_5320 + 8<i32>:word32], out ecx_7771) + 0x2A<32>
l00424D3F:
	Mem5351[esp_928:word32] = 2<32>
	Mem5357[esp_928:word32] = fn0040F760(edi_942, Mem5351[esp_928:word32])
	word32 esp_5374 = <invalid>
	word32 ebx_5361
	word32 edi_5363
	word32 ecx_7751
	word32 ebp_7752
	word32 esi_7753
	Mem5383[esp_5374:word32] = fn0041C910(ebx_940, es, ds, Mem5357[esp_928:word32], Mem5357[esp_928 + 36<i32>:word32], out ecx_7751, out ebx_5361, out ebp_7752, out esi_7753, out edi_5363)
	Mem5385[esp_5374 - 4<i32>:word32] = 0<32>
	Mem5387[esp_5374 - 8<i32>:word32] = 1<32>
	Mem5393[esp_5374 - 8<32>:word32] = fn0040F760(edi_5363, Mem5387[esp_5374 - 8<i32>:word32])
	word32 esp_5410 = <invalid>
	word32 ecx_7754
	word32 esi_7755
	word32 edi_7756
	Mem5419[esp_5410:word32] = fn0041C910(ebx_5361, es, ds, Mem5393[esp_5374 - 8<32>:word32], Mem5393[esp_5374 + 0x1C<32>:word32], out ecx_7754, out ebx_2415, out ebp_2319, out esi_7755, out edi_7756)
	esp_2315 = esp_5410 + 0xC<32>
	word32 ecx_7757
	eax_2458 = fn0041C680(Mem5419[esp_5410:word32], Mem5419[esp_5410 + 4<i32>:word32], Mem5419[esp_5410 + 8<i32>:word32], out ecx_7757) + 0x34<32>
l00424CC9:
	Mem5441[esp_868:word32] = 2<32>
	Mem5447[esp_868:word32] = fn0040F760(edi_882, Mem5441[esp_868:word32])
	word32 esp_5464 = <invalid>
	word32 ebx_5451
	word32 edi_5453
	word32 ecx_7740
	word32 ebp_7741
	word32 esi_7742
	Mem5473[esp_5464:word32] = fn0041C910(ebx_880, es, ds, Mem5447[esp_868:word32], Mem5447[esp_868 + 36<i32>:word32], out ecx_7740, out ebx_5451, out ebp_7741, out esi_7742, out edi_5453)
	Mem5475[esp_5464 - 4<i32>:word32] = 0<32>
	Mem5477[esp_5464 - 8<i32>:word32] = 1<32>
	Mem5483[esp_5464 - 8<32>:word32] = fn0040F760(edi_5453, Mem5477[esp_5464 - 8<i32>:word32])
	word32 esp_5500 = <invalid>
	word32 ecx_7743
	word32 esi_7744
	word32 edi_7745
	Mem5509[esp_5500:word32] = fn0041C910(ebx_5451, es, ds, Mem5483[esp_5464 - 8<32>:word32], Mem5483[esp_5464 + 0x1C<32>:word32], out ecx_7743, out ebx_2415, out ebp_2319, out esi_7744, out edi_7745)
	esp_2315 = esp_5500 + 0xC<32>
	word32 ecx_7746
	eax_2458 = fn0041C680(Mem5509[esp_5500:word32], Mem5509[esp_5500 + 4<i32>:word32], Mem5509[esp_5500 + 8<i32>:word32], out ecx_7746) + 0x30<32>
l00424C53:
	Mem5531[esp_808:word32] = 2<32>
	Mem5537[esp_808:word32] = fn0040F760(edi_822, Mem5531[esp_808:word32])
	word32 esp_5554 = <invalid>
	word32 ebx_5541
	word32 edi_5543
	word32 ecx_7729
	word32 ebp_7730
	word32 esi_7731
	Mem5563[esp_5554:word32] = fn0041C910(ebx_820, es, ds, Mem5537[esp_808:word32], Mem5537[esp_808 + 36<i32>:word32], out ecx_7729, out ebx_5541, out ebp_7730, out esi_7731, out edi_5543)
	Mem5565[esp_5554 - 4<i32>:word32] = 0<32>
	Mem5567[esp_5554 - 8<i32>:word32] = 1<32>
	Mem5573[esp_5554 - 8<32>:word32] = fn0040F760(edi_5543, Mem5567[esp_5554 - 8<i32>:word32])
	word32 esp_5590 = <invalid>
	word32 ecx_7732
	word32 esi_7733
	word32 edi_7734
	Mem5599[esp_5590:word32] = fn0041C910(ebx_5541, es, ds, Mem5573[esp_5554 - 8<32>:word32], Mem5573[esp_5554 + 0x1C<32>:word32], out ecx_7732, out ebx_2415, out ebp_2319, out esi_7733, out edi_7734)
	esp_2315 = esp_5590 + 0xC<32>
	word32 ecx_7735
	eax_2458 = fn0041C680(Mem5599[esp_5590:word32], Mem5599[esp_5590 + 4<i32>:word32], Mem5599[esp_5590 + 8<i32>:word32], out ecx_7735) + 0x50<32>
l00424BDB:
	Mem5621[esp_748:word32] = 2<32>
	Mem5627[esp_748:word32] = fn0040F760(edi_762, Mem5621[esp_748:word32])
	word32 esp_5644 = <invalid>
	word32 ebx_5631
	word32 edi_5633
	word32 ecx_7718
	word32 ebp_7719
	word32 esi_7720
	Mem5653[esp_5644:word32] = fn0041C910(ebx_760, es, ds, Mem5627[esp_748:word32], Mem5627[esp_748 + 36<i32>:word32], out ecx_7718, out ebx_5631, out ebp_7719, out esi_7720, out edi_5633)
	Mem5655[esp_5644 - 4<i32>:word32] = 0<32>
	Mem5657[esp_5644 - 8<i32>:word32] = 1<32>
	Mem5663[esp_5644 - 8<32>:word32] = fn0040F760(edi_5633, Mem5657[esp_5644 - 8<i32>:word32])
	word32 esp_5680 = <invalid>
	word32 ecx_7721
	word32 esi_7722
	word32 edi_7723
	Mem5689[esp_5680:word32] = fn0041C910(ebx_5631, es, ds, Mem5663[esp_5644 - 8<32>:word32], Mem5663[esp_5644 + 0x1C<32>:word32], out ecx_7721, out ebx_2415, out ebp_2319, out esi_7722, out edi_7723)
	esp_2315 = esp_5680 + 0xC<32>
	word32 ecx_7724
	eax_2458 = fn0041C680(Mem5689[esp_5680:word32], Mem5689[esp_5680 + 4<i32>:word32], Mem5689[esp_5680 + 8<i32>:word32], out ecx_7724) + 0x90<32>
l00424B63:
	Mem5711[esp_688:word32] = 2<32>
	Mem5717[esp_688:word32] = fn0040F760(edi_702, Mem5711[esp_688:word32])
	word32 esp_5734 = <invalid>
	word32 ebx_5721
	word32 edi_5723
	word32 ecx_7707
	word32 ebp_7708
	word32 esi_7709
	Mem5743[esp_5734:word32] = fn0041C910(ebx_700, es, ds, Mem5717[esp_688:word32], Mem5717[esp_688 + 36<i32>:word32], out ecx_7707, out ebx_5721, out ebp_7708, out esi_7709, out edi_5723)
	Mem5745[esp_5734 - 4<i32>:word32] = 0<32>
	Mem5747[esp_5734 - 8<i32>:word32] = 1<32>
	Mem5753[esp_5734 - 8<32>:word32] = fn0040F760(edi_5723, Mem5747[esp_5734 - 8<i32>:word32])
	word32 esp_5770 = <invalid>
	word32 ecx_7710
	word32 esi_7711
	word32 edi_7712
	Mem5779[esp_5770:word32] = fn0041C910(ebx_5721, es, ds, Mem5753[esp_5734 - 8<32>:word32], Mem5753[esp_5734 + 0x1C<32>:word32], out ecx_7710, out ebx_2415, out ebp_2319, out esi_7711, out edi_7712)
	esp_2315 = esp_5770 + 0xC<32>
	word32 ecx_7713
	eax_2458 = fn0041C680(Mem5779[esp_5770:word32], Mem5779[esp_5770 + 4<i32>:word32], Mem5779[esp_5770 + 8<i32>:word32], out ecx_7713) + 0x110<32>
l00424AEB:
	Mem5801[esp_628:word32] = 2<32>
	Mem5807[esp_628:word32] = fn0040F760(edi_642, Mem5801[esp_628:word32])
	word32 esp_5824 = <invalid>
	word32 ebx_5811
	word32 edi_5813
	word32 ecx_7696
	word32 ebp_7697
	word32 esi_7698
	Mem5833[esp_5824:word32] = fn0041C910(ebx_640, es, ds, Mem5807[esp_628:word32], Mem5807[esp_628 + 36<i32>:word32], out ecx_7696, out ebx_5811, out ebp_7697, out esi_7698, out edi_5813)
	Mem5835[esp_5824 - 4<i32>:word32] = 0<32>
	Mem5837[esp_5824 - 8<i32>:word32] = 1<32>
	Mem5843[esp_5824 - 8<32>:word32] = fn0040F760(edi_5813, Mem5837[esp_5824 - 8<i32>:word32])
	word32 esp_5860 = <invalid>
	word32 ecx_7699
	word32 esi_7700
	word32 edi_7701
	Mem5869[esp_5860:word32] = fn0041C910(ebx_5811, es, ds, Mem5843[esp_5824 - 8<32>:word32], Mem5843[esp_5824 + 0x1C<32>:word32], out ecx_7699, out ebx_2415, out ebp_2319, out esi_7700, out edi_7701)
	esp_2315 = esp_5860 + 0xC<32>
	word32 ecx_7702
	eax_2458 = fn0041C680(Mem5869[esp_5860:word32], Mem5869[esp_5860 + 4<i32>:word32], Mem5869[esp_5860 + 8<i32>:word32], out ecx_7702) + 0x210<32>
l00424943:
	Mem5891[esp_568:word32] = 4<32>
	Mem5897[esp_568:word32] = fn0040F760(edi_582, Mem5891[esp_568:word32])
	word32 ebx_5901
	word32 edi_5903
	word32 ecx_7680
	word32 ebp_7681
	word32 esi_7682
	fn0041C910(ebx_580, es, ds, Mem5897[esp_568:word32], Mem5897[esp_568 + 36<i32>:word32], out ecx_7680, out ebx_5901, out ebp_7681, out esi_7682, out edi_5903)
	word32 esp_5914 = <invalid>
	Mem5923[esp_5914:word32] = 1<32>
	Mem5929[esp_5914:word32] = fn0040F760(edi_5903, Mem5923[esp_5914:word32])
	word32 ebp_5932
	word32 ebx_5933
	word32 edi_5935
	word32 ecx_7683
	word32 esi_7684
	word32 eax_5931 = fn0041C910(ebx_5901, es, ds, Mem5929[esp_5914:word32], Mem5929[esp_5914 + 36<i32>:word32], out ecx_7683, out ebx_5933, out ebp_5932, out esi_7684, out edi_5935)
	Mem5964[ebp_5932 - 40<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_5931, word32, word128)), real64, 0) + Mem5929[(eax_5931 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_5946 = <invalid>
	real64 v125_5968 = SLICE(fn00427210(), real64, 0) * Mem5964[ebp_5932 - 40<i32>:real64]
	Mem5973[esp_5946:word32] = 0x3C<32>
	Mem5974[ebp_5932 - 40<i32>:real64] = v125_5968
	word32 eax_5975 = fn0041C5C0(Mem5974[esp_5946:word32])
	Mem5993[esp_5946:word32] = 3<32>
	Mem6006[ebp_5932 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_5975, word32, word128)), real64, 0) + Mem5993[(eax_5975 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64] + Mem5993[ebp_5932 - 40<i32>:real64]
	Mem6011[esp_5946:word32] = fn0040F760(edi_5935, Mem6006[esp_5946:word32])
	word32 ebp_6014
	word32 ebx_6015
	word32 edi_6017
	word32 ecx_7685
	word32 esi_7686
	word32 eax_6013 = fn0041C910(ebx_5933, es, ds, Mem6011[esp_5946:word32], Mem6011[esp_5946 + 36<i32>:word32], out ecx_7685, out ebx_6015, out ebp_6014, out esi_7686, out edi_6017)
	Mem6046[ebp_6014 - 40<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6013, word32, word128)), real64, 0) + Mem6011[(eax_6013 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_6028 = <invalid>
	real64 v135_6050 = SLICE(fn00427210(), real64, 0) * Mem6046[ebp_6014 - 40<i32>:real64]
	Mem6055[esp_6028:word32] = 5<32>
	Mem6059[ebp_6014 - 32<i32>:real64] = v135_6050 + Mem6055[ebp_6014 - 32<i32>:real64]
	Mem6064[esp_6028:word32] = fn0040F760(edi_6017, Mem6059[esp_6028:word32])
	word32 ebp_6067
	word32 ebx_6068
	word32 edi_6070
	word32 ecx_7687
	word32 esi_7688
	word32 edx_6093 = CONVERT(CONVERT(fn0041C910(ebx_6015, es, ds, Mem6064[esp_6028:word32], Mem6064[esp_6028 + 36<i32>:word32], out ecx_7687, out ebx_6068, out ebp_6067, out esi_7688, out edi_6070), word32, uint64) %u 7<32>, word64, uint32)
	Mem6105[ebp_6067 - 40<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(edx_6093, word32, word128)), real64, 0) + Mem6064[(edx_6093 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_6081 = <invalid>
	real64 v143_6109 = SLICE(fn00427210(), real64, 0) * Mem6105[ebp_6067 - 40<i32>:real64]
	Mem6114[esp_6081:word32] = 0<32>
	Mem6116[esp_6081 - 4<i32>:word32] = 2<32>
	Mem6120[ebp_6067 - 40<i32>:real64] = v143_6109 + Mem6116[ebp_6067 - 32<i32>:real64]
	word32 esi_7689
	word64 edx_eax_6139 = CONVERT(fn00403C30(fn0040F760(edi_6070, Mem6120[esp_6081 - 4<i32>:word32]), 0<32>, ebx_6068, es, ds, Mem6120[esp_6081:word32], out esi_7689), word32, int64)
	Mem6141[esp_6081:word32] = 0xFFFF<32>
	Mem6143[esp_6081 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem6146[esp_6081 - 8<i32>:word32] = SLICE(edx_eax_6139, word32, 32)
	Mem6149[esp_6081 - 12<i32>:word32] = SLICE(edx_eax_6139, word32, 0)
	word32 eax_6150 = fn0042D670(Mem6149[esp_6081 - 12<i32>:ui64], Mem6149[esp_6081 - 4<i32>:ui64])
	word128 xmm0_6160 = __cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6150, word32, word128))
	word32 ecx_7690
	word32 edx_7691
	Mem6184[ebx_6068 + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_6160, word64, 64), SLICE(xmm0_6160, real64, 0) + Mem6149[(eax_6150 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64] + Mem6149[ebp_6067 - 40<i32>:real64]), out ecx_7690, out edx_7691)
	Mem6186[fs:0x00000000<p32>:word32] = Mem6184[ebp_6067 - 12<i32>:word32]
	word32 ecx_6187 = Mem6186[esp_6081 + 4<32>:word32]
	word32 esi_6191 = Mem6186[esp_6081 + 0xC<32>:word32]
	ebpOut = Mem6186[ebp_6067:word32]
	esiOut = esi_6191
	return ecx_6187
l00424797:
	Mem6198[esp_508:word32] = 4<32>
	Mem6204[esp_508:word32] = fn0040F760(edi_522, Mem6198[esp_508:word32])
	word32 ebx_6208
	word32 edi_6210
	word32 ecx_7664
	word32 ebp_7665
	word32 esi_7666
	fn0041C910(ebx_520, es, ds, Mem6204[esp_508:word32], Mem6204[esp_508 + 36<i32>:word32], out ecx_7664, out ebx_6208, out ebp_7665, out esi_7666, out edi_6210)
	word32 esp_6221 = <invalid>
	Mem6230[esp_6221:word32] = 1<32>
	Mem6236[esp_6221:word32] = fn0040F760(edi_6210, Mem6230[esp_6221:word32])
	word32 ebp_6239
	word32 ebx_6240
	word32 edi_6242
	word32 ecx_7667
	word32 esi_7668
	word32 eax_6238 = fn0041C910(ebx_6208, es, ds, Mem6236[esp_6221:word32], Mem6236[esp_6221 + 36<i32>:word32], out ecx_7667, out ebx_6240, out ebp_6239, out esi_7668, out edi_6242)
	Mem6271[ebp_6239 - 40<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6238, word32, word128)), real64, 0) + Mem6236[(eax_6238 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_6253 = <invalid>
	real64 v95_6275 = SLICE(fn00427210(), real64, 0) * Mem6271[ebp_6239 - 40<i32>:real64]
	Mem6280[esp_6253:word32] = 0x3D<32>
	Mem6281[ebp_6239 - 40<i32>:real64] = v95_6275
	word32 eax_6282 = fn0041C5C0(Mem6281[esp_6253:word32])
	Mem6300[esp_6253:word32] = 3<32>
	Mem6313[ebp_6239 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6282, word32, word128)), real64, 0) + Mem6300[(eax_6282 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64] + Mem6300[ebp_6239 - 40<i32>:real64]
	Mem6318[esp_6253:word32] = fn0040F760(edi_6242, Mem6313[esp_6253:word32])
	word32 ebp_6321
	word32 ebx_6322
	word32 edi_6324
	word32 ecx_7669
	word32 esi_7670
	word32 eax_6320 = fn0041C910(ebx_6240, es, ds, Mem6318[esp_6253:word32], Mem6318[esp_6253 + 36<i32>:word32], out ecx_7669, out ebx_6322, out ebp_6321, out esi_7670, out edi_6324)
	Mem6353[ebp_6321 - 40<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6320, word32, word128)), real64, 0) + Mem6318[(eax_6320 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_6335 = <invalid>
	real64 v105_6357 = SLICE(fn00427210(), real64, 0) * Mem6353[ebp_6321 - 40<i32>:real64]
	Mem6362[esp_6335:word32] = 5<32>
	Mem6366[ebp_6321 - 32<i32>:real64] = v105_6357 + Mem6362[ebp_6321 - 32<i32>:real64]
	Mem6371[esp_6335:word32] = fn0040F760(edi_6324, Mem6366[esp_6335:word32])
	word32 ebp_6374
	word32 ebx_6375
	word32 edi_6377
	word32 ecx_7671
	word32 esi_7672
	word32 edx_6400 = CONVERT(CONVERT(fn0041C910(ebx_6322, es, ds, Mem6371[esp_6335:word32], Mem6371[esp_6335 + 36<i32>:word32], out ecx_7671, out ebx_6375, out ebp_6374, out esi_7672, out edi_6377), word32, uint64) %u 7<32>, word64, uint32)
	Mem6412[ebp_6374 - 40<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(edx_6400, word32, word128)), real64, 0) + Mem6371[(edx_6400 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_6388 = <invalid>
	real64 v113_6416 = SLICE(fn00427210(), real64, 0) * Mem6412[ebp_6374 - 40<i32>:real64]
	Mem6421[esp_6388:word32] = 0<32>
	Mem6423[esp_6388 - 4<i32>:word32] = 2<32>
	Mem6427[ebp_6374 - 40<i32>:real64] = v113_6416 + Mem6423[ebp_6374 - 32<i32>:real64]
	word32 esi_7673
	word64 edx_eax_6446 = CONVERT(fn00403C30(fn0040F760(edi_6377, Mem6427[esp_6388 - 4<i32>:word32]), 0<32>, ebx_6375, es, ds, Mem6427[esp_6388:word32], out esi_7673), word32, int64)
	Mem6448[esp_6388:word32] = 0xFFFF<32>
	Mem6450[esp_6388 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem6453[esp_6388 - 8<i32>:word32] = SLICE(edx_eax_6446, word32, 32)
	Mem6456[esp_6388 - 12<i32>:word32] = SLICE(edx_eax_6446, word32, 0)
	word32 eax_6457 = fn0042D670(Mem6456[esp_6388 - 12<i32>:ui64], Mem6456[esp_6388 - 4<i32>:ui64])
	word128 xmm0_6467 = __cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6457, word32, word128))
	word32 ecx_7674
	word32 edx_7675
	Mem6491[ebx_6375 + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_6467, word64, 64), SLICE(xmm0_6467, real64, 0) + Mem6456[(eax_6457 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64] + Mem6456[ebp_6374 - 40<i32>:real64]), out ecx_7674, out edx_7675)
	Mem6493[fs:0x00000000<p32>:word32] = Mem6491[ebp_6374 - 12<i32>:word32]
	word32 ecx_6494 = Mem6493[esp_6388 + 4<32>:word32]
	word32 esi_6498 = Mem6493[esp_6388 + 0xC<32>:word32]
	ebpOut = Mem6493[ebp_6374:word32]
	esiOut = esi_6498
	return ecx_6494
l004245EB:
	Mem6505[esp_448:word32] = 4<32>
	Mem6511[esp_448:word32] = fn0040F760(edi_462, Mem6505[esp_448:word32])
	word32 ebx_6515
	word32 edi_6517
	word32 ecx_7648
	word32 ebp_7649
	word32 esi_7650
	fn0041C910(ebx_460, es, ds, Mem6511[esp_448:word32], Mem6511[esp_448 + 36<i32>:word32], out ecx_7648, out ebx_6515, out ebp_7649, out esi_7650, out edi_6517)
	word32 esp_6528 = <invalid>
	Mem6537[esp_6528:word32] = 1<32>
	Mem6543[esp_6528:word32] = fn0040F760(edi_6517, Mem6537[esp_6528:word32])
	word32 ebp_6546
	word32 ebx_6547
	word32 edi_6549
	word32 ecx_7651
	word32 esi_7652
	word32 eax_6545 = fn0041C910(ebx_6515, es, ds, Mem6543[esp_6528:word32], Mem6543[esp_6528 + 36<i32>:word32], out ecx_7651, out ebx_6547, out ebp_6546, out esi_7652, out edi_6549)
	Mem6578[ebp_6546 - 40<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6545, word32, word128)), real64, 0) + Mem6543[(eax_6545 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_6560 = <invalid>
	real64 v65_6582 = SLICE(fn00427210(), real64, 0) * Mem6578[ebp_6546 - 40<i32>:real64]
	Mem6587[esp_6560:word32] = 0x38<32>
	Mem6588[ebp_6546 - 40<i32>:real64] = v65_6582
	word32 eax_6589 = fn0041C5C0(Mem6588[esp_6560:word32])
	Mem6607[esp_6560:word32] = 3<32>
	Mem6620[ebp_6546 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6589, word32, word128)), real64, 0) + Mem6607[(eax_6589 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64] + Mem6607[ebp_6546 - 40<i32>:real64]
	Mem6625[esp_6560:word32] = fn0040F760(edi_6549, Mem6620[esp_6560:word32])
	word32 ebp_6628
	word32 ebx_6629
	word32 edi_6631
	word32 ecx_7653
	word32 esi_7654
	word32 eax_6627 = fn0041C910(ebx_6547, es, ds, Mem6625[esp_6560:word32], Mem6625[esp_6560 + 36<i32>:word32], out ecx_7653, out ebx_6629, out ebp_6628, out esi_7654, out edi_6631)
	Mem6660[ebp_6628 - 40<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6627, word32, word128)), real64, 0) + Mem6625[(eax_6627 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_6642 = <invalid>
	real64 v75_6664 = SLICE(fn00427210(), real64, 0) * Mem6660[ebp_6628 - 40<i32>:real64]
	Mem6669[esp_6642:word32] = 5<32>
	Mem6673[ebp_6628 - 32<i32>:real64] = v75_6664 + Mem6669[ebp_6628 - 32<i32>:real64]
	Mem6678[esp_6642:word32] = fn0040F760(edi_6631, Mem6673[esp_6642:word32])
	word32 ebp_6681
	word32 ebx_6682
	word32 edi_6684
	word32 ecx_7655
	word32 esi_7656
	word32 edx_6707 = CONVERT(CONVERT(fn0041C910(ebx_6629, es, ds, Mem6678[esp_6642:word32], Mem6678[esp_6642 + 36<i32>:word32], out ecx_7655, out ebx_6682, out ebp_6681, out esi_7656, out edi_6684), word32, uint64) %u 7<32>, word64, uint32)
	Mem6719[ebp_6681 - 40<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(edx_6707, word32, word128)), real64, 0) + Mem6678[(edx_6707 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_6695 = <invalid>
	real64 v83_6723 = SLICE(fn00427210(), real64, 0) * Mem6719[ebp_6681 - 40<i32>:real64]
	Mem6728[esp_6695:word32] = 0<32>
	Mem6730[esp_6695 - 4<i32>:word32] = 2<32>
	Mem6734[ebp_6681 - 40<i32>:real64] = v83_6723 + Mem6730[ebp_6681 - 32<i32>:real64]
	word32 esi_7657
	word64 edx_eax_6753 = CONVERT(fn00403C30(fn0040F760(edi_6684, Mem6734[esp_6695 - 4<i32>:word32]), 0<32>, ebx_6682, es, ds, Mem6734[esp_6695:word32], out esi_7657), word32, int64)
	Mem6755[esp_6695:word32] = 0xFFFF<32>
	Mem6757[esp_6695 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem6760[esp_6695 - 8<i32>:word32] = SLICE(edx_eax_6753, word32, 32)
	Mem6763[esp_6695 - 12<i32>:word32] = SLICE(edx_eax_6753, word32, 0)
	word32 eax_6764 = fn0042D670(Mem6763[esp_6695 - 12<i32>:ui64], Mem6763[esp_6695 - 4<i32>:ui64])
	word128 xmm0_6774 = __cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6764, word32, word128))
	word32 ecx_7658
	word32 edx_7659
	Mem6798[ebx_6682 + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_6774, word64, 64), SLICE(xmm0_6774, real64, 0) + Mem6763[(eax_6764 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64] + Mem6763[ebp_6681 - 40<i32>:real64]), out ecx_7658, out edx_7659)
	Mem6800[fs:0x00000000<p32>:word32] = Mem6798[ebp_6681 - 12<i32>:word32]
	word32 ecx_6801 = Mem6800[esp_6695 + 4<32>:word32]
	word32 esi_6805 = Mem6800[esp_6695 + 0xC<32>:word32]
	ebpOut = Mem6800[ebp_6681:word32]
	esiOut = esi_6805
	return ecx_6801
l0042443A:
	word128 xmm0_6814 = fn00427210()
	word32 ecx_7630
	word32 edx_7631
	fn0042D911(SEQ(SLICE(xmm0_6814, word64, 64), SLICE(xmm0_6814, real64, 0) * Mem396[0x00432F40<p32>:real64]), out ecx_7630, out edx_7631)
	Mem6839[esp_388 - 4<i32>:word32] = Mem396[Mem396[ebp_398 + 8<i32>:word32]:word32] + 96<i32>
	word32 ebp_6842
	word32 ebx_6843
	word32 ecx_7632
	word32 esi_7633
	word32 edi_7634
	fn0041C910(ebx_399, es, ds, Mem6839[esp_388 - 4<i32>:word32], Mem6839[esp_388 + 32<i32>:word32], out ecx_7632, out ebx_6843, out ebp_6842, out esi_7633, out edi_7634)
	word32 esp_6856 = <invalid>
	word32 ecx_6864 = Mem6839[ebp_6842 + 8<i32>:word32]
	Mem6866[esp_6856:word32] = 5<32>
	Mem6871[esp_6856:word32] = fn0040F760(ecx_6864, Mem6866[esp_6856:word32])
	word32 ebp_6874
	word32 ebx_6875
	word32 edi_6877
	word32 ecx_7635
	word32 esi_7636
	word32 edx_6900 = CONVERT(CONVERT(fn0041C910(ebx_6843, es, ds, Mem6871[esp_6856:word32], Mem6871[esp_6856 + 36<i32>:word32], out ecx_7635, out ebx_6875, out ebp_6874, out esi_7636, out edi_6877), word32, uint64) %u 7<32>, word64, uint32)
	Mem6912[ebp_6874 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(edx_6900, word32, word128)), real64, 0) + Mem6871[(edx_6900 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_6888 = <invalid>
	real64 v35_6916 = SLICE(fn00427210(), real64, 0) * Mem6912[ebp_6874 - 32<i32>:real64]
	Mem6921[esp_6888:word32] = edi_6877 + 24<i32>
	Mem6923[ebp_6874 - 40<i32>:real64] = v35_6916
	word32 ebp_6925
	word32 ebx_6926
	word32 edi_6928
	word32 esi_6930
	word32 ecx_7637
	word32 eax_6924 = fn0041C910(ebx_6875, es, ds, Mem6923[esp_6888:word32], Mem6923[esp_6888 + 36<i32>:word32], out ecx_7637, out ebx_6926, out ebp_6925, out esi_6930, out edi_6928)
	Mem6957[ebp_6925 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6924, word32, word128)), real64, 0) + Mem6923[(eax_6924 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	real64 v40_6961 = SLICE(fn00427210(), real64, 0) * Mem6957[ebp_6925 - 32<i32>:real64]
	word32 esp_6939 = <invalid>
	word128 xmm1_6968 = __cvtdq2pd<int32[4],real64[4]>(CONVERT(esi_6930, word32, word128))
	Mem6972[esp_6939:word32] = edi_6928 + 72<i32>
	Mem6979[ebp_6925 - 24<i32>:real64] = v40_6961 + (SLICE(xmm1_6968, real64, 0) + Mem6972[(esi_6930 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64])
	word32 ebp_6981
	word32 ebx_6982
	word32 ecx_7638
	word32 esi_7639
	word32 edi_7640
	word32 eax_6980 = fn0041C910(ebx_6926, es, ds, Mem6979[esp_6939:word32], Mem6979[esp_6939 + 36<i32>:word32], out ecx_7638, out ebx_6982, out ebp_6981, out esi_7639, out edi_7640)
	Mem7013[ebp_6981 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_6980, word32, word128)), real64, 0) + Mem6979[(eax_6980 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	real64 v51_7017 = SLICE(fn00427210(), real64, 0) * Mem7013[ebp_6981 - 32<i32>:real64]
	word32 esp_6995 = <invalid>
	word32 ecx_7020 = Mem7013[ebp_6981 + 8<i32>:word32]
	Mem7022[esp_6995:word32] = 0<32>
	Mem7024[esp_6995 - 4<i32>:word32] = 2<32>
	Mem7031[ebp_6981 - 40<i32>:real64] = v51_7017 + Mem7024[ebp_6981 - 24<i32>:real64] + Mem7024[ebp_6981 - 40<i32>:real64]
	word32 esi_7641
	word64 edx_eax_7050 = CONVERT(fn00403C30(fn0040F760(ecx_7020, Mem7031[esp_6995 - 4<i32>:word32]), 0<32>, ebx_6982, es, ds, Mem7031[esp_6995:word32], out esi_7641), word32, int64)
	Mem7052[esp_6995:word32] = 0xFFFF<32>
	Mem7054[esp_6995 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem7057[esp_6995 - 8<i32>:word32] = SLICE(edx_eax_7050, word32, 32)
	Mem7060[esp_6995 - 12<i32>:word32] = SLICE(edx_eax_7050, word32, 0)
	word32 eax_7061 = fn0042D670(Mem7060[esp_6995 - 12<i32>:ui64], Mem7060[esp_6995 - 4<i32>:ui64])
	word128 xmm0_7071 = __cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_7061, word32, word128))
	word32 ecx_7642
	word32 edx_7643
	Mem7095[ebx_6982 + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_7071, word64, 64), SLICE(xmm0_7071, real64, 0) + Mem7060[(eax_7061 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64] + Mem7060[ebp_6981 - 40<i32>:real64]), out ecx_7642, out edx_7643)
	Mem7097[fs:0x00000000<p32>:word32] = Mem7095[ebp_6981 - 12<i32>:word32]
	word32 ecx_7098 = Mem7097[esp_6995 + 4<32>:word32]
	word32 esi_7102 = Mem7097[esp_6995 + 0xC<32>:word32]
	ebpOut = Mem7097[ebp_6981:word32]
	esiOut = esi_7102
	return ecx_7098
l004243AE:
	Mem7113[esp_318 - 4<i32>:word32] = Mem326[Mem326[ebp_328 + 8<i32>:word32]:word32] + 72<i32>
	word32 ebx_7116
	word32 esi_7120
	word32 ecx_7620
	word32 ebp_7621
	word32 edi_7622
	fn0041C910(ebx_329, es, ds, Mem7113[esp_318 - 4<i32>:word32], Mem7113[esp_318 + 32<i32>:word32], out ecx_7620, out ebx_7116, out ebp_7621, out esi_7120, out edi_7622)
	word32 esp_7129 = <invalid>
	Mem7138[esp_7129:word32] = 7<32>
	Mem7142[esp_7129 - 4<i32>:word32] = esi_7120 + 96<i32>
	word32 esp_7158 = <invalid>
	esp_7165 = esp_7158 + 4<32>
	word32 ecx_7623
	word32 ebp_7624
	word32 edi_7625
	edx_7173 = CONVERT(CONVERT(fn0041C910(ebx_7116, es, ds, Mem7142[esp_7129 - 4<i32>:word32], Mem7142[esp_7129 + 32<i32>:word32], out ecx_7623, out ebx_7145, out ebp_7624, out esi_7149, out edi_7625), word32, uint64) %u 7<32>, word64, uint32) * 2<32> + 1<32>
l00424341:
	Mem7179[esp_248 - 4<i32>:word32] = Mem256[Mem256[ebp_258 + 8<i32>:word32]:word32] + 72<i32>
	word32 ecx_7609
	word32 ebp_7610
	word32 edi_7611
	fn0041C910(ebx_259, es, ds, Mem7179[esp_248 - 4<i32>:word32], Mem7179[esp_248 + 32<i32>:word32], out ecx_7609, out ebx_7182, out ebp_7610, out esi_7186, out edi_7611)
	word32 esp_7195 = <invalid>
	Mem7204[esp_7195:word32] = 7<32>
	esp_7203 = esp_7195
l004242B9:
	Mem7210[esp_178 - 4<i32>:word32] = Mem186[Mem186[ebp_188 + 8<i32>:word32]:word32] + 72<i32>
	word32 ebx_7213
	word32 esi_7217
	word32 ecx_7588
	word32 ebp_7589
	word32 edi_7590
	fn0041C910(ebx_189, es, ds, Mem7210[esp_178 - 4<i32>:word32], Mem7210[esp_178 + 32<i32>:word32], out ecx_7588, out ebx_7213, out ebp_7589, out esi_7217, out edi_7590)
	word32 esp_7226 = <invalid>
	Mem7235[esp_7226:word32] = 6<32>
	Mem7239[esp_7226 - 4<i32>:word32] = esi_7217 + 96<i32>
	word32 esp_7255 = <invalid>
	esp_7165 = esp_7255 + 4<32>
	word32 ecx_7591
	word32 ebp_7592
	word32 edi_7593
	edx_7173 = CONVERT(CONVERT(fn0041C910(ebx_7213, es, ds, Mem7239[esp_7226 - 4<i32>:word32], Mem7239[esp_7226 + 32<i32>:word32], out ecx_7591, out ebx_7145, out ebp_7592, out esi_7149, out edi_7593), word32, uint64) %u 7<32>, word64, uint32) * 2<32> + 1<32>
l0042420D:
	Mem7276[esp_103 - 4<i32>:word32] = Mem111[Mem111[ebp_118 + 8<i32>:word32]:word32] + 72<i32>
	word32 ecx_7580
	word32 ebp_7581
	word32 edi_7582
	fn0041C910(ebx_119, es, ds, Mem7276[esp_103 - 4<i32>:word32], Mem7276[esp_103 + 32<i32>:word32], out ecx_7580, out ebx_7182, out ebp_7581, out esi_7186, out edi_7582)
	word32 esp_7292 = <invalid>
	Mem7301[esp_7292:word32] = 6<32>
	esp_7203 = esp_7292
l0042421F:
	word32 esp_7307 = esp_7203 - 4<i32>
	Mem7308[esp_7307:word32] = esi_7186 + 96<i32>
	word32 esp_7330 = <invalid>
	esp_7165 = esp_7330 + 4<32>
	word32 ecx_7612
	word32 ebp_7613
	word32 edi_7614
	edx_7173 = CONVERT(CONVERT(fn0041C910(ebx_7182, es, ds, Mem7308[esp_7307:word32], Mem7308[esp_7307 + 36<i32>:word32], out ecx_7612, out ebx_7145, out ebp_7613, out esi_7149, out edi_7614), word32, uint64) %u 7<32>, word64, uint32) * 2<32>
l00424235:
	word32 esp_7347 = esp_7165 - 4<i32>
	Mem7349[esp_7347:word32] = edx_7173
	Mem7355[esp_7347 - 4<i32>:word32] = esi_7149 + 48<i32>
	word32 esp_7377 = <invalid>
	word32 ebx_7364
	word32 esi_7368
	word32 ecx_7594
	word32 ebp_7595
	word32 edi_7596
	Mem7386[esp_7377:word32] = fn0041C910(ebx_7145, es, ds, Mem7355[esp_7347 - 4<i32>:word32], Mem7355[esp_7347 + 32<i32>:word32], out ecx_7594, out ebx_7364, out ebp_7595, out esi_7368, out edi_7596)
	Mem7390[esp_7377 - 4<i32>:word32] = esi_7368 + 24<i32>
	word32 esp_7406 = <invalid>
	word32 ebx_7393
	word32 esi_7397
	word32 ecx_7597
	word32 ebp_7598
	word32 edi_7599
	Mem7415[esp_7406:word32] = fn0041C910(ebx_7364, es, ds, Mem7390[esp_7377 - 4<i32>:word32], Mem7390[esp_7377 + 32<i32>:word32], out ecx_7597, out ebx_7393, out ebp_7598, out esi_7397, out edi_7599)
	Mem7417[esp_7406 - 4<i32>:word32] = esi_7397
	word32 esp_7434 = <invalid>
	word32 ecx_7600
	word32 esi_7601
	word32 edi_7602
	Mem7443[esp_7434:word32] = fn0041C910(ebx_7393, es, ds, Mem7417[esp_7406 - 4<i32>:word32], Mem7417[esp_7406 + 32<i32>:word32], out ecx_7600, out ebx_2415, out ebp_2319, out esi_7601, out edi_7602)
	word32 ecx_7603
	eax_2458 = fn0041C7E0(Mem7443[esp_7434:word32], Mem7443[esp_7434 + 4<i32>:word32], Mem7443[esp_7434 + 8<i32>:word32], Mem7443[esp_7434 + 12<i32>:word32], Mem7443[esp_7434 + 16<i32>:word32], out ecx_7603)
	esp_2315 = esp_7434 + 0x14<32>
l004259FC:
	Mem7466[ebx_2415 + 96<i32>:word32] = Mem7463[ebx_2415 + 96<i32>:word32] + eax_2458
l004259FF:
	Mem7474[fs:0x00000000<p32>:word32] = Mem7470[ebp_2319 - 12<i32>:word32]
	word32 ecx_7477 = Mem7474[esp_2315:word32]
	word32 esi_7481 = Mem7474[esp_2315 + 8<i32>:word32]
	ebpOut = Mem7474[ebp_2319:word32]
	esiOut = esi_7481
	return ecx_7477
fn00424170_exit:


word32 fn00425A20(word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
fn00425A20_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc50
l00425A20:
	word32 ecx_1096
	word32 esi_2758
	word32 ebp_1071
	word32 esp_1111
	word32 eax_1932
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	Mem41[&tLoc50 + 16<i32>:word32] = 0<32>
	Mem42[&tLoc50 + 20<i32>:word32] = 0xF<32>
	Mem45[&tLoc50:byte] = 0<8>
	word32 ebp_47
	word32 ebx_48
	word32 edi_50
	word32 esi_2983
	word32 ecx_2981
	word32 edx_2982
	fn00402A70(&tLoc50, edi, 0x432D14<32>, 6<32>, Mem45[&tLoc50 + 12<i32>:word32], out ecx_2981, out edx_2982, out ebx_48, out ebp_47, out esi_2983, out edi_50)
	word32 esi_60 = Mem45[ebp_47 + 8<i32>:word32]
	Mem63[ebp_47 - 4<i32>:word32] = 0<32>
	word32 esp_54 = <invalid>
	Mem67[esp_54 - 0x14<32>:word32] = Mem63[esi_60:word32]
	word32 ebp_70
	word32 edx_2984
	fn004028D0(esp_54 - 0x10<32>, edi_50, Mem67[esp_54 - 0x14<32>:word32], out edx_2984, out ebp_70)
	Mem80[ebp_70 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_71 = <invalid>
	word32 ebp_87
	word32 edi_90
	word32 esi_92
	word32 edx_2986
	word32 ebx_2987
	word32 ecx_2985
	branch SLICE(fn0041C1F0(ebx_48, ebx_48, ebp_70, es, ds, Mem80[esp_71 + 0x2C<32>:word32], out ecx_2985, out edx_2986, out ebx_2987, out ebp_87, out esi_92, out edi_90), byte, 0) == 0<8> l00425AFA
l00425AFA:
	Mem107[ebp_87 - 24<i32>:word32] = esp_71 - 0x14<32>
	Mem109[esp_71 - 0x18<32>:word32] = 4<32>
	Mem110[esp_71 - 4<32>:word32] = 0<32>
	Mem111[esp_71:word32] = 0xF<32>
	Mem113[esp_71 - 0x1C<32>:word32] = 0x432D1C<32>
	Mem114[esp_71 - 0x14<32>:byte] = 0<8>
	word32 ebp_116
	word32 ebx_117
	word32 edi_119
	word32 esi_121
	word32 edx_2989
	word32 ecx_2988
	fn00402A70(esp_71 - 0x14<32>, edi_90, Mem114[esp_71 - 0x1C<32>:word32], Mem114[esp_71 - 0x18<32>:word32], Mem114[esp_71 - 8<32>:word32], out ecx_2988, out edx_2989, out ebx_117, out ebp_116, out esi_121, out edi_119)
	Mem131[ebp_116 - 4<i32>:word32] = 1<32>
	word32 esp_123 = <invalid>
	Mem135[esp_123 - 0x14<32>:word32] = Mem131[esi_121:word32]
	word32 ebp_138
	word32 edx_2990
	fn004028D0(esp_123 - 0x10<32>, edi_119, Mem135[esp_123 - 0x14<32>:word32], out edx_2990, out ebp_138)
	Mem148[ebp_138 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_139 = <invalid>
	word32 ebp_150
	word32 edi_153
	word32 esi_155
	word32 edx_2992
	word32 ebx_2993
	word32 ecx_2991
	branch SLICE(fn0041C1F0(ebx_117, ebx_117, ebp_138, es, ds, Mem148[esp_139 + 0x2C<32>:word32], out ecx_2991, out edx_2992, out ebx_2993, out ebp_150, out esi_155, out edi_153), byte, 0) == 0<8> l00425B9B
l00425B9B:
	Mem170[ebp_150 - 24<i32>:word32] = esp_139 - 0x14<32>
	Mem172[esp_139 - 0x18<32>:word32] = 4<32>
	Mem173[esp_139 - 4<32>:word32] = 0<32>
	Mem174[esp_139:word32] = 0xF<32>
	Mem176[esp_139 - 0x1C<32>:word32] = 0x432D24<32>
	Mem177[esp_139 - 0x14<32>:byte] = 0<8>
	word32 ebp_179
	word32 ebx_180
	word32 edi_182
	word32 esi_184
	word32 ecx_3013
	word32 edx_3014
	fn00402A70(esp_139 - 0x14<32>, edi_153, Mem177[esp_139 - 0x1C<32>:word32], Mem177[esp_139 - 0x18<32>:word32], Mem177[esp_139 - 8<32>:word32], out ecx_3013, out edx_3014, out ebx_180, out ebp_179, out esi_184, out edi_182)
	Mem194[ebp_179 - 4<i32>:word32] = 2<32>
	word32 esp_186 = <invalid>
	Mem198[esp_186 - 0x14<32>:word32] = Mem194[esi_184:word32]
	word32 ebp_201
	word32 edx_3015
	fn004028D0(esp_186 - 0x10<32>, edi_182, Mem198[esp_186 - 0x14<32>:word32], out edx_3015, out ebp_201)
	Mem211[ebp_201 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_202 = <invalid>
	word32 ebp_213
	word32 edi_216
	word32 esi_218
	word32 ecx_3016
	word32 edx_3017
	word32 ebx_3018
	branch SLICE(fn0041C1F0(ebx_180, ebx_180, ebp_201, es, ds, Mem211[esp_202 + 0x2C<32>:word32], out ecx_3016, out edx_3017, out ebx_3018, out ebp_213, out esi_218, out edi_216), byte, 0) == 0<8> l00425C3C
l00425C3C:
	Mem233[ebp_213 - 24<i32>:word32] = esp_202 - 0x14<32>
	Mem235[esp_202 - 0x18<32>:word32] = 5<32>
	Mem236[esp_202 - 4<32>:word32] = 0<32>
	Mem237[esp_202:word32] = 0xF<32>
	Mem239[esp_202 - 0x1C<32>:word32] = 0x432D2C<32>
	Mem240[esp_202 - 0x14<32>:byte] = 0<8>
	word32 ebp_242
	word32 ebx_243
	word32 edi_245
	word32 esi_247
	word32 ecx_3035
	word32 edx_3036
	fn00402A70(esp_202 - 0x14<32>, edi_216, Mem240[esp_202 - 0x1C<32>:word32], Mem240[esp_202 - 0x18<32>:word32], Mem240[esp_202 - 8<32>:word32], out ecx_3035, out edx_3036, out ebx_243, out ebp_242, out esi_247, out edi_245)
	Mem257[ebp_242 - 4<i32>:word32] = 3<32>
	word32 esp_249 = <invalid>
	Mem261[esp_249 - 0x14<32>:word32] = Mem257[esi_247:word32]
	word32 ebp_264
	word32 edx_3037
	fn004028D0(esp_249 - 0x10<32>, edi_245, Mem261[esp_249 - 0x14<32>:word32], out edx_3037, out ebp_264)
	Mem274[ebp_264 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_265 = <invalid>
	word32 ebp_276
	word32 edi_279
	word32 esi_281
	word32 ecx_3038
	word32 edx_3039
	word32 ebx_3040
	branch SLICE(fn0041C1F0(ebx_243, ebx_243, ebp_264, es, ds, Mem274[esp_265 + 0x2C<32>:word32], out ecx_3038, out edx_3039, out ebx_3040, out ebp_276, out esi_281, out edi_279), byte, 0) == 0<8> l00425CE6
l00425CE6:
	word32 ebx_1112
	word32 eax_1095
	Mem296[ebp_276 - 24<i32>:word32] = esp_265 - 0x14<32>
	Mem298[esp_265 - 0x18<32>:word32] = 5<32>
	Mem299[esp_265 - 4<32>:word32] = 0<32>
	Mem300[esp_265:word32] = 0xF<32>
	Mem302[esp_265 - 0x1C<32>:word32] = 0x432D34<32>
	Mem303[esp_265 - 0x14<32>:byte] = 0<8>
	word32 ebp_305
	word32 ebx_306
	word32 edi_308
	word32 esi_310
	word32 ecx_3057
	word32 edx_3058
	fn00402A70(esp_265 - 0x14<32>, edi_279, Mem303[esp_265 - 0x1C<32>:word32], Mem303[esp_265 - 0x18<32>:word32], Mem303[esp_265 - 8<32>:word32], out ecx_3057, out edx_3058, out ebx_306, out ebp_305, out esi_310, out edi_308)
	Mem320[ebp_305 - 4<i32>:word32] = 4<32>
	word32 esp_312 = <invalid>
	Mem324[esp_312 - 0x14<32>:word32] = Mem320[esi_310:word32]
	word32 ebp_327
	word32 edx_3059
	fn004028D0(esp_312 - 0x10<32>, edi_308, Mem324[esp_312 - 0x14<32>:word32], out edx_3059, out ebp_327)
	Mem337[ebp_327 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_328 = <invalid>
	word32 ebp_339
	word32 edi_342
	word32 esi_344
	word32 ecx_3060
	word32 edx_3061
	word32 ebx_3062
	branch SLICE(fn0041C1F0(ebx_306, ebx_306, ebp_327, es, ds, Mem337[esp_328 + 0x2C<32>:word32], out ecx_3060, out edx_3061, out ebx_3062, out ebp_339, out esi_344, out edi_342), byte, 0) == 0<8> l00425D76
l00425D76:
	Mem359[ebp_339 - 24<i32>:word32] = esp_328 - 0x14<32>
	Mem361[esp_328 - 0x18<32>:word32] = 6<32>
	Mem362[esp_328 - 4<32>:word32] = 0<32>
	Mem363[esp_328:word32] = 0xF<32>
	Mem365[esp_328 - 0x1C<32>:word32] = 0x432D3C<32>
	Mem366[esp_328 - 0x14<32>:byte] = 0<8>
	word32 ebp_368
	word32 ebx_369
	word32 edi_371
	word32 esi_373
	word32 ecx_3082
	word32 edx_3083
	fn00402A70(esp_328 - 0x14<32>, edi_342, Mem366[esp_328 - 0x1C<32>:word32], Mem366[esp_328 - 0x18<32>:word32], Mem366[esp_328 - 8<32>:word32], out ecx_3082, out edx_3083, out ebx_369, out ebp_368, out esi_373, out edi_371)
	Mem383[ebp_368 - 4<i32>:word32] = 5<32>
	word32 esp_375 = <invalid>
	Mem387[esp_375 - 0x14<32>:word32] = Mem383[esi_373:word32]
	word32 ebp_390
	word32 edx_3084
	fn004028D0(esp_375 - 0x10<32>, edi_371, Mem387[esp_375 - 0x14<32>:word32], out edx_3084, out ebp_390)
	Mem400[ebp_390 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_391 = <invalid>
	word32 ebp_402
	word32 edi_405
	word32 esi_407
	word32 ecx_3085
	word32 edx_3086
	word32 ebx_3087
	branch SLICE(fn0041C1F0(ebx_369, ebx_369, ebp_390, es, ds, Mem400[esp_391 + 0x2C<32>:word32], out ecx_3085, out edx_3086, out ebx_3087, out ebp_402, out esi_407, out edi_405), byte, 0) == 0<8> l00425E20
l00425E20:
	Mem422[ebp_402 - 24<i32>:word32] = esp_391 - 0x14<32>
	Mem424[esp_391 - 0x18<32>:word32] = 3<32>
	Mem425[esp_391 - 4<32>:word32] = 0<32>
	Mem426[esp_391:word32] = 0xF<32>
	Mem428[esp_391 - 0x1C<32>:word32] = 0x432D44<32>
	Mem429[esp_391 - 0x14<32>:byte] = 0<8>
	word32 ebp_431
	word32 ebx_432
	word32 edi_434
	word32 esi_436
	word32 ecx_3099
	word32 edx_3100
	fn00402A70(esp_391 - 0x14<32>, edi_405, Mem429[esp_391 - 0x1C<32>:word32], Mem429[esp_391 - 0x18<32>:word32], Mem429[esp_391 - 8<32>:word32], out ecx_3099, out edx_3100, out ebx_432, out ebp_431, out esi_436, out edi_434)
	Mem446[ebp_431 - 4<i32>:word32] = 6<32>
	word32 esp_438 = <invalid>
	Mem450[esp_438 - 0x14<32>:word32] = Mem446[esi_436:word32]
	word32 ebp_453
	word32 edx_3101
	fn004028D0(esp_438 - 0x10<32>, edi_434, Mem450[esp_438 - 0x14<32>:word32], out edx_3101, out ebp_453)
	Mem463[ebp_453 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_454 = <invalid>
	word32 ebp_465
	word32 edi_468
	word32 esi_470
	word32 ecx_3102
	word32 edx_3103
	word32 ebx_3104
	branch SLICE(fn0041C1F0(ebx_432, ebx_432, ebp_453, es, ds, Mem463[esp_454 + 0x2C<32>:word32], out ecx_3102, out edx_3103, out ebx_3104, out ebp_465, out esi_470, out edi_468), byte, 0) == 0<8> l00425EB0
l00425EB0:
	Mem485[ebp_465 - 24<i32>:word32] = esp_454 - 0x14<32>
	Mem487[esp_454 - 0x18<32>:word32] = 3<32>
	Mem488[esp_454 - 4<32>:word32] = 0<32>
	Mem489[esp_454:word32] = 0xF<32>
	Mem491[esp_454 - 0x1C<32>:word32] = 0x432D48<32>
	Mem492[esp_454 - 0x14<32>:byte] = 0<8>
	word32 ebp_494
	word32 ebx_495
	word32 edi_497
	word32 esi_499
	word32 ecx_3124
	word32 edx_3125
	fn00402A70(esp_454 - 0x14<32>, edi_468, Mem492[esp_454 - 0x1C<32>:word32], Mem492[esp_454 - 0x18<32>:word32], Mem492[esp_454 - 8<32>:word32], out ecx_3124, out edx_3125, out ebx_495, out ebp_494, out esi_499, out edi_497)
	Mem509[ebp_494 - 4<i32>:word32] = 7<32>
	word32 esp_501 = <invalid>
	Mem513[esp_501 - 0x14<32>:word32] = Mem509[esi_499:word32]
	word32 ebp_516
	word32 edx_3126
	fn004028D0(esp_501 - 0x10<32>, edi_497, Mem513[esp_501 - 0x14<32>:word32], out edx_3126, out ebp_516)
	Mem526[ebp_516 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_517 = <invalid>
	word32 ebp_528
	word32 edi_531
	word32 esi_533
	word32 ecx_3127
	word32 edx_3128
	word32 ebx_3129
	branch SLICE(fn0041C1F0(ebx_495, ebx_495, ebp_516, es, ds, Mem526[esp_517 + 0x2C<32>:word32], out ecx_3127, out edx_3128, out ebx_3129, out ebp_528, out esi_533, out edi_531), byte, 0) == 0<8> l00425F40
l00425F40:
	Mem548[ebp_528 - 24<i32>:word32] = esp_517 - 0x14<32>
	Mem550[esp_517 - 0x18<32>:word32] = 3<32>
	Mem551[esp_517 - 4<32>:word32] = 0<32>
	Mem552[esp_517:word32] = 0xF<32>
	Mem554[esp_517 - 0x1C<32>:word32] = 0x432D4C<32>
	Mem555[esp_517 - 0x14<32>:byte] = 0<8>
	word32 ebp_557
	word32 ebx_558
	word32 edi_560
	word32 esi_562
	word32 ecx_3141
	word32 edx_3142
	fn00402A70(esp_517 - 0x14<32>, edi_531, Mem555[esp_517 - 0x1C<32>:word32], Mem555[esp_517 - 0x18<32>:word32], Mem555[esp_517 - 8<32>:word32], out ecx_3141, out edx_3142, out ebx_558, out ebp_557, out esi_562, out edi_560)
	Mem572[ebp_557 - 4<i32>:word32] = 8<32>
	word32 esp_564 = <invalid>
	Mem576[esp_564 - 0x14<32>:word32] = Mem572[esi_562:word32]
	word32 ebp_579
	word32 edx_3143
	fn004028D0(esp_564 - 0x10<32>, edi_560, Mem576[esp_564 - 0x14<32>:word32], out edx_3143, out ebp_579)
	Mem589[ebp_579 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_580 = <invalid>
	word32 ebp_591
	word32 edi_594
	word32 esi_596
	word32 ecx_3144
	word32 edx_3145
	word32 ebx_3146
	branch SLICE(fn0041C1F0(ebx_558, ebx_558, ebp_579, es, ds, Mem589[esp_580 + 0x2C<32>:word32], out ecx_3144, out edx_3145, out ebx_3146, out ebp_591, out esi_596, out edi_594), byte, 0) == 0<8> l00425FD3
l00425FD3:
	Mem611[ebp_591 - 24<i32>:word32] = esp_580 - 0x14<32>
	Mem613[esp_580 - 0x18<32>:word32] = 3<32>
	Mem614[esp_580 - 4<32>:word32] = 0<32>
	Mem615[esp_580:word32] = 0xF<32>
	Mem617[esp_580 - 0x1C<32>:word32] = 0x432D50<32>
	Mem618[esp_580 - 0x14<32>:byte] = 0<8>
	word32 ebp_620
	word32 ebx_621
	word32 edi_623
	word32 esi_625
	word32 ecx_3158
	word32 edx_3159
	fn00402A70(esp_580 - 0x14<32>, edi_594, Mem618[esp_580 - 0x1C<32>:word32], Mem618[esp_580 - 0x18<32>:word32], Mem618[esp_580 - 8<32>:word32], out ecx_3158, out edx_3159, out ebx_621, out ebp_620, out esi_625, out edi_623)
	Mem635[ebp_620 - 4<i32>:word32] = 9<32>
	word32 esp_627 = <invalid>
	Mem639[esp_627 - 0x14<32>:word32] = Mem635[esi_625:word32]
	word32 ebp_642
	word32 edx_3160
	fn004028D0(esp_627 - 0x10<32>, edi_623, Mem639[esp_627 - 0x14<32>:word32], out edx_3160, out ebp_642)
	Mem652[ebp_642 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_643 = <invalid>
	word32 ebp_654
	word32 edi_657
	word32 esi_659
	word32 ecx_3161
	word32 edx_3162
	word32 ebx_3163
	branch SLICE(fn0041C1F0(ebx_621, ebx_621, ebp_642, es, ds, Mem652[esp_643 + 0x2C<32>:word32], out ecx_3161, out edx_3162, out ebx_3163, out ebp_654, out esi_659, out edi_657), byte, 0) == 0<8> l00426066
l00426066:
	Mem674[ebp_654 - 24<i32>:word32] = esp_643 - 0x14<32>
	Mem676[esp_643 - 0x18<32>:word32] = 5<32>
	Mem677[esp_643 - 4<32>:word32] = 0<32>
	Mem678[esp_643:word32] = 0xF<32>
	Mem680[esp_643 - 0x1C<32>:word32] = 0x432D54<32>
	Mem681[esp_643 - 0x14<32>:byte] = 0<8>
	word32 ebp_683
	word32 ebx_684
	word32 edi_686
	word32 esi_688
	word32 ecx_3175
	word32 edx_3176
	fn00402A70(esp_643 - 0x14<32>, edi_657, Mem681[esp_643 - 0x1C<32>:word32], Mem681[esp_643 - 0x18<32>:word32], Mem681[esp_643 - 8<32>:word32], out ecx_3175, out edx_3176, out ebx_684, out ebp_683, out esi_688, out edi_686)
	Mem698[ebp_683 - 4<i32>:word32] = 0xA<32>
	word32 esp_690 = <invalid>
	Mem702[esp_690 - 0x14<32>:word32] = Mem698[esi_688:word32]
	word32 ebp_705
	word32 edx_3177
	fn004028D0(esp_690 - 0x10<32>, edi_686, Mem702[esp_690 - 0x14<32>:word32], out edx_3177, out ebp_705)
	Mem715[ebp_705 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_706 = <invalid>
	word32 ebp_717
	word32 edi_720
	word32 esi_722
	word32 ecx_3178
	word32 edx_3179
	word32 ebx_3180
	branch SLICE(fn0041C1F0(ebx_684, ebx_684, ebp_705, es, ds, Mem715[esp_706 + 0x2C<32>:word32], out ecx_3178, out edx_3179, out ebx_3180, out ebp_717, out esi_722, out edi_720), byte, 0) == 0<8> l004260F9
l004260F9:
	Mem737[ebp_717 - 24<i32>:word32] = esp_706 - 0x14<32>
	Mem739[esp_706 - 0x18<32>:word32] = 4<32>
	Mem740[esp_706 - 4<32>:word32] = 0<32>
	Mem741[esp_706:word32] = 0xF<32>
	Mem743[esp_706 - 0x1C<32>:word32] = 0x432D5C<32>
	Mem744[esp_706 - 0x14<32>:byte] = 0<8>
	word32 ebp_746
	word32 ebx_747
	word32 edi_749
	word32 esi_751
	word32 ecx_3192
	word32 edx_3193
	fn00402A70(esp_706 - 0x14<32>, edi_720, Mem744[esp_706 - 0x1C<32>:word32], Mem744[esp_706 - 0x18<32>:word32], Mem744[esp_706 - 8<32>:word32], out ecx_3192, out edx_3193, out ebx_747, out ebp_746, out esi_751, out edi_749)
	Mem761[ebp_746 - 4<i32>:word32] = 0xB<32>
	word32 esp_753 = <invalid>
	Mem765[esp_753 - 0x14<32>:word32] = Mem761[esi_751:word32]
	word32 ebp_768
	word32 edx_3194
	fn004028D0(esp_753 - 0x10<32>, edi_749, Mem765[esp_753 - 0x14<32>:word32], out edx_3194, out ebp_768)
	Mem778[ebp_768 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_769 = <invalid>
	word32 ebp_780
	word32 edi_783
	word32 esi_785
	word32 ecx_3195
	word32 edx_3196
	word32 ebx_3197
	branch SLICE(fn0041C1F0(ebx_747, ebx_747, ebp_768, es, ds, Mem778[esp_769 + 0x2C<32>:word32], out ecx_3195, out edx_3196, out ebx_3197, out ebp_780, out esi_785, out edi_783), byte, 0) == 0<8> l0042618C
l0042618C:
	Mem800[ebp_780 - 24<i32>:word32] = esp_769 - 0x14<32>
	Mem802[esp_769 - 0x18<32>:word32] = 4<32>
	Mem803[esp_769 - 4<32>:word32] = 0<32>
	Mem804[esp_769:word32] = 0xF<32>
	Mem806[esp_769 - 0x1C<32>:word32] = 0x432D64<32>
	Mem807[esp_769 - 0x14<32>:byte] = 0<8>
	word32 ebp_809
	word32 ebx_810
	word32 edi_812
	word32 esi_814
	word32 ecx_3209
	word32 edx_3210
	fn00402A70(esp_769 - 0x14<32>, edi_783, Mem807[esp_769 - 0x1C<32>:word32], Mem807[esp_769 - 0x18<32>:word32], Mem807[esp_769 - 8<32>:word32], out ecx_3209, out edx_3210, out ebx_810, out ebp_809, out esi_814, out edi_812)
	Mem824[ebp_809 - 4<i32>:word32] = 0xC<32>
	word32 esp_816 = <invalid>
	Mem828[esp_816 - 0x14<32>:word32] = Mem824[esi_814:word32]
	word32 ebp_831
	word32 edx_3211
	fn004028D0(esp_816 - 0x10<32>, edi_812, Mem828[esp_816 - 0x14<32>:word32], out edx_3211, out ebp_831)
	Mem841[ebp_831 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_832 = <invalid>
	esp_1111 = esp_832 + 4<32>
	word32 edx_3212
	word32 ebx_3213
	word32 edi_3214
	branch SLICE(fn0041C1F0(ebx_810, ebx_810, ebp_831, es, ds, Mem841[esp_832 + 0x2C<32>:word32], out ecx_1096, out edx_3212, out ebx_3213, out ebp_1071, out esi_2758, out edi_3214), byte, 0) == 0<8> l00426225
l004261D6:
	word128 xmm0_862 = fn00427210()
	word32 ecx_3227
	word32 edx_3228
	word32 eax_867 = fn0042D911(SEQ(SLICE(xmm0_862, word64, 64), SLICE(xmm0_862, real64, 0) * Mem841[0x00432EE0<p32>:real64]), out ecx_3227, out edx_3228)
	Mem886[esp_832:word32] = Mem841[esi_2758:word32] + 72<i32>
	word32 esp_904 = <invalid>
	word32 ebx_891
	word32 esi_895
	word32 ecx_3229
	word32 ebp_3230
	word32 edi_3231
	Mem913[esp_904:word32] = fn0041C910(eax_867, es, ds, Mem886[esp_832:word32], Mem886[esp_832 + 36<i32>:word32], out ecx_3229, out ebx_891, out ebp_3230, out esi_895, out edi_3231)
	Mem915[esp_904 - 4<i32>:word32] = esi_895
	word32 esp_931 = <invalid>
	word32 ebx_918
	word32 edi_920
	word32 ecx_3232
	word32 ebp_3233
	word32 esi_3234
	Mem940[esp_931:word32] = fn0041C910(ebx_891, es, ds, Mem915[esp_904 - 4<i32>:word32], Mem915[esp_904 + 32<i32>:word32], out ecx_3232, out ebx_918, out ebp_3233, out esi_3234, out edi_920)
	Mem942[esp_931 - 4<i32>:word32] = edi_920
	word32 esp_958 = <invalid>
	word32 ebx_945
	word32 ecx_3235
	word32 esi_3236
	word32 edi_3237
	Mem967[esp_958:word32] = fn0041C910(ebx_918, es, ds, Mem942[esp_931 - 4<i32>:word32], Mem942[esp_931 + 32<i32>:word32], out ecx_3235, out ebx_945, out ebp_1071, out esi_3236, out edi_3237)
	eax_1095 = fn0041C680(Mem967[esp_958:word32], Mem967[esp_958 + 4<i32>:word32], Mem967[esp_958 + 8<i32>:word32], out ecx_1096)
	esp_1111 = esp_958 + 0xC<32>
	ebx_1112 = ebx_945 + 0x630<32>
l00426143:
	word128 xmm0_989 = fn00427210()
	word32 ecx_3215
	word32 edx_3216
	word32 eax_994 = fn0042D911(SEQ(SLICE(xmm0_989, word64, 64), SLICE(xmm0_989, real64, 0) * Mem778[0x00432EE0<p32>:real64]), out ecx_3215, out edx_3216)
	Mem1013[esp_769:word32] = Mem778[esi_785:word32] + 72<i32>
	word32 esp_1031 = <invalid>
	word32 ebx_1018
	word32 esi_1022
	word32 ecx_3217
	word32 ebp_3218
	word32 edi_3219
	Mem1040[esp_1031:word32] = fn0041C910(eax_994, es, ds, Mem1013[esp_769:word32], Mem1013[esp_769 + 36<i32>:word32], out ecx_3217, out ebx_1018, out ebp_3218, out esi_1022, out edi_3219)
	Mem1042[esp_1031 - 4<i32>:word32] = esi_1022
	word32 esp_1058 = <invalid>
	word32 ebx_1045
	word32 edi_1047
	word32 ecx_3220
	word32 ebp_3221
	word32 esi_3222
	Mem1067[esp_1058:word32] = fn0041C910(ebx_1018, es, ds, Mem1042[esp_1031 - 4<i32>:word32], Mem1042[esp_1031 + 32<i32>:word32], out ecx_3220, out ebx_1045, out ebp_3221, out esi_3222, out edi_1047)
	Mem1069[esp_1058 - 4<i32>:word32] = edi_1047
	word32 esp_1085 = <invalid>
	word32 ebx_1072
	word32 ecx_3223
	word32 esi_3224
	word32 edi_3225
	Mem1094[esp_1085:word32] = fn0041C910(ebx_1045, es, ds, Mem1069[esp_1058 - 4<i32>:word32], Mem1069[esp_1058 + 32<i32>:word32], out ecx_3223, out ebx_1072, out ebp_1071, out esi_3224, out edi_3225)
	eax_1095 = fn0041C680(Mem1094[esp_1085:word32], Mem1094[esp_1085 + 4<i32>:word32], Mem1094[esp_1085 + 8<i32>:word32], out ecx_1096)
	esp_1111 = esp_1085 + 0xC<32>
	ebx_1112 = ebx_1072 + 0x634<32>
l004260B0:
	word128 xmm0_1116 = fn00427210()
	word32 ecx_3198
	word32 edx_3199
	word32 eax_1121 = fn0042D911(SEQ(SLICE(xmm0_1116, word64, 64), SLICE(xmm0_1116, real64, 0) * Mem715[0x00432EE0<p32>:real64]), out ecx_3198, out edx_3199)
	Mem1140[esp_706:word32] = Mem715[esi_722:word32] + 72<i32>
	word32 esp_1158 = <invalid>
	word32 ebx_1145
	word32 esi_1149
	word32 ecx_3200
	word32 ebp_3201
	word32 edi_3202
	Mem1167[esp_1158:word32] = fn0041C910(eax_1121, es, ds, Mem1140[esp_706:word32], Mem1140[esp_706 + 36<i32>:word32], out ecx_3200, out ebx_1145, out ebp_3201, out esi_1149, out edi_3202)
	Mem1169[esp_1158 - 4<i32>:word32] = esi_1149
	word32 esp_1185 = <invalid>
	word32 ebx_1172
	word32 edi_1174
	word32 ecx_3203
	word32 ebp_3204
	word32 esi_3205
	Mem1194[esp_1185:word32] = fn0041C910(ebx_1145, es, ds, Mem1169[esp_1158 - 4<i32>:word32], Mem1169[esp_1158 + 32<i32>:word32], out ecx_3203, out ebx_1172, out ebp_3204, out esi_3205, out edi_1174)
	Mem1196[esp_1185 - 4<i32>:word32] = edi_1174
	word32 esp_1212 = <invalid>
	word32 ebx_1199
	word32 ecx_3206
	word32 esi_3207
	word32 edi_3208
	Mem1221[esp_1212:word32] = fn0041C910(ebx_1172, es, ds, Mem1196[esp_1185 - 4<i32>:word32], Mem1196[esp_1185 + 32<i32>:word32], out ecx_3206, out ebx_1199, out ebp_1071, out esi_3207, out edi_3208)
	eax_1095 = fn0041C680(Mem1221[esp_1212:word32], Mem1221[esp_1212 + 4<i32>:word32], Mem1221[esp_1212 + 8<i32>:word32], out ecx_1096)
	esp_1111 = esp_1212 + 0xC<32>
	ebx_1112 = ebx_1199 + 0x670<32>
l0042601D:
	word128 xmm0_1243 = fn00427210()
	word32 ecx_3181
	word32 edx_3182
	word32 eax_1248 = fn0042D911(SEQ(SLICE(xmm0_1243, word64, 64), SLICE(xmm0_1243, real64, 0) * Mem652[0x00432EE0<p32>:real64]), out ecx_3181, out edx_3182)
	Mem1267[esp_643:word32] = Mem652[esi_659:word32] + 72<i32>
	word32 esp_1285 = <invalid>
	word32 ebx_1272
	word32 esi_1276
	word32 ecx_3183
	word32 ebp_3184
	word32 edi_3185
	Mem1294[esp_1285:word32] = fn0041C910(eax_1248, es, ds, Mem1267[esp_643:word32], Mem1267[esp_643 + 36<i32>:word32], out ecx_3183, out ebx_1272, out ebp_3184, out esi_1276, out edi_3185)
	Mem1296[esp_1285 - 4<i32>:word32] = esi_1276
	word32 esp_1312 = <invalid>
	word32 ebx_1299
	word32 edi_1301
	word32 ecx_3186
	word32 ebp_3187
	word32 esi_3188
	Mem1321[esp_1312:word32] = fn0041C910(ebx_1272, es, ds, Mem1296[esp_1285 - 4<i32>:word32], Mem1296[esp_1285 + 32<i32>:word32], out ecx_3186, out ebx_1299, out ebp_3187, out esi_3188, out edi_1301)
	Mem1323[esp_1312 - 4<i32>:word32] = edi_1301
	word32 esp_1339 = <invalid>
	word32 ebx_1326
	word32 ecx_3189
	word32 esi_3190
	word32 edi_3191
	Mem1348[esp_1339:word32] = fn0041C910(ebx_1299, es, ds, Mem1323[esp_1312 - 4<i32>:word32], Mem1323[esp_1312 + 32<i32>:word32], out ecx_3189, out ebx_1326, out ebp_1071, out esi_3190, out edi_3191)
	eax_1095 = fn0041C680(Mem1348[esp_1339:word32], Mem1348[esp_1339 + 4<i32>:word32], Mem1348[esp_1339 + 8<i32>:word32], out ecx_1096)
	esp_1111 = esp_1339 + 0xC<32>
	ebx_1112 = ebx_1326 + 0x430<32>
l00425F8A:
	word128 xmm0_1370 = fn00427210()
	word32 ecx_3164
	word32 edx_3165
	word32 eax_1375 = fn0042D911(SEQ(SLICE(xmm0_1370, word64, 64), SLICE(xmm0_1370, real64, 0) * Mem589[0x00432EE0<p32>:real64]), out ecx_3164, out edx_3165)
	Mem1394[esp_580:word32] = Mem589[esi_596:word32] + 72<i32>
	word32 esp_1412 = <invalid>
	word32 ebx_1399
	word32 esi_1403
	word32 ecx_3166
	word32 ebp_3167
	word32 edi_3168
	Mem1421[esp_1412:word32] = fn0041C910(eax_1375, es, ds, Mem1394[esp_580:word32], Mem1394[esp_580 + 36<i32>:word32], out ecx_3166, out ebx_1399, out ebp_3167, out esi_1403, out edi_3168)
	Mem1423[esp_1412 - 4<i32>:word32] = esi_1403
	word32 esp_1439 = <invalid>
	word32 ebx_1426
	word32 edi_1428
	word32 ecx_3169
	word32 ebp_3170
	word32 esi_3171
	Mem1448[esp_1439:word32] = fn0041C910(ebx_1399, es, ds, Mem1423[esp_1412 - 4<i32>:word32], Mem1423[esp_1412 + 32<i32>:word32], out ecx_3169, out ebx_1426, out ebp_3170, out esi_3171, out edi_1428)
	Mem1450[esp_1439 - 4<i32>:word32] = edi_1428
	word32 esp_1466 = <invalid>
	word32 ebx_1453
	word32 ecx_3172
	word32 esi_3173
	word32 edi_3174
	Mem1475[esp_1466:word32] = fn0041C910(ebx_1426, es, ds, Mem1450[esp_1439 - 4<i32>:word32], Mem1450[esp_1439 + 32<i32>:word32], out ecx_3172, out ebx_1453, out ebp_1071, out esi_3173, out edi_3174)
	eax_1095 = fn0041C680(Mem1475[esp_1466:word32], Mem1475[esp_1466 + 4<i32>:word32], Mem1475[esp_1466 + 8<i32>:word32], out ecx_1096)
	esp_1111 = esp_1466 + 0xC<32>
	ebx_1112 = ebx_1453 + 0x436<32>
l00425EFA:
	word128 xmm0_1497 = fn00427210()
	word32 ecx_3147
	word32 edx_3148
	word32 eax_1502 = fn0042D911(SEQ(SLICE(xmm0_1497, word64, 64), SLICE(xmm0_1497, real64, 0) * Mem526[0x00432EE0<p32>:real64]), out ecx_3147, out edx_3148)
	Mem1521[esp_517:word32] = Mem526[esi_533:word32] + 72<i32>
	word32 esp_1539 = <invalid>
	word32 ebx_1526
	word32 esi_1530
	word32 ecx_3149
	word32 ebp_3150
	word32 edi_3151
	Mem1548[esp_1539:word32] = fn0041C910(eax_1502, es, ds, Mem1521[esp_517:word32], Mem1521[esp_517 + 36<i32>:word32], out ecx_3149, out ebx_1526, out ebp_3150, out esi_1530, out edi_3151)
	Mem1550[esp_1539 - 4<i32>:word32] = esi_1530
	word32 esp_1566 = <invalid>
	word32 ebx_1553
	word32 edi_1555
	word32 ecx_3152
	word32 ebp_3153
	word32 esi_3154
	Mem1575[esp_1566:word32] = fn0041C910(ebx_1526, es, ds, Mem1550[esp_1539 - 4<i32>:word32], Mem1550[esp_1539 + 32<i32>:word32], out ecx_3152, out ebx_1553, out ebp_3153, out esi_3154, out edi_1555)
	Mem1577[esp_1566 - 4<i32>:word32] = edi_1555
	word32 esp_1593 = <invalid>
	word32 ebx_1580
	word32 ecx_3155
	word32 esi_3156
	word32 edi_3157
	Mem1602[esp_1593:word32] = fn0041C910(ebx_1553, es, ds, Mem1577[esp_1566 - 4<i32>:word32], Mem1577[esp_1566 + 32<i32>:word32], out ecx_3155, out ebx_1580, out ebp_1071, out esi_3156, out edi_3157)
	eax_1095 = fn0041C680(Mem1602[esp_1593:word32], Mem1602[esp_1593 + 4<i32>:word32], Mem1602[esp_1593 + 8<i32>:word32], out ecx_1096)
	esp_1111 = esp_1593 + 0xC<32>
	ebx_1112 = ebx_1580 + 0x30<32>
l00425E6A:
	word128 xmm0_1624 = fn00427210()
	word32 ecx_3130
	word32 edx_3131
	word32 eax_1629 = fn0042D911(SEQ(SLICE(xmm0_1624, word64, 64), SLICE(xmm0_1624, real64, 0) * Mem463[0x00432EE0<p32>:real64]), out ecx_3130, out edx_3131)
	Mem1648[esp_454:word32] = Mem463[esi_470:word32] + 72<i32>
	word32 esp_1666 = <invalid>
	word32 ebx_1653
	word32 esi_1657
	word32 ecx_3132
	word32 ebp_3133
	word32 edi_3134
	Mem1675[esp_1666:word32] = fn0041C910(eax_1629, es, ds, Mem1648[esp_454:word32], Mem1648[esp_454 + 36<i32>:word32], out ecx_3132, out ebx_1653, out ebp_3133, out esi_1657, out edi_3134)
	Mem1677[esp_1666 - 4<i32>:word32] = esi_1657
	word32 esp_1693 = <invalid>
	word32 ebx_1680
	word32 edi_1682
	word32 ecx_3135
	word32 ebp_3136
	word32 esi_3137
	Mem1702[esp_1693:word32] = fn0041C910(ebx_1653, es, ds, Mem1677[esp_1666 - 4<i32>:word32], Mem1677[esp_1666 + 32<i32>:word32], out ecx_3135, out ebx_1680, out ebp_3136, out esi_3137, out edi_1682)
	Mem1704[esp_1693 - 4<i32>:word32] = edi_1682
	word32 esp_1720 = <invalid>
	word32 ebx_1707
	word32 ecx_3138
	word32 esi_3139
	word32 edi_3140
	Mem1729[esp_1720:word32] = fn0041C910(ebx_1680, es, ds, Mem1704[esp_1693 - 4<i32>:word32], Mem1704[esp_1693 + 32<i32>:word32], out ecx_3138, out ebx_1707, out ebp_1071, out esi_3139, out edi_3140)
	eax_1095 = fn0041C680(Mem1729[esp_1720:word32], Mem1729[esp_1720 + 4<i32>:word32], Mem1729[esp_1720 + 8<i32>:word32], out ecx_1096)
	esp_1111 = esp_1720 + 0xC<32>
	ebx_1112 = ebx_1707 + 0x36<32>
l00425DC0:
	word128 xmm0_1751 = fn00427210()
	word32 ecx_3105
	word32 edx_3106
	word32 eax_1756 = fn0042D911(SEQ(SLICE(xmm0_1751, word64, 64), SLICE(xmm0_1751, real64, 0) * Mem400[0x00432EC8<p32>:real64]), out ecx_3105, out edx_3106)
	word32 ecx_1771 = Mem400[esi_407:word32]
	Mem1772[ebp_402 - 20<i32>:word32] = eax_1756
	Mem1776[esp_391:word32] = ecx_1771 + 120<i32>
	Mem1778[ebp_402 - 24<i32>:word32] = ecx_1771 + 24<i32>
	word32 esp_1796 = <invalid>
	word32 ebx_1783
	word32 esi_1787
	word32 ecx_3107
	word32 ebp_3108
	word32 edi_3109
	Mem1805[esp_1796:word32] = fn0041C910(ecx_1771 + 48<i32>, es, ds, Mem1778[esp_391:word32], Mem1778[esp_391 + 36<i32>:word32], out ecx_3107, out ebx_1783, out ebp_3108, out esi_1787, out edi_3109)
	Mem1807[esp_1796 - 4<i32>:word32] = esi_1787
	word32 esp_1823 = <invalid>
	word32 ebx_1810
	word32 edi_1812
	word32 ecx_3110
	word32 ebp_3111
	word32 esi_3112
	Mem1832[esp_1823:word32] = fn0041C910(ebx_1783, es, ds, Mem1807[esp_1796 - 4<i32>:word32], Mem1807[esp_1796 + 32<i32>:word32], out ecx_3110, out ebx_1810, out ebp_3111, out esi_3112, out edi_1812)
	Mem1834[esp_1823 - 4<i32>:word32] = edi_1812
	word32 esp_1850 = <invalid>
	word32 ebx_1837
	word32 ecx_3113
	word32 ebp_3114
	word32 esi_3115
	word32 edi_3116
	Mem1859[esp_1850:word32] = fn0041C910(ebx_1810, es, ds, Mem1834[esp_1823 - 4<i32>:word32], Mem1834[esp_1823 + 32<i32>:word32], out ecx_3113, out ebx_1837, out ebp_3114, out esi_3115, out edi_3116)
	Mem1861[esp_1850 - 4<i32>:word32] = ebx_1837
	word32 esp_1877 = <invalid>
	word32 ebp_1863
	word32 ebx_1864
	word32 ecx_3117
	word32 esi_3118
	word32 edi_3119
	Mem1886[esp_1877:word32] = fn0041C910(ebx_1837, es, ds, Mem1861[esp_1850 - 4<i32>:word32], Mem1861[esp_1850 + 32<i32>:word32], out ecx_3117, out ebx_1864, out ebp_1863, out esi_3118, out edi_3119)
	Mem1889[esp_1877 - 4<i32>:word32] = Mem1886[ebp_1863 - 24<i32>:word32]
	word32 esp_1905 = <invalid>
	word32 ecx_3120
	word32 ebx_3121
	word32 esi_3122
	word32 edi_3123
	Mem1914[esp_1905:word32] = fn0041C910(ebx_1864, es, ds, Mem1889[esp_1877 - 4<i32>:word32], Mem1889[esp_1877 + 32<i32>:word32], out ecx_3120, out ebx_3121, out ebp_1071, out esi_3122, out edi_3123)
	esp_1111 = esp_1905 + 0x14<32>
	eax_1932 = fn0041C7E0(Mem1914[esp_1905:word32], Mem1914[esp_1905 + 4<i32>:word32], Mem1914[esp_1905 + 8<i32>:word32], Mem1914[esp_1905 + 12<i32>:word32], Mem1914[esp_1905 + 16<i32>:word32], out ecx_1096) + Mem1914[ebp_1071 - 20<i32>:word32]
l00425D30:
	word128 xmm0_1936 = fn00427210()
	word32 ecx_3088
	word32 edx_3089
	word32 eax_1941 = fn0042D911(SEQ(SLICE(xmm0_1936, word64, 64), SLICE(xmm0_1936, real64, 0) * Mem337[0x00432ED8<p32>:real64]), out ecx_3088, out edx_3089)
	Mem1960[esp_328:word32] = Mem337[esi_344:word32] + 72<i32>
	word32 esp_1978 = <invalid>
	word32 ebx_1965
	word32 esi_1969
	word32 ecx_3090
	word32 ebp_3091
	word32 edi_3092
	Mem1987[esp_1978:word32] = fn0041C910(eax_1941, es, ds, Mem1960[esp_328:word32], Mem1960[esp_328 + 36<i32>:word32], out ecx_3090, out ebx_1965, out ebp_3091, out esi_1969, out edi_3092)
	Mem1989[esp_1978 - 4<i32>:word32] = esi_1969
	word32 esp_2005 = <invalid>
	word32 ebx_1992
	word32 edi_1994
	word32 ecx_3093
	word32 ebp_3094
	word32 esi_3095
	Mem2014[esp_2005:word32] = fn0041C910(ebx_1965, es, ds, Mem1989[esp_1978 - 4<i32>:word32], Mem1989[esp_1978 + 32<i32>:word32], out ecx_3093, out ebx_1992, out ebp_3094, out esi_3095, out edi_1994)
	Mem2016[esp_2005 - 4<i32>:word32] = edi_1994
	word32 esp_2032 = <invalid>
	word32 ebx_2019
	word32 ecx_3096
	word32 esi_3097
	word32 edi_3098
	Mem2041[esp_2032:word32] = fn0041C910(ebx_1992, es, ds, Mem2016[esp_2005 - 4<i32>:word32], Mem2016[esp_2005 + 32<i32>:word32], out ecx_3096, out ebx_2019, out ebp_1071, out esi_3097, out edi_3098)
	eax_1095 = fn0041C680(Mem2041[esp_2032:word32], Mem2041[esp_2032 + 4<i32>:word32], Mem2041[esp_2032 + 8<i32>:word32], out ecx_1096)
	esp_1111 = esp_2032 + 0xC<32>
	ebx_1112 = ebx_2019 + 0x3E<32>
l0042621A:
	eax_1932 = eax_1095 + ebx_1112
l00425C86:
	word128 xmm0_2067 = fn00427210()
	word32 ecx_3063
	word32 edx_3064
	word32 eax_2072 = fn0042D911(SEQ(SLICE(xmm0_2067, word64, 64), SLICE(xmm0_2067, real64, 0) * Mem274[0x00432ED8<p32>:real64]), out ecx_3063, out edx_3064)
	word32 ecx_2087 = Mem274[esi_281:word32]
	Mem2088[ebp_276 - 20<i32>:word32] = eax_2072
	Mem2092[esp_265:word32] = ecx_2087 + 120<i32>
	Mem2094[ebp_276 - 24<i32>:word32] = ecx_2087 + 24<i32>
	word32 esp_2112 = <invalid>
	word32 ebx_2099
	word32 esi_2103
	word32 ecx_3065
	word32 ebp_3066
	word32 edi_3067
	Mem2121[esp_2112:word32] = fn0041C910(ecx_2087 + 48<i32>, es, ds, Mem2094[esp_265:word32], Mem2094[esp_265 + 36<i32>:word32], out ecx_3065, out ebx_2099, out ebp_3066, out esi_2103, out edi_3067)
	Mem2123[esp_2112 - 4<i32>:word32] = esi_2103
	word32 esp_2139 = <invalid>
	word32 ebx_2126
	word32 edi_2128
	word32 ecx_3068
	word32 ebp_3069
	word32 esi_3070
	Mem2148[esp_2139:word32] = fn0041C910(ebx_2099, es, ds, Mem2123[esp_2112 - 4<i32>:word32], Mem2123[esp_2112 + 32<i32>:word32], out ecx_3068, out ebx_2126, out ebp_3069, out esi_3070, out edi_2128)
	Mem2150[esp_2139 - 4<i32>:word32] = edi_2128
	word32 esp_2166 = <invalid>
	word32 ebx_2153
	word32 ecx_3071
	word32 ebp_3072
	word32 esi_3073
	word32 edi_3074
	Mem2175[esp_2166:word32] = fn0041C910(ebx_2126, es, ds, Mem2150[esp_2139 - 4<i32>:word32], Mem2150[esp_2139 + 32<i32>:word32], out ecx_3071, out ebx_2153, out ebp_3072, out esi_3073, out edi_3074)
	Mem2177[esp_2166 - 4<i32>:word32] = ebx_2153
	word32 esp_2193 = <invalid>
	word32 ebp_2179
	word32 ebx_2180
	word32 ecx_3075
	word32 esi_3076
	word32 edi_3077
	Mem2202[esp_2193:word32] = fn0041C910(ebx_2153, es, ds, Mem2177[esp_2166 - 4<i32>:word32], Mem2177[esp_2166 + 32<i32>:word32], out ecx_3075, out ebx_2180, out ebp_2179, out esi_3076, out edi_3077)
	Mem2205[esp_2193 - 4<i32>:word32] = Mem2202[ebp_2179 - 24<i32>:word32]
	word32 esp_2221 = <invalid>
	word32 ecx_3078
	word32 ebx_3079
	word32 esi_3080
	word32 edi_3081
	Mem2230[esp_2221:word32] = fn0041C910(ebx_2180, es, ds, Mem2205[esp_2193 - 4<i32>:word32], Mem2205[esp_2193 + 32<i32>:word32], out ecx_3078, out ebx_3079, out ebp_1071, out esi_3080, out edi_3081)
	esp_1111 = esp_2221 + 0x14<32>
	eax_1932 = fn0041C7E0(Mem2230[esp_2221:word32], Mem2230[esp_2221 + 4<i32>:word32], Mem2230[esp_2221 + 8<i32>:word32], Mem2230[esp_2221 + 12<i32>:word32], Mem2230[esp_2221 + 16<i32>:word32], out ecx_1096) + Mem2230[ebp_1071 - 20<i32>:word32]
l00425BE5:
	word128 xmm0_2252 = fn00427210()
	word32 ecx_3041
	word32 edx_3042
	word32 eax_2257 = fn0042D911(SEQ(SLICE(xmm0_2252, word64, 64), SLICE(xmm0_2252, real64, 0) * Mem211[0x00432ED0<p32>:real64]), out ecx_3041, out edx_3042)
	word32 ecx_2272 = Mem211[esi_218:word32]
	Mem2274[esp_202:word32] = 0x1F<32>
	Mem2275[ebp_213 - 24<i32>:word32] = eax_2257
	Mem2278[esp_202 - 4<i32>:word32] = ecx_2272 + 72<i32>
	word32 esp_2296 = <invalid>
	word32 ebx_2283
	word32 esi_2287
	word32 ecx_3043
	word32 ebp_3044
	word32 edi_3045
	Mem2305[esp_2296:word32] = fn0041C910(ecx_2272 + 24<i32>, es, ds, Mem2278[esp_202 - 4<i32>:word32], Mem2278[esp_202 + 32<i32>:word32], out ecx_3043, out ebx_2283, out ebp_3044, out esi_2287, out edi_3045)
	Mem2307[esp_2296 - 4<i32>:word32] = esi_2287
	word32 esp_2323 = <invalid>
	word32 ebx_2310
	word32 edi_2312
	word32 ecx_3046
	word32 ebp_3047
	word32 esi_3048
	Mem2335[esp_2323:word32] = 0x20<32> - fn0041C910(ebx_2283, es, ds, Mem2307[esp_2296 - 4<i32>:word32], Mem2307[esp_2296 + 32<i32>:word32], out ecx_3046, out ebx_2310, out ebp_3047, out esi_3048, out edi_2312)
	Mem2337[esp_2323 - 4<i32>:word32] = edi_2312
	word32 esp_2353 = <invalid>
	word32 ebx_2340
	word32 ecx_3049
	word32 ebp_3050
	word32 esi_3051
	word32 edi_3052
	Mem2362[esp_2353:word32] = fn0041C910(ebx_2310, es, ds, Mem2337[esp_2323 - 4<i32>:word32], Mem2337[esp_2323 + 32<i32>:word32], out ecx_3049, out ebx_2340, out ebp_3050, out esi_3051, out edi_3052)
	Mem2364[esp_2353 - 4<i32>:word32] = ebx_2340
	word32 esp_2380 = <invalid>
	word32 ecx_3053
	word32 ebx_3054
	word32 esi_3055
	word32 edi_3056
	Mem2389[esp_2380:word32] = fn0041C910(ebx_2340, es, ds, Mem2364[esp_2353 - 4<i32>:word32], Mem2364[esp_2353 + 32<i32>:word32], out ecx_3053, out ebx_3054, out ebp_1071, out esi_3055, out edi_3056)
	esp_1111 = esp_2380 + 0x14<32>
	eax_1932 = fn0041C7E0(Mem2389[esp_2380:word32], Mem2389[esp_2380 + 4<i32>:word32], Mem2389[esp_2380 + 8<i32>:word32], Mem2389[esp_2380 + 12<i32>:word32], Mem2389[esp_2380 + 16<i32>:word32], out ecx_1096) + Mem2389[ebp_1071 - 24<i32>:word32]
l00425B44:
	word128 xmm0_2411 = fn00427210()
	word32 ecx_3019
	word32 edx_3020
	word32 eax_2416 = fn0042D911(SEQ(SLICE(xmm0_2411, word64, 64), SLICE(xmm0_2411, real64, 0) * Mem148[0x00432ED0<p32>:real64]), out ecx_3019, out edx_3020)
	word32 ecx_2431 = Mem148[esi_155:word32]
	Mem2432[ebp_150 - 24<i32>:word32] = eax_2416
	Mem2435[esp_139:word32] = ecx_2431 + 72<i32>
	word32 esp_2453 = <invalid>
	word32 ebx_2440
	word32 esi_2444
	word32 ecx_3021
	word32 ebp_3022
	word32 edi_3023
	Mem2465[esp_2453:word32] = 0x1F<32> - fn0041C910(ecx_2431 + 24<i32>, es, ds, Mem2435[esp_139:word32], Mem2435[esp_139 + 36<i32>:word32], out ecx_3021, out ebx_2440, out ebp_3022, out esi_2444, out edi_3023)
	Mem2467[esp_2453 - 4<i32>:word32] = 0<32>
	Mem2469[esp_2453 - 8<i32>:word32] = esi_2444
	word32 esp_2485 = <invalid>
	word32 ebx_2472
	word32 edi_2474
	word32 ecx_3024
	word32 ebp_3025
	word32 esi_3026
	Mem2494[esp_2485:word32] = fn0041C910(ebx_2440, es, ds, Mem2469[esp_2453 - 8<i32>:word32], Mem2469[esp_2453 + 28<i32>:word32], out ecx_3024, out ebx_2472, out ebp_3025, out esi_3026, out edi_2474)
	Mem2496[esp_2485 - 4<i32>:word32] = edi_2474
	word32 esp_2512 = <invalid>
	word32 ebx_2499
	word32 ecx_3027
	word32 ebp_3028
	word32 esi_3029
	word32 edi_3030
	Mem2521[esp_2512:word32] = fn0041C910(ebx_2472, es, ds, Mem2496[esp_2485 - 4<i32>:word32], Mem2496[esp_2485 + 32<i32>:word32], out ecx_3027, out ebx_2499, out ebp_3028, out esi_3029, out edi_3030)
	Mem2523[esp_2512 - 4<i32>:word32] = ebx_2499
	word32 esp_2539 = <invalid>
	word32 ecx_3031
	word32 ebx_3032
	word32 esi_3033
	word32 edi_3034
	Mem2548[esp_2539:word32] = fn0041C910(ebx_2499, es, ds, Mem2523[esp_2512 - 4<i32>:word32], Mem2523[esp_2512 + 32<i32>:word32], out ecx_3031, out ebx_3032, out ebp_1071, out esi_3033, out edi_3034)
	esp_1111 = esp_2539 + 0x14<32>
	eax_1932 = fn0041C7E0(Mem2548[esp_2539:word32], Mem2548[esp_2539 + 4<i32>:word32], Mem2548[esp_2539 + 8<i32>:word32], Mem2548[esp_2539 + 12<i32>:word32], Mem2548[esp_2539 + 16<i32>:word32], out ecx_1096) + Mem2548[ebp_1071 - 24<i32>:word32]
l00425A9A:
	word128 xmm0_2570 = fn00427210()
	word32 edx_2995
	word32 ecx_2994
	word32 eax_2575 = fn0042D911(SEQ(SLICE(xmm0_2570, word64, 64), SLICE(xmm0_2570, real64, 0) * Mem80[0x00432ED0<p32>:real64]), out ecx_2994, out edx_2995)
	word32 ecx_2590 = Mem80[esi_92:word32]
	Mem2591[ebp_87 - 24<i32>:word32] = eax_2575
	Mem2595[esp_71:word32] = ecx_2590 + 120<i32>
	Mem2597[ebp_87 - 20<i32>:word32] = ecx_2590 + 24<i32>
	word32 esp_2615 = <invalid>
	word32 ebx_2602
	word32 esi_2606
	word32 edi_2998
	word32 ecx_2996
	word32 ebp_2997
	Mem2624[esp_2615:word32] = fn0041C910(ecx_2590 + 48<i32>, es, ds, Mem2597[esp_71:word32], Mem2597[esp_71 + 36<i32>:word32], out ecx_2996, out ebx_2602, out ebp_2997, out esi_2606, out edi_2998)
	Mem2626[esp_2615 - 4<i32>:word32] = esi_2606
	word32 esp_2642 = <invalid>
	word32 ebx_2629
	word32 edi_2631
	word32 esi_3001
	word32 ecx_2999
	word32 ebp_3000
	Mem2651[esp_2642:word32] = fn0041C910(ebx_2602, es, ds, Mem2626[esp_2615 - 4<i32>:word32], Mem2626[esp_2615 + 32<i32>:word32], out ecx_2999, out ebx_2629, out ebp_3000, out esi_3001, out edi_2631)
	Mem2653[esp_2642 - 4<i32>:word32] = edi_2631
	word32 esp_2669 = <invalid>
	word32 ebx_2656
	word32 ecx_3002
	word32 esi_3004
	word32 ebp_3003
	word32 edi_3005
	Mem2678[esp_2669:word32] = fn0041C910(ebx_2629, es, ds, Mem2653[esp_2642 - 4<i32>:word32], Mem2653[esp_2642 + 32<i32>:word32], out ecx_3002, out ebx_2656, out ebp_3003, out esi_3004, out edi_3005)
	Mem2680[esp_2669 - 4<i32>:word32] = ebx_2656
	word32 esp_2696 = <invalid>
	word32 ebp_2682
	word32 ebx_2683
	word32 ecx_3006
	word32 esi_3007
	word32 edi_3008
	Mem2705[esp_2696:word32] = fn0041C910(ebx_2656, es, ds, Mem2680[esp_2669 - 4<i32>:word32], Mem2680[esp_2669 + 32<i32>:word32], out ecx_3006, out ebx_2683, out ebp_2682, out esi_3007, out edi_3008)
	Mem2708[esp_2696 - 4<i32>:word32] = Mem2705[ebp_2682 - 20<i32>:word32]
	word32 esp_2724 = <invalid>
	word32 ecx_3009
	word32 ebx_3010
	word32 esi_3011
	word32 edi_3012
	Mem2733[esp_2724:word32] = fn0041C910(ebx_2683, es, ds, Mem2708[esp_2696 - 4<i32>:word32], Mem2708[esp_2696 + 32<i32>:word32], out ecx_3009, out ebx_3010, out ebp_1071, out esi_3011, out edi_3012)
	esp_1111 = esp_2724 + 0x14<32>
	eax_1932 = fn0041C7E0(Mem2733[esp_2724:word32], Mem2733[esp_2724 + 4<i32>:word32], Mem2733[esp_2724 + 8<i32>:word32], Mem2733[esp_2724 + 12<i32>:word32], Mem2733[esp_2724 + 16<i32>:word32], out ecx_1096) + Mem2733[ebp_1071 - 24<i32>:word32]
l0042621C:
	esi_2758 = Mem2755[ebp_1071 + 8<i32>:word32]
	Mem2760[Mem2755[ebp_1071 - 16<i32>:word32] + 96<i32>:word32] = eax_1932
l00426225:
	word32 esp_2764 = esp_1111 - 4<i32>
	Mem2765[esp_2764:word32] = 1<32>
	Mem2767[ebp_1071 - 4<i32>:word32] = 0xD<32>
	Mem2772[ebp_1071 - 24<i32>:word32] = _Init(Mem2767[esp_2764:(ptr32 (struct "std::locale"))], Mem2767[esp_2764 + 4<i32>:bool])
	Mem2774[ebp_1071 - 4<i32>:word32] = 0xE<32>
	word32 edx_2776 = Mem2774[esi_2758:word32]
	Mem2778[esp_2764:word32] = ebp_1071 - 28<i32>
	Mem2783[esp_2764 - 4<i32>:word32] = ecx_1096
	word32 ebx_2804
	word32 edi_2806
	word32 ebp_2809
	word32 esi_3226
	word32 eax_2803 = fn00427230(ebp_1071 - 36<i32>, edx_2776, es, ds, Mem2783[esp_2764:word32], out ebx_2804, out ebp_2809, out esi_3226, out edi_2806)
	word32 esi_2819 = Mem2783[eax_2803:word32]
	word32 eax_2820 = Mem2783[eax_2803 + 4<i32>:word32]
	Mem2821[ebp_2809 + 8<i32>:word32] = eax_2820
	Mem2822[ebp_2809 - 4<i32>:word32] = 0xF<32>
	word32 esp_2810 = <invalid>
	word32 esp_2818 = esp_2810 + 8<32>
	branch edi_2806 == 0<32> l0042627E
l00426268:
	word32 eax_2826 = Mem2822[edi_2806:word32]
	word32 eax_2832
	call Mem2822[eax_2826 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_2826,ecx:edi_2806
		defs: eax:eax_2832,esp:esp_2831
	branch eax_2832 == 0<32> l0042627B
l00426273:
	word32 edx_2840 = Mem2822[eax_2832:word32]
	Mem2843[esp_2818 - 4<i32>:word32] = 1<32>
	call Mem2843[edx_2840:word32] (retsize: 4;)
		uses: ecx:eax_2832,edx:edx_2840
		defs: esp:esp_2844
l0042627B:
	eax_2820 = Mem2851[ebp_2809 + 8<i32>:word32]
l0042627E:
	branch esi_2819 == eax_2820 l00426285
l00426282:
	Mem2862[ebx_2804 + 96<i32>:word32] = Mem2860[ebx_2804 + 96<i32>:word32] + 1<32>
l00426285:
	Mem2871[fs:0x00000000<p32>:word32] = Mem2866[ebp_2809 - 12<i32>:word32]
	word32 ecx_2875 = Mem2871[esp_2818:word32]
	word32 esi_2879 = Mem2871[esp_2818 + 8<i32>:word32]
	ebpOut = Mem2871[ebp_2809:word32]
	esiOut = esi_2879
	return ecx_2875
fn00425A20_exit:


word32 fn004262A0(word32 ecx, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn004262A0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc54
l004262A0:
	word32 ecx_1812
	word32 edi_1561
	word32 ebp_1810
	word32 esp_1806
	word32 eax_1959
	word32 ebx_1976
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word128 xmm0_39 = fn00427210()
	word32 ecx_3914
	word32 edx_3915
	Mem62[ecx + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_39, word64, 64), SLICE(xmm0_39, real64, 0) * Mem41[0x00432F58<p32>:real64]), out ecx_3914, out edx_3915)
	Mem67[&tLoc54 + 16<i32>:word32] = 0<32>
	Mem68[&tLoc54 + 20<i32>:word32] = 0xF<32>
	Mem71[&tLoc54:byte] = 0<8>
	word32 ebp_73
	word32 ebx_74
	word32 esi_3918
	word32 edi_3919
	word32 edx_3917
	word32 ecx_3916
	fn00402A70(&tLoc54, edi, 0x432D6C<32>, 3<32>, Mem71[&tLoc54 + 12<i32>:word32], out ecx_3916, out edx_3917, out ebx_74, out ebp_73, out esi_3918, out edi_3919)
	word32 edi_86 = Mem71[ebp_73 + 8<i32>:word32]
	Mem89[ebp_73 - 4<i32>:word32] = 0<32>
	word32 esp_80 = <invalid>
	Mem93[esp_80 - 0x14<32>:word32] = Mem89[edi_86:word32]
	word32 ebp_96
	word32 edx_3920
	fn004028D0(esp_80 - 0x10<32>, edi_86, Mem93[esp_80 - 0x14<32>:word32], out edx_3920, out ebp_96)
	Mem106[ebp_96 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_97 = <invalid>
	word32 ebp_113
	word32 ebx_114
	word32 edi_116
	word32 ecx_3921
	word32 edx_3922
	word32 esi_3923
	branch SLICE(fn0041C1F0(ebx_74, ebx_74, ebp_96, es, ds, Mem106[esp_97 + 0x2C<32>:word32], out ecx_3921, out edx_3922, out ebx_114, out ebp_113, out esi_3923, out edi_116), byte, 0) == 0<8> l00426360
l00426360:
	Mem133[ebp_113 - 24<i32>:word32] = esp_97 - 0x14<32>
	Mem135[esp_97 - 0x18<32>:word32] = 4<32>
	Mem136[esp_97 - 4<32>:word32] = 0<32>
	Mem137[esp_97:word32] = 0xF<32>
	Mem139[esp_97 - 0x1C<32>:word32] = 0x432D70<32>
	Mem140[esp_97 - 0x14<32>:byte] = 0<8>
	word32 ebp_142
	word32 ebx_143
	word32 edi_145
	word32 esi_3926
	word32 edx_3925
	word32 ecx_3924
	fn00402A70(esp_97 - 0x14<32>, edi_116, Mem140[esp_97 - 0x1C<32>:word32], Mem140[esp_97 - 0x18<32>:word32], Mem140[esp_97 - 8<32>:word32], out ecx_3924, out edx_3925, out ebx_143, out ebp_142, out esi_3926, out edi_145)
	Mem157[ebp_142 - 4<i32>:word32] = 1<32>
	word32 esp_149 = <invalid>
	Mem161[esp_149 - 0x14<32>:word32] = Mem157[edi_145:word32]
	word32 ebp_164
	word32 edx_3927
	fn004028D0(esp_149 - 0x10<32>, edi_145, Mem161[esp_149 - 0x14<32>:word32], out edx_3927, out ebp_164)
	Mem174[ebp_164 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_165 = <invalid>
	word32 ebp_176
	word32 ebx_177
	word32 edi_179
	word32 esi_3930
	word32 edx_3929
	word32 ecx_3928
	branch SLICE(fn0041C1F0(ebx_143, ebx_143, ebp_164, es, ds, Mem174[esp_165 + 0x2C<32>:word32], out ecx_3928, out edx_3929, out ebx_177, out ebp_176, out esi_3930, out edi_179), byte, 0) == 0<8> l004263CF
l004263CF:
	Mem196[ebp_176 - 24<i32>:word32] = esp_165 - 0x14<32>
	Mem198[esp_165 - 0x18<32>:word32] = 4<32>
	Mem199[esp_165 - 4<32>:word32] = 0<32>
	Mem200[esp_165:word32] = 0xF<32>
	Mem202[esp_165 - 0x1C<32>:word32] = 0x432D78<32>
	Mem203[esp_165 - 0x14<32>:byte] = 0<8>
	word32 ebp_205
	word32 ebx_206
	word32 edi_208
	word32 ecx_3936
	word32 edx_3937
	word32 esi_3938
	fn00402A70(esp_165 - 0x14<32>, edi_179, Mem203[esp_165 - 0x1C<32>:word32], Mem203[esp_165 - 0x18<32>:word32], Mem203[esp_165 - 8<32>:word32], out ecx_3936, out edx_3937, out ebx_206, out ebp_205, out esi_3938, out edi_208)
	Mem220[ebp_205 - 4<i32>:word32] = 2<32>
	word32 esp_212 = <invalid>
	Mem224[esp_212 - 0x14<32>:word32] = Mem220[edi_208:word32]
	word32 ebp_227
	word32 edx_3939
	fn004028D0(esp_212 - 0x10<32>, edi_208, Mem224[esp_212 - 0x14<32>:word32], out edx_3939, out ebp_227)
	Mem237[ebp_227 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_228 = <invalid>
	word32 ebp_239
	word32 ebx_240
	word32 edi_242
	word32 esi_3942
	word32 ecx_3940
	word32 edx_3941
	branch SLICE(fn0041C1F0(ebx_206, ebx_206, ebp_227, es, ds, Mem237[esp_228 + 0x2C<32>:word32], out ecx_3940, out edx_3941, out ebx_240, out ebp_239, out esi_3942, out edi_242), byte, 0) == 0<8> l00426440
l00426440:
	Mem259[ebp_239 - 24<i32>:word32] = esp_228 - 0x14<32>
	Mem261[esp_228 - 0x18<32>:word32] = 5<32>
	Mem262[esp_228 - 4<32>:word32] = 0<32>
	Mem263[esp_228:word32] = 0xF<32>
	Mem265[esp_228 - 0x1C<32>:word32] = 0x432D80<32>
	Mem266[esp_228 - 0x14<32>:byte] = 0<8>
	word32 ebp_268
	word32 ebx_269
	word32 edi_271
	word32 edx_3949
	word32 esi_3950
	word32 ecx_3948
	fn00402A70(esp_228 - 0x14<32>, edi_242, Mem266[esp_228 - 0x1C<32>:word32], Mem266[esp_228 - 0x18<32>:word32], Mem266[esp_228 - 8<32>:word32], out ecx_3948, out edx_3949, out ebx_269, out ebp_268, out esi_3950, out edi_271)
	Mem283[ebp_268 - 4<i32>:word32] = 3<32>
	word32 esp_275 = <invalid>
	Mem287[esp_275 - 0x14<32>:word32] = Mem283[edi_271:word32]
	word32 ebp_290
	word32 edx_3951
	fn004028D0(esp_275 - 0x10<32>, edi_271, Mem287[esp_275 - 0x14<32>:word32], out edx_3951, out ebp_290)
	Mem300[ebp_290 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_291 = <invalid>
	word32 ebp_302
	word32 ebx_303
	word32 edi_305
	word32 esi_3954
	word32 ecx_3952
	word32 edx_3953
	branch SLICE(fn0041C1F0(ebx_269, ebx_269, ebp_290, es, ds, Mem300[esp_291 + 0x2C<32>:word32], out ecx_3952, out edx_3953, out ebx_303, out ebp_302, out esi_3954, out edi_305), byte, 0) == 0<8> l004264B1
l004264B1:
	Mem322[ebp_302 - 24<i32>:word32] = esp_291 - 0x14<32>
	Mem324[esp_291 - 0x18<32>:word32] = 4<32>
	Mem325[esp_291 - 4<32>:word32] = 0<32>
	Mem326[esp_291:word32] = 0xF<32>
	Mem328[esp_291 - 0x1C<32>:word32] = 0x432D88<32>
	Mem329[esp_291 - 0x14<32>:byte] = 0<8>
	word32 ebp_331
	word32 ebx_332
	word32 edi_334
	word32 ecx_3960
	word32 edx_3961
	word32 esi_3962
	fn00402A70(esp_291 - 0x14<32>, edi_305, Mem329[esp_291 - 0x1C<32>:word32], Mem329[esp_291 - 0x18<32>:word32], Mem329[esp_291 - 8<32>:word32], out ecx_3960, out edx_3961, out ebx_332, out ebp_331, out esi_3962, out edi_334)
	Mem346[ebp_331 - 4<i32>:word32] = 4<32>
	word32 esp_338 = <invalid>
	Mem350[esp_338 - 0x14<32>:word32] = Mem346[edi_334:word32]
	word32 ebp_353
	word32 edx_3963
	fn004028D0(esp_338 - 0x10<32>, edi_334, Mem350[esp_338 - 0x14<32>:word32], out edx_3963, out ebp_353)
	Mem363[ebp_353 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_354 = <invalid>
	word32 ebp_365
	word32 ebx_366
	word32 edi_368
	word32 ecx_3964
	word32 edx_3965
	word32 esi_3966
	branch SLICE(fn0041C1F0(ebx_332, ebx_332, ebp_353, es, ds, Mem363[esp_354 + 0x2C<32>:word32], out ecx_3964, out edx_3965, out ebx_366, out ebp_365, out esi_3966, out edi_368), byte, 0) == 0<8> l00426520
l00426520:
	Mem385[ebp_365 - 24<i32>:word32] = esp_354 - 0x14<32>
	Mem387[esp_354 - 0x18<32>:word32] = 6<32>
	Mem388[esp_354 - 4<32>:word32] = 0<32>
	Mem389[esp_354:word32] = 0xF<32>
	Mem391[esp_354 - 0x1C<32>:word32] = 0x432D90<32>
	Mem392[esp_354 - 0x14<32>:byte] = 0<8>
	word32 ebp_394
	word32 ebx_395
	word32 edi_397
	word32 ecx_3972
	word32 edx_3973
	word32 esi_3974
	fn00402A70(esp_354 - 0x14<32>, edi_368, Mem392[esp_354 - 0x1C<32>:word32], Mem392[esp_354 - 0x18<32>:word32], Mem392[esp_354 - 8<32>:word32], out ecx_3972, out edx_3973, out ebx_395, out ebp_394, out esi_3974, out edi_397)
	Mem409[ebp_394 - 4<i32>:word32] = 5<32>
	word32 esp_401 = <invalid>
	Mem413[esp_401 - 0x14<32>:word32] = Mem409[edi_397:word32]
	word32 ebp_416
	word32 edx_3975
	fn004028D0(esp_401 - 0x10<32>, edi_397, Mem413[esp_401 - 0x14<32>:word32], out edx_3975, out ebp_416)
	Mem426[ebp_416 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_417 = <invalid>
	word32 ebp_428
	word32 ebx_429
	word32 edi_431
	word32 ecx_3976
	word32 edx_3977
	word32 esi_3978
	branch SLICE(fn0041C1F0(ebx_395, ebx_395, ebp_416, es, ds, Mem426[esp_417 + 0x2C<32>:word32], out ecx_3976, out edx_3977, out ebx_429, out ebp_428, out esi_3978, out edi_431), byte, 0) == 0<8> l00426591
l00426591:
	Mem448[ebp_428 - 24<i32>:word32] = esp_417 - 0x14<32>
	Mem450[esp_417 - 0x18<32>:word32] = 5<32>
	Mem451[esp_417 - 4<32>:word32] = 0<32>
	Mem452[esp_417:word32] = 0xF<32>
	Mem454[esp_417 - 0x1C<32>:word32] = 0x432D98<32>
	Mem455[esp_417 - 0x14<32>:byte] = 0<8>
	word32 ebp_457
	word32 ebx_458
	word32 edi_460
	word32 ecx_3984
	word32 edx_3985
	word32 esi_3986
	fn00402A70(esp_417 - 0x14<32>, edi_431, Mem455[esp_417 - 0x1C<32>:word32], Mem455[esp_417 - 0x18<32>:word32], Mem455[esp_417 - 8<32>:word32], out ecx_3984, out edx_3985, out ebx_458, out ebp_457, out esi_3986, out edi_460)
	Mem472[ebp_457 - 4<i32>:word32] = 6<32>
	word32 esp_464 = <invalid>
	Mem476[esp_464 - 0x14<32>:word32] = Mem472[edi_460:word32]
	word32 ebp_479
	word32 edx_3987
	fn004028D0(esp_464 - 0x10<32>, edi_460, Mem476[esp_464 - 0x14<32>:word32], out edx_3987, out ebp_479)
	Mem489[ebp_479 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_480 = <invalid>
	word32 ebp_491
	word32 ebx_492
	word32 edi_494
	word32 ecx_3988
	word32 edx_3989
	word32 esi_3990
	branch SLICE(fn0041C1F0(ebx_458, ebx_458, ebp_479, es, ds, Mem489[esp_480 + 0x2C<32>:word32], out ecx_3988, out edx_3989, out ebx_492, out ebp_491, out esi_3990, out edi_494), byte, 0) == 0<8> l00426602
l00426602:
	Mem511[ebp_491 - 24<i32>:word32] = esp_480 - 0x14<32>
	Mem513[esp_480 - 0x18<32>:word32] = 5<32>
	Mem514[esp_480 - 4<32>:word32] = 0<32>
	Mem515[esp_480:word32] = 0xF<32>
	Mem517[esp_480 - 0x1C<32>:word32] = 0x432DA0<32>
	Mem518[esp_480 - 0x14<32>:byte] = 0<8>
	word32 ebp_520
	word32 ebx_521
	word32 edi_523
	word32 ecx_3996
	word32 edx_3997
	word32 esi_3998
	fn00402A70(esp_480 - 0x14<32>, edi_494, Mem518[esp_480 - 0x1C<32>:word32], Mem518[esp_480 - 0x18<32>:word32], Mem518[esp_480 - 8<32>:word32], out ecx_3996, out edx_3997, out ebx_521, out ebp_520, out esi_3998, out edi_523)
	Mem535[ebp_520 - 4<i32>:word32] = 7<32>
	word32 esp_527 = <invalid>
	Mem539[esp_527 - 0x14<32>:word32] = Mem535[edi_523:word32]
	word32 ebp_542
	word32 edx_3999
	fn004028D0(esp_527 - 0x10<32>, edi_523, Mem539[esp_527 - 0x14<32>:word32], out edx_3999, out ebp_542)
	Mem552[ebp_542 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_543 = <invalid>
	word32 ebp_554
	word32 ebx_555
	word32 edi_557
	word32 ecx_4000
	word32 edx_4001
	word32 esi_4002
	branch SLICE(fn0041C1F0(ebx_521, ebx_521, ebp_542, es, ds, Mem552[esp_543 + 0x2C<32>:word32], out ecx_4000, out edx_4001, out ebx_555, out ebp_554, out esi_4002, out edi_557), byte, 0) == 0<8> l00426673
l00426673:
	Mem574[ebp_554 - 24<i32>:word32] = esp_543 - 0x14<32>
	Mem576[esp_543 - 0x18<32>:word32] = 6<32>
	Mem577[esp_543 - 4<32>:word32] = 0<32>
	Mem578[esp_543:word32] = 0xF<32>
	Mem580[esp_543 - 0x1C<32>:word32] = 0x432DA8<32>
	Mem581[esp_543 - 0x14<32>:byte] = 0<8>
	word32 ebp_583
	word32 ebx_584
	word32 edi_586
	word32 ecx_4008
	word32 edx_4009
	word32 esi_4010
	fn00402A70(esp_543 - 0x14<32>, edi_557, Mem581[esp_543 - 0x1C<32>:word32], Mem581[esp_543 - 0x18<32>:word32], Mem581[esp_543 - 8<32>:word32], out ecx_4008, out edx_4009, out ebx_584, out ebp_583, out esi_4010, out edi_586)
	Mem598[ebp_583 - 4<i32>:word32] = 8<32>
	word32 esp_590 = <invalid>
	Mem602[esp_590 - 0x14<32>:word32] = Mem598[edi_586:word32]
	word32 ebp_605
	word32 edx_4011
	fn004028D0(esp_590 - 0x10<32>, edi_586, Mem602[esp_590 - 0x14<32>:word32], out edx_4011, out ebp_605)
	Mem615[ebp_605 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_606 = <invalid>
	word32 ebp_617
	word32 ebx_618
	word32 edi_620
	word32 ecx_4012
	word32 edx_4013
	word32 esi_4014
	branch SLICE(fn0041C1F0(ebx_584, ebx_584, ebp_605, es, ds, Mem615[esp_606 + 0x2C<32>:word32], out ecx_4012, out edx_4013, out ebx_618, out ebp_617, out esi_4014, out edi_620), byte, 0) == 0<8> l004266E2
l004266E2:
	Mem637[ebp_617 - 24<i32>:word32] = esp_606 - 0x14<32>
	Mem639[esp_606 - 0x18<32>:word32] = 5<32>
	Mem640[esp_606 - 4<32>:word32] = 0<32>
	Mem641[esp_606:word32] = 0xF<32>
	Mem643[esp_606 - 0x1C<32>:word32] = 0x432DB0<32>
	Mem644[esp_606 - 0x14<32>:byte] = 0<8>
	word32 ebp_646
	word32 ebx_647
	word32 edi_649
	word32 ecx_4020
	word32 edx_4021
	word32 esi_4022
	fn00402A70(esp_606 - 0x14<32>, edi_620, Mem644[esp_606 - 0x1C<32>:word32], Mem644[esp_606 - 0x18<32>:word32], Mem644[esp_606 - 8<32>:word32], out ecx_4020, out edx_4021, out ebx_647, out ebp_646, out esi_4022, out edi_649)
	Mem661[ebp_646 - 4<i32>:word32] = 9<32>
	word32 esp_653 = <invalid>
	Mem665[esp_653 - 0x14<32>:word32] = Mem661[edi_649:word32]
	word32 ebp_668
	word32 edx_4023
	fn004028D0(esp_653 - 0x10<32>, edi_649, Mem665[esp_653 - 0x14<32>:word32], out edx_4023, out ebp_668)
	Mem678[ebp_668 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_669 = <invalid>
	word32 ebp_680
	word32 ebx_681
	word32 edi_683
	word32 ecx_4024
	word32 edx_4025
	word32 esi_4026
	branch SLICE(fn0041C1F0(ebx_647, ebx_647, ebp_668, es, ds, Mem678[esp_669 + 0x2C<32>:word32], out ecx_4024, out edx_4025, out ebx_681, out ebp_680, out esi_4026, out edi_683), byte, 0) == 0<8> l00426751
l00426751:
	Mem700[ebp_680 - 24<i32>:word32] = esp_669 - 0x14<32>
	Mem702[esp_669 - 0x18<32>:word32] = 5<32>
	Mem703[esp_669 - 4<32>:word32] = 0<32>
	Mem704[esp_669:word32] = 0xF<32>
	Mem706[esp_669 - 0x1C<32>:word32] = 0x432DB8<32>
	Mem707[esp_669 - 0x14<32>:byte] = 0<8>
	word32 ebp_709
	word32 ebx_710
	word32 edi_712
	word32 ecx_4032
	word32 edx_4033
	word32 esi_4034
	fn00402A70(esp_669 - 0x14<32>, edi_683, Mem707[esp_669 - 0x1C<32>:word32], Mem707[esp_669 - 0x18<32>:word32], Mem707[esp_669 - 8<32>:word32], out ecx_4032, out edx_4033, out ebx_710, out ebp_709, out esi_4034, out edi_712)
	Mem724[ebp_709 - 4<i32>:word32] = 0xA<32>
	word32 esp_716 = <invalid>
	Mem728[esp_716 - 0x14<32>:word32] = Mem724[edi_712:word32]
	word32 ebp_731
	word32 edx_4035
	fn004028D0(esp_716 - 0x10<32>, edi_712, Mem728[esp_716 - 0x14<32>:word32], out edx_4035, out ebp_731)
	Mem741[ebp_731 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_732 = <invalid>
	word32 ebp_743
	word32 ebx_744
	word32 edi_746
	word32 ecx_4036
	word32 edx_4037
	word32 esi_4038
	branch SLICE(fn0041C1F0(ebx_710, ebx_710, ebp_731, es, ds, Mem741[esp_732 + 0x2C<32>:word32], out ecx_4036, out edx_4037, out ebx_744, out ebp_743, out esi_4038, out edi_746), byte, 0) == 0<8> l004267CB
l004267CB:
	Mem763[ebp_743 - 24<i32>:word32] = esp_732 - 0x14<32>
	Mem765[esp_732 - 0x18<32>:word32] = 5<32>
	Mem766[esp_732 - 4<32>:word32] = 0<32>
	Mem767[esp_732:word32] = 0xF<32>
	Mem769[esp_732 - 0x1C<32>:word32] = 0x432DC0<32>
	Mem770[esp_732 - 0x14<32>:byte] = 0<8>
	word32 ebp_772
	word32 ebx_773
	word32 edi_775
	word32 ecx_4044
	word32 edx_4045
	word32 esi_4046
	fn00402A70(esp_732 - 0x14<32>, edi_746, Mem770[esp_732 - 0x1C<32>:word32], Mem770[esp_732 - 0x18<32>:word32], Mem770[esp_732 - 8<32>:word32], out ecx_4044, out edx_4045, out ebx_773, out ebp_772, out esi_4046, out edi_775)
	Mem787[ebp_772 - 4<i32>:word32] = 0xB<32>
	word32 esp_779 = <invalid>
	Mem791[esp_779 - 0x14<32>:word32] = Mem787[edi_775:word32]
	word32 ebp_794
	word32 edx_4047
	fn004028D0(esp_779 - 0x10<32>, edi_775, Mem791[esp_779 - 0x14<32>:word32], out edx_4047, out ebp_794)
	Mem804[ebp_794 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_795 = <invalid>
	word32 ebp_806
	word32 edi_809
	word32 ecx_4048
	word32 edx_4049
	word32 esi_4050
	word32 ebx_1039
	byte al_819 = SLICE(fn0041C1F0(ebx_773, ebx_773, ebp_794, es, ds, Mem804[esp_795 + 0x2C<32>:word32], out ecx_4048, out edx_4049, out ebx_1039, out ebp_806, out esi_4050, out edi_809), byte, 0)
	word32 esp_802 = esp_795 + 4<32>
	word32 eax_1011 = Mem804[edi_809:word32]
	branch al_819 == 0<8> l00426842
l00426842:
	word32 ecx_907
	word32 ecx_824 = Mem804[eax_1011 + 16<i32>:word32]
	branch ecx_824 <=u ecx_824 - 2<i32> l00426E4E
l00426E4E:
	word32 esp_835 = <invalid>
	word32 edx_4069
	word32 ebx_4070
	word32 ebp_4071
	word32 esi_4072
	word32 edi_4073
	ecx_824 = fn004113B0(ecx_824, Mem804[esp_795:word32], Mem804[esp_795 + 4<32>:word32], Mem804[esp_795 + 8<32>:word32], out edx_4069, out ebx_4070, out ebp_4071, out esi_4072, out edi_4073)
	esp_802 = esp_835 + 0xC<32>
l00426850:
	word32 esi_842 = Mem804[eax_1011 + 20<i32>:word32]
	Mem843[ebp_806 - 20<i32>:word32] = eax_1011
	branch esi_842 <u 0x10<32> l00426863
l0042685B:
	Mem847[ebp_806 - 20<i32>:word32] = Mem843[eax_1011:word32]
	ebx_1039 = Mem847[ebp_806 - 16<i32>:word32]
l00426863:
	word32 edi_1059 = Mem850[ebp_806 + 8<i32>:word32]
	branch Mem850[Mem850[ebp_806 - 20<i32>:word32] + (ecx_824 - 2<i32>):byte] == 0x73<8> l004268CF
l0042686F:
	branch ecx_824 <=u ecx_824 - 2<i32> l00426E53
l00426E53:
	word32 esp_872 = <invalid>
	word32 edx_4076
	word32 ebx_4077
	word32 ebp_4078
	word32 esi_4079
	word32 edi_4080
	ecx_824 = fn004113B0(ecx_824, Mem864[esp_802 + -4<i32>:word32], Mem864[esp_802:word32], Mem864[esp_802 + 4<i32>:word32], out edx_4076, out ebx_4077, out ebp_4078, out esi_4079, out edi_4080)
	esp_802 = esp_872 + 0xC<32>
l00426877:
	Mem880[ebp_806 - 20<i32>:word32] = eax_1011
	branch esi_842 <u 0x10<32> l00426887
l0042687F:
	Mem885[ebp_806 - 20<i32>:word32] = Mem880[eax_1011:word32]
	edi_1059 = Mem885[ebp_806 + 8<i32>:word32]
l00426887:
	ebx_1039 = Mem888[ebp_806 - 16<i32>:word32]
	branch Mem888[Mem888[ebp_806 - 20<i32>:word32] + (ecx_824 - 2<i32>):byte] == 0x53<8> l004268CF
l00426893:
	branch ecx_824 <=u ecx_824 - 1<i32> l00426E58
l00426E58:
	word32 esp_911 = <invalid>
	word32 edx_4113
	word32 ebx_4114
	word32 ebp_4115
	word32 esi_4116
	word32 edi_4117
	ecx_907 = fn004113B0(ecx_824, Mem903[esp_802 + -4<i32>:word32], Mem903[esp_802:word32], Mem903[esp_802 + 4<i32>:word32], out edx_4113, out ebx_4114, out ebp_4115, out esi_4116, out edi_4117)
	esp_802 = esp_911 + 0xC<32>
l0042689E:
	Mem919[ebp_806 - 20<i32>:word32] = eax_1011
	branch esi_842 <u 0x10<32> l004268AE
l004268A6:
	Mem924[ebp_806 - 20<i32>:word32] = Mem919[eax_1011:word32]
	edi_1059 = Mem924[ebp_806 + 8<i32>:word32]
l004268AE:
	ecx_907 = Mem927[eax_1011 + 16<i32>:word32]
	branch Mem927[Mem927[ebp_806 - 20<i32>:word32] + (ecx_824 - 1<i32>):byte] == 0x73<8> l004268CF
l004268BA:
	branch ecx_907 <=u ecx_824 - 1<i32> l00426E5D
l00426E5D:
	word32 edx_4118
	word32 ebx_4119
	word32 ebp_4120
	word32 esi_4121
	word32 edi_4122
	fn004113B0(ecx_907, Mem941[esp_802 + -4<i32>:word32], Mem941[esp_802:word32], Mem941[esp_802 + 4<i32>:word32], out edx_4118, out ebx_4119, out ebp_4120, out esi_4121, out edi_4122)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 esp_949 = <invalid>
l00426E6F_thunk_fn00426E70:
	word32 ebp_987
	word32 esi_992
	word32 ecx_989 = fn00426E70(es, ds, Mem941[esp_949 + 0x10<32>:word32], out ebp_987, out esi_992)
	ebpOut = ebp_987
	esiOut = esi_992
	return ecx_989
l004268C2:
	branch esi_842 <u 0x10<32> l004268C9
l004268C7:
	eax_1011 = Mem927[eax_1011:word32]
l004268C9:
	branch Mem927[eax_1011 + (ecx_824 - 1<i32>):byte] != 0x53<8> l004268E4
l004268CF:
	word32 ecx_4074
	word32 edx_4075
	Mem1043[ebx_1039 + 96<i32>:word32] = fn0042D911(SEQ(0<64>, Mem1019[ebp_806 - 32<i32>:real64] * Mem1019[0x00432F48<p32>:real64]), out ecx_4074, out edx_4075)
l004268E4:
	Mem1051[ebp_806 - 24<i32>:word32] = esp_795 - 0x14<32>
	Mem1053[esp_795 - 0x18<32>:word32] = 4<32>
	Mem1054[esp_795 - 4<32>:word32] = 0<32>
	Mem1055[esp_795:word32] = 0xF<32>
	Mem1057[esp_795 - 0x1C<32>:word32] = 0x432DC8<32>
	Mem1058[esp_795 - 0x14<32>:byte] = 0<8>
	word32 ebp_1068
	word32 ebx_1069
	word32 edi_1071
	word32 ecx_4123
	word32 edx_4124
	word32 esi_4125
	fn00402A70(esp_795 - 0x14<32>, edi_1059, Mem1058[esp_795 - 0x1C<32>:word32], Mem1058[esp_795 - 0x18<32>:word32], Mem1058[esp_795 - 8<32>:word32], out ecx_4123, out edx_4124, out ebx_1069, out ebp_1068, out esi_4125, out edi_1071)
	Mem1083[ebp_1068 - 4<i32>:word32] = 0xC<32>
	word32 esp_1075 = <invalid>
	Mem1087[esp_1075 - 0x14<32>:word32] = Mem1083[edi_1071:word32]
	word32 ebp_1090
	word32 edx_4126
	fn004028D0(esp_1075 - 0x10<32>, edi_1071, Mem1087[esp_1075 - 0x14<32>:word32], out edx_4126, out ebp_1090)
	Mem1100[ebp_1090 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1091 = <invalid>
	word32 ebp_1117
	word32 ebx_1118
	word32 edi_1120
	word32 ecx_4127
	word32 edx_4128
	word32 esi_4129
	branch SLICE(fn0041C1F0(ebx_1069, ebx_1069, ebp_1090, es, ds, Mem1100[esp_1091 + 0x2C<32>:word32], out ecx_4127, out edx_4128, out ebx_1118, out ebp_1117, out esi_4129, out edi_1120), byte, 0) == 0<8> l0042695B
l0042695B:
	Mem1137[ebp_1117 - 24<i32>:word32] = esp_1091 - 0x14<32>
	Mem1139[esp_1091 - 0x18<32>:word32] = 4<32>
	Mem1140[esp_1091 - 4<32>:word32] = 0<32>
	Mem1141[esp_1091:word32] = 0xF<32>
	Mem1143[esp_1091 - 0x1C<32>:word32] = 0x432DD0<32>
	Mem1144[esp_1091 - 0x14<32>:byte] = 0<8>
	word32 ebp_1146
	word32 ebx_1147
	word32 edi_1149
	word32 ecx_4081
	word32 edx_4082
	word32 esi_4083
	fn00402A70(esp_1091 - 0x14<32>, edi_1120, Mem1144[esp_1091 - 0x1C<32>:word32], Mem1144[esp_1091 - 0x18<32>:word32], Mem1144[esp_1091 - 8<32>:word32], out ecx_4081, out edx_4082, out ebx_1147, out ebp_1146, out esi_4083, out edi_1149)
	Mem1161[ebp_1146 - 4<i32>:word32] = 0xD<32>
	word32 esp_1153 = <invalid>
	Mem1165[esp_1153 - 0x14<32>:word32] = Mem1161[edi_1149:word32]
	word32 ebp_1168
	word32 edx_4084
	fn004028D0(esp_1153 - 0x10<32>, edi_1149, Mem1165[esp_1153 - 0x14<32>:word32], out edx_4084, out ebp_1168)
	Mem1178[ebp_1168 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1169 = <invalid>
	word32 ebp_1180
	word32 ebx_1181
	word32 edi_1183
	word32 ecx_4085
	word32 edx_4086
	word32 esi_4087
	branch SLICE(fn0041C1F0(ebx_1147, ebx_1147, ebp_1168, es, ds, Mem1178[esp_1169 + 0x2C<32>:word32], out ecx_4085, out edx_4086, out ebx_1181, out ebp_1180, out esi_4087, out edi_1183), byte, 0) == 0<8> l004269D2
l004269D2:
	Mem1200[ebp_1180 - 24<i32>:word32] = esp_1169 - 0x14<32>
	Mem1202[esp_1169 - 0x18<32>:word32] = 4<32>
	Mem1203[esp_1169 - 4<32>:word32] = 0<32>
	Mem1204[esp_1169:word32] = 0xF<32>
	Mem1206[esp_1169 - 0x1C<32>:word32] = 0x432DD8<32>
	Mem1207[esp_1169 - 0x14<32>:byte] = 0<8>
	word32 ebp_1209
	word32 ebx_1210
	word32 edi_1212
	word32 ecx_4097
	word32 edx_4098
	word32 esi_4099
	fn00402A70(esp_1169 - 0x14<32>, edi_1183, Mem1207[esp_1169 - 0x1C<32>:word32], Mem1207[esp_1169 - 0x18<32>:word32], Mem1207[esp_1169 - 8<32>:word32], out ecx_4097, out edx_4098, out ebx_1210, out ebp_1209, out esi_4099, out edi_1212)
	Mem1224[ebp_1209 - 4<i32>:word32] = 0xE<32>
	word32 esp_1216 = <invalid>
	Mem1228[esp_1216 - 0x14<32>:word32] = Mem1224[edi_1212:word32]
	word32 ebp_1231
	word32 edx_4100
	fn004028D0(esp_1216 - 0x10<32>, edi_1212, Mem1228[esp_1216 - 0x14<32>:word32], out edx_4100, out ebp_1231)
	Mem1241[ebp_1231 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1232 = <invalid>
	word32 ebp_1243
	word32 ebx_1244
	word32 edi_1246
	word32 ecx_4101
	word32 edx_4102
	word32 esi_4103
	branch SLICE(fn0041C1F0(ebx_1210, ebx_1210, ebp_1231, es, ds, Mem1241[esp_1232 + 0x2C<32>:word32], out ecx_4101, out edx_4102, out ebx_1244, out ebp_1243, out esi_4103, out edi_1246), byte, 0) == 0<8> l00426A51
l00426A51:
	Mem1263[ebp_1243 - 24<i32>:word32] = esp_1232 - 0x14<32>
	Mem1265[esp_1232 - 0x18<32>:word32] = 4<32>
	Mem1266[esp_1232 - 4<32>:word32] = 0<32>
	Mem1267[esp_1232:word32] = 0xF<32>
	Mem1269[esp_1232 - 0x1C<32>:word32] = 0x432DE0<32>
	Mem1270[esp_1232 - 0x14<32>:byte] = 0<8>
	word32 ebp_1272
	word32 ebx_1273
	word32 edi_1275
	word32 ecx_4130
	word32 edx_4131
	word32 esi_4132
	fn00402A70(esp_1232 - 0x14<32>, edi_1246, Mem1270[esp_1232 - 0x1C<32>:word32], Mem1270[esp_1232 - 0x18<32>:word32], Mem1270[esp_1232 - 8<32>:word32], out ecx_4130, out edx_4131, out ebx_1273, out ebp_1272, out esi_4132, out edi_1275)
	Mem1287[ebp_1272 - 4<i32>:word32] = 0xF<32>
	word32 esp_1279 = <invalid>
	Mem1291[esp_1279 - 0x14<32>:word32] = Mem1287[edi_1275:word32]
	word32 ebp_1294
	word32 edx_4133
	fn004028D0(esp_1279 - 0x10<32>, edi_1275, Mem1291[esp_1279 - 0x14<32>:word32], out edx_4133, out ebp_1294)
	Mem1304[ebp_1294 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1295 = <invalid>
	word32 ebp_1306
	word32 ebx_1307
	word32 edi_1309
	word32 ecx_4134
	word32 edx_4135
	word32 esi_4136
	branch SLICE(fn0041C1F0(ebx_1273, ebx_1273, ebp_1294, es, ds, Mem1304[esp_1295 + 0x2C<32>:word32], out ecx_4134, out edx_4135, out ebx_1307, out ebp_1306, out esi_4136, out edi_1309), byte, 0) == 0<8> l00426AC8
l00426AC8:
	Mem1326[ebp_1306 - 24<i32>:word32] = esp_1295 - 0x14<32>
	Mem1328[esp_1295 - 0x18<32>:word32] = 5<32>
	Mem1329[esp_1295 - 4<32>:word32] = 0<32>
	Mem1330[esp_1295:word32] = 0xF<32>
	Mem1332[esp_1295 - 0x1C<32>:word32] = 0x432DE8<32>
	Mem1333[esp_1295 - 0x14<32>:byte] = 0<8>
	word32 ebp_1335
	word32 ebx_1336
	word32 edi_1338
	word32 ecx_4145
	word32 edx_4146
	word32 esi_4147
	fn00402A70(esp_1295 - 0x14<32>, edi_1309, Mem1333[esp_1295 - 0x1C<32>:word32], Mem1333[esp_1295 - 0x18<32>:word32], Mem1333[esp_1295 - 8<32>:word32], out ecx_4145, out edx_4146, out ebx_1336, out ebp_1335, out esi_4147, out edi_1338)
	Mem1350[ebp_1335 - 4<i32>:word32] = 0x10<32>
	word32 esp_1342 = <invalid>
	Mem1354[esp_1342 - 0x14<32>:word32] = Mem1350[edi_1338:word32]
	word32 ebp_1357
	word32 edx_4148
	fn004028D0(esp_1342 - 0x10<32>, edi_1338, Mem1354[esp_1342 - 0x14<32>:word32], out edx_4148, out ebp_1357)
	Mem1367[ebp_1357 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1358 = <invalid>
	word32 ebp_1369
	word32 ebx_1370
	word32 edi_1372
	word32 ecx_4149
	word32 edx_4150
	word32 esi_4151
	branch SLICE(fn0041C1F0(ebx_1336, ebx_1336, ebp_1357, es, ds, Mem1367[esp_1358 + 0x2C<32>:word32], out ecx_4149, out edx_4150, out ebx_1370, out ebp_1369, out esi_4151, out edi_1372), byte, 0) == 0<8> l00426B37
l00426B37:
	Mem1389[ebp_1369 - 24<i32>:word32] = esp_1358 - 0x14<32>
	Mem1391[esp_1358 - 0x18<32>:word32] = 4<32>
	Mem1392[esp_1358 - 4<32>:word32] = 0<32>
	Mem1393[esp_1358:word32] = 0xF<32>
	Mem1395[esp_1358 - 0x1C<32>:word32] = 0x432DF0<32>
	Mem1396[esp_1358 - 0x14<32>:byte] = 0<8>
	word32 ebp_1398
	word32 ebx_1399
	word32 edi_1401
	word32 ecx_4161
	word32 edx_4162
	word32 esi_4163
	fn00402A70(esp_1358 - 0x14<32>, edi_1372, Mem1396[esp_1358 - 0x1C<32>:word32], Mem1396[esp_1358 - 0x18<32>:word32], Mem1396[esp_1358 - 8<32>:word32], out ecx_4161, out edx_4162, out ebx_1399, out ebp_1398, out esi_4163, out edi_1401)
	Mem1413[ebp_1398 - 4<i32>:word32] = 0x11<32>
	word32 esp_1405 = <invalid>
	Mem1417[esp_1405 - 0x14<32>:word32] = Mem1413[edi_1401:word32]
	word32 ebp_1420
	word32 edx_4164
	fn004028D0(esp_1405 - 0x10<32>, edi_1401, Mem1417[esp_1405 - 0x14<32>:word32], out edx_4164, out ebp_1420)
	Mem1430[ebp_1420 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1421 = <invalid>
	word32 ebp_1432
	word32 ebx_1433
	word32 edi_1435
	word32 ecx_4165
	word32 edx_4166
	word32 esi_4167
	branch SLICE(fn0041C1F0(ebx_1399, ebx_1399, ebp_1420, es, ds, Mem1430[esp_1421 + 0x2C<32>:word32], out ecx_4165, out edx_4166, out ebx_1433, out ebp_1432, out esi_4167, out edi_1435), byte, 0) == 0<8> l00426BA6
l00426BA6:
	Mem1452[ebp_1432 - 24<i32>:word32] = esp_1421 - 0x14<32>
	Mem1454[esp_1421 - 0x18<32>:word32] = 7<32>
	Mem1455[esp_1421 - 4<32>:word32] = 0<32>
	Mem1456[esp_1421:word32] = 0xF<32>
	Mem1458[esp_1421 - 0x1C<32>:word32] = 0x432DF8<32>
	Mem1459[esp_1421 - 0x14<32>:byte] = 0<8>
	word32 ebp_1461
	word32 ebx_1462
	word32 edi_1464
	word32 ecx_4173
	word32 edx_4174
	word32 esi_4175
	fn00402A70(esp_1421 - 0x14<32>, edi_1435, Mem1459[esp_1421 - 0x1C<32>:word32], Mem1459[esp_1421 - 0x18<32>:word32], Mem1459[esp_1421 - 8<32>:word32], out ecx_4173, out edx_4174, out ebx_1462, out ebp_1461, out esi_4175, out edi_1464)
	Mem1476[ebp_1461 - 4<i32>:word32] = 0x12<32>
	word32 esp_1468 = <invalid>
	Mem1480[esp_1468 - 0x14<32>:word32] = Mem1476[edi_1464:word32]
	word32 ebp_1483
	word32 edx_4176
	fn004028D0(esp_1468 - 0x10<32>, edi_1464, Mem1480[esp_1468 - 0x14<32>:word32], out edx_4176, out ebp_1483)
	Mem1493[ebp_1483 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1484 = <invalid>
	word32 ebp_1495
	word32 ebx_1496
	word32 edi_1498
	word32 ecx_4177
	word32 edx_4178
	word32 esi_4179
	branch SLICE(fn0041C1F0(ebx_1462, ebx_1462, ebp_1483, es, ds, Mem1493[esp_1484 + 0x2C<32>:word32], out ecx_4177, out edx_4178, out ebx_1496, out ebp_1495, out esi_4179, out edi_1498), byte, 0) == 0<8> l00426C15
l00426C15:
	word32 esp_1827
	Mem1515[ebp_1495 - 24<i32>:word32] = esp_1484 - 0x14<32>
	Mem1517[esp_1484 - 0x18<32>:word32] = 4<32>
	Mem1518[esp_1484 - 4<32>:word32] = 0<32>
	Mem1519[esp_1484:word32] = 0xF<32>
	Mem1521[esp_1484 - 0x1C<32>:word32] = 0x432E00<32>
	Mem1522[esp_1484 - 0x14<32>:byte] = 0<8>
	word32 ebp_1524
	word32 ebx_1525
	word32 edi_1527
	word32 ecx_4185
	word32 edx_4186
	word32 esi_4187
	fn00402A70(esp_1484 - 0x14<32>, edi_1498, Mem1522[esp_1484 - 0x1C<32>:word32], Mem1522[esp_1484 - 0x18<32>:word32], Mem1522[esp_1484 - 8<32>:word32], out ecx_4185, out edx_4186, out ebx_1525, out ebp_1524, out esi_4187, out edi_1527)
	Mem1539[ebp_1524 - 4<i32>:word32] = 0x13<32>
	word32 esp_1531 = <invalid>
	Mem1543[esp_1531 - 0x14<32>:word32] = Mem1539[edi_1527:word32]
	word32 ebp_1546
	word32 edx_4188
	fn004028D0(esp_1531 - 0x10<32>, edi_1527, Mem1543[esp_1531 - 0x14<32>:word32], out edx_4188, out ebp_1546)
	Mem1556[ebp_1546 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1547 = <invalid>
	word32 ebp_1558
	word32 ecx_4189
	word32 edx_4190
	word32 ebx_4191
	word32 esi_4192
	branch SLICE(fn0041C1F0(ebx_1525, ebx_1525, ebp_1546, es, ds, Mem1556[esp_1547 + 0x2C<32>:word32], out ecx_4189, out edx_4190, out ebx_4191, out ebp_1558, out esi_4192, out edi_1561), byte, 0) == 0<8> l00426C66
l00426C66:
	Mem1578[ebp_1558 - 24<i32>:word32] = esp_1547 - 0x14<32>
	Mem1580[esp_1547 - 0x18<32>:word32] = 5<32>
	Mem1581[esp_1547 - 4<32>:word32] = 0<32>
	Mem1582[esp_1547:word32] = 0xF<32>
	Mem1584[esp_1547 - 0x1C<32>:word32] = 0x432E08<32>
	Mem1585[esp_1547 - 0x14<32>:byte] = 0<8>
	word32 ebp_1587
	word32 ebx_1588
	word32 edi_1590
	word32 ecx_4198
	word32 edx_4199
	word32 esi_4200
	fn00402A70(esp_1547 - 0x14<32>, edi_1561, Mem1585[esp_1547 - 0x1C<32>:word32], Mem1585[esp_1547 - 0x18<32>:word32], Mem1585[esp_1547 - 8<32>:word32], out ecx_4198, out edx_4199, out ebx_1588, out ebp_1587, out esi_4200, out edi_1590)
	Mem1602[ebp_1587 - 4<i32>:word32] = 0x14<32>
	word32 esp_1594 = <invalid>
	Mem1606[esp_1594 - 0x14<32>:word32] = Mem1602[edi_1590:word32]
	word32 ebp_1609
	word32 edx_4201
	fn004028D0(esp_1594 - 0x10<32>, edi_1590, Mem1606[esp_1594 - 0x14<32>:word32], out edx_4201, out ebp_1609)
	Mem1619[ebp_1609 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1610 = <invalid>
	word32 ebp_1621
	word32 ecx_4202
	word32 edx_4203
	word32 ebx_4204
	word32 esi_4205
	branch SLICE(fn0041C1F0(ebx_1588, ebx_1588, ebp_1609, es, ds, Mem1619[esp_1610 + 0x2C<32>:word32], out ecx_4202, out edx_4203, out ebx_4204, out ebp_1621, out esi_4205, out edi_1561), byte, 0) == 0<8> l00426CB7
l00426CB7:
	Mem1641[ebp_1621 - 24<i32>:word32] = esp_1610 - 0x14<32>
	Mem1643[esp_1610 - 0x18<32>:word32] = 5<32>
	Mem1644[esp_1610 - 4<32>:word32] = 0<32>
	Mem1645[esp_1610:word32] = 0xF<32>
	Mem1647[esp_1610 - 0x1C<32>:word32] = 0x432E10<32>
	Mem1648[esp_1610 - 0x14<32>:byte] = 0<8>
	word32 ebp_1650
	word32 ebx_1651
	word32 edi_1653
	word32 ecx_4220
	word32 edx_4221
	word32 esi_4222
	fn00402A70(esp_1610 - 0x14<32>, edi_1561, Mem1648[esp_1610 - 0x1C<32>:word32], Mem1648[esp_1610 - 0x18<32>:word32], Mem1648[esp_1610 - 8<32>:word32], out ecx_4220, out edx_4221, out ebx_1651, out ebp_1650, out esi_4222, out edi_1653)
	Mem1665[ebp_1650 - 4<i32>:word32] = 0x15<32>
	word32 esp_1657 = <invalid>
	Mem1669[esp_1657 - 0x14<32>:word32] = Mem1665[edi_1653:word32]
	word32 ebp_1672
	word32 edx_4223
	fn004028D0(esp_1657 - 0x10<32>, edi_1653, Mem1669[esp_1657 - 0x14<32>:word32], out edx_4223, out ebp_1672)
	Mem1682[ebp_1672 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1673 = <invalid>
	word32 ebp_1684
	word32 ecx_4224
	word32 edx_4225
	word32 ebx_4226
	word32 esi_4227
	branch SLICE(fn0041C1F0(ebx_1651, ebx_1651, ebp_1672, es, ds, Mem1682[esp_1673 + 0x2C<32>:word32], out ecx_4224, out edx_4225, out ebx_4226, out ebp_1684, out esi_4227, out edi_1561), byte, 0) == 0<8> l00426D08
l00426D08:
	Mem1704[ebp_1684 - 24<i32>:word32] = esp_1673 - 0x14<32>
	Mem1706[esp_1673 - 0x18<32>:word32] = 6<32>
	Mem1707[esp_1673 - 4<32>:word32] = 0<32>
	Mem1708[esp_1673:word32] = 0xF<32>
	Mem1710[esp_1673 - 0x1C<32>:word32] = 0x432E18<32>
	Mem1711[esp_1673 - 0x14<32>:byte] = 0<8>
	word32 ebp_1713
	word32 ebx_1714
	word32 edi_1716
	word32 ecx_4228
	word32 edx_4229
	word32 esi_4230
	fn00402A70(esp_1673 - 0x14<32>, edi_1561, Mem1711[esp_1673 - 0x1C<32>:word32], Mem1711[esp_1673 - 0x18<32>:word32], Mem1711[esp_1673 - 8<32>:word32], out ecx_4228, out edx_4229, out ebx_1714, out ebp_1713, out esi_4230, out edi_1716)
	Mem1728[ebp_1713 - 4<i32>:word32] = 0x16<32>
	word32 esp_1720 = <invalid>
	Mem1732[esp_1720 - 0x14<32>:word32] = Mem1728[edi_1716:word32]
	word32 ebp_1735
	word32 edx_4231
	fn004028D0(esp_1720 - 0x10<32>, edi_1716, Mem1732[esp_1720 - 0x14<32>:word32], out edx_4231, out ebp_1735)
	Mem1745[ebp_1735 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1736 = <invalid>
	word32 ebp_1747
	word32 ecx_4232
	word32 edx_4233
	word32 ebx_4234
	word32 esi_4235
	branch SLICE(fn0041C1F0(ebx_1714, ebx_1714, ebp_1735, es, ds, Mem1745[esp_1736 + 0x2C<32>:word32], out ecx_4232, out edx_4233, out ebx_4234, out ebp_1747, out esi_4235, out edi_1561), byte, 0) == 0<8> l00426D56
l00426D56:
	Mem1767[ebp_1747 - 24<i32>:word32] = esp_1736 - 0x14<32>
	Mem1769[esp_1736 - 0x18<32>:word32] = 6<32>
	Mem1770[esp_1736 - 4<32>:word32] = 0<32>
	Mem1771[esp_1736:word32] = 0xF<32>
	Mem1773[esp_1736 - 0x1C<32>:word32] = 0x432E20<32>
	Mem1774[esp_1736 - 0x14<32>:byte] = 0<8>
	word32 ebp_1776
	word32 ebx_1777
	word32 edi_1779
	word32 ecx_4236
	word32 edx_4237
	word32 esi_4238
	fn00402A70(esp_1736 - 0x14<32>, edi_1561, Mem1774[esp_1736 - 0x1C<32>:word32], Mem1774[esp_1736 - 0x18<32>:word32], Mem1774[esp_1736 - 8<32>:word32], out ecx_4236, out edx_4237, out ebx_1777, out ebp_1776, out esi_4238, out edi_1779)
	Mem1791[ebp_1776 - 4<i32>:word32] = 0x17<32>
	word32 esp_1783 = <invalid>
	Mem1795[esp_1783 - 0x14<32>:word32] = Mem1791[edi_1779:word32]
	word32 ebp_1798
	word32 edx_4239
	fn004028D0(esp_1783 - 0x10<32>, edi_1779, Mem1795[esp_1783 - 0x14<32>:word32], out edx_4239, out ebp_1798)
	Mem1808[ebp_1798 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1799 = <invalid>
	esp_1806 = esp_1799 + 4<32>
	word32 edx_4240
	word32 ebx_4241
	word32 esi_4242
	branch SLICE(fn0041C1F0(ebx_1777, ebx_1777, ebp_1798, es, ds, Mem1808[esp_1799 + 0x2C<32>:word32], out ecx_1812, out edx_4240, out ebx_4241, out ebp_1810, out esi_4242, out edi_1561), byte, 0) == 0<8> l00426DDA
l00426DA0:
	Mem1828[esp_1799:word32] = 0x1E<32>
	esp_1827 = esp_1799
l00426D52:
	Mem1830[esp_1736:word32] = 0x1F<32>
	esp_1827 = esp_1736
l00426D01:
	Mem1832[esp_1673:word32] = 0x1C<32>
	esp_1827 = esp_1673
l00426CB0:
	Mem1834[esp_1610:word32] = 0x1D<32>
	esp_1827 = esp_1610
l00426C5F:
	Mem1836[esp_1547:word32] = 0x17<32>
	esp_1827 = esp_1547
l00426DA2:
	word32 eax_1839 = Mem1838[edi_1561:word32]
	word32 esp_1842 = esp_1827 - 4<i32>
	Mem1843[esp_1842:word32] = eax_1839 + 72<i32>
	word32 esp_1868 = <invalid>
	word32 ebx_1855
	word32 esi_1859
	word32 ecx_4206
	word32 ebp_4207
	word32 edi_4208
	Mem1877[esp_1868:word32] = fn0041C910(eax_1839 + 48<i32>, es, ds, Mem1843[esp_1842:word32], Mem1843[esp_1842 + 36<i32>:word32], out ecx_4206, out ebx_1855, out ebp_4207, out esi_1859, out edi_4208)
	Mem1879[esp_1868 - 4<i32>:word32] = esi_1859
	word32 esp_1895 = <invalid>
	word32 ebx_1882
	word32 edi_1884
	word32 ecx_4209
	word32 ebp_4210
	word32 esi_4211
	Mem1904[esp_1895:word32] = fn0041C910(ebx_1855, es, ds, Mem1879[esp_1868 - 4<i32>:word32], Mem1879[esp_1868 + 32<i32>:word32], out ecx_4209, out ebx_1882, out ebp_4210, out esi_4211, out edi_1884)
	Mem1906[esp_1895 - 4<i32>:word32] = edi_1884
	word32 esp_1922 = <invalid>
	word32 ebx_1909
	word32 ecx_4212
	word32 ebp_4213
	word32 esi_4214
	word32 edi_4215
	Mem1931[esp_1922:word32] = fn0041C910(ebx_1882, es, ds, Mem1906[esp_1895 - 4<i32>:word32], Mem1906[esp_1895 + 32<i32>:word32], out ecx_4212, out ebx_1909, out ebp_4213, out esi_4214, out edi_4215)
	Mem1933[esp_1922 - 4<i32>:word32] = ebx_1909
	word32 esp_1949 = <invalid>
	word32 ecx_4216
	word32 ebx_4217
	word32 esi_4218
	word32 edi_4219
	Mem1958[esp_1949:word32] = fn0041C910(ebx_1909, es, ds, Mem1933[esp_1922 - 4<i32>:word32], Mem1933[esp_1922 + 32<i32>:word32], out ecx_4216, out ebx_4217, out ebp_1810, out esi_4218, out edi_4219)
	eax_1959 = fn0041C7E0(Mem1958[esp_1949:word32], Mem1958[esp_1949 + 4<i32>:word32], Mem1958[esp_1949 + 8<i32>:word32], Mem1958[esp_1949 + 12<i32>:word32], Mem1958[esp_1949 + 16<i32>:word32], out ecx_1812)
	esp_1806 = esp_1949 + 0x14<32>
	ebx_1976 = Mem1958[ebp_1810 - 16<i32>:word32]
l00426BF0:
	Mem1980[esp_1484:word32] = Mem1493[edi_1498:word32] + 48<i32>
	word32 esp_1997 = <invalid>
	word32 ebx_1984
	word32 esi_1988
	word32 ecx_4193
	word32 ebp_4194
	word32 edi_4195
	Mem2006[esp_1997:word32] = fn0041C910(ebx_1496, es, ds, Mem1980[esp_1484:word32], Mem1980[esp_1484 + 36<i32>:word32], out ecx_4193, out ebx_1984, out ebp_4194, out esi_1988, out edi_4195)
	Mem2008[esp_1997 - 4<i32>:word32] = 0<32>
	Mem2010[esp_1997 - 8<i32>:word32] = esi_1988
	word32 esp_2026 = <invalid>
	word32 ecx_4196
	word32 esi_4197
	Mem2035[esp_2026:word32] = fn0041C910(ebx_1984, es, ds, Mem2010[esp_1997 - 8<i32>:word32], Mem2010[esp_1997 + 28<i32>:word32], out ecx_4196, out ebx_1976, out ebp_1810, out esi_4197, out edi_1561)
	esp_1806 = esp_2026 + 0xC<32>
	eax_1959 = fn0041C680(Mem2035[esp_2026:word32], Mem2035[esp_2026 + 4<i32>:word32], Mem2035[esp_2026 + 8<i32>:word32], out ecx_1812) + 0x34<32>
l00426B81:
	Mem2058[esp_1421:word32] = Mem1430[edi_1435:word32] + 48<i32>
	word32 esp_2075 = <invalid>
	word32 ebx_2062
	word32 esi_2066
	word32 ecx_4180
	word32 ebp_4181
	word32 edi_4182
	Mem2084[esp_2075:word32] = fn0041C910(ebx_1433, es, ds, Mem2058[esp_1421:word32], Mem2058[esp_1421 + 36<i32>:word32], out ecx_4180, out ebx_2062, out ebp_4181, out esi_2066, out edi_4182)
	Mem2086[esp_2075 - 4<i32>:word32] = 0<32>
	Mem2088[esp_2075 - 8<i32>:word32] = esi_2066
	word32 esp_2104 = <invalid>
	word32 ecx_4183
	word32 esi_4184
	Mem2113[esp_2104:word32] = fn0041C910(ebx_2062, es, ds, Mem2088[esp_2075 - 8<i32>:word32], Mem2088[esp_2075 + 28<i32>:word32], out ecx_4183, out ebx_1976, out ebp_1810, out esi_4184, out edi_1561)
	esp_1806 = esp_2104 + 0xC<32>
	eax_1959 = fn0041C680(Mem2113[esp_2104:word32], Mem2113[esp_2104 + 4<i32>:word32], Mem2113[esp_2104 + 8<i32>:word32], out ecx_1812) + 0x30<32>
l00426B12:
	Mem2136[esp_1358:word32] = Mem1367[edi_1372:word32] + 48<i32>
	word32 esp_2153 = <invalid>
	word32 ebx_2140
	word32 esi_2144
	word32 ecx_4168
	word32 ebp_4169
	word32 edi_4170
	Mem2162[esp_2153:word32] = fn0041C910(ebx_1370, es, ds, Mem2136[esp_1358:word32], Mem2136[esp_1358 + 36<i32>:word32], out ecx_4168, out ebx_2140, out ebp_4169, out esi_2144, out edi_4170)
	Mem2164[esp_2153 - 4<i32>:word32] = 0<32>
	Mem2166[esp_2153 - 8<i32>:word32] = esi_2144
	word32 esp_2182 = <invalid>
	word32 ecx_4171
	word32 esi_4172
	Mem2191[esp_2182:word32] = fn0041C910(ebx_2140, es, ds, Mem2166[esp_2153 - 8<i32>:word32], Mem2166[esp_2153 + 28<i32>:word32], out ecx_4171, out ebx_1976, out ebp_1810, out esi_4172, out edi_1561)
	esp_1806 = esp_2182 + 0xC<32>
	eax_1959 = fn0041C680(Mem2191[esp_2182:word32], Mem2191[esp_2182 + 4<i32>:word32], Mem2191[esp_2182 + 8<i32>:word32], out ecx_1812) + 0x2C<32>
l00426A9B:
	Mem2214[esp_1295:word32] = Mem1304[edi_1309:word32] + 72<i32>
	word32 esp_2232 = <invalid>
	word32 ebx_2219
	word32 esi_2223
	word32 ecx_4152
	word32 ebp_4153
	word32 edi_4154
	Mem2241[esp_2232:word32] = fn0041C910(ebx_1307, es, ds, Mem2214[esp_1295:word32], Mem2214[esp_1295 + 36<i32>:word32], out ecx_4152, out ebx_2219, out ebp_4153, out esi_2223, out edi_4154)
	Mem2243[esp_2232 - 4<i32>:word32] = esi_2223
	word32 esp_2259 = <invalid>
	word32 ebx_2246
	word32 edi_2248
	word32 ecx_4155
	word32 ebp_4156
	word32 esi_4157
	Mem2268[esp_2259:word32] = fn0041C910(ebx_2219, es, ds, Mem2243[esp_2232 - 4<i32>:word32], Mem2243[esp_2232 + 32<i32>:word32], out ecx_4155, out ebx_2246, out ebp_4156, out esi_4157, out edi_2248)
	Mem2270[esp_2259 - 4<i32>:word32] = edi_2248
	word32 esp_2286 = <invalid>
	word32 ecx_4158
	word32 esi_4159
	word32 edi_4160
	Mem2295[esp_2286:word32] = fn0041C910(ebx_2246, es, ds, Mem2270[esp_2259 - 4<i32>:word32], Mem2270[esp_2259 + 32<i32>:word32], out ecx_4158, out ebx_1976, out ebp_1810, out esi_4159, out edi_4160)
	esp_1806 = esp_2286 + 0xC<32>
	eax_1959 = fn0041C680(Mem2295[esp_2286:word32], Mem2295[esp_2286 + 4<i32>:word32], Mem2295[esp_2286 + 8<i32>:word32], out ecx_1812) + 0x24<32>
l00426A1C:
	word32 eax_2315 = Mem1241[edi_1246:word32]
	Mem2317[esp_1232:word32] = 0<32>
	Mem2320[esp_1232 - 4<i32>:word32] = eax_2315 + 48<i32>
	word32 esp_2338 = <invalid>
	word32 ebx_2325
	word32 esi_2329
	word32 ecx_4137
	word32 ebp_4138
	word32 edi_4139
	Mem2347[esp_2338:word32] = fn0041C910(ebx_1244, es, ds, Mem2320[esp_1232 - 4<i32>:word32], Mem2320[esp_1232 + 32<i32>:word32], out ecx_4137, out ebx_2325, out ebp_4138, out esi_2329, out edi_4139)
	Mem2349[esp_2338 - 4<i32>:word32] = esi_2329
	word32 esp_2365 = <invalid>
	word32 ebx_2352
	word32 edi_2354
	word32 ecx_4140
	word32 ebp_4141
	word32 esi_4142
	Mem2374[esp_2365:word32] = fn0041C910(ebx_2325, es, ds, Mem2349[esp_2338 - 4<i32>:word32], Mem2349[esp_2338 + 32<i32>:word32], out ecx_4140, out ebx_2352, out ebp_4141, out esi_4142, out edi_2354)
	word32 ecx_4143
	fn0041C680(Mem2374[esp_2365:word32], Mem2374[esp_2365 + 4<i32>:word32], Mem2374[esp_2365 + 8<i32>:word32], out ecx_4143)
	Mem2393[esp_2365 + 8<32>:word32] = edi_2354
	word32 esp_2410 = <invalid>
	esp_1806 = esp_2410 + 4<32>
	word32 esi_2401
	word32 edi_4144
	eax_1959 = (fn0041C910(ebx_2352, es, ds, Mem2393[esp_2365 + 8<32>:word32], Mem2393[esp_2365 + 0x2C<32>:word32], out ecx_1812, out ebx_1976, out ebp_1810, out esi_2401, out edi_4144) << 6<32>) + 0x32<32> + esi_2401
l004269A5:
	Mem2425[esp_1169:word32] = Mem1178[edi_1183:word32] + 72<i32>
	word32 esp_2443 = <invalid>
	word32 ebx_2430
	word32 esi_2434
	word32 ecx_4104
	word32 ebp_4105
	word32 edi_4106
	Mem2452[esp_2443:word32] = fn0041C910(ebx_1181, es, ds, Mem2425[esp_1169:word32], Mem2425[esp_1169 + 36<i32>:word32], out ecx_4104, out ebx_2430, out ebp_4105, out esi_2434, out edi_4106)
	Mem2454[esp_2443 - 4<i32>:word32] = esi_2434
	word32 esp_2470 = <invalid>
	word32 ebx_2457
	word32 edi_2459
	word32 ecx_4107
	word32 ebp_4108
	word32 esi_4109
	Mem2479[esp_2470:word32] = fn0041C910(ebx_2430, es, ds, Mem2454[esp_2443 - 4<i32>:word32], Mem2454[esp_2443 + 32<i32>:word32], out ecx_4107, out ebx_2457, out ebp_4108, out esi_4109, out edi_2459)
	Mem2481[esp_2470 - 4<i32>:word32] = edi_2459
	word32 esp_2497 = <invalid>
	word32 ecx_4110
	word32 esi_4111
	word32 edi_4112
	Mem2506[esp_2497:word32] = fn0041C910(ebx_2457, es, ds, Mem2481[esp_2470 - 4<i32>:word32], Mem2481[esp_2470 + 32<i32>:word32], out ecx_4110, out ebx_1976, out ebp_1810, out esi_4111, out edi_4112)
	esp_1806 = esp_2497 + 0xC<32>
	eax_1959 = fn0041C680(Mem2506[esp_2497:word32], Mem2506[esp_2497 + 4<i32>:word32], Mem2506[esp_2497 + 8<i32>:word32], out ecx_1812) + 0x28<32>
l0042692E:
	Mem2529[esp_1091:word32] = Mem1100[edi_1120:word32] + 72<i32>
	word32 esp_2547 = <invalid>
	word32 ebx_2534
	word32 esi_2538
	word32 ecx_4088
	word32 ebp_4089
	word32 edi_4090
	Mem2556[esp_2547:word32] = fn0041C910(ebx_1118, es, ds, Mem2529[esp_1091:word32], Mem2529[esp_1091 + 36<i32>:word32], out ecx_4088, out ebx_2534, out ebp_4089, out esi_2538, out edi_4090)
	Mem2558[esp_2547 - 4<i32>:word32] = esi_2538
	word32 esp_2574 = <invalid>
	word32 ebx_2561
	word32 edi_2563
	word32 ecx_4091
	word32 ebp_4092
	word32 esi_4093
	Mem2583[esp_2574:word32] = fn0041C910(ebx_2534, es, ds, Mem2558[esp_2547 - 4<i32>:word32], Mem2558[esp_2547 + 32<i32>:word32], out ecx_4091, out ebx_2561, out ebp_4092, out esi_4093, out edi_2563)
	Mem2585[esp_2574 - 4<i32>:word32] = edi_2563
	word32 esp_2601 = <invalid>
	word32 ecx_4094
	word32 esi_4095
	word32 edi_4096
	Mem2610[esp_2601:word32] = fn0041C910(ebx_2561, es, ds, Mem2585[esp_2574 - 4<i32>:word32], Mem2585[esp_2574 + 32<i32>:word32], out ecx_4094, out ebx_1976, out ebp_1810, out esi_4095, out edi_4096)
	esp_1806 = esp_2601 + 0xC<32>
	eax_1959 = fn0041C680(Mem2610[esp_2601:word32], Mem2610[esp_2601 + 4<i32>:word32], Mem2610[esp_2601 + 8<i32>:word32], out ecx_1812) + 0x2A<32>
l00426817:
	Mem2632[esp_795:word32] = eax_1011 + 72<i32>
	word32 esp_2650 = <invalid>
	word32 ebx_2637
	word32 esi_2641
	word32 ecx_4060
	word32 ebp_4061
	word32 edi_4062
	Mem2659[esp_2650:word32] = fn0041C910(ebx_1039, es, ds, Mem2632[esp_795:word32], Mem2632[esp_795 + 36<i32>:word32], out ecx_4060, out ebx_2637, out ebp_4061, out esi_2641, out edi_4062)
	Mem2661[esp_2650 - 4<i32>:word32] = esi_2641
	word32 esp_2677 = <invalid>
	word32 ebx_2664
	word32 edi_2666
	word32 ecx_4063
	word32 ebp_4064
	word32 esi_4065
	Mem2686[esp_2677:word32] = fn0041C910(ebx_2637, es, ds, Mem2661[esp_2650 - 4<i32>:word32], Mem2661[esp_2650 + 32<i32>:word32], out ecx_4063, out ebx_2664, out ebp_4064, out esi_4065, out edi_2666)
	Mem2688[esp_2677 - 4<i32>:word32] = edi_2666
	word32 esp_2704 = <invalid>
	word32 ecx_4066
	word32 esi_4067
	word32 edi_4068
	Mem2715[esp_2704:word32] = fn0041C910(ebx_2664, es, ds, Mem2688[esp_2677 - 4<i32>:word32], Mem2688[esp_2677 + 32<i32>:word32], out ecx_4066, out ebx_1976, out ebp_1810, out esi_4067, out edi_4068) << 2<32>
	eax_1959 = fn0041C680(Mem2715[esp_2704:word32], Mem2715[esp_2704 + 4<i32>:word32], Mem2715[esp_2704 + 8<i32>:word32], out ecx_1812)
	esp_1806 = esp_2704 + 0xC<32>
l0042679B:
	Mem2736[esp_732:word32] = Mem741[edi_746:word32] + 72<i32>
	word32 esp_2754 = <invalid>
	word32 ebx_2741
	word32 esi_2745
	word32 ecx_4051
	word32 ebp_4052
	word32 edi_4053
	Mem2763[esp_2754:word32] = fn0041C910(ebx_744, es, ds, Mem2736[esp_732:word32], Mem2736[esp_732 + 36<i32>:word32], out ecx_4051, out ebx_2741, out ebp_4052, out esi_2745, out edi_4053)
	Mem2765[esp_2754 - 4<i32>:word32] = esi_2745
	word32 esp_2781 = <invalid>
	word32 ebx_2768
	word32 edi_2770
	word32 ecx_4054
	word32 ebp_4055
	word32 esi_4056
	Mem2790[esp_2781:word32] = fn0041C910(ebx_2741, es, ds, Mem2765[esp_2754 - 4<i32>:word32], Mem2765[esp_2754 + 32<i32>:word32], out ecx_4054, out ebx_2768, out ebp_4055, out esi_4056, out edi_2770)
	Mem2792[esp_2781 - 4<i32>:word32] = edi_2770
	word32 esp_2808 = <invalid>
	word32 ecx_4057
	word32 esi_4058
	word32 edi_4059
	Mem2819[esp_2808:word32] = fn0041C910(ebx_2768, es, ds, Mem2792[esp_2781 - 4<i32>:word32], Mem2792[esp_2781 + 32<i32>:word32], out ecx_4057, out ebx_1976, out ebp_1810, out esi_4058, out edi_4059) << 2<32>
	esp_1806 = esp_2808 + 0xC<32>
	eax_1959 = fn0041C680(Mem2819[esp_2808:word32], Mem2819[esp_2808 + 4<i32>:word32], Mem2819[esp_2808 + 8<i32>:word32], out ecx_1812) + 0x40<32>
l00426DD4:
	edi_1561 = Mem2840[ebp_1810 + 8<i32>:word32]
l0042672C:
	Mem2845[esp_669:word32] = Mem678[edi_683:word32] + 48<i32>
	word32 esp_2862 = <invalid>
	word32 ebx_2849
	word32 esi_2853
	word32 ecx_4039
	word32 ebp_4040
	word32 edi_4041
	Mem2871[esp_2862:word32] = fn0041C910(ebx_681, es, ds, Mem2845[esp_669:word32], Mem2845[esp_669 + 36<i32>:word32], out ecx_4039, out ebx_2849, out ebp_4040, out esi_2853, out edi_4041)
	Mem2873[esp_2862 - 4<i32>:word32] = 0<32>
	Mem2875[esp_2862 - 8<i32>:word32] = esi_2853
	word32 esp_2891 = <invalid>
	word32 ecx_4042
	word32 esi_4043
	Mem2900[esp_2891:word32] = fn0041C910(ebx_2849, es, ds, Mem2875[esp_2862 - 8<i32>:word32], Mem2875[esp_2862 + 28<i32>:word32], out ecx_4042, out ebx_1976, out ebp_1810, out esi_4043, out edi_1561)
	esp_1806 = esp_2891 + 0xC<32>
	eax_1959 = fn0041C680(Mem2900[esp_2891:word32], Mem2900[esp_2891 + 4<i32>:word32], Mem2900[esp_2891 + 8<i32>:word32], out ecx_1812) + 0x1C<32>
l004266BD:
	Mem2923[esp_606:word32] = Mem615[edi_620:word32] + 48<i32>
	word32 esp_2940 = <invalid>
	word32 ebx_2927
	word32 esi_2931
	word32 ecx_4027
	word32 ebp_4028
	word32 edi_4029
	Mem2949[esp_2940:word32] = fn0041C910(ebx_618, es, ds, Mem2923[esp_606:word32], Mem2923[esp_606 + 36<i32>:word32], out ecx_4027, out ebx_2927, out ebp_4028, out esi_2931, out edi_4029)
	Mem2951[esp_2940 - 4<i32>:word32] = 0<32>
	Mem2953[esp_2940 - 8<i32>:word32] = esi_2931
	word32 esp_2969 = <invalid>
	word32 ecx_4030
	word32 esi_4031
	Mem2978[esp_2969:word32] = fn0041C910(ebx_2927, es, ds, Mem2953[esp_2940 - 8<i32>:word32], Mem2953[esp_2940 + 28<i32>:word32], out ecx_4030, out ebx_1976, out ebp_1810, out esi_4031, out edi_1561)
	esp_1806 = esp_2969 + 0xC<32>
	eax_1959 = fn0041C680(Mem2978[esp_2969:word32], Mem2978[esp_2969 + 4<i32>:word32], Mem2978[esp_2969 + 8<i32>:word32], out ecx_1812) + 0x1E<32>
l0042664C:
	Mem3001[esp_543:word32] = Mem552[edi_557:word32] + 48<i32>
	word32 esp_3018 = <invalid>
	word32 ebx_3005
	word32 esi_3009
	word32 ecx_4015
	word32 ebp_4016
	word32 edi_4017
	Mem3027[esp_3018:word32] = fn0041C910(ebx_555, es, ds, Mem3001[esp_543:word32], Mem3001[esp_543 + 36<i32>:word32], out ecx_4015, out ebx_3005, out ebp_4016, out esi_3009, out edi_4017)
	Mem3029[esp_3018 - 4<i32>:word32] = 0<32>
	Mem3031[esp_3018 - 8<i32>:word32] = esi_3009
	word32 esp_3047 = <invalid>
	word32 ecx_4018
	word32 esi_4019
	Mem3056[esp_3047:word32] = fn0041C910(ebx_3005, es, ds, Mem3031[esp_3018 - 8<i32>:word32], Mem3031[esp_3018 + 28<i32>:word32], out ecx_4018, out ebx_1976, out ebp_1810, out esi_4019, out edi_1561)
	esp_1806 = esp_3047 + 0xC<32>
	eax_1959 = fn0041C680(Mem3056[esp_3047:word32], Mem3056[esp_3047 + 4<i32>:word32], Mem3056[esp_3047 + 8<i32>:word32], out ecx_1812) + 0x69C<32>
l004265DB:
	Mem3079[esp_480:word32] = Mem489[edi_494:word32] + 48<i32>
	word32 esp_3096 = <invalid>
	word32 ebx_3083
	word32 esi_3087
	word32 ecx_4003
	word32 ebp_4004
	word32 edi_4005
	Mem3105[esp_3096:word32] = fn0041C910(ebx_492, es, ds, Mem3079[esp_480:word32], Mem3079[esp_480 + 36<i32>:word32], out ecx_4003, out ebx_3083, out ebp_4004, out esi_3087, out edi_4005)
	Mem3107[esp_3096 - 4<i32>:word32] = 0<32>
	Mem3109[esp_3096 - 8<i32>:word32] = esi_3087
	word32 esp_3125 = <invalid>
	word32 ecx_4006
	word32 esi_4007
	Mem3134[esp_3125:word32] = fn0041C910(ebx_3083, es, ds, Mem3109[esp_3096 - 8<i32>:word32], Mem3109[esp_3096 + 28<i32>:word32], out ecx_4006, out ebx_1976, out ebp_1810, out esi_4007, out edi_1561)
	esp_1806 = esp_3125 + 0xC<32>
	eax_1959 = fn0041C680(Mem3134[esp_3125:word32], Mem3134[esp_3125 + 4<i32>:word32], Mem3134[esp_3125 + 8<i32>:word32], out ecx_1812) + 0x65C<32>
l0042656A:
	Mem3157[esp_417:word32] = Mem426[edi_431:word32] + 48<i32>
	word32 esp_3174 = <invalid>
	word32 ebx_3161
	word32 esi_3165
	word32 ecx_3991
	word32 ebp_3992
	word32 edi_3993
	Mem3183[esp_3174:word32] = fn0041C910(ebx_429, es, ds, Mem3157[esp_417:word32], Mem3157[esp_417 + 36<i32>:word32], out ecx_3991, out ebx_3161, out ebp_3992, out esi_3165, out edi_3993)
	Mem3185[esp_3174 - 4<i32>:word32] = 0<32>
	Mem3187[esp_3174 - 8<i32>:word32] = esi_3165
	word32 esp_3203 = <invalid>
	word32 ecx_3994
	word32 esi_3995
	Mem3212[esp_3203:word32] = fn0041C910(ebx_3161, es, ds, Mem3187[esp_3174 - 8<i32>:word32], Mem3187[esp_3174 + 28<i32>:word32], out ecx_3994, out ebx_1976, out ebp_1810, out esi_3995, out edi_1561)
	esp_1806 = esp_3203 + 0xC<32>
	eax_1959 = fn0041C680(Mem3212[esp_3203:word32], Mem3212[esp_3203 + 4<i32>:word32], Mem3212[esp_3203 + 8<i32>:word32], out ecx_1812) + 0x65E<32>
l004264FB:
	Mem3235[esp_354:word32] = Mem363[edi_368:word32] + 48<i32>
	word32 esp_3252 = <invalid>
	word32 ebx_3239
	word32 esi_3243
	word32 ecx_3979
	word32 ebp_3980
	word32 edi_3981
	Mem3261[esp_3252:word32] = fn0041C910(ebx_366, es, ds, Mem3235[esp_354:word32], Mem3235[esp_354 + 36<i32>:word32], out ecx_3979, out ebx_3239, out ebp_3980, out esi_3243, out edi_3981)
	Mem3263[esp_3252 - 4<i32>:word32] = 0<32>
	Mem3265[esp_3252 - 8<i32>:word32] = esi_3243
	word32 esp_3281 = <invalid>
	word32 ecx_3982
	word32 esi_3983
	Mem3290[esp_3281:word32] = fn0041C910(ebx_3239, es, ds, Mem3265[esp_3252 - 8<i32>:word32], Mem3265[esp_3252 + 28<i32>:word32], out ecx_3982, out ebx_1976, out ebp_1810, out esi_3983, out edi_1561)
	esp_1806 = esp_3281 + 0xC<32>
	eax_1959 = fn0041C680(Mem3290[esp_3281:word32], Mem3290[esp_3281 + 4<i32>:word32], Mem3290[esp_3281 + 8<i32>:word32], out ecx_1812) + 0x18<32>
l0042648A:
	Mem3313[esp_291:word32] = Mem300[edi_305:word32] + 48<i32>
	word32 esp_3330 = <invalid>
	word32 ebx_3317
	word32 esi_3321
	word32 ecx_3967
	word32 ebp_3968
	word32 edi_3969
	Mem3339[esp_3330:word32] = fn0041C910(ebx_303, es, ds, Mem3313[esp_291:word32], Mem3313[esp_291 + 36<i32>:word32], out ecx_3967, out ebx_3317, out ebp_3968, out esi_3321, out edi_3969)
	Mem3341[esp_3330 - 4<i32>:word32] = 0<32>
	Mem3343[esp_3330 - 8<i32>:word32] = esi_3321
	word32 esp_3359 = <invalid>
	word32 ecx_3970
	word32 esi_3971
	Mem3368[esp_3359:word32] = fn0041C910(ebx_3317, es, ds, Mem3343[esp_3330 - 8<i32>:word32], Mem3343[esp_3330 + 28<i32>:word32], out ecx_3970, out ebx_1976, out ebp_1810, out esi_3971, out edi_1561)
	esp_1806 = esp_3359 + 0xC<32>
	eax_1959 = fn0041C680(Mem3368[esp_3359:word32], Mem3368[esp_3359 + 4<i32>:word32], Mem3368[esp_3359 + 8<i32>:word32], out ecx_1812) + 0x110<32>
l00426419:
	Mem3391[esp_228:word32] = Mem237[edi_242:word32] + 48<i32>
	word32 esp_3408 = <invalid>
	word32 edi_3957
	word32 ebp_3956
	word32 ecx_3955
	word32 ebx_3395
	word32 esi_3399
	Mem3417[esp_3408:word32] = fn0041C910(ebx_240, es, ds, Mem3391[esp_228:word32], Mem3391[esp_228 + 36<i32>:word32], out ecx_3955, out ebx_3395, out ebp_3956, out esi_3399, out edi_3957)
	Mem3419[esp_3408 - 4<i32>:word32] = 0<32>
	Mem3421[esp_3408 - 8<i32>:word32] = esi_3399
	word32 esp_3437 = <invalid>
	word32 ecx_3958
	word32 esi_3959
	Mem3446[esp_3437:word32] = fn0041C910(ebx_3395, es, ds, Mem3421[esp_3408 - 8<i32>:word32], Mem3421[esp_3408 + 28<i32>:word32], out ecx_3958, out ebx_1976, out ebp_1810, out esi_3959, out edi_1561)
	esp_1806 = esp_3437 + 0xC<32>
	eax_1959 = fn0041C680(Mem3446[esp_3437:word32], Mem3446[esp_3437 + 4<i32>:word32], Mem3446[esp_3437 + 8<i32>:word32], out ecx_1812) + 0x210<32>
l004263AA:
	Mem3469[esp_165:word32] = Mem174[edi_179:word32] + 48<i32>
	word32 esp_3486 = <invalid>
	word32 ebp_3944
	word32 ecx_3943
	word32 edi_3945
	word32 ebx_3473
	word32 esi_3477
	Mem3495[esp_3486:word32] = fn0041C910(ebx_177, es, ds, Mem3469[esp_165:word32], Mem3469[esp_165 + 36<i32>:word32], out ecx_3943, out ebx_3473, out ebp_3944, out esi_3477, out edi_3945)
	Mem3497[esp_3486 - 4<i32>:word32] = 0<32>
	Mem3499[esp_3486 - 8<i32>:word32] = esi_3477
	word32 esp_3515 = <invalid>
	word32 esi_3947
	word32 ecx_3946
	Mem3524[esp_3515:word32] = fn0041C910(ebx_3473, es, ds, Mem3499[esp_3486 - 8<i32>:word32], Mem3499[esp_3486 + 28<i32>:word32], out ecx_3946, out ebx_1976, out ebp_1810, out esi_3947, out edi_1561)
	esp_1806 = esp_3515 + 0xC<32>
	eax_1959 = fn0041C680(Mem3524[esp_3515:word32], Mem3524[esp_3515 + 4<i32>:word32], Mem3524[esp_3515 + 8<i32>:word32], out ecx_1812) + 0x50<32>
l00426339:
	Mem3547[esp_97:word32] = Mem106[edi_116:word32] + 48<i32>
	word32 esp_3564 = <invalid>
	word32 edi_3933
	word32 ecx_3931
	word32 ebp_3932
	word32 ebx_3551
	word32 esi_3555
	Mem3573[esp_3564:word32] = fn0041C910(ebx_114, es, ds, Mem3547[esp_97:word32], Mem3547[esp_97 + 36<i32>:word32], out ecx_3931, out ebx_3551, out ebp_3932, out esi_3555, out edi_3933)
	Mem3575[esp_3564 - 4<i32>:word32] = 0<32>
	Mem3577[esp_3564 - 8<i32>:word32] = esi_3555
	word32 esp_3593 = <invalid>
	word32 esi_3935
	word32 ecx_3934
	Mem3602[esp_3593:word32] = fn0041C910(ebx_3551, es, ds, Mem3577[esp_3564 - 8<i32>:word32], Mem3577[esp_3564 + 28<i32>:word32], out ecx_3934, out ebx_1976, out ebp_1810, out esi_3935, out edi_1561)
	esp_1806 = esp_3593 + 0xC<32>
	eax_1959 = fn0041C680(Mem3602[esp_3593:word32], Mem3602[esp_3593 + 4<i32>:word32], Mem3602[esp_3593 + 8<i32>:word32], out ecx_1812) + 0x90<32>
l00426DD7:
	Mem3628[ebx_1976 + 96<i32>:word32] = Mem3624[ebx_1976 + 96<i32>:word32] + eax_1959
l00426DDA:
	word32 esp_3633 = esp_1806 - 4<i32>
	Mem3634[esp_3633:word32] = 1<32>
	Mem3637[ebp_1810 - 4<i32>:word32] = 0x18<32>
	Mem3642[ebp_1810 - 28<i32>:word32] = _Init(Mem3637[esp_3633:(ptr32 (struct "std::locale"))], Mem3637[esp_3633 + 4<i32>:bool])
	Mem3644[ebp_1810 - 4<i32>:word32] = 0x19<32>
	word32 edx_3647 = Mem3644[edi_1561:word32]
	Mem3649[esp_3633:word32] = ebp_1810 - 32<i32>
	Mem3654[esp_3633 - 4<i32>:word32] = ecx_1812
	word32 ebx_3675
	word32 esi_3678
	word32 ebp_3680
	word32 edi_4243
	word32 eax_3674 = fn00427230(ebp_1810 - 40<i32>, edx_3647, es, ds, Mem3654[esp_3633:word32], out ebx_3675, out ebp_3680, out esi_3678, out edi_4243)
	word32 edi_3690 = Mem3654[eax_3674:word32]
	word32 eax_3691 = Mem3654[eax_3674 + 4<i32>:word32]
	Mem3692[ebp_3680 + 8<i32>:word32] = eax_3691
	Mem3693[ebp_3680 - 4<i32>:word32] = 0x1A<32>
	word32 esp_3681 = <invalid>
	word32 esp_3689 = esp_3681 + 8<32>
	branch esi_3678 == 0<32> l00426E33
l00426E1D:
	word32 eax_3697 = Mem3693[esi_3678:word32]
	word32 eax_3710
	call Mem3693[eax_3697 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_3697,ecx:esi_3678
		defs: eax:eax_3710,esp:esp_3709
	branch eax_3710 == 0<32> l00426E30
l00426E28:
	word32 edx_3718 = Mem3693[eax_3710:word32]
	Mem3721[esp_3689 - 4<i32>:word32] = 1<32>
	call Mem3721[edx_3718:word32] (retsize: 4;)
		uses: ecx:eax_3710,edx:edx_3718
		defs: esp:esp_3722
l00426E30:
	eax_3691 = Mem3729[ebp_3680 + 8<i32>:word32]
l00426E33:
	branch edi_3690 == eax_3691 l00426E3A
l00426E37:
	Mem3740[ebx_3675 + 96<i32>:word32] = Mem3738[ebx_3675 + 96<i32>:word32] + 1<32>
l00426E3A:
	Mem3749[fs:0x00000000<p32>:word32] = Mem3744[ebp_3680 - 12<i32>:word32]
	word32 ecx_3753 = Mem3749[esp_3689:word32]
	word32 esi_3757 = Mem3749[esp_3689 + 8<i32>:word32]
	ebpOut = Mem3749[ebp_3680:word32]
	esiOut = esi_3757
	return ecx_3753
fn004262A0_exit:


word32 fn00426E70(selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
//      fn004262A0
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: cs ds es fs gs ss
fn00426E70_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc50
l00426E70:
	word32 edx_356
	word32 esp_348
	word32 ebp_352
	word32 ebx_431
	word32 eax_625
	word32 esp_149
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	Mem42[&tLoc50 + 16<i32>:word32] = 0<32>
	Mem43[&tLoc50 + 20<i32>:word32] = 0xF<32>
	Mem46[&tLoc50:byte] = 0<8>
	word32 ebp_48
	word32 ebx_49
	word32 edi_51
	word32 esi_1034
	word32 ecx_1032
	word32 edx_1033
	fn00402A70(&tLoc50, dwArg04, 0x432E28<32>, 3<32>, Mem46[&tLoc50 + 12<i32>:word32], out ecx_1032, out edx_1033, out ebx_49, out ebp_48, out esi_1034, out edi_51)
	Mem63[ebp_48 - 4<i32>:word32] = 0<32>
	word32 esp_55 = <invalid>
	Mem67[esp_55 - 0x14<32>:word32] = Mem63[edi_51:word32]
	word32 ebp_70
	word32 edx_1035
	fn004028D0(esp_55 - 0x10<32>, edi_51, Mem67[esp_55 - 0x14<32>:word32], out edx_1035, out ebp_70)
	Mem80[ebp_70 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_71 = <invalid>
	word32 esp_161 = esp_71 + 4<32>
	word32 ebx_88
	word32 esi_1038
	word32 ecx_1036
	word32 edx_1037
	word32 ebp_167
	word32 edi_177
	branch SLICE(fn0041C1F0(ebx_49, ebx_49, ebp_70, es, ds, Mem80[esp_71 + 0x2C<32>:word32], out ecx_1036, out edx_1037, out ebx_88, out ebp_167, out esi_1038, out edi_177), byte, 0) == 0<8> l00426F81
l00426EEE:
	word128 xmm0_106 = fn00427210()
	word32 ecx_1046
	word32 edx_1047
	word32 eax_111 = fn0042D911(SEQ(SLICE(xmm0_106, word64, 64), SLICE(xmm0_106, real64, 0) + SLICE(xmm0_106, real64, 0)), out ecx_1046, out edx_1047)
	word32 esi_126 = Mem80[edi_177:word32]
	Mem127[ebp_167 - 24<i32>:word32] = eax_111
	Mem129[ebp_167 - 28<i32>:word32] = esi_126 + 48<i32>
	word32 eax_130 = _errno()
	Mem132[ebp_167 - 36<i32>:word32] = eax_130
	word32 esi_131 = esi_126 + 0x48<32>
	branch Mem132[esi_126 + 0x5C<32>:word32] <u 0x10<32> l00426F20
l00426F1E:
	esi_131 = Mem132[esi_126 + 0x48<32>:word32]
l00426F20:
	Mem137[eax_130:word32] = 0<32>
	Mem142[esp_71:word32] = 0<32>
	Mem144[esp_71 - 4<i32>:word32] = ebp_167 - 20<i32>
	Mem147[esp_71 - 8<i32>:word32] = esi_131
	Mem150[ebp_167 - 32<i32>:word32] = strtol(Mem147[esp_71 - 8<i32>:(ptr32 charconst )], Mem147[esp_71 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem147[esp_71:int32])
	esp_149 = esp_71 + 4<32>
	branch esi_131 != Mem150[ebp_167 - 20<i32>:word32] l00426F49
l00426F3E:
	Mem154[esp_71:word32] = 0x431878<32>
	_Xinvalid_argument(Mem154[esp_71:(ptr32 charconst )])
	esp_149 = esp_71
l00426F49:
	branch Mem156[Mem156[ebp_167 - 36<i32>:word32]:word32] == 0x22<32> l00426F76
l00426F76:
	esp_161 = esp_149 - 4<i32>
	Mem162[esp_161:word32] = 0x431890<32>
	_Xout_of_range(Mem162[esp_161:(ptr32 charconst )])
l00426F81:
	word32 esp_164 = esp_161 - 0x18<32>
	Mem169[ebp_167 - 32<i32>:word32] = esp_164
	Mem171[esp_164 - 4<i32>:word32] = 3<32>
	Mem172[esp_164 + 16<i32>:word32] = 0<32>
	Mem173[esp_164 + 20<i32>:word32] = 0xF<32>
	Mem175[esp_164 - 8<i32>:word32] = 0x432E2C<32>
	Mem176[esp_164:byte] = 0<8>
	word32 ebp_182
	word32 ebx_183
	word32 edi_185
	word32 edx_1040
	word32 esi_1041
	word32 ecx_1039
	fn00402A70(esp_164, edi_177, Mem176[esp_164 - 8<i32>:word32], Mem176[esp_164 - 4<i32>:word32], Mem176[esp_164 + 12<i32>:word32], out ecx_1039, out edx_1040, out ebx_183, out ebp_182, out esi_1041, out edi_185)
	Mem197[ebp_182 - 4<i32>:word32] = 1<32>
	word32 esp_189 = <invalid>
	Mem201[esp_189 - 0x14<32>:word32] = Mem197[edi_185:word32]
	word32 ebp_204
	word32 edx_1042
	fn004028D0(esp_189 - 0x10<32>, edi_185, Mem201[esp_189 - 0x14<32>:word32], out edx_1042, out ebp_204)
	Mem214[ebp_204 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_205 = <invalid>
	word32 ebx_227
	word32 edx_1044
	word32 esi_1045
	word32 ecx_1043
	branch SLICE(fn0041C1F0(ebx_183, ebx_183, ebp_204, es, ds, Mem214[esp_205 + 0x2C<32>:word32], out ecx_1043, out edx_1044, out ebx_227, out ebp_167, out esi_1045, out edi_177), byte, 0) == 0<8> l0042705F
l0042705F:
	word32 esi_472
	word32 eax_494
	Mem246[ebp_167 - 32<i32>:word32] = esp_205 - 0x14<32>
	Mem248[esp_205 - 0x18<32>:word32] = 2<32>
	Mem249[esp_205 - 4<32>:word32] = 0<32>
	Mem250[esp_205:word32] = 0xF<32>
	Mem252[esp_205 - 0x1C<32>:word32] = 0x432E30<32>
	Mem253[esp_205 - 0x14<32>:byte] = 0<8>
	word32 esi_1050
	word32 ebp_255
	word32 ebx_256
	word32 edi_258
	word32 ecx_1048
	word32 edx_1049
	fn00402A70(esp_205 - 0x14<32>, edi_177, Mem253[esp_205 - 0x1C<32>:word32], Mem253[esp_205 - 0x18<32>:word32], Mem253[esp_205 - 8<32>:word32], out ecx_1048, out edx_1049, out ebx_256, out ebp_255, out esi_1050, out edi_258)
	Mem270[ebp_255 - 4<i32>:word32] = 2<32>
	word32 esp_262 = <invalid>
	Mem274[esp_262 - 0x14<32>:word32] = Mem270[edi_258:word32]
	word32 edx_1051
	word32 ebp_277
	fn004028D0(esp_262 - 0x10<32>, edi_258, Mem274[esp_262 - 0x14<32>:word32], out edx_1051, out ebp_277)
	Mem287[ebp_277 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_278 = <invalid>
	word32 edx_1053
	word32 ecx_1052
	word32 ebp_289
	word32 ebx_290
	word32 edi_292
	word32 esi_1054
	branch SLICE(fn0041C1F0(ebx_256, ebx_256, ebp_277, es, ds, Mem287[esp_278 + 0x2C<32>:word32], out ecx_1052, out edx_1053, out ebx_290, out ebp_289, out esi_1054, out edi_292), byte, 0) == 0<8> l004270F1
l004270F1:
	Mem309[ebp_289 - 32<i32>:word32] = esp_278 - 0x14<32>
	Mem311[esp_278 - 0x18<32>:word32] = 2<32>
	Mem312[esp_278 - 4<32>:word32] = 0<32>
	Mem313[esp_278:word32] = 0xF<32>
	Mem315[esp_278 - 0x1C<32>:word32] = 0x432E34<32>
	Mem316[esp_278 - 0x14<32>:byte] = 0<8>
	word32 ebp_318
	word32 ebx_319
	word32 edi_321
	word32 ecx_1057
	word32 esi_1059
	word32 edx_1058
	fn00402A70(esp_278 - 0x14<32>, edi_292, Mem316[esp_278 - 0x1C<32>:word32], Mem316[esp_278 - 0x18<32>:word32], Mem316[esp_278 - 8<32>:word32], out ecx_1057, out edx_1058, out ebx_319, out ebp_318, out esi_1059, out edi_321)
	Mem333[ebp_318 - 4<i32>:word32] = 3<32>
	word32 esp_325 = <invalid>
	Mem337[esp_325 - 0x14<32>:word32] = Mem333[edi_321:word32]
	word32 ebp_340
	word32 edx_1060
	fn004028D0(esp_325 - 0x10<32>, edi_321, Mem337[esp_325 - 0x14<32>:word32], out edx_1060, out ebp_340)
	Mem350[ebp_340 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_341 = <invalid>
	esp_348 = esp_341 + 4<32>
	word32 ebx_353
	word32 edi_355
	word32 esi_1062
	word32 ecx_1061
	branch SLICE(fn0041C1F0(ebx_319, ebx_319, ebp_340, es, ds, Mem350[esp_341 + 0x2C<32>:word32], out ecx_1061, out edx_356, out ebx_353, out ebp_352, out esi_1062, out edi_355), byte, 0) == 0<8> l00427181
l0042713B:
	Mem372[esp_341:word32] = Mem350[edi_355:word32] + 72<i32>
	word32 esp_388 = <invalid>
	word32 ebx_375
	word32 esi_379
	word32 ecx_1080
	word32 ebp_1081
	word32 edi_1082
	Mem397[esp_388:word32] = fn0041C910(ebx_353, es, ds, Mem372[esp_341:word32], Mem372[esp_341 + 36<i32>:word32], out ecx_1080, out ebx_375, out ebp_1081, out esi_379, out edi_1082)
	Mem400[esp_388 - 4<i32>:word32] = esi_379 + 48<i32>
	word32 esp_416 = <invalid>
	word32 ebx_403
	word32 esi_407
	word32 ecx_1083
	word32 ebp_1084
	word32 edi_1085
	Mem425[esp_416:word32] = fn0041C910(ebx_375, es, ds, Mem400[esp_388 - 4<i32>:word32], Mem400[esp_388 + 32<i32>:word32], out ecx_1083, out ebx_403, out ebp_1084, out esi_407, out edi_1085)
	Mem428[esp_416 - 4<i32>:word32] = esi_407 + 24<i32>
	word32 esp_444 = <invalid>
	word32 ecx_1086
	word32 esi_1087
	word32 edi_1088
	Mem453[esp_444:word32] = fn0041C910(ebx_403, es, ds, Mem428[esp_416 - 4<i32>:word32], Mem428[esp_416 + 32<i32>:word32], out ecx_1086, out ebx_431, out ebp_352, out esi_1087, out edi_1088)
	word32 ecx_1089
	esi_472 = fn0041C680(Mem453[esp_444:word32], Mem453[esp_444 + 4<i32>:word32], Mem453[esp_444 + 8<i32>:word32], out ecx_1089)
	word128 xmm0_474 = fn00427210()
	esp_348 = esp_444 + 0xC<32>
	word32 ecx_1090
	eax_494 = fn0042D911(SEQ(SLICE(xmm0_474, word64, 64), SLICE(xmm0_474, real64, 0) * Mem453[0x00432EE0<p32>:real64]), out ecx_1090, out edx_356) + 8<32>
l004270A9:
	Mem499[esp_278:word32] = Mem287[edi_292:word32] + 72<i32>
	word32 esp_515 = <invalid>
	word32 ebx_502
	word32 esi_506
	word32 ecx_1063
	word32 ebp_1064
	word32 edi_1065
	Mem524[esp_515:word32] = fn0041C910(ebx_290, es, ds, Mem499[esp_278:word32], Mem499[esp_278 + 36<i32>:word32], out ecx_1063, out ebx_502, out ebp_1064, out esi_506, out edi_1065)
	Mem527[esp_515 - 4<i32>:word32] = esi_506 + 48<i32>
	word32 esp_543 = <invalid>
	word32 ebx_530
	word32 esi_534
	word32 ecx_1066
	word32 ebp_1067
	word32 edi_1068
	Mem552[esp_543:word32] = fn0041C910(ebx_502, es, ds, Mem527[esp_515 - 4<i32>:word32], Mem527[esp_515 + 32<i32>:word32], out ecx_1066, out ebx_530, out ebp_1067, out esi_534, out edi_1068)
	Mem555[esp_543 - 4<i32>:word32] = esi_534 + 24<i32>
	word32 esp_571 = <invalid>
	word32 ecx_1069
	word32 esi_1070
	word32 edi_1071
	Mem580[esp_571:word32] = fn0041C910(ebx_530, es, ds, Mem555[esp_543 - 4<i32>:word32], Mem555[esp_543 + 32<i32>:word32], out ecx_1069, out ebx_431, out ebp_352, out esi_1070, out edi_1071)
	word32 ecx_1072
	esi_472 = fn0041C680(Mem580[esp_571:word32], Mem580[esp_571 + 4<i32>:word32], Mem580[esp_571 + 8<i32>:word32], out ecx_1072)
	word128 xmm0_601 = fn00427210()
	esp_348 = esp_571 + 0xC<32>
	word32 ecx_1073
	eax_494 = fn0042D911(SEQ(SLICE(xmm0_601, word64, 64), SLICE(xmm0_601, real64, 0) * Mem580[0x00432EE0<p32>:real64]), out ecx_1073, out edx_356) + 0x88<32>
l0042717C:
	eax_625 = eax_494 + esi_472
l00426FCF:
	word128 xmm0_629 = fn00427210()
	word32 ecx_1055
	word32 edx_1056
	word32 eax_634 = fn0042D911(SEQ(SLICE(xmm0_629, word64, 64), SLICE(xmm0_629, real64, 0) * Mem214[0x00432E68<p32>:real64]), out ecx_1055, out edx_1056)
	word32 esi_649 = Mem214[edi_177:word32]
	Mem650[ebp_167 - 20<i32>:word32] = eax_634
	Mem652[ebp_167 - 28<i32>:word32] = esi_649 + 48<i32>
	word32 eax_653 = _errno()
	Mem655[ebp_167 - 32<i32>:word32] = eax_653
	word32 esi_654 = esi_649 + 0x48<32>
	branch Mem655[esi_649 + 0x5C<32>:word32] <u 0x10<32> l00427005
l00427003:
	esi_654 = Mem655[esi_649 + 0x48<32>:word32]
l00427005:
	Mem660[eax_653:word32] = 0<32>
	Mem665[esp_205:word32] = 0<32>
	Mem667[esp_205 - 4<i32>:word32] = ebp_167 - 24<i32>
	Mem670[esp_205 - 8<i32>:word32] = esi_654
	Mem673[ebp_167 - 36<i32>:word32] = strtol(Mem670[esp_205 - 8<i32>:(ptr32 charconst )], Mem670[esp_205 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem670[esp_205:int32])
	esp_149 = esp_205 + 4<32>
	branch esi_654 != Mem673[ebp_167 - 24<i32>:word32] l0042702E
l00427023:
	Mem677[esp_205:word32] = 0x431878<32>
	_Xinvalid_argument(Mem677[esp_205:(ptr32 charconst )])
	esp_149 = esp_205
l0042702E:
	branch Mem679[Mem679[ebp_167 - 32<i32>:word32]:word32] == 0x22<32> l00426F76
l0042703A:
	word32 esp_688 = esp_149 - 4<i32>
	Mem689[esp_688:word32] = Mem679[ebp_167 - 28<i32>:word32]
	word32 esp_721 = <invalid>
	word32 ebp_707
	word32 ebx_708
	word32 esi_712
	word32 ecx_1074
	word32 edi_1075
	Mem730[esp_721:word32] = fn0041C910(ebx_227, es, ds, Mem689[esp_688:word32], Mem689[esp_688 + 36<i32>:word32], out ecx_1074, out ebx_708, out ebp_707, out esi_712, out edi_1075)
	Mem733[esp_721 - 4<i32>:word32] = Mem730[ebp_707 - 36<i32>:word32]
	Mem735[esp_721 - 8<i32>:word32] = esi_712
	word32 esp_751 = <invalid>
	word32 ecx_1076
	word32 esi_1077
	word32 edi_1078
	Mem760[esp_751:word32] = fn0041C910(ebx_708, es, ds, Mem735[esp_721 - 8<i32>:word32], Mem735[esp_721 + 28<i32>:word32], out ecx_1076, out ebx_431, out ebp_352, out esi_1077, out edi_1078)
	esp_348 = esp_751 + 0xC<32>
	eax_625 = fn0041C740(Mem760[esp_751:word32], Mem760[esp_751 + 4<i32>:word16], Mem760[esp_751 + 8<i32>:word32], out edx_356) + Mem760[ebp_352 - 20<i32>:word32]
l00426F51:
	word32 esp_785 = esp_149 - 4<i32>
	Mem786[esp_785:word32] = Mem156[ebp_167 - 28<i32>:word32]
	word32 esp_818 = <invalid>
	word32 ebp_804
	word32 ebx_805
	word32 esi_809
	word32 ecx_1091
	word32 edi_1092
	Mem827[esp_818:word32] = fn0041C910(ebx_88, es, ds, Mem786[esp_785:word32], Mem786[esp_785 + 36<i32>:word32], out ecx_1091, out ebx_805, out ebp_804, out esi_809, out edi_1092)
	Mem830[esp_818 - 4<i32>:word32] = Mem827[ebp_804 - 32<i32>:word32]
	Mem832[esp_818 - 8<i32>:word32] = esi_809
	word32 esp_848 = <invalid>
	word32 ecx_1093
	word32 esi_1094
	word32 edi_1095
	Mem857[esp_848:word32] = fn0041C910(ebx_805, es, ds, Mem832[esp_818 - 8<i32>:word32], Mem832[esp_818 + 28<i32>:word32], out ecx_1093, out ebx_431, out ebp_352, out esi_1094, out edi_1095)
	esp_348 = esp_848 + 0xC<32>
	eax_625 = fn0041C740(Mem857[esp_848:word32], Mem857[esp_848 + 4<i32>:word16], Mem857[esp_848 + 8<i32>:word32], out edx_356) + Mem857[ebp_352 - 24<i32>:word32]
l0042717E:
	Mem880[ebx_431 + 96<i32>:word32] = eax_625
l00427181:
	Mem889[fs:0x00000000<p32>:word32] = Mem884[ebp_352 - 12<i32>:word32]
	word32 esp_894 = esp_348 + 4<i32>
	word32 esi_897 = Mem889[esp_894 + 4<i32>:word32]
	word32 ecx_924
	word32 eax_1079
	fn00427500(Mem889[ebp_352 - 16<i32>:word32] ^ ebp_352, edx_356, Mem889[esp_894 + 8<i32>:word32], ebp_352, esi_897, Mem889[esp_894:word32], es, ds, Mem889[esp_894 + 8<i32>:word32], out eax_1079, out ecx_924)
	ebpOut = Mem889[ebp_352:word32]
	esiOut = esi_897
	return ecx_924
fn00426E70_exit:


word128 fn00427210()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AE90
//      fn0041C5C0
//      fn0041C910
//      fn0041CC60
//      fn0041D540
//      fn0041DAF0
//      fn0041ED20
//      fn0041EE50
//      fn004204C0
//      fn00421620
//      fn004237A0
//      fn00424170
//      fn00425A20
//      fn004262A0
//      fn00426E70
// MayUse: 
// LiveOut: xmm0
// Trashed: edx Top xmm0 xmm1
// Preserved: ebp esp
fn00427210_entry:
	ptr32 fp
l00427210:
	__align_stack<word32>(fp - 4<i32>)
	word128 xmm0_8 = SEQ(0<64>, Mem6[0x00432E60<p32>:real64])
	libm_sse2_pow_precise()
	return xmm0_8
fn00427210_exit:


word32 fn00427230(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg08, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004237A0
//      fn00425A20
//      fn004262A0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0008:[0..31]
// LiveOut: eax ebp ebx edi esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00427230_entry:
	ptr32 fp
	selector fs
l00427230:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word32 esi_41 = Mem40[dwArg08 + 4<i32>:word32]
	word32 eax_43 = Mem40[esi_41:word32]
	word32 edx_46
	call Mem40[eax_43 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_43,ecx:esi_41,edx:edx,Stack +0004:eax_27,Stack +002C:ecx,Stack +0030:edx,Stack +0038:eax_13,Stack +003C:0x430108<32>,Stack +0040:0<32>,Stack +0050:dwArg08
		defs: edx:edx_46
	word32 eax_52 = Mem50[esi_41:word32]
	word32 edx_55
	call Mem50[eax_52 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_52,ecx:esi_41,edx:edx_46
		defs: edx:edx_55
	word32 eax_64 = Mem63[esi_41:word32]
	word32 edx_67
	call Mem63[eax_64 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_64,ecx:esi_41,edx:edx_55
		defs: edx:edx_67
	word32 eax_73 = Mem71[esi_41:word32]
	word32 eax_75
	word32 edx_104
	word32 esp_105
	call Mem71[eax_73 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_73,ecx:esi_41,edx:edx_67
		defs: eax:eax_75,edx:edx_76,esp:esp_74
	word32 ebp_167 = fp - 4<i32>
	word32 ebx_250 = ecx
	branch eax_75 == 0<32> l004272BB
l004272B5:
	word32 eax_84 = Mem71[eax_75:word32]
	Mem86[esp_105 - 4<i32>:word32] = 1<32>
	call Mem86[eax_84:word32] (retsize: 4;)
		uses: eax:eax_84,ecx:eax_75,edx:edx_76
		defs: edx:edx_89,esp:esp_87
l004272BB:
	branch esi_41 == 0<32> l004272D9
l004272C6:
	word32 eax_99 = Mem94[esi_41:word32]
	word32 eax_108
	word32 edx_109
	call Mem94[eax_99 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_99,ecx:esi_41,edx:edx_104
		defs: eax:eax_108,edx:edx_109,esp:esp_107
	branch eax_108 == 0<32> l004272D9
l004272D3:
	word32 eax_117 = Mem94[eax_108:word32]
	Mem119[esp_105 - 4<i32>:word32] = 1<32>
	call Mem119[eax_117:word32] (retsize: 4;)
		uses: eax:eax_117,ecx:eax_108,edx:edx_109
		defs: esp:esp_120
l004272D9:
	word32 eax_128 = edx
	word32 edx_129 = edx
	word32 esi_130 = Mem127[edx + 20<i32>:word32]
	branch esi_130 <u 0x10<32> l004272EF
l004272ED:
	edx_129 = Mem127[edx:word32]
l004272EF:
	word32 edi_138 = Mem127[edx + 16<i32>:word32] + edx_129
	branch esi_130 <u 0x10<32> l004272FE
l004272F9:
	eax_128 = Mem127[edx:word32]
l004272FE:
	branch eax_128 == edi_138 l00427377
l00427302:
	word32 ecx_151 = 0x00432BB1<p32>
	edx_129 = 0x00432BB0<p32>
l00427308:
	branch edx_129 == ecx_151 l00427374
l0042730C:
	word32 esi_158 = eax_128
	word32 ebx_159 = edx_129
	branch eax_128 == edi_138 l00427368
l00427314:
	branch ebx_159 == ecx_151 l004273AF
l004273AF:
	eax_128 = Mem168[ebp_167 - 20<i32>:word32]
l0042731C:
	Mem173[ebp_167 - 44<i32>:byte] = Mem168[esi_158:byte]
	Mem177[esp_105 - 4<i32>:word32] = Mem173[ebp_167 - 44<i32>:word32]
	word32 eax_185
	word32 ebp_186
	word32 ebx_187
	word32 edx_191
	word32 esi_544
	word32 edi_545
	fn00402DD0(ebp_167 - 32<i32>, edx_129, es, ds, out eax_185, out edx_191, out ebx_187, out ebp_186, out esi_544, out edi_545)
	word32 esp_193 = <invalid>
	Mem203[ebp_186 - 13<i32>:byte] = toupper(eax_185, Mem177[esp_193:charconst ])
	Mem206[ebp_186 - 48<i32>:byte] = Mem203[ebx_187:byte]
	Mem209[esp_193:word32] = Mem206[ebp_186 - 48<i32>:word32]
	word32 eax_210
	fn00402DD0(ebp_186 - 32<i32>, edx_191, es, ds, out eax_210, out edx_129, out ebx_159, out ebp_167, out esi_158, out edi_138)
	word32 esp_218 = <invalid>
	esp_105 = esp_218 + 4<32>
	branch Mem209[ebp_167 - 13<i32>:byte] != toupper(eax_210, Mem209[esp_218:charconst ]) l0042735F
l00427354:
	esi_158 = esi_158 + 1<32>
	ebx_159 = ebx_159 + 1<32>
	branch esi_158 + 1<32> == edi_138 l0042735F
l0042735F:
	ecx_151 = Mem209[ebp_167 - 36<i32>:word32]
	edx_129 = Mem209[ebp_167 - 40<i32>:word32]
	eax_128 = Mem209[ebp_167 - 20<i32>:word32]
l00427368:
	branch ebx_159 == ecx_151 l004273B2
l004273B2:
	ebx_250 = Mem247[ebp_167 - 24<i32>:word32]
	Mem253[ebx_250:word32] = eax_128
	Mem257[ebx_250 + 4<i32>:word32] = esi_158
l0042736C:
	eax_128 = eax_128 + 1<32>
	Mem259[ebp_167 - 20<i32>:word32] = eax_128
	branch eax_128 != edi_138 l00427308
l00427374:
	ebx_250 = Mem265[ebp_167 - 24<i32>:word32]
l00427377:
	Mem273[ebx_250 + 4<i32>:word32] = edi_138
	Mem274[ebx_250:word32] = edi_138
l0042737C:
	Mem277[ebp_167 - 4<i32>:word32] = 6<32>
	word32 ecx_278 = Mem277[ebp_167 - 28<i32>:word32]
	branch ecx_278 == 0<32> l0042739B
l0042738A:
	word32 eax_282 = Mem277[ecx_278:word32]
	word32 eax_330
	call Mem277[eax_282 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_282,ecx:ecx_278,edx:edx_302
		defs: eax:eax_330,esp:esp_329
	branch eax_330 == 0<32> l0042739B
l00427393:
	word32 edx_338 = Mem277[eax_330:word32]
	Mem341[esp_105 - 4<i32>:word32] = 1<32>
	call Mem341[edx_338:word32] (retsize: 4;)
		uses: ecx:eax_330,edx:edx_338
		defs: esp:esp_342
l0042739B:
	Mem354[fs:0x00000000<p32>:word32] = Mem351[ebp_167 - 12<i32>:word32]
	word32 esp_357 = esp_105 + 4<i32>
	word32 edi_358 = Mem354[esp_357:word32]
	word32 esi_360 = Mem354[esp_357 + 4<i32>:word32]
	word32 ebp_364 = Mem354[ebp_167:word32]
	ebxOut = Mem354[esp_357 + 8<i32>:word32]
	ebpOut = ebp_364
	esiOut = esi_360
	ediOut = edi_358
	return ebx_250
fn00427230_exit:
l0042735A:
	ecx_151 = Mem209[ebp_167 - 36<i32>:word32]


void fn00427410(word32 ecx, word32 edi, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] edi:[0..31] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: ebp ebx edi esi esp
fn00427410_entry:
	word32 dwLoc14
l00427410:
	word32 ecx_6 = ecx - Mem0[ecx - 4<i32>:word32]
l004271A0:
	Mem26[Mem20[Mem20[ecx_6 - 96<i32>:word32] + 4<i32>:word32] - 96<i32> + ecx_6:word32] = 0x00432E44<p32>
	word32 edx_28 = Mem26[Mem26[ecx_6 - 96<i32>:word32] + 4<i32>:word32]
	Mem30[edx_28 - 100<i32> + ecx_6:word32] = edx_28 - 96<i32>
	Mem31[ecx_6 - 80<i32>:word32] = 0x00432440<p32>
	fn004110B0(ecx_6 - 80<i32>, dwLoc14, edi)
	~basic_streambuf(ecx_6 - 80<i32>)
	~basic_istream(ecx_6 - 72<i32>)
	~basic_ios(ecx_6)
	branch (bArg04 & 1<8>) == 0<8> l00427202
l004271F4:
	fn0042763F(ecx_6 - 96<i32>)
l00427202:
	return
fn00427410_exit:


word32 fn0042749E(word32 ecx, word32 ebx, word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402DD0
//      fn00412ED0
//      fn0042B030
// MayUse:  ebx:[0..31] ecx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ecx esp Top
// Preserved:
fn0042749E_entry:
	word32 dwLoc10
l0042749E:
	word32 ebp_18
	word32 ecx_58
	word32 eax_17 = fn00427511(ebx, esi, edi, dwLoc10, 8<32>, ecx, out ecx_58, out ebp_18)
	Mem24[ebp_18 - 4<i32>:word32] = eax_17
	branch eax_17 == 0<32> l004274C1
l004274C1:
	eax_17 = 0<32>
l004274B1:
	Mem34[eax_17:word32] = Mem24[0x0043AD14<p32>:word32]
	Mem36[eax_17 + 4<i32>:word32] = Mem34[ebp_18 + 8<i32>:word32]
l004274C3:
	Mem38[0x0043AD14<p32>:word32] = eax_17
	return Mem38[ebp_18:word32]
fn0042749E_exit:


void fn004274CA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004274CA_exit:
fn004274CA_entry:


void fn004274D0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004274D0_exit:
fn004274D0_entry:


void fn004274D6()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004274D6_exit:
fn004274D6_entry:


void fn004274DC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004274DC_exit:
fn004274DC_entry:


void fn004274E2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004274E2_exit:
fn004274E2_entry:


void fn004274E8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004274E8_exit:
fn004274E8_entry:


void fn004274EE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004274EE_exit:
fn004274EE_entry:


void fn004274F4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004274F4_exit:
fn004274F4_entry:


void fn004274FA()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn004274FA_exit:
fn004274FA_entry:


bool fn00427500(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & eaxOut, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402DD0
//      fn00403C30
//      fn00403CA0
//      fn00403D50
//      fn00404080
//      fn00404FB0
//      fn00407D10
//      fn00408570
//      fn00409E70
//      fn0040AA30
//      fn0040BE00
//      fn0040E440
//      fn0040EB40
//      fn0040FC30
//      fn0040FD20
//      fn0040FE00
//      fn00410120
//      fn00410450
//      fn00410E30
//      fn00410F60
//      fn00412170
//      fn00412310
//      fn00412ED0
//      fn00413980
//      fn00413B30
//      fn00414E40
//      fn00414FE0
//      fn004154B0
//      fn004169B0
//      fn00416DA0
//      fn004170C0
//      fn004175B0
//      fn00417E50
//      fn00417F50
//      fn00418780
//      fn00419550
//      fn00419910
//      fn0041A150
//      fn0041A350
//      fn0041A760
//      fn0041AEF0
//      fn0041C3F6
//      fn0041C910
//      fn0041CC60
//      fn0041DAF0
//      fn004204C0
//      fn00426E70
//      fn00428BE0
//      fn00428DE0
//      fn0042A390
//      fn0042A450
//      fn0042A600
//      fn0042A710
//      fn0042AB60
//      fn0042B210
//      fn0042B630
//      fn0042B830
//      fn0042C020
//      fn0042CD80
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut: P eax ecx
// Trashed: SCZDOP eax ecx Top
// Preserved: ebp esp
fn00427500_entry:
	ptr32 fp
	selector ss
	selector cs
	selector fs
	selector gs
	byte SCZDOP
	word32 eax
	bool P_117 = SLICE(SCZDOP, bool, 5)
l00427500:
	branch ecx != Mem0[0x0043A008<p32>:word32] l0042750B
l0042750B:
l00427BE0:
	word32 eax_15 = IsProcessorFeaturePresent(0x17<32>)
	byte SCZDOP_44 = cond(eax_15) | SCZDOP
	bool P_118 = SLICE(SCZDOP_44, bool, 5)
	branch eax_15 == 0<32> l00427BF9
l00427BF9:
	Mem20[0x0043AE40<p32>:word32] = eax_15
	Mem21[0x0043AE3C<p32>:word32] = ecx
	Mem23[0x0043AE38<p32>:word32] = edx
	Mem25[0x0043AE34<p32>:word32] = ebx
	Mem27[0x0043AE30<p32>:word32] = esi
	Mem29[0x0043AE2C<p32>:word32] = edi
	Mem31[0x0043AE58<p32>:word16] = ss
	Mem33[0x0043AE4C<p32>:word16] = cs
	Mem35[0x0043AE28<p32>:word16] = ds
	Mem37[0x0043AE24<p32>:word16] = es
	Mem39[0x0043AE20<p32>:word16] = fs
	Mem41[0x0043AE1C<p32>:word16] = gs
	Mem46[0x0043AE50<p32>:word32] = SCZDOP_44
	Mem49[0x0043AE44<p32>:word32] = ebp
	Mem51[0x0043AE48<p32>:word32] = dwArg00
	Mem53[0x0043AE54<p32>:word32] = fp + 4<i32>
	Mem55[0x0043AD90<p32>:word32] = 0x10001<32>
	Mem57[0x0043AD4C<p32>:word32] = Mem55[0x0043AE48<p32>:word32]
	Mem58[0x0043AD40<p32>:word32] = 0xC0000409<32>
	Mem59[0x0043AD44<p32>:word32] = 1<32>
	Mem60[0x0043AD50<p32>:word32] = 1<32>
	Mem66[0x43AD54<32>:word32] = 2<32>
	word32 ecx_80 = Mem75[0x0043A004<p32>:word32]
	eaxOut = fn00427BB8(0x431378<32>)
	ecxOut = ecx_80
	return P_118
l00427BF4:
	__fastfail(2<32>)
l00427509:
	eaxOut = eax
	ecxOut = ecx
	return P_117
fn00427500_exit:


word32 fn00427511(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & ecxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401AC0
//      fn00401EC0
//      fn004028D0
//      fn00402A70
//      fn00402D40
//      fn00402D70
//      fn00402DA0
//      fn004032C0
//      fn00404FB0
//      fn004079F0
//      fn00407A70
//      fn00407AE0
//      fn00407B80
//      fn00407BE0
//      fn00409E70
//      fn0040AA30
//      fn0040BE00
//      fn0040DD30
//      fn0040EE50
//      fn0040F2A0
//      fn0040F380
//      fn0040F520
//      fn0040F5C0
//      fn00410900
//      fn00411200
//      fn004113A0
//      fn004113B0
//      fn00411B30
//      fn00412310
//      fn00412ED0
//      fn00414760
//      fn00414E40
//      fn00416170
//      fn00416530
//      fn00416DA0
//      fn004170C0
//      fn004173F0
//      fn00418780
//      fn004194C0
//      fn00419630
//      fn004198D3
//      fn004198FB
//      fn00419910
//      fn0042749E
//      fn00428A30
//      fn004297C0
//      fn00429A30
//      fn00429B30
//      fn0042B3A0
//      fn0042D289
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax ebp ecx
// Trashed: SCZO eax ebp ecx Top
// Preserved: esp
fn00427511_entry:
	ptr32 fp
	word32 ebp
	struct <anonymous> tLoc14
l00427511:
	word32 ebp_33 = fp - 4<i32>
l00427523:
	word32 eax_14 = malloc(dwArg04)
	branch eax_14 == 0<32> l00427516
l00427516:
	word32 esp_25 = fp - 4<i32>
	branch _callnewh(dwArg04) == 0<32> l00427532
l00427532:
	branch dwArg04 == 0xFFFFFFFF<32> l00427D9A
l0042753C:
l00427D7D:
	fn00427CF4(&tLoc14)
	CxxThrowException(&tLoc14, 0x43702C<32>)
	int3()
	ebp_33 = fp - 8<i32>
l00427D9A:
	word32 esp_54 = esp_25 - 4<i32>
	Mem56[esp_54:word32] = ebp_33
	fn00427D27(esp_54 - 12<i32>)
	CxxThrowException(esp_54 - 12<i32>, 0x437064<32>)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l00427DBF_thunk_fn00427DC0:
	word32 ebp_90
	word32 eax_89 = fn00427DC0(ebx, esi, edi, dwArg00, dwArg08, out ebp_90)
	ecxOut = ecx_74
	ebpOut = ebp_90
	return eax_89
l00427530:
	ecxOut = dwArg04
	ebpOut = ebp
	return eax_14
fn00427511_exit:


word32 fn00427541(word32 ebx, word32 esi, word32 edi, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403610
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi esp
// Trashed: SCZO eax ebp ebx ecx edi esi esp Top
// Preserved:
fn00427541_entry:
	ptr32 fp
	selector fs
	word32 dwLoc0C
l00427541:
	word32 ebp_13
	fn00427DC0(ebx, esi, edi, dwLoc0C, 0xC<32>, out ebp_13)
	Mem18[ebp_13 - 25<i32>:byte] = 0<8>
	word32 ebx_19 = Mem18[ebp_13 + 12<i32>:word32]
	word32 edi_21 = Mem18[ebp_13 + 16<i32>:word32]
	word32 esi_24 = Mem18[ebp_13 + 8<i32>:word32] + ebx_19 *s edi_21
	Mem25[ebp_13 + 8<i32>:word32] = esi_24
	Mem27[ebp_13 - 4<i32>:word32] = 0<32>
	word32 esp_58 = fp - 8<i32>
l00427568:
	edi_21 = edi_21 - 1<32>
	Mem34[ebp_13 + 16<i32>:word32] = edi_21
	branch edi_21 == 0<32> l00427587
l00427587:
	Mem39[ebp_13 - 25<i32>:byte] = 1<8>
	Mem40[ebp_13 - 4<i32>:word32] = 0xFFFFFFFE<32>
	word32 ebp_47 = fn004275B6(1<8>, ebx_19, esi_24, edi_21)
	Mem57[fs:0x00000000<p32>:word32] = Mem40[ebp_47 - 16<i32>:word32]
	word32 esp_60 = esp_58 + 4<i32>
	word32 edi_61 = Mem57[esp_60:word32]
	word32 ebx_65 = Mem57[esp_60 + 8<i32>:word32]
	ebpOut = Mem57[ebp_47:word32]
	ediOut = edi_61
	return ebx_65
fn00427541_exit:
l00427572:
	esi_24 = esi_24 - ebx_19
	Mem71[ebp_13 + 8<i32>:word32] = esi_24
	fn004029A0()
	call Mem71[ebp_13 + 20<i32>:word32] (retsize: 4;)
		uses: ecx:esi_69
		defs: esp:esp_75


word32 fn004275B6(byte al, word32 ebx, word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427541
// MayUse:  eax:[0..7] ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi esi Top
// Preserved: esp
fn004275B6_entry:
	word32 eax
	word32 ebp
	byte al = SLICE(eax, byte, 0)
l004275B6:
	branch al != 0<8> l004275C5
l004275BA:
	ebp = fn004275C6(ebx, esi, edi)
l004275C5:
	return ebp
fn004275B6_exit:


word32 fn004275C6(word32 ebx, word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004275B6
//      fn004276D6
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi esi esp Top
// Preserved:
fn004275C6_entry:
	selector fs
	word32 dwLoc0C
l004275C6:
	word32 ebp_13
	fn00427DC0(ebx, esi, edi, dwLoc0C, 0x18<32>, out ebp_13)
	Mem21[ebp_13 - 4<i32>:word32] = 0<32>
	word32 esi_18 = 0<32>
	word32 edi_22 = Mem21[ebp_13 + 8<i32>:word32]
l004275DA:
	Mem25[ebp_13 - 28<i32>:word32] = esi_18
	branch esi_18 == Mem25[ebp_13 + 16<i32>:word32] l00427620
l00427620:
	Mem28[ebp_13 - 4<i32>:word32] = 0xFFFFFFFE<32>
	Mem31[fs:0x00000000<p32>:word32] = Mem28[ebp_13 - 16<i32>:word32]
	return Mem31[ebp_13:word32]
fn004275C6_exit:
l004275E2:
	edi_22 = edi_22 - Mem25[ebp_13 + 12<i32>:word32]
	Mem46[ebp_13 + 8<i32>:word32] = edi_22
	fn004029A0()
	call Mem46[ebp_13 + 20<i32>:word32] (retsize: 4;)
		uses: ecx:edi_44
	esi_18 = esi_18 + 1<32>


word32 fn0042763F(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004013A0
//      fn004014C0
//      fn00401AC0
//      fn004021A0
//      fn00402260
//      fn004025C0
//      fn00402660
//      fn00402750
//      fn00402800
//      fn00402A70
//      fn00403460
//      fn00403610
//      fn00403730
//      fn00403D20
//      fn00403E40
//      fn00403EE0
//      fn00403FC0
//      fn00404080
//      fn00404C60
//      fn00407C60
//      fn00408570
//      fn00409E70
//      fn0040A880
//      fn0040AA30
//      fn0040BE00
//      fn0040DFF0
//      fn0040E130
//      fn0040EA60
//      fn0040EB40
//      fn0040EE50
//      fn0040F380
//      fn0040F5C0
//      fn0040F8C0
//      fn00410120
//      fn00410900
//      fn00410AB0
//      fn00410B40
//      fn00410C50
//      fn004110B0
//      fn004111B0
//      fn00411200
//      fn00411B30
//      fn00411D30
//      fn00412310
//      fn00412ED0
//      fn00414760
//      fn004148B0
//      fn00414E40
//      fn00416170
//      fn00416530
//      fn00416DA0
//      fn004170C0
//      fn004173F0
//      fn00417F50
//      fn00418780
//      fn00419770
//      fn00419878
//      fn00419880
//      fn00419888
//      fn004198AB
//      fn004198C3
//      fn004198E3
//      fn00419D40
//      fn0041A150
//      fn0041A350
//      fn0041A760
//      fn0041AEF0
//      fn0041C25C
//      fn0041C910
//      fn0041CC60
//      fn00427410
//      fn0042764D
//      fn00427D50
//      fn004286A0
//      fn00429FC0
//      fn0042A230
//      fn0042C2E0
// MayUse:  Stack +0004:[0..31]
// LiveOut: ecx
// Trashed: ecx Top
// Preserved: ebp esp
fn0042763F_entry:
l0042763F:
	fn00427E3E(dwArg04)
	return dwArg04
fn0042763F_exit:


void fn0042764D(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esi esp
fn0042764D_entry:
l0042764D:
	Mem15[ecx:word32] = 0x00431374<p32>
	branch (bArg04 & 1<8>) == 0<8> l00427669
l0042765F:
	fn0042763F(ecx)
l00427669:
	return
fn0042764D_exit:


word32 fn00427670(word32 ebx, word32 esi, word32 edi, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040DD30
//      fn0040F520
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZO eax ebp ebx ecx edi esi esp Top
// Preserved:
fn00427670_entry:
	ptr32 fp
	selector fs
	word32 dwLoc0C
l00427670:
	word32 ebp_13
	fn00427DC0(ebx, esi, edi, dwLoc0C, 0x10<32>, out ebp_13)
	Mem21[ebp_13 - 32<i32>:word32] = 0<32>
	Mem23[ebp_13 - 25<i32>:byte] = 0<8>
	Mem24[ebp_13 - 4<i32>:word32] = 0<32>
	word32 esp_50 = fp - 8<i32>
	word32 ebx_18 = 0<32>
l00427687:
	branch ebx_18 == Mem27[ebp_13 + 20<i32>:word32] l004276AD
l004276AD:
	Mem31[ebp_13 - 25<i32>:byte] = 1<8>
	Mem32[ebp_13 - 4<i32>:word32] = 0xFFFFFFFE<32>
	word32 ebp_39 = fn004276D6(1<8>, ebx_18, esi, edi)
	Mem49[fs:0x00000000<p32>:word32] = Mem32[ebp_39 - 16<i32>:word32]
	word32 esp_52 = esp_50 + 4<i32>
	word32 edi_53 = Mem49[esp_52:word32]
	word32 esi_55 = Mem49[esp_52 + 4<i32>:word32]
	word32 ebx_57 = Mem49[esp_52 + 8<i32>:word32]
	ebpOut = Mem49[ebp_39:word32]
	esiOut = esi_55
	ediOut = edi_53
	return ebx_57
fn00427670_exit:
l0042768C:
	Mem63[esp_50 - 4<i32>:word32] = Mem27[ebp_13 + 12<i32>:word32]
	fn004029A0()
	call Mem63[ebp_13 + 24<i32>:word32] (retsize: 4;)
		uses: ecx:Mem63[ebp_13 + 8<i32>:word32]
		defs: esp:esp_67
	word32 eax_72 = Mem63[ebp_13 + 16<i32>:word32]
	Mem74[ebp_13 + 8<i32>:word32] = Mem63[ebp_13 + 8<i32>:word32] + eax_72
	Mem76[ebp_13 + 12<i32>:word32] = Mem74[ebp_13 + 12<i32>:word32] + eax_72
	ebx_18 = ebx_18 + 1<32>
	Mem80[ebp_13 - 32<i32>:word32] = ebx_18


word32 fn004276D6(byte al, word32 ebx, word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427670
// MayUse:  eax:[0..7] ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi esi Top
// Preserved: esp
fn004276D6_entry:
	word32 eax
	word32 ebp
	byte al = SLICE(eax, byte, 0)
l004276D6:
	branch al != 0<8> l004276E9
l004276DA:
	ebp = fn004275C6(ebx, esi, edi)
l004276E9:
	return ebp
fn004276D6_exit:


word32 fn004276EA(word32 dwArg04, word32 dwArg08, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042783E
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esi esp
fn004276EA_entry:
l004276EA:
	word32 eax_32
	word32 ecx_13 = Mem11[dwArg04 + 60<i32>:word32] + dwArg04
	word32 edx_16 = ecx_13 + 24<i32> + CONVERT(Mem11[ecx_13 + 20<i32>:word16], word16, word32)
	word32 esi_19 = CONVERT(Mem11[ecx_13 + 6<i32>:word16], word16, word32) *s 0x28<32> + edx_16
	branch edx_16 == esi_19 l00427725
l0042770C:
l0042770F:
	branch dwArg08 <u Mem11[edx_16 + 12<i32>:word32] l0042771E
l00427714:
	branch dwArg08 <u Mem11[edx_16 + 8<i32>:word32] + Mem11[edx_16 + 12<i32>:word32] l0042772A
l0042772A:
	eax_32 = edx_16
l0042771E:
	edx_16 = edx_16 + 0x28<32>
	branch edx_16 != esi_19 l0042770F
l00427725:
	eax_32 = 0<32>
l00427727:
	edxOut = edx_16
	return eax_32
fn004276EA_exit:


byte fn0042772E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse:  fs:[0..15]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn0042772E_entry:
	selector fs
l0042772E:
	word32 eax_7 = fn00427FDE()
	branch eax_7 == 0<32> l00427758
l00427738:
	word32 edx_18 = Mem6[Mem6[fs:0x18<32>:word32] + 4<i32>:word32]
l0042774C:
	__lock()
	word32 eax_24
	__cmpxchg<word32>(Mem6[0x0043AD1C<p32>:word32], edx_18, 0<32>, out eax_24)
	branch eax_24 != 0<32> l00427748
l00427748:
	branch edx_18 == eax_24 l0042775C
l0042775C:
	return 1<8>
l00427758:
	return 0<8>
fn0042772E_exit:


byte fn00427760(word32 edx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse:  edx:[0..31] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esp
fn00427760_entry:
l00427760:
	branch dwArg04 != 0<32> l00427770
l00427769:
	Mem10[0x0043AD20<p32>:byte] = 1<8>
l00427770:
	fn00427E43(edx)
	branch fn00428255() != 0<8> l00427782
l00427782:
	branch fn00428255() != 0<8> l00427795
l00427795:
	return 1<8>
l0042778B:
	fn00428255()
l0042777E:
	return 0<8>
fn00427760_exit:


byte fn0042783E(word32 ebx, word32 esi, word32 edi, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: eax ebx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042783E_entry:
	selector fs
	word32 dwLoc0C
	word32 dwArg00
	word32 dwArg04
	word32 edx
l0042783E:
	word32 eax_100
	word32 ebp_13
	fn00427DC0(ebx, esi, edi, dwLoc0C, 8<32>, out ebp_13)
	Mem19[ebp_13 - 4<i32>:word32] = 0<32>
	word24 eax_24_8_101 = 0x5A<24>
	branch Mem19[0x00400000<p32>:word16] != 0x5A4D<16> l004278B9
l0042785C:
	word32 eax_25 = Mem19[0x0040003C<p32>:word32]
	eax_24_8_101 = SLICE(eax_25, word24, 8) (alias)
	branch Mem19[eax_25 + 0x400000<32>:word32] != 0x4550<32> l004278B9
l0042786D:
	branch Mem19[eax_25 + 0x400018<32>:word16] != 0x10B<16> l004278B9
l0042787B:
	word32 eax_40 = fn004276EA(0x00400000<p32>, Mem19[ebp_13 + 8<i32>:word32] - 0x00400000<p32>, out edx)
	eax_24_8_101 = SLICE(eax_40, word24, 8) (alias)
	branch eax_40 == 0<32> l004278B9
l00427892:
	branch Mem39[eax_40 + 36<i32>:word32] < 0<32> l004278B9
l004278B9:
	Mem57[ebp_13 - 4<i32>:word32] = 0xFFFFFFFE<32>
	eax_100 = SEQ(eax_24_8_101, 0<8>) (alias)
l00427898:
	Mem61[ebp_13 - 4<i32>:word32] = 0xFFFFFFFE<32>
	eax_100 = SEQ(eax_24_8_101, 1<8>) (alias)
l004278C2:
	Mem68[fs:0x00000000<p32>:word32] = Mem64[ebp_13 - 16<i32>:word32]
	edxOut = edx
	ebxOut = dwArg04
	esiOut = dwArg00
	ediOut = 8<32>
	return SLICE(eax_100, byte, 0)
fn0042783E_exit:


void fn004278D2(byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse:  Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esp
fn004278D2_entry:
l004278D2:
	branch fn00427FDE() == 0<32> l004278ED
l004278DE:
	branch bArg04 != 0<8> l004278ED
l004278E4:
	Mem23[0x0043AD1C<p32>:word32] = 0<32>
l004278ED:
	return
fn004278D2_exit:


void fn004278EF(byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse:  Stack +0008:[0..7]
// LiveOut:
// Trashed: SCZO al ecx Top
// Preserved: ebp esp
fn004278EF_entry:
l004278EF:
	branch Mem6[0x0043AD20<p32>:byte] == 0<8> l00427901
l004278FB:
	branch bArg08 != 0<8> l00427913
l00427901:
	fn00428255()
	fn00428255()
l00427913:
	return
fn004278EF_exit:


word32 fn00427917(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427952
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebp esp
fn00427917_entry:
l00427917:
	word32 eax_23
	word32 eax_8 = Mem6[0x0043A008<p32>:word32]
	branch __ror<word32,byte>(eax_8 ^ Mem6[0x0043AD24<p32>:word32], SLICE(eax_8, byte, 0) & 0x1F<8>) != 0xFFFFFFFF<32> l0042793B
l0042793B:
	eax_23 = register_onexit_function(0x43AD24<32>)
l00427934:
	eax_23 = crt_atexit()
l00427946:
	return ~(0<32> - CONVERT(eax_23 != 0<32>, bool, word32)) & dwArg04
fn00427917_exit:


void fn00427952(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B4C0
//      fn0042B560
//      fn0042C210
//      fn0042C310
//      fn0042CD80
//      fn0042D120
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esp
fn00427952_entry:
l00427952:
	fn00427917(dwArg04)
	return
fn00427952_exit:


DWORD Win32CrtStartup()
// stackDelta: 4; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax
// Trashed: eax
// Preserved:
Win32CrtStartup_entry:
	ptr32 fp
	selector fs
	word32 ebx
	word32 esi
	word32 edi
	word32 edx
	selector ds
	selector es
	word32 dwLoc0C
	word24 ebx_24_8_122 = SLICE(ebx, word24, 8)
l00427BAE:
	fn004281F8()
l00427A2C:
	word32 esp_267
	word32 ebp_19
	fn00427DC0(ebx, esi, edi, dwLoc0C, 0x14<32>, out ebp_19)
	branch fn00427760(edx, 1<32>) == 0<8> l00427B98
l00427A48:
	Mem41[ebp_19 - 25<i32>:byte] = 0<8>
	Mem43[ebp_19 - 4<i32>:word32] = 0<32>
	Mem54[ebp_19 - 36<i32>:byte] = fn0042772E()
	word32 eax_55 = Mem54[0x0043AD18<p32>:word32]
	word32 ebx_121 = SEQ(ebx_24_8_122, 0<8>)
	branch eax_55 == 1<32> l00427B98
l00427B98:
	fn00427FEA(7<32>)
	esp_267 = fp - 12<i32>
l00427A69:
	word32 eax_313
	branch eax_55 != 0<32> l00427AB6
l00427AB6:
	Mem76[ebp_19 - 25<i32>:byte] = 1<8>
	ebx_121 = SEQ(ebx_24_8_122, 1<8>) (alias)
l00427A6D:
	Mem77[0x0043AD18<p32>:word32] = 1<32>
	branch _initterm_e(0x431340<32>, 0x431350<32>) == 0<32> l00427A99
l00427A99:
	_initterm(0x4312E4<32>, 0x43133C<32>)
	Mem98[0x0043AD18<p32>:word32] = 2<32>
l00427ABB:
	fn004278D2(Mem100[ebp_19 + 0x24<32>:byte])
	word32 esp_112 = fp - 8<i32>
	word32 eax_113 = fn004282AE()
	word32 edi_115 = 0<32>
	branch Mem104[eax_113:word32] == 0<32> l00427AEC
l00427AD1:
	word32 esp_131 = <invalid>
	esp_112 = esp_131 + 4<i32>
	word32 esi_130
	word32 edx_132
	branch fn0042783E(ebx_121, eax_113, 0<32>, out edx_132, out ebx_121, out esi_130, out edi_115) == 0<8> l00427AEC
l00427ADC:
	word32 esi_143 = Mem119[esi_130:word32]
	Mem145[esp_131:word32] = edi_115
	Mem147[esp_131 - 4<i32>:word32] = 2<32>
	Mem149[esp_131 - 8<i32>:word32] = edi_115
	fn004029A0()
	call esi_143 (retsize: 4;)
		uses: edx:edx_132
		defs: esp:esp_152
l00427AEC:
	word32 eax_158 = fn004282B4()
	branch Mem160[eax_158:word32] == edi_115 l00427B0A
l00427AF7:
	Mem166[esp_112 - 4<i32>:word32] = eax_158
	word32 esi_174
	word32 edi_414
	word32 ebx_413
	word32 edx_412
	branch fn0042783E(ebx_121, eax_158, edi_115, out edx_412, out ebx_413, out esi_174, out edi_414) == 0<8> l00427B0A
l00427B02:
	register_thread_local_exe_atexit_callback(Mem166[esi_174:word32])
l00427B0A:
	word32 edi_201 = Mem200[__p___argv():word32]
	word32 eax_202 = __p___argc()
	Mem218[esp_211 - 4<i32>:word32] = get_initial_narrow_environment()
	Mem220[esp_211 - 8<i32>:word32] = edi_201
	Mem223[esp_211 - 12<i32>:word32] = Mem220[eax_202:word32]
	word32 ebx_246 = <invalid>
	word32 esp_252 = <invalid>
	byte bl_411
	word32 eax_244 = fn00419910(es, ds, out bl_411, out ebp_19)
	byte bl_285 = SLICE(ebx_246, byte, 0)
	esp_267 = esp_252 + 0xC<32>
	esi = eax_244
	branch fn00428113() == 0<8> l00427B9F
l00427B9F:
	word32 esp_281 = esp_267 - 4<i32>
	Mem284[esp_281:word32] = esi
	exit(Mem284[esp_281:int32])
l00427B34:
	branch bl_285 != 0<8> l00427B3D
l00427B38:
	cexit()
l00427B3D:
	word32 esp_296 = esp_267 - 4<i32>
	Mem297[esp_296:word32] = 0<32>
	Mem299[esp_296 - 4<i32>:word32] = 1<32>
	fn004278EF(Mem299[esp_296:byte])
	Mem311[ebp_19 - 4<i32>:word32] = 0xFFFFFFFE<32>
	eax_313 = eax_244
l00427A88:
	Mem314[ebp_19 - 4<i32>:word32] = 0xFFFFFFFE<32>
	eax_313 = 0xFF<32>
l00427B88:
	Mem321[fs:0x00000000<p32>:word32] = Mem317[ebp_19 - 16<i32>:word32]
	return eax_313
Win32CrtStartup_exit:


word32 fn00427BB8(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427500
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: ebp esp
fn00427BB8_entry:
l00427BB8:
	SetUnhandledExceptionFilter(0<32>)
	UnhandledExceptionFilter(dwArg04)
	return TerminateProcess(GetCurrentProcess(), 0xC0000409<32>)
fn00427BB8_exit:


void fn00427CF4(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427511
// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: esp
fn00427CF4_entry:
l00427CF4:
	Mem7[ecx + 4<i32>:word32] = 0<32>
	Mem11[ecx + 8<i32>:word32] = 0<32>
	Mem14[ecx + 4<i32>:word32] = 0x00431398<p32>
	Mem15[ecx:word32] = 0x00431390<p32>
	return
fn00427CF4_exit:


void fn00427D27(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427511
// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: esp
fn00427D27_entry:
l00427D27:
	Mem7[ecx + 4<i32>:word32] = 0<32>
	Mem11[ecx + 8<i32>:word32] = 0<32>
	Mem14[ecx + 4<i32>:word32] = 0x004313B4<p32>
	Mem15[ecx:word32] = 0x004313AC<p32>
	return
fn00427D27_exit:


void fn00427D50(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esi esp
fn00427D50_entry:
l00427D50:
	Mem14[ecx:word32] = 0x00431384<p32>
	_std_exception_destroy()
	branch (bArg04 & 1<8>) == 0<8> l00427D76
l00427D6C:
	fn0042763F(ecx)
l00427D76:
	return
fn00427D50_exit:


word32 fn00427DC0(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg08, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427511
//      fn00427541
//      fn004275C6
//      fn00427670
//      fn0042783E
//      Win32CrtStartup
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0008:[0..31]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp Top
// Preserved: esp
fn00427DC0_entry:
	ptr32 fp
	selector fs
l00427DC0:
	word32 esp_14 = fp - 8<i32> - dwArg08
	Mem17[esp_14 - 4<i32>:word32] = ebx
	Mem20[esp_14 - 8<i32>:word32] = esi
	Mem23[esp_14 - 12<i32>:word32] = edi
	Mem32[esp_14 - 16<i32>:word32] = Mem23[0x0043A008<p32>:word32] ^ fp + 8<i32>
	Mem36[esp_14 - 20<i32>:word32] = dwArg00
	Mem41[fs:0<32>:word32] = fp - 8<i32>
	ebpOut = fp + 8<i32>
	return fp - 8<i32>
fn00427DC0_exit:


void fn00427E3E(void * ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042763F
//      fn004289B0
//      fn0042BD90
//      fn0042D292
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: Top
// Preserved: esp
fn00427E3E_entry:
l00427E3E:
	free(ptrArg04)
	return
fn00427E3E_exit:


void fn00427E43(word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427760
// MayUse:  edx:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00427E43_entry:
	ptr32 fp
l00427E43:
	Mem9[0x0043B05C<p32>:word32] = 0<32>
	Mem18[0x0043A010<p32>:word32] = Mem14[0x0043A010<p32>:word32] | 1<32>
	branch IsProcessorFeaturePresent(0xA<32>) == 0<32> l00427FD5
l00427E69:
	word32 edi_100
	Mem32[0x0043A010<p32>:word32] = Mem28[0x0043A010<p32>:word32] | 2<32>
	Mem41[0x0043B05C<p32>:word32] = 1<32>
	__cpuid(0<32>, 0<32>, &0<32>, &1<32>, &0<32>, &edx)
	__cpuid(1<32>, 0<32>, &1<32>, &1<32>, &0<32>, &edx)
	branch (edx ^ 0x49656E69<32> | 0x6C65746E<32> | 0x756E6546<32>) != 0<32> l00427F1F
l00427EDC:
	branch false l00427F0E
l00427EEB:
	branch false l00427F0E
l00427EF2:
	branch false l00427F0E
l00427EF9:
	branch false l00427F0E
l00427F00:
	branch false l00427F0E
l00427F07:
	branch true l00427F1F
l00427F1F:
	edi_100 = Mem80[0x0043B060<p32>:word32]
l00427F0E:
	word32 edi_99 = Mem80[0x0043B060<p32>:word32]
	Mem103[0x0043B060<p32>:word32] = edi_99 | 1<32>
	edi_100 = edi_99 | 1<32>
l00427F25:
	byte bl_183
	branch true l00427F63
l00427F63:
	bl_183 = 0<8> (alias)
l00427F31:
	__cpuid(7<32>, 0<32>, &7<32>, &(fp - 40<i32>), &0<32>, &edx)
	bl_183 = SLICE(fp, byte, 0) - 0x28<8> (alias)
	branch (fp - 40<i32> & 0x200<32>) == 0<32> l00427F66
l00427F58:
	Mem146[0x0043B060<p32>:word32] = edi_100 | 2<32>
l00427F66:
	branch true l00427FD5
l00427F6F:
	Mem158[0x0043A010<p32>:word32] = Mem148[0x0043A010<p32>:word32] | 4<32>
	Mem160[0x0043B05C<p32>:word32] = 2<32>
	branch true l00427FD5
l00427F87:
	branch true l00427FD5
l00427F8E:
	branch (SLICE(__xgetbv(0<32>), word32, 0) & 6<32>) != 6<32> l00427FD5
l00427FA7:
	word32 eax_179 = Mem173[0x0043A010<p32>:word32]
	Mem181[0x0043B05C<p32>:word32] = 3<32>
	Mem182[0x0043A010<p32>:word32] = eax_179 | 8<32>
	branch (bl_183 & 0x20<8>) == 0<8> l00427FD5
l00427FC3:
	Mem192[0x0043B05C<p32>:word32] = 5<32>
	Mem193[0x0043A010<p32>:word32] = eax_179 | 8<32> | 0x20<32>
l00427FD5:
	return
fn00427E43_exit:


word32 fn00427FDE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042772E
//      fn004278D2
// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn00427FDE_entry:
l00427FDE:
	return CONVERT(CONVERT(Mem0[0x0043A080<p32>:word32] != 0<32>, bool, int8), int8, uint32)
fn00427FDE_exit:


void fn00427FEA(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx Top
// Preserved: ebp ebx esp
fn00427FEA_entry:
	word32 dwLoc0328
	word32 dwLoc5C
	struct _EXCEPTION_POINTERS tLoc0C
l00427FEA:
	branch IsProcessorFeaturePresent(0x17<32>) == 0<32> l00428004
l00428004:
	fn004281A3()
	memset(&dwLoc0328, 0<32>, 0x2CC<32>)
	Mem66[&dwLoc0328:word32] = 0x10001<32>
	memset(&dwLoc5C, 0<32>, 0x50<32>)
	Mem79[&dwLoc5C:word32] = 0x40000015<32>
	word32 eax_82 = IsDebuggerPresent()
	Mem89[&tLoc0C:word32] = &dwLoc5C
	Mem92[&tLoc0C + 4<i32>:word32] = &dwLoc0328
	SetUnhandledExceptionFilter(0<32>)
	byte bl_91 = 0<8> - (eax_82 != 1<32>)
	branch UnhandledExceptionFilter(&tLoc0C) != 0<32> l00428101
l004280F5:
	branch bl_91 != 1<8> l00428101
l004280F9:
	fn004281A3()
l00428101:
	return
fn00427FEA_exit:
l00427FFF:
	__fastfail(dwArg04)


void fn00428110()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: esp
fn00428110_entry:
l00428110:
	return
fn00428110_exit:


byte fn00428113()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00428113_entry:
l00428113:
	word32 eax_6 = GetModuleHandleW(0<32>)
	branch eax_6 == 0<32> l00428153
l0042811F:
	branch Mem5[eax_6:word16] != 0x5A4D<16> l00428153
l00428129:
	word32 ecx_16 = Mem5[eax_6 + 60<i32>:word32] + eax_6
	branch Mem5[ecx_16:word32] != 0x4550<32> l00428153
l00428136:
	branch Mem5[ecx_16 + 24<i32>:word16] != 0x10B<16> l00428153
l00428141:
	branch Mem5[ecx_16 + 116<i32>:word32] <=u 0xE<32> l00428153
l00428147:
	branch Mem5[ecx_16 + 0xE8<32>:word32] == 0<32> l00428153
l00428153:
	return 0<8>
l00428150:
	return 1<8>
fn00428113_exit:


void fn004281A3()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427FEA
// MayUse: 
// LiveOut:
// Trashed: SCZO Top
// Preserved: esp
fn004281A3_entry:
l004281A3:
	Mem6[0x0043B064<p32>:word32] = 0<32>
	return
fn004281A3_exit:


word32 fn004281AB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004281F8
// MayUse: 
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebp esp
fn004281AB_entry:
	ptr32 fp
	LARGE_INTEGER tLoc18
	struct _FILETIME tLoc10
l004281AB:
	Mem10[&tLoc10:word32] = 0<32>
	Mem14[&tLoc10 + 4<i32>:word32] = 0<32>
	GetSystemTimeAsFileTime(&tLoc10)
	word32 v11_27 = Mem17[&tLoc10 + 4<i32>:word32] ^ Mem17[&tLoc10:word32] ^ GetCurrentThreadId() ^ GetCurrentProcessId()
	QueryPerformanceCounter(&tLoc18)
	return Mem32[&tLoc18 + 4<i32>:word32] ^ Mem32[&tLoc18:word32] ^ v11_27 ^ fp - 8<i32>
fn004281AB_exit:


void fn004281F8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse: 
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: edi esi esp
fn004281F8_entry:
l004281F8:
	word32 ecx_25 = Mem0[0x0043A008<p32>:word32]
	branch ecx_25 == 0xBB40E64E<32> l00428212
l0042820E:
	branch (ecx_25 & 0xFFFF0000<32>) != 0<32> l00428238
l00428212:
	word32 eax_19 = fn004281AB()
	ecx_25 = eax_19
	branch eax_19 != 0xBB40E64E<32> l00428224
l00428224:
	branch (eax_19 & 0xFFFF0000<32>) != 0<32> l00428232
l00428228:
	ecx_25 = eax_19 | (eax_19 | 0x4711<32>) << 0x10<32>
l0042821D:
	ecx_25 = 0xBB40E64F<32>
l00428232:
	Mem40[0x0043A008<p32>:word32] = ecx_25
l00428238:
	Mem49[0x0043A004<p32>:word32] = ~ecx_25
	return
fn004281F8_exit:


byte fn00428255()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00427760
//      fn004278EF
// MayUse: 
// LiveOut: al
// Trashed: al Top
// Preserved: esp
fn00428255_entry:
l00428255:
	return 1<8>
fn00428255_exit:


word32 fn004282AE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004282AE_entry:
l004282AE:
	return 0x0043B2AC<p32>
fn004282AE_exit:


word32 fn004282B4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse: 
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn004282B4_entry:
l004282B4:
	return 0x0043B2A8<p32>
fn004282B4_exit:


word32 fn00428320(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428DE0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ebp ebx ecx edx Top xmm0
// Preserved: edi esi esp
fn00428320_entry:
l00428320:
	branch dwArg0C != dwArg10 l00428368
l00428368:
	word32 ebx_25
	word32 edx_19 = dwArg08 - dwArg04
	branch Mem11[ecx + 20<i32>:word32] <u 0x10<32> l00428379
l00428379:
	ebx_25 = ecx
l00428375:
	ebx_25 = Mem23[ecx:word32]
l0042837B:
	word32 ebp_162
	word32 esi_163
	return fn004167E0(ecx, ecx, dwArg0C, dwArg04 - ebx_25, edx_19, dwArg0C, dwArg10 - dwArg0C, out ebp_162, out esi_163)
l00428334:
	word32 ecx_70 = dwArg08 - dwArg04
	branch Mem11[ecx + 20<i32>:word32] <u 0x10<32> l00428354
l00428354:
	word32 edx_86
	word32 edi_159
	word32 ebx_158
	fn00410CF0(ecx, ecx, dwArg0C, dwArg04 - ecx, ecx_70, out edx_86, out ebx_158, out edi_159)
	return edx_86
l00428340:
	word32 edx_112
	word32 ebx_160
	word32 edi_161
	fn00410CF0(ecx, ecx, dwArg0C, dwArg04 - Mem11[ecx:word32], ecx_70, out edx_112, out ebx_160, out edi_161)
	return edx_112
fn00428320_exit:


word32 fn004283A0(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428DE0
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: esp
fn004283A0_entry:
l004283A0:
	word32 ecx_13 = dwArg08 - dwArg04
	branch dwArg0C != dwArg10 l004283EE
l004283EE:
	word32 ebx_26
	branch Mem16[ecx + 20<i32>:word32] <u 8<32> l004283F9
l004283F9:
	ebx_26 = ecx
l004283F5:
	ebx_26 = Mem24[ecx:word32]
l004283FB:
	return fn004294A0(ecx, dwArg04 - ebx_26 >> 1<32>, ecx_13 >> 1<32>, dwArg0C, dwArg10 - dwArg0C >> 1<32>)
l004283BC:
	branch Mem16[ecx + 20<i32>:word32] <u 8<32> l004283D8
l004283D8:
	return fn00428F60(ecx, dwArg04 - ecx >> 1<32>, ecx_13 >> 1<32>)
l004283C2:
	return fn00428F60(ecx, dwArg04 - Mem16[ecx:word32] >> 1<32>, ecx_13 >> 1<32>)
fn004283A0_exit:


word32 fn00428430(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A390
//      fn0042A450
//      fn0042A710
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: eax Top
// Preserved: esp
fn00428430_entry:
l00428430:
	Mem7[ecx:word32] = dwArg04
	Mem9[ecx + 4<i32>:word32] = dwArg08
	return ecx
fn00428430_exit:


void fn00428550(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428DE0
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: esi esp
fn00428550_entry:
	ptr32 fp
l00428550:
	Mem20[ecx:word32] = 0x00431384<p32>
	Mem24[ecx + 4<i32>:word64] = 0<64>
	_std_exception_copy(ecx + 4<i32>, fp - 8<32>, ecx + 4<i32>, dwArg0C, ecx, 1<8>)
	Mem34[ecx:word32] = 0x004313F4<p32>
	Mem35[ecx + 12<i32>:word32] = dwArg04
	Mem37[ecx + 16<i32>:word32] = dwArg08
	Mem39[ecx + 36<i32>:word32] = 0<32>
	Mem40[ecx + 40<i32>:word32] = 0xF<32>
	Mem41[ecx + 20<i32>:byte] = 0<8>
	return
fn00428550_exit:


void fn004286A0(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx esi Top
// Preserved: ebp esp
fn004286A0_entry:
	ptr32 fp
	selector fs
l004286A0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_20 = Mem18[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem26[fs:0<32>:word32] = fp - 16<i32>
	Mem30[ecx:word32] = 0x00431384<p32>
	_std_exception_destroy(ecx + 4<i32>, eax_20, eax_13, 0x42DAC0<32>, 0xFFFFFFFF<32>)
	branch (bArg04 & 1<8>) == 0<8> l004286E9
l004286DE:
	Mem43[esp_33:word32] = 0xC<32>
	Mem45[esp_33 - 4<i32>:word32] = ecx
	fn0042763F(Mem45[esp_33 - 4<i32>:word32])
l004286E9:
	Mem55[fs:0x00000000<p32>:word32] = eax_13
	return
fn004286A0_exit:


void fn00428790(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428A4B
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00428790_entry:
	ptr32 fp
	selector fs
l00428790:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 esp_28 = fp - 0x30<32>
	word32 eax_36 = dwArg04
	branch dwArg04 <=u 0xFFFFFFFE<32> l004287CD
l004287C8:
	word32 ecx_190
	eax_36 = fn00403860(ecx, out ecx_190)
	esp_28 = <invalid>
l004287CD:
	word32 ebx_48 = Mem35[ecx + 20<i32>:word32]
	word32 edi_51 = eax_36 | 0xF<32>
	branch edi_51 <=u 0xFFFFFFFE<32> l004287E1
l004287E1:
	branch ebx_48 >>u 1<32> <=u SLICE(edi_51 *u64 0xAAAAAAAB<32>, word32, 32) >>u 1<32> l00428805
l004287F2:
	edi_51 = (ebx_48 >>u 1<32>) + ebx_48
	branch ebx_48 <=u 0xFFFFFFFE<32> - (ebx_48 >>u 1<32>) l00428805
l00428800:
	edi_51 = 0xFFFFFFFE<32>
l004287DD:
	edi_51 = eax_36
l00428805:
	word32 esp_77 = esp_28 - 4<i32>
	Mem78[esp_77:word32] = edi_51 + 1<i32>
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 eax_87 = fn00428A40(stackArg4)
l00428840:
	Mem99[esp_77 - 4<i32>:word32] = Mem78[ecx + 16<i32>:word32] + 1<32>
	branch Mem95[ecx + 20<i32>:word32] <u 0x10<32> l0042886F
l0042886F:
	Mem102[esp_77 - 8<i32>:word32] = ecx
	Mem104[esp_77 - 12<i32>:word32] = eax_87
	memcpy(Mem104[esp_77 - 12<i32>:(ptr32 void)], Mem104[esp_77 - 8<i32>:(ptr32 void)], Mem104[esp_77 - 4<i32>:size_t])
l00428855:
	Mem110[esp_77 - 8<i32>:word32] = Mem99[ecx:word32]
	Mem112[esp_77 - 12<i32>:word32] = eax_87
	memcpy(Mem112[esp_77 - 12<i32>:(ptr32 void)], Mem112[esp_77 - 8<i32>:(ptr32 void)], Mem112[esp_77 - 4<i32>:size_t])
	Mem115[esp_77 - 16<i32>:word32] = 1<32>
	Mem118[esp_77 - 20<i32>:word32] = ebx_48 + 1<i32>
	Mem121[esp_77 - 24<i32>:word32] = Mem118[ecx:word32]
	fn004289B0(Mem121[esp_77 - 24<i32>:word32], Mem121[esp_77 - 20<i32>:word32], Mem121[esp_77 - 16<i32>:word32])
l00428879:
	Mem135[ecx:word32] = eax_87
	Mem137[ecx + 20<i32>:word32] = edi_51
	Mem140[fs:0x00000000<p32>:word32] = eax_13
	return
fn00428790_exit:


word32 fn004288A0(word32 ecx, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004290A0
//      fn004294A0
//      fn0042A070
//      fn0042B120
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ebx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004288A0_entry:
	ptr32 fp
	selector fs
l004288A0:
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 esp_28 = fp - 0x30<32>
	word32 eax_36 = dwArg04
	branch dwArg04 <=u 0x7FFFFFFE<32> l004288DF
l004288DA:
	word32 ecx_189
	word32 edx_190
	eax_36 = fn00428A20(out ecx_189, out edx_190)
	esp_28 = fp - 0x2C<32>
l004288DF:
	word32 ebx_48 = Mem35[ecx + 20<i32>:word32]
	word32 edi_51 = eax_36 | 7<32>
	branch edi_51 <=u 0x7FFFFFFE<32> l004288F6
l004288F6:
	branch ebx_48 >>u 1<32> <=u SLICE(edi_51 *u64 0xAAAAAAAB<32>, word32, 32) >>u 1<32> l0042891A
l00428907:
	edi_51 = (ebx_48 >>u 1<32>) + ebx_48
	branch ebx_48 <=u 0x7FFFFFFE<32> - (ebx_48 >>u 1<32>) l0042891A
l00428915:
	edi_51 = 0x7FFFFFFE<32>
l004288F2:
	edi_51 = eax_36
l0042891A:
	word32 esp_77 = esp_28 - 4<i32>
	Mem78[esp_77:word32] = edi_51 + 1<i32>
	word32 ebp_85
	word32 ebx_86
	word32 esi_89
	word32 edx_126
	word32 eax_84 = fn00428AA0(ebx_48, ecx, edi_51, Mem78[esp_77 + -4<i32>:word32], Mem78[esp_77:word32], Mem78[esp_77 + 4<i32>:word32], Mem78[esp_77 + 8<i32>:word32], out edx_126, out ebx_86, out ebp_85, out esi_89)
l00428955:
	word32 eax_96 = Mem78[esi_89 + 16<i32>:word32]
	Mem97[ebp_85 - 20<i32>:word32] = eax_84
	Mem98[ebp_85 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem101[esp_77 - 4<i32>:word32] = eax_96 * 2<32> + 2<32>
	branch Mem78[esi_89 + 20<i32>:word32] <u 8<32> l0042898A
l0042898A:
	Mem104[esp_77 - 8<i32>:word32] = esi_89
	Mem106[esp_77 - 12<i32>:word32] = eax_84
	memcpy(Mem106[esp_77 - 12<i32>:(ptr32 void)], Mem106[esp_77 - 8<i32>:(ptr32 void)], Mem106[esp_77 - 4<i32>:size_t])
l00428970:
	Mem112[esp_77 - 8<i32>:word32] = Mem101[esi_89:word32]
	Mem114[esp_77 - 12<i32>:word32] = eax_84
	memcpy(Mem114[esp_77 - 12<i32>:(ptr32 void)], Mem114[esp_77 - 8<i32>:(ptr32 void)], Mem114[esp_77 - 4<i32>:size_t])
	Mem117[esp_77 - 16<i32>:word32] = 2<32>
	Mem120[esp_77 - 20<i32>:word32] = ebx_86 + 1<i32>
	Mem123[esp_77 - 24<i32>:word32] = Mem120[esi_89:word32]
	edx_126 = fn004289B0(Mem123[esp_77 - 24<i32>:word32], Mem123[esp_77 - 20<i32>:word32], Mem123[esp_77 - 16<i32>:word32])
l00428994:
	Mem137[esi_89:word32] = Mem134[ebp_85 - 20<i32>:word32]
	Mem139[esi_89 + 20<i32>:word32] = edi_51
	Mem142[fs:0x00000000<p32>:word32] = Mem139[ebp_85 - 12<i32>:word32]
	word32 edi_146 = Mem142[esp_77 + 4<i32>:word32]
	word32 esi_148 = Mem142[esp_77 + 8<i32>:word32]
	word32 ebp_152 = Mem142[ebp_85:word32]
	ebxOut = Mem142[esp_77 + 12<i32>:word32]
	ebpOut = ebp_152
	esiOut = esi_148
	ediOut = edi_146
	return edx_126
fn004288A0_exit:


word32 fn004289B0(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428790
//      fn004288A0
//      fn00429C20
//      fn00429F30
//      fn0042A600
//      fn0042AB60
//      fn0042B210
//      fn0042B630
//      fn0042B830
//      fn0042C020
//      fn0042CD80
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn004289B0_entry:
l004289B0:
	branch dwArg08 <=u CONVERT(0xFFFFFFFF<64> /u dwArg0C, word32, uint32) l004289C7
l004289C7:
	word32 ecx_18
	branch dwArg08 *s dwArg0C <u 0x1000<32> l00428A07
l00428A07:
	ecx_18 = dwArg04
l004289D4:
	branch (SLICE(dwArg04, byte, 0) & 0x1F<8>) == 0<8> l004289E2
l004289E2:
	ecx_18 = Mem0[dwArg04 - 4<i32>:word32]
	branch ecx_18 <u dwArg04 l004289EF
l004289EF:
	word32 eax_27 = dwArg04 - ecx_18
	branch eax_27 >=u 4<32> l004289FC
l004289FC:
	branch eax_27 <=u 0x23<32> l00428A0B
l00428A0B:
	fn00427E3E(ecx_18)
	return
l00428A01:
	_invalid_parameter_noinfo_noreturn()
	return
l004289F6:
	_invalid_parameter_noinfo_noreturn()
	return
l004289E9:
	_invalid_parameter_noinfo_noreturn()
	return
l004289DC:
	_invalid_parameter_noinfo_noreturn()
	return
l004289C1:
	_invalid_parameter_noinfo_noreturn()
	return
fn004289B0_exit:


word32 fn00428A20(ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004288A0
//      fn004290A0
//      fn004294A0
// MayUse: 
// LiveOut: eax ecx edx
// Trashed: Top
// Preserved: esp
fn00428A20_entry:
l00428A20:
	_Xlength_error(0x431454<32>)
	int3()
	int3()
	int3()
	int3()
	int3()
l00428A2F_thunk_fn00428A30:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 ecx_15
	word32 edx_16
	fn00428A30(stackArg0, out ecx_15, out edx_16)
	ecxOut = <invalid>
	edxOut = <invalid>
	return <invalid>
fn00428A20_exit:


word32 fn00428A30(word32 dwArg00, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428A20
//      fn00428A4B
//      fn00428F60
//      fn004290A0
//      fn004294A0
//      fn0042A070
// MayUse:  Stack +0000:[0..31]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn00428A30_entry:
	word32 eax
	word32 ebx
	word32 esi
	word32 edi
l00428A30:
	_Xout_of_range(0x431464<32>)
	int3()
	int3()
	int3()
	int3()
	int3()
	branch dwArg00 != 0<32> l00428A4B
l00428A46_thunk_fn00428A4B:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 ecx_12
	word32 edx_13
	word32 eax_11 = fn00428A4B(eax, ebx, esi, edi, stackArg0, dwArg00, stackArg8, stackArg12, out ecx_12, out edx_13)
	ecxOut = ecx_12
	edxOut = edx_13
	return eax_11
l00428A46_thunk_fn00428A4B:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 ecx_18
	word32 edx_19
	word32 eax_17 = fn00428A4B(eax, ebx, esi, edi, stackArg0, dwArg00, stackArg8, stackArg12, out ecx_18, out edx_19)
	ecxOut = ecx_18
	edxOut = edx_19
	return eax_17
fn00428A30_exit:


word32 fn00428A40(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428790
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn00428A40_entry:
	word32 eax
	word32 ebx
	word32 esi
	word32 edi
l00428A40:
	branch dwArg04 != 0<32> l00428A46_thunk_fn00428A4B
l00428A46_thunk_fn00428A4B:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 ecx_37
	word32 edx_38
	return fn00428A4B(eax, ebx, esi, edi, stackArg0, dwArg04, stackArg8, stackArg12, out ecx_37, out edx_38)
l00428A48_in_fn00428A40:
	return dwArg04
fn00428A40_exit:


word32 fn00428A4B(word32 eax, word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428A30
//      fn00428A40
// MayUse:  eax:[0..31] ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ebp ebx ecx edx esi Top
// Preserved: esp
fn00428A4B_entry:
	word32 dwLoc08
	word32 edx
l00428A4B:
	branch eax <u 0x1000<32> l00428A80
l00428A80:
	word32 ecx_15
	word32 ebp_116
	word32 eax_13 = fn00427511(ebx, esi, edi, dwLoc08, eax, dwArg00, out ecx_15, out ebp_116)
	branch eax_13 != 0<32> l00428A48
l00428A48:
	ecxOut = ecx_15
	edxOut = edx
	return eax_13
l00428A8D:
	_invalid_parameter_noinfo_noreturn()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	branch dwArg04 != 0<32> l00428AAB
l00428AA6_thunk_fn00428AAB:
	word32 ecx_30
	word32 edx_32
	word32 esi_119
	word32 ebx_117
	word32 ebp_118
	word32 eax_28 = fn00428AAB(dwArg04, ebx, esi, edi, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_30, out edx_32, out ebx_117, out ebp_118, out esi_119)
	ecxOut = ecx_30
	edxOut = edx_32
	return eax_28
l00428AA6_thunk_fn00428AAB:
	word32 ecx_40
	word32 edx_42
	word32 ebx_120
	word32 ebp_121
	word32 esi_122
	word32 eax_38 = fn00428AAB(dwArg04, ebx, esi, edi, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_40, out edx_42, out ebx_120, out ebp_121, out esi_122)
	ecxOut = ecx_40
	edxOut = edx_42
	return eax_38
l00428A52:
	branch eax + 35<i32> >u eax l00428A5F
l00428A59:
	_Xbad_alloc()
l00428A5F:
	word32 ebp_115
	word32 ecx_114
	word32 eax_59 = fn00427511(ebx, esi, edi, dwLoc08, eax + 35<i32>, dwArg00, out ecx_114, out ebp_115)
	branch eax_59 != 0<32> l00428A74
l00428A6E:
	_invalid_parameter_noinfo_noreturn()
l00428A74:
	word32 eax_73 = eax_59 + 35<i32> & 0xFFFFFFE0<32>
	Mem76[eax_73 - 4<i32>:word32] = eax_59
	ecxOut = eax_59
	edxOut = edx
	return eax_73
fn00428A4B_exit:


word32 fn00428AA0(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004288A0
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ebp ebx edx esi
// Trashed: SCZO eax ebp ebx ecx edx esi Top
// Preserved: esp
fn00428AA0_entry:
	word32 ebp
	word32 edx
l00428AA0:
	branch dwArg04 != 0<32> l00428AA6_thunk_fn00428AAB
l00428AA6_thunk_fn00428AAB:
	word32 ebp_14
	word32 ebx_16
	word32 edx_17
	word32 esi_18
	word32 ecx_48
	word32 eax_13 = fn00428AAB(dwArg04, ebx, esi, edi, dwArg00, dwArg04, dwArg08, dwArg0C, out ecx_48, out edx_17, out ebx_16, out ebp_14, out esi_18)
	edxOut = edx_17
	ebxOut = ebx_16
	ebpOut = ebp_14
	esiOut = esi_18
	return eax_13
l00428AA8_in_fn00428AA0:
	edxOut = edx
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	return dwArg04
fn00428AA0_exit:


word32 fn00428AAB(word32 eax, word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428A4B
//      fn00428AA0
// MayUse:  eax:[0..31] ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ebp ebx ecx edx esi
// Trashed: SCZO eax ebp ebx ecx edx esi Top
// Preserved: edi esp
fn00428AAB_entry:
	word32 dwLoc08
	word32 edx
	word32 ecx
	selector es
	selector ds
l00428AAB:
	branch eax <=u 0x7FFFFFFF<32> l00428AB8
l00428AB2:
	_Xbad_alloc()
l00428AB8:
	branch eax * 2<32> <u 0x1000<32> l00428AEF
l00428AEF:
	word32 ecx_24
	word32 ebp_23
	word32 eax_22 = fn00427511(ebx, esi, edi, dwLoc08, eax * 2<32>, dwArg00, out ecx_24, out ebp_23)
	branch eax_22 != 0<32> l00428AA8
l00428AA8:
	ecxOut = ecx_24
	edxOut = edx
	ebxOut = ebx
	ebpOut = ebp_23
	esiOut = esi
	return eax_22
l00428AFC:
	_invalid_parameter_noinfo_noreturn()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 ebx_102 = dwArg04
	word32 eax_40 = Mem37[dwArg04 + 16<i32>:word32]
	branch eax_40 <u dwArg08 l00428BD0
l00428BD0:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 edx_324
	word32 ecx_323
	fn00428A30(stackArg0, out ecx_323, out edx_324)
l00428B27:
	edx = Mem37[ecx_24 + 16<i32>:word32]
	word32 eax_45 = eax_40 - dwArg08
	ebp_23 = dwArg0C
	branch eax_45 >=u dwArg0C l00428B36
l00428B33_1:
	ebp_23 = eax_45
l00428B36:
	branch ~edx <=u ebp_23 l00428BD5
l00428BD5:
	word32 ecx_63
	word32 eax_62 = fn00403860(dwArg08, out ecx_63)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l00428BDF_thunk_fn00428BE0:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg16 = <invalid>
	word32 ebp_319
	word32 esi_320
	word32 edi_321
	fn00428BE0(esi, es, ds, stackArg4, stackArg8, stackArg16, out ebp_319, out esi_320, out edi_321)
	ecxOut = ecx_63
	edxOut = edx
	ebxOut = dwArg04
	ebpOut = ebp_23
	esiOut = ecx_24
	return eax_62
l00428B42:
	word32 edi_73 = edx + ebp_23
	branch ebp_23 == 0<32> l00428BC7
l00428B4A:
	branch edi_73 != 0<32> l00428B71
l00428B71:
	branch Mem72[ecx_24 + 20<i32>:word32] >=u edi_73 l00428B82
l00428B76:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	fn00428790(ecx, stackArg4)
l00428B82:
	branch Mem90[dwArg04 + 20<i32>:word32] <u 0x10<32> l00428B8A
l00428B88:
	ebx_102 = Mem90[dwArg04:word32]
l00428B8A:
	branch Mem90[ecx_24 + 20<i32>:word32] <u 0x10<32> l00428B94
l00428B94:
	edx = ecx_24
l00428B90:
	edx = Mem90[ecx_24:word32]
l00428B96:
	memcpy(Mem116[ecx_24 + 16<i32>:word32] + edx, ebx_102 + dwArg08, ebp_23)
	Mem128[ecx_24 + 16<i32>:word32] = edi_73
	branch Mem128[ecx_24 + 20<i32>:word32] <u 0x10<32> l00428BC1
l00428BC1:
	Mem132[ecx_24 + edi_73:byte] = 0<8>
l00428BC7:
	ecxOut = dwArg08
	edxOut = edx
	ebxOut = ebx
	ebpOut = ebp_23
	esiOut = esi
	return ecx_24
l00428BB2:
	Mem146[Mem128[ecx_24:word32] + edi_73:byte] = 0<8>
	ecxOut = dwArg08
	edxOut = edx
	ebxOut = ebx
	ebpOut = ebp_23
	esiOut = esi
	return ecx_24
l00428B4E:
	Mem156[ecx_24 + 16<i32>:word32] = edi_73
	branch Mem156[ecx_24 + 20<i32>:word32] <u 0x10<32> l00428B65
l00428B65:
	Mem168[ecx_24:byte] = 0<8>
	ecxOut = dwArg08
	edxOut = edx
	ebxOut = ebx
	ebpOut = ebp_23
	esiOut = esi
	return ecx_24
l00428B57:
	Mem174[Mem156[ecx_24:word32]:byte] = 0<8>
	ecxOut = dwArg08
	edxOut = edx
	ebxOut = ebx
	ebpOut = ebp_23
	esiOut = esi
	return ecx_24
l00428AC1:
	word32 ecx_180 = eax * 2<32> + 35<i32>
	branch ecx_180 >u eax * 2<32> l00428ACE
l00428AC8:
	_Xbad_alloc()
l00428ACE:
	word32 ebp_192
	word32 ecx_311
	word32 eax_191 = fn00427511(ebx, esi, edi, dwLoc08, ecx_180, dwArg00, out ecx_311, out ebp_192)
	branch eax_191 != 0<32> l00428AE3
l00428ADD:
	_invalid_parameter_noinfo_noreturn()
l00428AE3:
	word32 eax_205 = eax_191 + 35<i32> & 0xFFFFFFE0<32>
	Mem208[eax_205 - 4<i32>:word32] = eax_191
	ecxOut = eax_191
	edxOut = edx
	ebxOut = ebx
	ebpOut = ebp_192
	esiOut = esi
	return eax_205
fn00428AAB_exit:


word32 fn00428BE0(word32 esi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg10, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404080
//      fn004143E0
//      fn00428A4B
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +0010:[0..31]
// LiveOut: ebp edi edx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00428BE0_entry:
	ptr32 fp
	selector fs
	word32 dwArg0C
	word32 dwLoc023C
l00428BE0:
	word32 eax_19 = Mem16[0x0043A008<p32>:word32] ^ fp - 0x208<32>
	Mem33[fs:0<32>:word32] = fp - 0x214<32>
	word32 ebp_119 = fp - 0x208<32>
	word32 esp_100 = fp - 0x234<32>
	word32 edi_34 = dwArg08
	word32 edx_147 = dwArg10
	branch dwArg08 != 0<32> l00428C4F
l00428C3B:
	word32 ecx_43 = dwArg04
	esi = dwArg04 + 1<i32>
l00428C40:
	ecx_43 = ecx_258 + 1<32>
	ecx_258 = ecx_43
	branch Mem39[ecx_258:byte] != 0<8> l00428C40
l00428C47:
	edi_34 = ecx_43 - (dwArg04 + 1<i32>) + dwArg04
l00428C4F:
	branch dwArg04 == edi_34 l00428CBD
l00428C53:
	word32 eax_64 = edi_34 - dwArg04
	branch eax_64 * 3<32> <=u 0x100<32> l00428CA6
l00428CA6:
	word32 esp_94 = <invalid>
	edx_147 = fn00428DE0(dwArg04, fp - 0x208<32>, esi, edi_34, es, ds, dwArg04, edi_34, fp - 0x208<32>, fp - 8<32>, dwArg0C, dwArg10)
	esp_100 = esp_94 + 0x18<32>
l00428C64:
	word64 edx_eax_104 = eax_64 * 3<32> *u64 2<32>
	word32 eax_118 = fn0042D289(dwArg04, esi, edi_34, dwLoc023C, -CONVERT(CONVERT(OVERFLOW<word64>(edx_eax_104), bool, int8), byte, uint32) | SLICE(edx_eax_104, word32, 0), eax_19, out ebp_119)
	Mem126[ebp_119 - 28<i32>:word32] = eax_118
	word32 v20_127 = Mem126[ebp_119 - 20<i32>:word32]
	word32 eax_130 = Mem129[ebp_119 - 24<i32>:word32]
	word32 v21_131 = Mem129[ebp_119 - 16<i32>:word32]
	Mem134[ebp_119 - 4<i32>:word32] = 0<32>
	edx_147 = fn00428DE0(dwArg04, ebp_119, eax_118, edi_34, es, ds, dwArg04, edi_34, eax_118, eax_118 + eax_130 * 2<32>, v21_131, v20_127)
	word32 esp_144 = <invalid>
	Mem151[esp_144 - 4<i32>:word32] = eax_118
	fn0042D292(Mem151[esp_144 - 4<i32>:(ptr32 void)])
	esp_100 = esp_144 + 0x1C<32>
l00428CBD:
	Mem159[fs:0x00000000<p32>:word32] = Mem155[ebp_119 - 12<i32>:word32]
	word32 esp_162 = esp_100 + 4<i32>
	word32 edi_163 = Mem159[esp_162:word32]
	word32 esi_165 = Mem159[esp_162 + 4<i32>:word32]
	word32 ecx_257
	word32 eax_256
	fn00427500(Mem159[ebp_119 + 0x200<32>:word32] ^ ebp_119, edx_147, Mem159[esp_162 + 8<i32>:word32], ebp_119, esi_165, edi_163, es, ds, Mem159[esp_162 + 8<i32>:word32], out eax_256, out ecx_257)
	ebpOut = Mem159[ebp_119 + 0x204<32>:word32]
	esiOut = esi_165
	ediOut = edi_163
	return edx_147
fn00428BE0_exit:


word32 fn00428DE0(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428BE0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut: edx esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00428DE0_entry:
	ptr32 fp
	const wchar_t * ptrLoc40
	const char * ptrLoc3C
	_Mbstatet tLoc38
	struct <anonymous> tLoc30
	word32 ecx
l00428DE0:
	word32 eax_7 = Mem0[0x0043A008<p32>:word32] ^ &ptrLoc40
	Mem37[&tLoc38:word64] = 0<64>
	branch in(dwArg18, &tLoc38, dwArg04, dwArg08, &ptrLoc3C, dwArg0C, dwArg10, &ptrLoc40) != 0<32> l00428E7B
l00428E7B:
	word32 esi_59
	fn00428550(&tLoc30, esi_59, fn0042C310(out esi_59), 0x4313FC<32>)
	CxxThrowException(&tLoc30, 0x43730C<32>)
	int3()
	Mem92[esp_83 - 4<32>:word32] = Mem82[0x0043A008<p32>:word32] ^ esp_83 - 0x40<32>
	word32 eax_93 = Mem92[esp_83 + 0x10<32>:word32]
	word32 ecx_95 = Mem92[esp_83 + 8<32>:word32]
	word32 edx_96 = Mem92[esp_83 + 0x18<32>:word32]
	Mem98[esp_83 - 0x44<32>:word32] = dwArg0C
	word32 ebx_99 = Mem98[esp_83 + 0xC<32>:word32]
	Mem101[esp_83 - 0x48<32>:word32] = &ptrLoc40
	Mem103[esp_83 - 0x4C<32>:word32] = esi_59
	word32 esi_104 = Mem103[esp_83 + 4<32>:word32]
	Mem107[esp_83 - 0x50<32>:word32] = dwArg14
	word32 edi_108 = Mem107[esp_83 + 0x14<32>:word32]
	Mem110[esp_83 - 0x54<32>:word32] = esp_83 - 0x40<32>
	Mem112[esp_83 - 0x58<32>:word32] = eax_93
	Mem114[esp_83 - 0x5C<32>:word32] = ebx_99
	Mem117[esp_83 - 0x38<32>:word64] = 0<64>
	Mem119[esp_83 - 0x60<32>:word32] = esp_83 - 0x3C<32>
	Mem121[esp_83 - 0x64<32>:word32] = ecx_95
	Mem123[esp_83 - 0x68<32>:word32] = esi_104
	Mem127[esp_83 - 0x6C<32>:word32] = esp_83 - 0x38<32>
	branch out(edx_96, Mem127[esp_83 - 0x6C<32>:(ptr32 _Mbstatet)], Mem127[esp_83 - 0x68<32>:(ptr32 wchar_tconst )], Mem127[esp_83 - 0x64<32>:(ptr32 wchar_tconst )], Mem127[esp_83 - 0x60<32>:(ptr32 (ptr32 wchar_tconst ))], Mem127[esp_83 - 0x5C<32>:(ptr32 charconst )], Mem127[esp_83 - 0x58<32>:(ptr32 charconst )], Mem127[esp_83 - 0x54<32>:(ptr32 (ptr32 charconst ))]) != 0<32> l00428F39
l00428F39:
	Mem135[esp_83 - 0x54<32>:word32] = 0x431428<32>
	word32 esi_138
	Mem144[esp_83 - 0x58<32>:word32] = fn0042C310(out esi_138)
	Mem146[esp_83 - 0x5C<32>:word32] = esi_138
	fn00428550(esp_83 - 0x30<32>, Mem146[esp_83 - 0x5C<32>:word32], Mem146[esp_83 - 0x58<32>:word32], Mem146[esp_83 - 0x54<32>:word32])
	CxxThrowException(esp_83 - 0x30<32>, 0x43730C<32>)
	int3()
	int3()
	int3()
l00428F5F_thunk_fn00428F60:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	return fn00428F60(ecx, stackArg4, stackArg8)
l00428EF4:
	word32 ecx_177
	word32 eax_174 = Mem127[edi_108 + 20<i32>:word32]
	branch eax_174 <u 0x10<32> l00428F00
l00428F00:
	ecx_177 = edi_108
l00428EFC:
	ecx_177 = Mem127[edi_108:word32]
l00428F02:
	word32 eax_187
	word32 edx_181 = Mem127[edi_108 + 16<i32>:word32]
	word32 ecx_183 = ecx_177 + edx_181
	branch eax_174 <u 0x10<32> l00428F10
l00428F10:
	eax_187 = edi_108
l00428F0C:
	eax_187 = Mem127[edi_108:word32]
l00428F12:
	Mem194[esp_83 - 0x54<32>:word32] = Mem127[esp_83 - 0x3C<32>:word32]
	Mem201[esp_83 - 0x58<32>:word32] = Mem194[esp_83 - 0x40<32>:word32]
	Mem205[esp_83 - 0x5C<32>:word32] = ebx_99
	Mem208[esp_83 - 0x60<32>:word32] = ecx_183
	Mem210[esp_83 - 0x64<32>:word32] = eax_187 + edx_181
	word32 edx_218 = fn00428320(edi_108, Mem210[esp_83 - 0x64<32>:word32], Mem210[esp_83 - 0x60<32>:word32], Mem210[esp_83 - 0x5C<32>:word32], Mem210[esp_83 - 0x58<32>:word32])
	word32 eax_461
	word32 ecx_462
	fn00427500(Mem210[esp_83 - 4<32>:word32] ^ esp_83 - 0x40<32>, edx_218, Mem210[esp_83 - 0x44<32>:word32], Mem210[esp_83 - 0x48<32>:word32], Mem210[esp_83 - 0x4C<32>:word32], Mem210[esp_83 - 0x50<32>:word32], es, ds, Mem210[esp_83 - 0x44<32>:word32], out eax_461, out ecx_462)
	return edx_218
l00428E34:
	word32 ecx_266
	word32 edx_263 = Mem47[dwArg14 + 20<i32>:word32]
	branch edx_263 <u 8<32> l00428E40
l00428E40:
	ecx_266 = dwArg14
l00428E3C:
	ecx_266 = Mem47[dwArg14:word32]
l00428E42:
	word32 edx_277
	word32 eax_270 = Mem47[dwArg14 + 16<i32>:word32]
	word32 ecx_273 = ecx_266 + eax_270 * 2<32>
	branch edx_263 <u 8<32> l00428E52
l00428E52:
	edx_277 = dwArg14
l00428E4E:
	edx_277 = Mem47[dwArg14:word32]
l00428E54:
	word32 edx_324 = fn004283A0(dwArg14, eax_270 * 2<32> + edx_277, ecx_273, dwArg0C, Mem284[&ptrLoc40:word32])
	word32 eax_459
	word32 ecx_460
	fn00427500(eax_7 ^ fp - 0x40<32>, edx_324, ebx, ebp, esi, edi, es, ds, ebx, out eax_459, out ecx_460)
	return edx_324
fn00428DE0_exit:


word32 fn00428F60(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004283A0
//      fn00428DE0
//      fn0042A070
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00428F60_entry:
	ptr32 fp
	selector fs
l00428F60:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 16<i32>
	word32 esp_27 = fp - 32<i32>
	word32 edi_33 = Mem30[ecx + 16<i32>:word32]
	word32 edx_34 = dwArg04
	branch edi_33 >=u dwArg04 l00428F96
l00428F91:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 ecx_179
	fn00428A30(stackArg0, out ecx_179, out edx_34)
	esp_27 = fp - 0x1C<32>
l00428F96:
	branch edi_33 - edx_34 >u dwArg08 l00428FBE
l00428FBE:
	branch dwArg08 == 0<32> l00429004
l00428FC2:
	word32 eax_59
	branch Mem30[ecx + 20<i32>:word32] <u 8<32> l00428FCC
l00428FCC:
	eax_59 = ecx
l00428FC8:
	eax_59 = Mem30[ecx:word32]
l00428FCE:
	word32 eax_87
	word32 edi_66 = edi_33 - dwArg08
	word32 esp_74 = esp_27 - 4<i32>
	Mem75[esp_74:word32] = (edi_66 - edx_34) * 2<32>
	word32 ecx_63 = eax_59 + edx_34 * 2<32>
	Mem78[esp_74 - 4<i32>:word32] = ecx_63 + dwArg08 * 2<32>
	Mem80[esp_74 - 8<i32>:word32] = ecx_63
	memmove(Mem80[esp_74 - 8<i32>:(ptr32 void)], Mem80[esp_74 - 4<i32>:(ptr32 void)], Mem80[esp_74:size_t])
	Mem84[ecx + 16<i32>:word32] = edi_66
	branch Mem84[ecx + 20<i32>:word32] <u 8<32> l00428FFC
l00428FFC:
	eax_87 = ecx
l00428FF8:
	eax_87 = Mem84[ecx:word32]
l00428FFE:
	Mem95[eax_87 + edi_66 * 2<32>:word16] = 0<16>
l00428FA1:
	Mem97[ecx + 16<i32>:word32] = edx_34
	branch Mem30[ecx + 20<i32>:word32] <u 8<32> l00428FB4
l00428FB4:
	Mem104[ecx + edx_34 * 2<32>:word16] = 0<16>
l00428FAA:
	Mem110[Mem97[ecx:word32] + edx_34 * 2<32>:word16] = 0<16>
l00429004:
	Mem122[fs:0x00000000<p32>:word32] = eax_13
	return edx_34
fn00428F60_exit:


void fn00429050(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004290A0
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esp
fn00429050_entry:
	ptr32 fp
	selector fs
l00429050:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem21[fs:0<32>:word32] = fp - 16<i32>
	memmove(dwArg04, dwArg08, dwArg0C * 2<32>)
	Mem36[fs:0x00000000<p32>:word32] = eax_13
	return
fn00429050_exit:


word32 fn004290A0(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004294A0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn004290A0_entry:
	ptr32 fp
	selector fs
l004290A0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 esp_121 = fp - 0x2C<32>
	word32 eax_34 = Mem31[ecx + 16<i32>:word32]
	branch eax_34 >=u dwArg04 l004290D9
l004290D4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 ecx_1042
	word32 edx_1043
	eax_34 = fn00428A30(stackArg0, out ecx_1042, out edx_1043)
	esp_121 = fp - 0x28<32>
l004290D9:
	word32 edx_128 = dwArg10
	branch Mem31[dwArg0C + 16<i32>:word32] >=u dwArg10 l004290E9
l004290E4:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 ecx_1045
	eax_34 = fn00428A30(stackArg0, out ecx_1045, out edx_128)
	esp_121 = esp_121 + 4<32>
l004290E9:
	word32 eax_70 = eax_34 - dwArg04
	word32 eax_75 = fp - 28<i32>
	branch eax_70 <u dwArg08 l00429100
l004290FD_1:
	eax_75 = fp - 24<i32>
l00429100:
	word32 eax_84 = Mem80[eax_75:word32]
	word32 eax_102 = fp + 20<i32>
	branch Mem85[dwArg0C + 16<i32>:word32] - edx_128 <u dwArg14 l00429125
l00429122_1:
	eax_102 = fp - 28<i32>
l00429125:
	word32 ecx_127
	word32 ecx_103 = Mem95[eax_102:word32]
	word32 eax_108 = Mem95[ecx + 16<i32>:word32] - eax_84
	ecx_127 = ecx_103
	branch ~ecx_103 >u eax_108 l00429144
l0042913F:
	fn00428A20(out ecx_127, out edx_128)
	esp_121 = esp_121 + 4<32>
l00429144:
	word32 ebx_137 = eax_108 + ecx_127
	word32 v15_138 = eax_70 - eax_84
	word32 ebx_143 = dwArg0C
	branch Mem139[ecx + 16<i32>:word32] >=u ebx_137 l004291A9
l0042915A:
	branch ebx_137 != 0<32> l0042918B
l0042918B:
	branch Mem142[ecx + 20<i32>:word32] >=u ebx_137 l004291A9
l00429196:
	Mem154[esp_121 - 4<i32>:word32] = ebx_137
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 ebp_1048
	word32 esi_1049
	word32 edi_1050
	word32 ebx_1047
	fn004288A0(ecx, stackArg4, out ebx_1047, out ebp_1048, out esi_1049, out edi_1050)
	word32 esp_158 = <invalid>
	esp_121 = esp_158 + 4<32>
	ecx_127 = ecx_103
l00429160:
	Mem168[ecx + 16<i32>:word32] = 0<32>
	branch Mem142[ecx + 20<i32>:word32] <u 8<32> l0042917C
l0042917C:
	Mem176[ecx:word16] = 0<16>
l0042916D:
	Mem184[Mem168[ecx:word32]:word16] = 0<16>
l004291A6:
	edx_128 = dwArg10
l004291A9:
	branch ecx_127 != eax_84 l004291E6
l004291E6:
	branch ecx == dwArg0C l00429261
l00429261:
	branch ecx_127 >=u eax_84 l004292E0
l004292E0:
	branch dwArg10 >u dwArg04 l0042936B
l0042936B:
	word32 eax_337
	word32 edx_211 = dwArg04 + eax_84
	branch edx_211 >u dwArg10 l004293D6
l004293D6:
	word32 edx_217
	branch Mem212[ecx + 20<i32>:word32] <u 8<32> l004293E0
l004293E0:
	edx_217 = ecx
l004293DC:
	edx_217 = Mem212[ecx:word32]
l004293E2:
	word32 ecx_223
	branch Mem212[ecx + 20<i32>:word32] <u 8<32> l004293EC
l004293EC:
	ecx_223 = ecx
l004293E8:
	ecx_223 = Mem212[ecx:word32]
l004293EE:
	word32 eax_260
	word32 esp_229 = esp_121 - 4<i32>
	Mem232[esp_229:word32] = eax_84
	Mem239[esp_229 - 4<i32>:word32] = edx_217 + dwArg10 * 2<32>
	Mem245[esp_229 - 8<i32>:word32] = ecx_223 + dwArg04 * 2<32>
	fn00429050(Mem245[esp_229 - 8<i32>:word32], Mem245[esp_229 - 4<i32>:word32], Mem245[esp_229:word32])
	branch Mem245[ecx + 20<i32>:word32] <u 8<32> l00429409
l00429409:
	eax_260 = ecx
l00429405:
	eax_260 = Mem245[ecx:word32]
l0042940B:
	word32 ecx_266
	branch Mem245[ecx + 20<i32>:word32] <u 8<32> l00429415
l00429415:
	ecx_266 = ecx
l00429411:
	ecx_266 = Mem245[ecx:word32]
l00429417:
	word32 edi_307
	Mem278[esp_229:word32] = v15_138
	Mem285[esp_229 - 4<i32>:word32] = eax_260 + edx_211 * 2<32>
	Mem294[esp_229 - 8<i32>:word32] = ecx_266 + (ecx_103 + dwArg04) * 2<32>
	fn00429050(Mem294[esp_229 - 8<i32>:word32], Mem294[esp_229 - 4<i32>:word32], Mem294[esp_229:word32])
	branch Mem294[ecx + 20<i32>:word32] <u 8<32> l00429440
l00429440:
	edi_307 = ecx
l0042943C:
	edi_307 = Mem294[ecx:word32]
l00429442:
	word32 edx_313
	branch Mem294[ecx + 20<i32>:word32] <u 8<32> l0042944C
l0042944C:
	edx_313 = ecx
l00429448:
	edx_313 = Mem294[ecx:word32]
l0042944E:
	Mem324[esp_229:word32] = ecx_103 - eax_84
	Mem334[esp_229 - 4<i32>:word32] = edi_307 + (dwArg10 + ecx_103) * 2<32>
	eax_337 = edx_211 * 2<32> + edx_313
l00429375:
	word32 eax_341
	branch Mem212[ecx + 20<i32>:word32] <u 8<32> l0042937F
l0042937F:
	eax_341 = ecx
l0042937B:
	eax_341 = Mem212[ecx:word32]
l00429381:
	word32 edx_347
	branch Mem212[ecx + 20<i32>:word32] <u 8<32> l0042938B
l0042938B:
	edx_347 = ecx
l00429387:
	edx_347 = Mem212[ecx:word32]
l0042938D:
	word32 edx_384
	word32 esp_356 = esp_121 - 4<i32>
	Mem357[esp_356:word32] = v15_138
	Mem362[esp_356 - 4<i32>:word32] = eax_341 + edx_211 * 2<32>
	Mem371[esp_356 - 8<i32>:word32] = edx_347 + (dwArg04 + ecx_127) * 2<32>
	fn00429050(Mem371[esp_356 - 8<i32>:word32], Mem371[esp_356 - 4<i32>:word32], Mem371[esp_356:word32])
	branch Mem371[ecx + 20<i32>:word32] <u 8<32> l004293B0
l004293B0:
	edx_384 = ecx
l004293AC:
	edx_384 = Mem371[ecx:word32]
l004293B2:
	word32 ecx_390
	branch Mem371[ecx + 20<i32>:word32] <u 8<32> l004293BC
l004293BC:
	ecx_390 = ecx
l004293B8:
	ecx_390 = Mem371[ecx:word32]
l004293BE:
	Mem403[esp_356:word32] = ecx_103
	Mem408[esp_356 - 4<i32>:word32] = edx_384 + ((dwArg10 - eax_84) + ecx_103) * 2<32>
	eax_337 = ecx_390 + dwArg04 * 2<32>
l00429463:
	word32 esp_413 = esp_121 - 8<i32>
	Mem416[esp_413 - 4<i32>:word32] = eax_337
	fn00429050(Mem416[esp_413 - 4<i32>:word32], Mem416[esp_413:word32], Mem416[esp_413 + 4<i32>:word32])
l004292EB:
	word32 dwArg04_845
	branch Mem204[ecx + 20<i32>:word32] <u 8<32> l004292F8
l004292F8:
	dwArg04_845 = ecx
l004292F1:
	dwArg04_845 = Mem204[ecx:word32]
l004292FB:
	word32 edx_437
	branch Mem434[ecx + 20<i32>:word32] <u 8<32> l00429305
l00429305:
	edx_437 = ecx
l00429301:
	edx_437 = Mem434[ecx:word32]
l00429307:
	word32 edx_469
	word32 esp_447 = esp_121 - 4<i32>
	Mem448[esp_447:word32] = v15_138 * 2<32>
	Mem456[esp_447 - 4<i32>:word32] = dwArg04_845 + (eax_84 + dwArg04) * 2<32>
	Mem463[esp_447 - 8<i32>:word32] = edx_437 + (dwArg04 + ecx_127) * 2<32>
	memmove(Mem463[esp_447 - 8<i32>:(ptr32 void)], Mem463[esp_447 - 4<i32>:(ptr32 void)], Mem463[esp_447:size_t])
	branch Mem463[ecx + 20<i32>:word32] <u 8<32> l0042933A
l0042933A:
	edx_469 = ecx
l00429336:
	edx_469 = Mem463[ecx:word32]
l0042933C:
	word32 ecx_475
	branch Mem463[ecx + 20<i32>:word32] <u 8<32> l00429346
l00429346:
	ecx_475 = ecx
l00429342:
	ecx_475 = Mem463[ecx:word32]
l00429348:
	Mem487[esp_447:word32] = ecx_103 * 2<32>
	Mem493[esp_447 - 4<i32>:word32] = edx_469 + dwArg10 * 2<32>
	Mem499[esp_447 - 8<i32>:word32] = ecx_475 + dwArg04 * 2<32>
	memmove(Mem499[esp_447 - 8<i32>:(ptr32 void)], Mem499[esp_447 - 4<i32>:(ptr32 void)], Mem499[esp_447:size_t])
l00429265:
	word32 dwArg10_863
	branch Mem204[ecx + 20<i32>:word32] <u 8<32> l00429272
l00429272:
	dwArg10_863 = ecx
l0042926B:
	dwArg10_863 = Mem204[ecx:word32]
l00429275:
	word32 ebx_510
	branch Mem507[ecx + 20<i32>:word32] <u 8<32> l0042927F
l0042927F:
	ebx_510 = ecx
l0042927B:
	ebx_510 = Mem507[ecx:word32]
l00429281:
	word32 edx_543
	word32 esp_520 = esp_121 - 4<i32>
	Mem521[esp_520:word32] = ecx_127 * 2<32>
	Mem530[esp_520 - 4<i32>:word32] = dwArg10_863 + edx_128 * 2<32>
	Mem537[esp_520 - 8<i32>:word32] = ebx_510 + dwArg04 * 2<32>
	memmove(Mem537[esp_520 - 8<i32>:(ptr32 void)], Mem537[esp_520 - 4<i32>:(ptr32 void)], Mem537[esp_520:size_t])
	branch Mem537[ecx + 20<i32>:word32] <u 8<32> l004292AC
l004292AC:
	edx_543 = ecx
l004292A8:
	edx_543 = Mem537[ecx:word32]
l004292AE:
	word32 ecx_549
	branch Mem537[ecx + 20<i32>:word32] <u 8<32> l004292B8
l004292B8:
	ecx_549 = ecx
l004292B4:
	ecx_549 = Mem537[ecx:word32]
l004292BA:
	Mem560[esp_520:word32] = v15_138 * 2<32>
	Mem569[esp_520 - 4<i32>:word32] = edx_543 + (eax_84 + dwArg04) * 2<32>
	Mem576[esp_520 - 8<i32>:word32] = ecx_549 + (ecx_103 + dwArg04) * 2<32>
	memmove(Mem576[esp_520 - 8<i32>:(ptr32 void)], Mem576[esp_520 - 4<i32>:(ptr32 void)], Mem576[esp_520:size_t])
l004291EA:
	word32 dwArg04_881
	branch Mem204[ecx + 20<i32>:word32] <u 8<32> l004291F7
l004291F7:
	dwArg04_881 = ecx
l004291F0:
	dwArg04_881 = Mem204[ecx:word32]
l004291FA:
	word32 edx_589
	branch Mem586[ecx + 20<i32>:word32] <u 8<32> l00429204
l00429204:
	edx_589 = ecx
l00429200:
	edx_589 = Mem586[ecx:word32]
l00429206:
	word32 esp_599 = esp_121 - 4<i32>
	Mem600[esp_599:word32] = v15_138 * 2<32>
	Mem608[esp_599 - 4<i32>:word32] = dwArg04_881 + (eax_84 + dwArg04) * 2<32>
	Mem615[esp_599 - 8<i32>:word32] = edx_589 + (dwArg04 + ecx_127) * 2<32>
	memmove(Mem615[esp_599 - 8<i32>:(ptr32 void)], Mem615[esp_599 - 4<i32>:(ptr32 void)], Mem615[esp_599:size_t])
	word32 ebx_617 = dwArg0C
	branch Mem615[dwArg0C + 20<i32>:word32] <u 8<32> l0042923A
l00429238:
	ebx_617 = Mem615[dwArg0C:word32]
l0042923A:
	word32 ecx_627
	branch Mem615[ecx + 20<i32>:word32] <u 8<32> l00429244
l00429244:
	ecx_627 = ecx
l00429240:
	ecx_627 = Mem615[ecx:word32]
l00429246:
	Mem638[esp_599:word32] = ecx_103 * 2<32>
	Mem644[esp_599 - 4<i32>:word32] = ebx_617 + dwArg10 * 2<32>
	Mem650[esp_599 - 8<i32>:word32] = ecx_627 + dwArg04 * 2<32>
	memcpy(Mem650[esp_599 - 8<i32>:(ptr32 void)], Mem650[esp_599 - 4<i32>:(ptr32 void)], Mem650[esp_599:size_t])
l004291AD:
	branch Mem204[dwArg0C + 20<i32>:word32] <u 8<32> l004291B5
l004291B3:
	ebx_143 = Mem204[dwArg0C:word32]
l004291B5:
	word32 dwArg10_902
	branch Mem204[ecx + 20<i32>:word32] <u 8<32> l004291C2
l004291C2:
	dwArg10_902 = ecx
l004291BB:
	dwArg10_902 = Mem204[ecx:word32]
l004291C5:
	word32 esp_670 = esp_121 - 4<i32>
	Mem671[esp_670:word32] = ecx_127 * 2<32>
	Mem678[esp_670 - 4<i32>:word32] = ebx_143 + edx_128 * 2<32>
	Mem684[esp_670 - 8<i32>:word32] = dwArg10_902 + dwArg04 * 2<32>
	memmove(Mem684[esp_670 - 8<i32>:(ptr32 void)], Mem684[esp_670 - 4<i32>:(ptr32 void)], Mem684[esp_670:size_t])
l00429469:
	word32 eax_703
	Mem701[ecx + 16<i32>:word32] = ebx_137
	branch Mem688[ecx + 20<i32>:word32] <u 8<32> l0042947C
l0042947C:
	eax_703 = ecx
l00429478:
	eax_703 = Mem701[ecx:word32]
l0042947E:
	Mem711[eax_703 + ebx_137 * 2<32>:word16] = 0<16>
	Mem732[fs:0x00000000<p32>:word32] = eax_13
	return 0<32>
fn004290A0_exit:


word32 fn004294A0(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004283A0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn004294A0_entry:
	ptr32 fp
	selector fs
l004294A0:
	word32 ecx_37
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 esp_105 = fp - 0x28<32>
	word32 edx_111 = Mem31[ecx + 20<i32>:word32]
	ecx_37 = ecx
	branch edx_111 <u 8<32> l004294D4
l004294D2:
	ecx_37 = Mem31[ecx:word32]
l004294D4:
	branch ecx_37 >u dwArg0C l0042951A
l004294DB:
	branch dwArg0C >=u ecx_37 + Mem31[ecx + 16<i32>:word32] * 2<32> l0042951A
l0042951A:
	word32 edi_51 = Mem31[ecx + 16<i32>:word32]
	word32 eax_53 = dwArg04
	branch edi_51 >=u dwArg04 l00429529
l00429524:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 ecx_606
	eax_53 = fn00428A30(stackArg0, out ecx_606, out edx_111)
	esp_105 = fp - 0x24<32>
l00429529:
	word32 v20_77 = edi_51 - eax_53
	word32 eax_82 = fp - 24<i32>
	branch v20_77 <u dwArg08 l00429547
l00429544_1:
	eax_82 = fp - 20<i32>
l00429547:
	word32 ecx_110
	word32 ecx_89 = Mem83[eax_82:word32]
	ecx_110 = ecx_89
	branch ~dwArg10 >u edi_51 - ecx_89 l0042955C
l00429557:
	fn00428A20(out ecx_110, out edx_111)
	esp_105 = esp_105 + 4<32>
l0042955C:
	word32 eax_120 = v20_77 - ecx_110
	branch dwArg10 >=u ecx_110 l004295C3
l0042956B:
	word32 dwLoc14_455
	branch edx_111 <u 8<32> l0042957A
l0042957A:
	dwLoc14_455 = ecx
l00429570:
	dwLoc14_455 = Mem121[ecx:word32]
l0042957D:
	word32 dwArg0C_460
	branch edx_111 <u 8<32> l0042958C
l0042958C:
	dwArg0C_460 = ecx
l00429582:
	dwArg0C_460 = Mem142[ecx:word32]
l0042958F:
	word32 esp_155 = esp_105 - 4<i32>
	Mem156[esp_155:word32] = eax_120 * 2<32>
	Mem165[esp_155 - 4<i32>:word32] = dwLoc14_455 + (dwArg04 + ecx_110) * 2<32>
	Mem171[esp_155 - 8<i32>:word32] = dwArg0C_460 + (dwArg04 + dwArg10) * 2<32>
	memmove(Mem171[esp_155 - 8<i32>:(ptr32 void)], Mem171[esp_155 - 4<i32>:(ptr32 void)], Mem171[esp_155:size_t])
	ecx_110 = ecx_89
l004295C3:
	word32 esp_201 = esp_105
	word32 edi_185 = Mem179[ecx + 16<i32>:word32] - ecx_110 + dwArg10
	branch dwArg10 != 0<32> l004295D9
l004295D1:
	branch ecx_110 == 0<32> l0042969B
l004295D9:
	branch edi_185 != 0<32> l004295FE
l004295FE:
	branch Mem179[ecx + 20<i32>:word32] >=u edi_185 l00429611
l00429603:
	Mem203[esp_105 - 4<i32>:word32] = edi_185
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg4 = <invalid>
	word32 edi_611
	word32 ebx_608
	word32 ebp_609
	word32 esi_610
	fn004288A0(ecx, stackArg4, out ebx_608, out ebp_609, out esi_610, out edi_611)
	word32 esp_221 = <invalid>
	esp_201 = esp_221 + 4<32>
	ecx_110 = ecx_89
l00429611:
	branch ecx_110 >=u dwArg10 l00429666
l00429615:
	word32 dwArg0C_482
	branch Mem237[ecx + 20<i32>:word32] <u 8<32> l00429622
l00429622:
	dwArg0C_482 = ecx
l0042961B:
	dwArg0C_482 = Mem237[ecx:word32]
l00429625:
	word32 dwLoc18_484
	branch Mem245[ecx + 20<i32>:word32] <u 8<32> l00429632
l00429632:
	dwLoc18_484 = ecx
l0042962B:
	dwLoc18_484 = Mem245[ecx:word32]
l00429635:
	word32 esp_260 = esp_201 - 4<i32>
	Mem261[esp_260:word32] = eax_120 * 2<32>
	Mem270[esp_260 - 4<i32>:word32] = dwArg0C_482 + (dwArg04 + ecx_110) * 2<32>
	Mem277[esp_260 - 8<i32>:word32] = dwLoc18_484 + (dwArg04 + dwArg10) * 2<32>
	memmove(Mem277[esp_260 - 8<i32>:(ptr32 void)], Mem277[esp_260 - 4<i32>:(ptr32 void)], Mem277[esp_260:size_t])
l00429666:
	word32 ecx_287
	branch Mem284[ecx + 20<i32>:word32] <u 8<32> l00429670
l00429670:
	ecx_287 = ecx
l0042966C:
	ecx_287 = Mem284[ecx:word32]
l00429672:
	word32 eax_321
	word32 esp_294 = esp_201 - 4<i32>
	Mem295[esp_294:word32] = dwArg10 * 2<32>
	Mem305[esp_294 - 4<i32>:word32] = dwArg0C
	Mem309[esp_294 - 8<i32>:word32] = ecx_287 + dwArg04 * 2<32>
	memcpy(Mem309[esp_294 - 8<i32>:(ptr32 void)], Mem309[esp_294 - 4<i32>:(ptr32 void)], Mem309[esp_294:size_t])
	Mem318[ecx + 16<i32>:word32] = edi_185
	branch Mem318[ecx + 20<i32>:word32] <u 8<32> l00429693
l00429693:
	eax_321 = ecx
l0042968F:
	eax_321 = Mem318[ecx:word32]
l00429695:
	Mem329[eax_321 + edi_185 * 2<32>:word16] = 0<16>
l004295DD:
	Mem331[ecx + 16<i32>:word32] = edi_185
	branch Mem179[ecx + 20<i32>:word32] <u 8<32> l004295F2
l004295F2:
	Mem338[ecx:word16] = 0<16>
l004295E6:
	Mem344[Mem331[ecx:word32]:word16] = 0<16>
l0042969B:
	Mem359[fs:0x00000000<p32>:word32] = eax_13
	return dwArg10
l004294E5:
	word32 eax_374
	branch edx_111 <u 8<32> l004294EE
l004294EE:
	eax_374 = ecx
l004294EA:
	eax_374 = Mem31[ecx:word32]
l004294F0:
	word32 edx_407 = fn004290A0(ecx, dwArg04, dwArg08, ecx, dwArg0C - eax_374 >> 1<32>, dwArg10)
	Mem412[fs:0x00000000<p32>:word32] = eax_13
	return edx_407
fn004294A0_exit:


word32 fn004297C0(word32 ecx, word32 ebx, word32 edi, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00429930
// MayUse:  ebx:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: eax ebp esp
// Trashed: SCZO eax ebp ecx edx esp Top
// Preserved: ebx edi esi
fn004297C0_entry:
	ptr32 fp
	selector fs
	word32 dwLoc30
l004297C0:
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	Mem39[ecx:word32] = 0<32>
	word32 ebp_42
	word32 ecx_107
	word32 eax_41 = fn00427511(ebx, ecx, edi, dwLoc30, 0x10<32>, eax_27, out ecx_107, out ebp_42)
	word32 edx_48 = eax_41
	branch eax_41 == 0<32> l00429826
l00429826:
	edx_48 = 0<32>
l0042980A:
	word32 eax_56 = Mem40[ebp_42 + 8<i32>:word32]
	Mem57[eax_41 + 4<i32>:word32] = 1<32>
	Mem58[eax_41 + 8<i32>:word32] = 1<32>
	Mem59[eax_41:word32] = 0x004315A0<p32>
	Mem60[eax_41 + 12<i32>:word32] = eax_56
l00429828:
	Mem63[ecx:word32] = edx_48
	Mem68[fs:0x00000000<p32>:word32] = Mem63[ebp_42 - 12<i32>:word32]
	ebpOut = Mem68[ebp_42:word32]
	return ecx
fn004297C0_exit:


word32 fn00429880(word32 ebx, word32 dwArg04, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00429A30
//      fn00429B30
// MayUse:  ebx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebp esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00429880_entry:
	ptr32 fp
	selector fs
l00429880:
	Mem30[fs:0<32>:word32] = fp - 16<i32>
	word32 esi_52
	word32 ebp_47 = fn00429930(fp - 20<i32>, ebx, dwArg04, out esi_52)
	word32 eax_58 = Mem44[esi_52:word32]
	Mem61[esi_52:word32] = Mem44[ebp_47 - 20<i32>:word32]
	word32 edi_62 = Mem61[esi_52 + 4<i32>:word32]
	Mem63[ebp_47 - 20<i32>:word32] = eax_58
	Mem65[esi_52 + 4<i32>:word32] = Mem63[ebp_47 - 16<i32>:word32]
	Mem66[ebp_47 - 16<i32>:word32] = edi_62
	Mem67[ebp_47 - 4<i32>:word32] = 1<32>
	word32 esp_53 = <invalid>
	word32 esp_104 = esp_53 + 0xC<32>
	branch edi_62 == 0<32> l0042991A
l004298EF:
	__lock()
	Mem74[edi_62 + 4<i32>:word32] = __xadd<word32>(Mem67[edi_62 + 4<i32>:word32], 0xFFFFFFFF<32>)
	branch true l0042991A
l00429900:
	word32 eax_78 = Mem74[edi_62:word32]
	call Mem74[eax_78 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_78,ecx:edi_62
		defs: esp:esp_80
	__lock()
	Mem87[edi_62 + 8<i32>:word32] = __xadd<word32>(Mem74[edi_62 + 8<i32>:word32], 0xFFFFFFFF<32>)
	branch true l0042991A
l00429913:
	word32 eax_91 = Mem87[edi_62:word32]
	call Mem87[eax_91 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_91,ecx:edi_62
		defs: esp:esp_93
l0042991A:
	Mem103[fs:0x00000000<p32>:word32] = Mem100[ebp_47 - 12<i32>:word32]
	word32 ebp_111 = Mem103[ebp_47:word32]
	esiOut = Mem103[esp_104 + 8<i32>:word32]
	return ebp_111
fn00429880_exit:


word32 fn00429930(word32 ecx, word32 ebx, word32 dwArg08, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00429880
// MayUse:  ebx:[0..31] ecx:[0..31] fs:[0..15] Stack +0008:[0..31]
// LiveOut: ebp esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00429930_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc14
l00429930:
	Mem18[&tLoc14:word32] = ecx
	Mem35[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_41
	word32 eax_40 = fn004297C0(&tLoc14, ebx, dwArg08, out ebp_41)
	word32 edx_50 = Mem39[ebp_41 + 16<i32>:word32]
	word32 esi_52 = Mem39[edx_50:word32]
	Mem53[edx_50:word32] = Mem39[eax_40:word32]
	Mem54[eax_40:word32] = esi_52
	word32 esi_55 = Mem54[ebp_41 - 16<i32>:word32]
	Mem56[ebp_41 - 4<i32>:word32] = 0<32>
	word32 esp_44 = <invalid>
	word32 esp_49 = esp_44 + 4<32>
	branch esi_55 == 0<32> l004299A6
l0042997B:
	__lock()
	Mem63[esi_55 + 4<i32>:word32] = __xadd<word32>(Mem56[esi_55 + 4<i32>:word32], 0xFFFFFFFF<32>)
	branch true l004299A6
l0042998C:
	word32 eax_67 = Mem63[esi_55:word32]
	call Mem63[eax_67 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_67,ecx:esi_55
		defs: esp:esp_69
	__lock()
	Mem76[esi_55 + 8<i32>:word32] = __xadd<word32>(Mem63[esi_55 + 8<i32>:word32], 0xFFFFFFFF<32>)
	branch true l004299A6
l0042999F:
	word32 eax_80 = Mem76[esi_55:word32]
	call Mem76[eax_80 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_80,ecx:esi_55
		defs: esp:esp_82
l004299A6:
	word32 esp_89 = esp_49 - 4<i32>
	Mem91[esp_89:word32] = dwArg08
	Mem93[esp_89 - 4<i32>:word32] = dwArg08
	Mem97[esp_89 - 8<i32>:word32] = Mem93[ebp_41 + 8<i32>:word32]
	fn004029A0()
	Mem102[fs:0x00000000<p32>:word32] = Mem97[ebp_41 - 12<i32>:word32]
	word32 ebp_111 = Mem102[ebp_41:word32]
	esiOut = Mem102[esp_89 + 0xC<32>:word32]
	return ebp_111
fn00429930_exit:


word32 fn00429A30(word32 ecx, word32 ebx, word32 edi, word32 dwArg04, word32 dwArg10, word32 dwArg14, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A390
// MayUse:  ebx:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: ebp edi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00429A30_entry:
	ptr32 fp
	selector fs
l00429A30:
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	fn00429D00(ecx, dwArg10, dwArg14, dwArg04)
	Mem55[ecx:word32] = 0x00431498<p32>
	Mem56[ecx + 44<i32>:word32] = 0<32>
	Mem58[ecx + 48<i32>:word32] = 0<32>
	word32 ecx_215
	word32 ebp_216
	word32 eax_62 = fn00427511(ebx, ecx, edi, dwArg14, 0x48<32>, eax_27, out ecx_215, out ebp_216)
	branch eax_62 == 0<32> l00429ACB
l00429ACB:
	eax_62 = 0<32>
l00429A9B:
	Mem76[eax_62 + 16<i32>:word32] = 0<32>
	Mem80[eax_62 + 20<i32>:word32] = 7<32>
	Mem82[eax_62:word16] = 0<16>
	Mem83[eax_62 + 40<i32>:word32] = 0<32>
	Mem84[eax_62 + 44<i32>:word32] = 7<32>
	Mem85[eax_62 + 24<i32>:word16] = 0<16>
	Mem86[eax_62 + 64<i32>:word32] = 0<32>
	Mem87[eax_62 + 68<i32>:word32] = 0xF<32>
	Mem89[eax_62 + 48<i32>:byte] = 0<8>
l00429ACD:
	word32 esi_104
	word32 ebp_122 = fn00429880(ebx, eax_62, out esi_104)
	word32 esp_105 = <invalid>
	word32 ecx_111 = Mem93[esi_104 + 44<i32>:word32]
	word32 eax_112 = Mem93[ebp_122 + 12<i32>:word32]
	branch ecx_111 == eax_112 l00429AEA
l00429AE0:
	Mem116[esp_105:word32] = 0xFFFFFFFF<32>
	Mem118[esp_105 - 4<i32>:word32] = 0<32>
	Mem120[esp_105 - 8<i32>:word32] = eax_112
	word32 ebx_217
	word32 edi_218
	fn0042A070(ecx_111, Mem120[esp_105 - 12<i32>:word32], Mem120[esp_105 - 8<i32>:word32], Mem120[esp_105 - 4<i32>:word32], Mem120[esp_105:word32], Mem120[esp_105 + 4<i32>:word32], out ebx_217, out ebp_122, out esi_104, out edi_218)
l00429AEA:
	word32 ecx_135 = Mem134[esi_104 + 44<i32>:word32]
	word32 eax_137 = Mem134[ebp_122 + 16<i32>:word32]
	branch ecx_135 + 0x18<32> == eax_137 l00429B17
l00429AF7:
	Mem143[esp_105:word32] = 0xFFFFFFFF<32>
	Mem145[esp_105 - 4<i32>:word32] = 0<32>
	Mem147[esp_105 - 8<i32>:word32] = eax_137
	word32 ebx_219
	word32 esi_220
	word32 edi_221
	fn0042A070(ecx_135 + 0x18<32>, Mem147[esp_105 - 12<i32>:word32], Mem147[esp_105 - 8<i32>:word32], Mem147[esp_105 - 4<i32>:word32], Mem147[esp_105:word32], Mem147[esp_105 + 4<i32>:word32], out ebx_219, out ebp_122, out esi_220, out edi_221)
l00429B17:
	Mem167[fs:0x00000000<p32>:word32] = Mem164[ebp_122 - 12<i32>:word32]
	word32 ebp_177 = Mem167[ebp_122:word32]
	ediOut = Mem167[esp_105 + 8<32>:word32]
	return ebp_177
fn00429A30_exit:


word32 fn00429B30(word32 ecx, word32 ebx, word32 edi, word32 dwArg04, word32 dwArg0C, word32 dwArg10, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A450
//      fn0042A710
// MayUse:  ebx:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: ebp edi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00429B30_entry:
	ptr32 fp
	selector fs
l00429B30:
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	fn00429D00(ecx, dwArg0C, dwArg10, dwArg04)
	Mem55[ecx:word32] = 0x00431498<p32>
	Mem56[ecx + 44<i32>:word32] = 0<32>
	Mem58[ecx + 48<i32>:word32] = 0<32>
	word32 ebp_185
	word32 ecx_184
	word32 eax_62 = fn00427511(ebx, ecx, edi, dwArg10, 0x48<32>, eax_27, out ecx_184, out ebp_185)
	branch eax_62 == 0<32> l00429BCB
l00429BCB:
	eax_62 = 0<32>
l00429B9B:
	Mem76[eax_62 + 16<i32>:word32] = 0<32>
	Mem80[eax_62 + 20<i32>:word32] = 7<32>
	Mem82[eax_62:word16] = 0<16>
	Mem83[eax_62 + 40<i32>:word32] = 0<32>
	Mem84[eax_62 + 44<i32>:word32] = 7<32>
	Mem85[eax_62 + 24<i32>:word16] = 0<16>
	Mem86[eax_62 + 64<i32>:word32] = 0<32>
	Mem87[eax_62 + 68<i32>:word32] = 0xF<32>
	Mem89[eax_62 + 48<i32>:byte] = 0<8>
l00429BCD:
	word32 esi_104
	word32 ebp_122 = fn00429880(ebx, eax_62, out esi_104)
	word32 esp_105 = <invalid>
	word32 ecx_111 = Mem93[esi_104 + 44<i32>:word32]
	word32 eax_112 = Mem93[ebp_122 + 12<i32>:word32]
	branch ecx_111 == eax_112 l00429C00
l00429BE0:
	Mem116[esp_105:word32] = 0xFFFFFFFF<32>
	Mem118[esp_105 - 4<i32>:word32] = 0<32>
	Mem120[esp_105 - 8<i32>:word32] = eax_112
	word32 ebx_186
	word32 esi_187
	word32 edi_188
	fn0042A070(ecx_111, Mem120[esp_105 - 12<i32>:word32], Mem120[esp_105 - 8<i32>:word32], Mem120[esp_105 - 4<i32>:word32], Mem120[esp_105:word32], Mem120[esp_105 + 4<i32>:word32], out ebx_186, out ebp_122, out esi_187, out edi_188)
l00429C00:
	Mem139[fs:0x00000000<p32>:word32] = Mem136[ebp_122 - 12<i32>:word32]
	word32 ebp_149 = Mem139[ebp_122:word32]
	ediOut = Mem139[esp_105 + 8<32>:word32]
	return ebp_149
fn00429B30_exit:


word32 fn00429C20(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B630
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esi esp
fn00429C20_entry:
	ptr32 fp
	selector fs
	word32 edx
l00429C20:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem24[fs:0<32>:word32] = fp - 16<i32>
	Mem28[ecx + 16<i32>:word32] = 0<32>
	Mem29[ecx + 20<i32>:word32] = 7<32>
	Mem31[ecx:word16] = 0<16>
	branch ecx == dwArg04 l00429C93
l00429C60:
	word32 eax_35 = Mem32[ecx + 20<i32>:word32]
	branch eax_35 <u 8<32> l00429C76
l00429C68:
	edx = fn004289B0(Mem43[ecx:word32], eax_35 + 1<32>, 2<32>)
l00429C76:
	Mem66[ecx + 16<i32>:word32] = 0<32>
	Mem67[ecx + 20<i32>:word32] = 7<32>
	Mem70[ecx:word16] = 0<16>
	fn0042A010(ecx, dwArg04)
l00429C93:
	Mem84[fs:0x00000000<p32>:word32] = eax_13
	return edx
fn00429C20_exit:


word32 fn00429CB0(word32 ecx, word32 dwArg04, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B630
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp ebx edx Top
// Preserved: ecx edi esi esp
fn00429CB0_entry:
l00429CB0:
	Mem19[ecx + 16<i32>:word32] = 0<32>
	Mem20[ecx + 20<i32>:word32] = 7<32>
	Mem22[ecx:word16] = 0<16>
	word32 eax_23 = dwArg04
l00429CD5:
	eax_23 = eax_80 + 2<32>
	eax_80 = eax_23
	branch Mem22[eax_80:word16] != 0<16> l00429CD5
l00429CE0:
	word32 ebp_48
	word32 esi_53
	word32 edi_79
	word32 ebx_78
	fn0042A160(ecx, dwArg04, eax_23 - (dwArg04 + 2<i32>) >> 1<32>, out ebx_78, out ebp_48, out esi_53, out edi_79)
	ebpOut = ebp_48
	return esi_53
fn00429CB0_exit:


void fn00429D00(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00429A30
//      fn00429B30
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top xmm0
// Preserved: esi esp
fn00429D00_entry:
	ptr32 fp
l00429D00:
	word32 ecx_10 = dwArg0C
	branch Mem11[dwArg0C + 20<i32>:word32] <u 0x10<32> l00429D16
l00429D14:
	ecx_10 = Mem11[dwArg0C:word32]
l00429D16:
	Mem17[ecx:word32] = 0x00431384<p32>
	Mem25[ecx + 4<i32>:word64] = 0<64>
	_std_exception_copy(fp - 8<32>, ecx + 4<i32>, ecx_10, 1<8>)
	Mem38[ecx + 12<i32>:word32] = dwArg04
	Mem40[ecx + 16<i32>:word32] = dwArg08
	Mem42[ecx:word32] = 0x004313F4<p32>
	Mem43[ecx + 36<i32>:word32] = 0<32>
	Mem44[ecx + 40<i32>:word32] = 0xF<32>
	Mem45[ecx + 20<i32>:byte] = 0<8>
	return
fn00429D00_exit:


void fn00429F30(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A230
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esi esp
fn00429F30_entry:
	ptr32 fp
	selector fs
l00429F30:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem24[fs:0<32>:word32] = fp - 16<i32>
	word32 eax_27 = Mem24[ecx + 68<i32>:word32]
	branch eax_27 <u 0x10<32> l00429F73
l00429F64:
	fn004289B0(Mem36[ecx + 48<i32>:word32], eax_27 + 1<32>, 1<32>)
l00429F73:
	word32 eax_51 = Mem50[ecx + 44<i32>:word32]
	branch eax_51 <u 8<32> l00429F91
l00429F82:
	fn004289B0(Mem62[ecx + 24<i32>:word32], eax_51 + 1<32>, 2<32>)
l00429F91:
	word32 eax_77 = Mem76[ecx + 20<i32>:word32]
	branch eax_77 <u 8<32> l00429FAE
l00429FA0:
	fn004289B0(Mem88[ecx:word32], eax_77 + 1<32>, 2<32>)
l00429FAE:
	Mem107[fs:0x00000000<p32>:word32] = eax_13
	return
fn00429F30_exit:


void fn00429FC0(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn00429FC0_entry:
l00429FC0:
	Mem12[ecx:word32] = 0x00431480<p32>
	branch (bArg04 & 1<8>) == 0<8> l00429FDB
l00429FD0:
	fn0042763F(ecx)
l00429FDB:
	return
fn00429FC0_exit:


void fn0042A010(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00429C20
//      fn0042B830
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: edi esi esp
fn0042A010_entry:
l0042A010:
	branch Mem10[dwArg04 + 20<i32>:word32] <u 8<32> l0042A02E
l0042A02E:
	memcpy(ecx, dwArg04, Mem10[dwArg04 + 16<i32>:word32] * 2<32> + 2<32>)
l0042A01E:
	branch ecx == 0<32> l0042A026
l0042A022:
	Mem30[ecx:word32] = Mem10[dwArg04:word32]
l0042A026:
	Mem32[dwArg04:word32] = 0<32>
l0042A043:
	Mem38[ecx + 16<i32>:word32] = Mem34[dwArg04 + 16<i32>:word32]
	Mem40[ecx + 20<i32>:word32] = Mem38[dwArg04 + 20<i32>:word32]
	Mem44[dwArg04 + 16<i32>:word32] = 0<32>
	Mem45[dwArg04 + 20<i32>:word32] = 7<32>
	Mem51[dwArg04:word16] = 0<16>
	return
fn0042A010_exit:


word32 fn0042A070(word32 ecx, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00429A30
//      fn00429B30
//      fn0042A070
//      fn0042B210
//      fn0042B830
//      fn0042C020
//      fn0042C2A0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: ebp ebx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn0042A070_entry:
	word32 ebx
	word32 ebp
	word32 esi
	word32 edi
	word32 dwLoc10
	word32 edx
l0042A070:
	word32 ebx_55 = dwArg04
	word32 ebp_11 = dwArg08
	word32 eax_15 = Mem14[dwArg04 + 16<i32>:word32]
	word32 esi_17 = ecx
	branch eax_15 <u dwArg08 l0042A14B
l0042A14B:
	word32 ecx_337
	word32 edx_338
	fn00428A30(dwLoc10, out ecx_337, out edx_338)
l0042A088:
	word32 eax_28 = eax_15 - dwArg08
	word32 edi_32 = dwArg0C
	branch eax_28 >=u dwArg0C l0042A094
l0042A091_1:
	edi_32 = eax_28
l0042A094:
	branch ecx != dwArg04 l0042A0C7
l0042A0C7:
	branch edi_32 != 0<32> l0042A0F2
l0042A0F2:
	branch Mem31[ecx + 20<i32>:word32] >=u edi_32 l0042A0FD
l0042A0F7:
	edx = fn004288A0(ecx, edi_32, out ebx_55, out ebp_11, out esi_17, out edi_32)
l0042A0FD:
	branch Mem67[ebx_55 + 20<i32>:word32] <u 8<32> l0042A105
l0042A103:
	ebx_55 = Mem67[ebx_55:word32]
l0042A105:
	word32 ecx_76
	branch Mem67[esi_17 + 20<i32>:word32] <u 8<32> l0042A10F
l0042A10F:
	ecx_76 = esi_17
l0042A10B:
	ecx_76 = Mem67[esi_17:word32]
l0042A111:
	memcpy(ecx_76, ebx_55 + ebp_11 * 2<32>, edi_32 * 2<32>)
	Mem102[esi_17 + 16<i32>:word32] = edi_32
	branch Mem102[esi_17 + 20<i32>:word32] <u 8<32> l0042A13C
l0042A13C:
	Mem110[esi_17 + edi_32 * 2<32>:word16] = 0<16>
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return edx
l0042A12B:
	Mem124[Mem102[esi_17:word32] + edi_32 * 2<32>:word16] = 0<16>
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return edx
l0042A0CB:
	Mem135[ecx + 16<i32>:word32] = edi_32
	branch Mem31[ecx + 20<i32>:word32] <u 8<32> l0042A0E4
l0042A0E4:
	Mem150[ecx:word16] = 0<16>
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return edx
l0042A0D4:
	Mem158[Mem135[ecx:word32]:word16] = 0<16>
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return edx
l0042A098:
	word32 eax_166 = edi_32 + dwArg08
	branch Mem31[ecx + 16<i32>:word32] <u eax_166 l0042A150
l0042A150:
	word32 ecx_172
	word32 edx_339
	fn00428A30(dwArg00, out ecx_172, out edx_339)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 ecx_186 = Mem185[ecx_172 + 20<i32>:word32]
	branch ecx_186 <u 8<32> l0042A170
l0042A16A_thunk_fn0042A170:
	word32 ebx_191
	word32 edi_193
	word32 esi_195
	word32 ebp_196
	word32 edx_194 = fn0042A170(ecx_186, ecx_172, dwArg0C, dwArg10, out ebx_191, out ebp_196, out esi_195, out edi_193)
	ebxOut = ebx_191
	ebpOut = ebp_196
	esiOut = esi_195
	ediOut = edi_193
	return edx_194
l0042A16A_thunk_fn0042A16C:
	word32 ebp_203
	word32 ebx_204
	word32 edi_206
	word32 esi_208
	word32 edx_207 = fn0042A16C(ecx_186, ecx_172, dwArg0C, dwArg10, out ebx_204, out ebp_203, out esi_208, out edi_206)
	ebxOut = ebx_204
	ebpOut = ebp_203
	esiOut = esi_208
	ediOut = edi_206
	return edx_207
l0042A0A4:
	word32 ecx_216
	Mem213[ecx + 16<i32>:word32] = eax_166
	ecx_216 = ecx
	branch Mem213[ecx + 20<i32>:word32] <u 8<32> l0042A0AF
l0042A0AD:
	ecx_216 = Mem213[ecx:word32]
l0042A0AF:
	Mem227[ecx_216 + eax_166 * 2<32>:word16] = 0<16>
	word32 edx_237 = fn00428F60(ecx, 0<32>, dwArg08)
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return edx_237
fn0042A070_exit:


word32 fn0042A160(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00429CB0
//      fn0042AB60
//      fn0042B210
//      fn0042B4C0
//      fn0042B560
//      fn0042B830
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp ebx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042A160_entry:
l0042A160:
	word32 ecx_12 = Mem11[ecx + 20<i32>:word32]
	branch ecx_12 <u 8<32> l0042A16A_thunk_fn0042A170
l0042A16A_thunk_fn0042A170:
	word32 ebx_17
	word32 edi_19
	word32 esi_21
	word32 ebp_22
	word32 edx_20 = fn0042A170(ecx_12, ecx, dwArg04, dwArg08, out ebx_17, out ebp_22, out esi_21, out edi_19)
	ebxOut = ebx_17
	ebpOut = ebp_22
	esiOut = esi_21
	ediOut = edi_19
	return edx_20
l0042A16A_thunk_fn0042A16C:
	word32 ebp_29
	word32 ebx_30
	word32 edi_32
	word32 esi_34
	word32 edx_33 = fn0042A16C(ecx_12, ecx, dwArg04, dwArg08, out ebx_30, out ebp_29, out esi_34, out edi_32)
	ebxOut = ebx_30
	ebpOut = ebp_29
	esiOut = esi_34
	ediOut = edi_32
	return edx_33
fn0042A160_exit:


word32 fn0042A16C(word32 ecx, word32 esi, word32 dwArg0C, word32 dwArg10, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A070
//      fn0042A160
// MayUse:  ecx:[0..31] esi:[0..31] fs:[0..15] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: ebp ebx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn0042A16C_entry:
l0042A16C:
l0042A16E_thunk_fn0042A170:
	word32 ebx_10
	word32 edi_12
	word32 esi_14
	word32 ebp_15
	word32 edx_13 = fn0042A170(ecx, esi, dwArg0C, dwArg10, out ebx_10, out ebp_15, out esi_14, out edi_12)
	ebxOut = ebx_10
	ebpOut = ebp_15
	esiOut = esi_14
	ediOut = edi_12
	return edx_13
fn0042A16C_exit:


word32 fn0042A170(word32 ecx, word32 esi, word32 dwArg0C, word32 dwArg10, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A070
//      fn0042A160
// MayUse:  ecx:[0..31] esi:[0..31] fs:[0..15] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: ebp ebx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042A170_entry:
	word32 ebx
	word32 ebp
	word32 dwArg00
	word32 dwArg04
	word32 dwLoc0C
	word32 dwLoc08
l0042A170:
	word32 edx_190 = esi
l0042A172:
	word32 edi_37 = dwArg0C
	branch esi >u dwArg0C l0042A1A5
l0042A17A:
	branch dwArg0C >=u esi + Mem0[esi + 16<i32>:word32] * 2<32> l0042A1A5
l0042A1A5:
	word32 ebx_19 = dwArg10
	branch dwArg10 != 0<32> l0042A1D2
l0042A1D2:
	branch ecx >=u dwArg10 l0042A1DE
l0042A1D6:
	dwLoc08 = dwArg10
	edx_190 = fn004288A0(esi, dwArg10, out ebx_19, out ebp, out esi, out edi_37)
l0042A1DE:
	word32 eax_50
	branch Mem47[esi + 20<i32>:word32] <u 8<32> l0042A1E8
l0042A1E8:
	eax_50 = esi
l0042A1E4:
	eax_50 = Mem47[esi:word32]
l0042A1EA:
	memcpy(eax_50, edi_37, ebx_19 * 2<32>)
	Mem76[esi + 16<i32>:word32] = ebx_19
	branch Mem76[esi + 20<i32>:word32] <u 8<32> l0042A213
l0042A213:
	Mem84[esi + ebx_19 * 2<32>:word16] = 0<16>
	ebxOut = dwLoc0C
	ebpOut = ebp
	esiOut = ebx
	ediOut = dwLoc08
	return edx_190
l0042A202:
	Mem98[Mem76[esi:word32] + ebx_19 * 2<32>:word16] = 0<16>
	ebxOut = dwLoc0C
	ebpOut = ebp
	esiOut = ebx
	ediOut = dwLoc08
	return edx_190
l0042A1AE:
	Mem108[esi + 16<i32>:word32] = dwArg10
	branch ecx <u 8<32> l0042A1C5
l0042A1C5:
	Mem122[esi:word16] = 0<16>
	ebxOut = ebx
	ebpOut = ebp
	esiOut = dwArg04
	ediOut = dwArg00
	return esi
l0042A1B6:
	Mem132[Mem108[esi:word32]:word16] = 0<16>
	ebxOut = ebx
	ebpOut = ebp
	esiOut = dwArg04
	ediOut = dwArg00
	return esi
l0042A184:
	branch ecx <u 8<32> l0042A18D
l0042A18D:
l0042A189:
l0042A18F:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 stackArg12 = <invalid>
	word32 stackArg16 = <invalid>
	word32 ebx_238
	word32 ebp_239
	word32 esi_240
	word32 edi_241
	fn0042A070(ecx, stackArg0, stackArg4, stackArg8, stackArg12, stackArg16, out ebx_238, out ebp_239, out esi_240, out edi_241)
	ebxOut = ebx
	ebpOut = ebp
	esiOut = dwArg04
	ediOut = dwArg00
	return esi
fn0042A170_exit:


void fn0042A230(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn0042A230_entry:
l0042A230:
	word32 esi_8 = Mem6[ecx + 12<i32>:word32]
	branch esi_8 == 0<32> l0042A24A
l0042A238:
	fn00429F30(esi_8)
	fn0042763F(esi_8)
l0042A24A:
	return
fn0042A230_exit:


word32 fn0042A390(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg10, word32 dwArg14, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042AA80
// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: ebp ebx
// Trashed: SCZDOP eax ebp ebx ecx edi esi esp Top xmm0
// Preserved: edx
fn0042A390_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc6C
	struct <anonymous> tLoc60
	struct <anonymous> tLoc2C
	word32 dwLoc84
l0042A390:
	word32 esi_116
	word32 eax_114
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_142 = fp - 4<i32>
	word32 esp_107 = fp - 0x7C<32>
	word32 edi_121 = dwArg04
	branch dwArg04 != 0<32> l0042A3DE
l0042A3DE:
	branch dwArg10 != 0<32> l0042A420
l0042A3E2:
	word32 ebx_49
	fn00402890(&tLoc2C, dwLoc84, dwArg14, out ebx_49)
	word32 esi_242
	word32 eax_71 = fn00428430(&tLoc6C, dwArg04, fn0042D120(out esi_242))
	ebp_142 = fn00429A30(&tLoc60, ebx_49, dwArg04, &tLoc2C, Mem76[eax_71:word32], Mem69[eax_71 + 4<i32>:word32], out edi_121)
	CxxThrowException(ebp_142 - 92<i32>, 0x437718<32>)
l0042A420:
	eax_114 = fn0042D120(out esi_116)
	Mem122[esi_116:word32] = edi_121
l0042A3D1:
	branch dwArg10 == 0<32> l0042A42A
l0042A3D5:
	Mem126[dwArg10:word32] = dwArg04
	eax_114 = fn0042D120(out esi_116)
l0042A427:
	Mem136[esi_116 + 4<i32>:word32] = eax_114
l0042A42A:
	Mem149[fs:0x00000000<p32>:word32] = Mem145[ebp_142 - 12<i32>:word32]
	word32 esp_154 = esp_107 + 4<i32>
	word32 ebx_159 = Mem149[esp_154 + 8<i32>:word32]
	word32 eax_240
	word32 ecx_241
	fn00427500(Mem149[ebp_142 - 16<i32>:word32] ^ ebp_142, edx, ebx_159, ebp_142, Mem149[esp_154 + 4<i32>:word32], Mem149[esp_154:word32], es, ds, Mem149[esp_154 + 8<i32>:word32], out eax_240, out ecx_241)
	ebpOut = Mem149[ebp_142:word32]
	return ebx_159
fn0042A390_exit:


byte fn0042A450(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg0C, word32 dwArg10, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A8D0
//      fn0042A9E0
// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: eax ebp ebx edi esi
// Trashed: SCZDOP eax ebp ebx ecx edi esi esp Top xmm0
// Preserved: edx
fn0042A450_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc68
	struct <anonymous> tLoc60
	struct <anonymous> tLoc2C
	word32 dwLoc80
l0042A450:
	word32 esi_111
	word32 eax_109
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_137 = fp - 4<i32>
	word32 esp_102 = fp - 0x78<32>
	word32 edi_116 = dwArg04
	branch dwArg04 != 0<32> l0042A498
l0042A498:
	branch dwArg0C != 0<32> l0042A4D7
l0042A49C:
	word32 ebx_47
	fn00402890(&tLoc2C, dwLoc80, dwArg10, out ebx_47)
	word32 esi_236
	word32 eax_69 = fn00428430(&tLoc68, dwArg04, fn0042D120(out esi_236))
	ebp_137 = fn00429B30(&tLoc60, ebx_47, dwArg04, &tLoc2C, Mem74[eax_69:word32], Mem67[eax_69 + 4<i32>:word32], out edi_116)
	CxxThrowException(ebp_137 - 92<i32>, 0x437718<32>)
l0042A4D7:
	eax_109 = fn0042D120(out esi_111)
	Mem117[esi_111:word32] = edi_116
l0042A48B:
	branch dwArg0C == 0<32> l0042A4E1
l0042A48F:
	Mem121[dwArg0C:word32] = dwArg04
	eax_109 = fn0042D120(out esi_111)
l0042A4DE:
	Mem131[esi_111 + 4<i32>:word32] = eax_109
l0042A4E1:
	Mem144[fs:0x00000000<p32>:word32] = Mem140[ebp_137 - 12<i32>:word32]
	word32 esp_149 = esp_102 + 4<i32>
	word32 edi_150 = Mem144[esp_149:word32]
	word32 esi_152 = Mem144[esp_149 + 4<i32>:word32]
	word32 ebx_154 = Mem144[esp_149 + 8<i32>:word32]
	word32 eax_184
	word32 ecx_235
	fn00427500(Mem144[ebp_137 - 16<i32>:word32] ^ ebp_137, edx, ebx_154, ebp_137, esi_152, edi_150, es, ds, Mem144[esp_149 + 8<i32>:word32], out eax_184, out ecx_235)
	word32 ebp_193 = Mem144[ebp_137:word32]
	ebxOut = ebx_154
	ebpOut = ebp_193
	esiOut = esi_152
	ediOut = edi_150
	return SLICE(eax_184, byte, 0)
fn0042A450_exit:


void fn0042A510()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: esp
fn0042A510_entry:
l0042A510:
	return
fn0042A510_exit:


byte fn0042A520(word32 ebx, word32 edi, word32 dwArg04, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A830
//      fn0042AB60
// MayUse:  ebx:[0..31] edi:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp esp
// Trashed: SCZO eax ebp ecx esp Top
// Preserved: ebx edi esi
fn0042A520_entry:
	ptr32 fp
	selector fs
l0042A520:
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_121 = fp - 4<i32>
	word32 eax_32 = dwArg04
	branch Mem31[dwArg04 + 20<i32>:word32] <u 8<32> l0042A553
l0042A551:
	eax_32 = Mem31[dwArg04:word32]
l0042A553:
	byte bl_103
	word32 eax_52 = CreateFileW(eax_32, 8<32>, 7<32>, 0<32>, 3<32>, 0x2200000<32>, 0<32>)
	branch eax_52 != 0xFFFFFFFF<32> l0042A57E
l0042A57E:
	word32 eax_65 = fn0042D289(ebx, eax_52, edi, 0x2200000<32>, 0x4000<32>, eax_27, out ebp_121)
	Mem74[ebp_121 - 16<i32>:word32] = eax_65
	Mem78[ebp_121 - 4<i32>:byte] = 2<8>
	word32 eax_93 = DeviceIoControl(eax_52, 0x900A8<32>, 0<32>, 0<32>, eax_65, 0x4000<32>, ebp_121 - 20<i32>, 0<32>)
	branch eax_93 != 0<32> l0042A5B8
l0042A5B8:
	word32 eax_98 = Mem92[eax_65:word32]
	branch eax_98 == 0xA000000C<32> l0042A5CC
l0042A5C1:
	branch eax_98 == 0xA0000003<32> l0042A5CC
l0042A5CC:
	bl_103 = 1<8>
l0042A5C8:
	bl_103 = 0<8>
l0042A5B4:
	bl_103 = 0<8>
l0042A5CE:
	fn0042D292(eax_65)
l0042A57A:
	bl_103 = 0<8>
l0042A5D7:
	Mem124[ebp_121 - 4<i32>:word32] = 4<32>
	branch eax_52 == 0xFFFFFFFF<32> l0042A5EA
l0042A5E3:
	CloseHandle(eax_52)
l0042A5EA:
	Mem146[fs:0x00000000<p32>:word32] = Mem140[ebp_121 - 12<i32>:word32]
	ebpOut = Mem146[ebp_121:word32]
	return bl_103
fn0042A520_exit:


word32 fn0042A600(selector es, selector ds, word32 dwArg04, byte bArg08, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042AB60
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..7]
// LiveOut: eax ebp ebx edx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042A600_entry:
	ptr32 fp
	selector fs
l0042A600:
	Mem26[fs:0<32>:word32] = fp - 16<i32>
	branch (bArg08 & 1<8>) == 0<8> l0042A63D
l0042A63A_1:
l0042A63D:
	word32 ebp_52
	word32 edi_55
	word32 ebx_53 = fn0042B630(dwArg04, es, ds, out ebp_52, out edi_55)
	word32 esp_58 = <invalid>
	Mem69[esp_58:word32] = 0x4314F4<32>
	word32 eax_67 = ebp_52 - 40<i32>
	branch Mem38[ebp_52 - 20<i32>:word32] <u 8<32> l0042A656
l0042A652_1:
	eax_67 = Mem69[ebp_52 - 40<i32>:word32]
l0042A656:
	Mem75[esp_58 - 4<i32>:word32] = eax_67
	Mem77[ebp_52 - 4<i32>:word32] = 0<32>
	word32 esp_87
	word32 eax_88
	word32 edx_121
	call Mem77[0x0043B080<p32>:word32] (retsize: 4;)
		defs: eax:eax_88,edx:edx_91,esp:esp_87
	word32 esp_123 = esp_87 + 8<32>
	branch SLICE(eax_88, byte, 0) != 0<8> l0042A6C5
l0042A66B:
	Mem101[esp_87 + 4<32>:word32] = 0x431500<32>
	word32 eax_103 = ebp_52 - 40<i32>
	branch Mem77[ebp_52 - 20<i32>:word32] <u 8<32> l0042A67B
l0042A677_1:
	eax_103 = Mem101[ebp_52 - 40<i32>:word32]
l0042A67B:
	Mem107[esp_87:word32] = eax_103
	word32 esp_117
	word32 eax_118
	call Mem107[0x0043B080<p32>:word32] (retsize: 4;)
		defs: eax:eax_118,edx:edx_121,esp:esp_117
	esp_123 = esp_117 + 8<32>
	branch SLICE(eax_118, byte, 0) != 0<8> l0042A6C5
l0042A689:
	Mem131[esp_117 + 4<32>:word32] = 0x43150C<32>
	word32 eax_129 = ebp_52 - 40<i32>
	branch Mem107[ebp_52 - 20<i32>:word32] <u 8<32> l0042A699
l0042A695_1:
	eax_129 = Mem131[ebp_52 - 40<i32>:word32]
l0042A699:
	Mem137[esp_117:word32] = eax_129
	word32 esp_147
	word32 eax_148
	call Mem137[0x0043B080<p32>:word32] (retsize: 4;)
		defs: eax:eax_148,edx:edx_151,esp:esp_147
	esp_123 = esp_147 + 8<32>
	branch SLICE(eax_148, byte, 0) != 0<8> l0042A6C5
l0042A6A7:
	Mem161[esp_147 + 4<32>:word32] = 0x431518<32>
	word32 eax_159 = ebp_52 - 40<i32>
	branch Mem137[ebp_52 - 20<i32>:word32] <u 8<32> l0042A6B7
l0042A6B3_1:
	eax_159 = Mem161[ebp_52 - 40<i32>:word32]
l0042A6B7:
	Mem167[esp_147:word32] = eax_159
	word32 esp_177
	word32 eax_178
	call Mem167[0x0043B080<p32>:word32] (retsize: 4;)
		defs: eax:eax_178,edx:edx_181,esp:esp_177
	esp_123 = esp_177 + 8<32>
	branch SLICE(eax_178, byte, 0) == 0<8> l0042A6C8
l0042A6C5:
l0042A6C8:
	word32 ecx_196 = Mem194[ebp_52 - 20<i32>:word32]
	Mem197[ebp_52 - 4<i32>:word32] = 1<32>
	branch ecx_196 <u 8<32> l0042A6E6
l0042A6D7:
	word32 esp_202 = esp_123 - 4<i32>
	Mem203[esp_202:word32] = 2<32>
	Mem207[esp_202 - 4<i32>:word32] = ecx_196 + 1<32>
	Mem210[esp_202 - 8<i32>:word32] = Mem207[ebp_52 - 40<i32>:word32]
	edx_121 = fn004289B0(Mem210[esp_202 - 8<i32>:word32], Mem210[esp_202 - 4<i32>:word32], Mem210[esp_202:word32])
l0042A6E6:
	Mem229[fs:0x00000000<p32>:word32] = Mem224[ebp_52 - 12<i32>:word32]
	word32 esp_232 = esp_123 + 4<i32>
	word32 esi_233 = Mem229[esp_232:word32]
	word32 ecx_303
	word32 eax_271
	fn00427500(Mem229[ebp_52 - 16<i32>:word32] ^ ebp_52, edx_121, ebx_53, ebp_52, esi_233, edi_55, es, ds, Mem229[esp_232:word32], out eax_271, out ecx_303)
	word32 ebp_280 = Mem229[ebp_52:word32]
	edxOut = edx_121
	ebxOut = ebx_53
	ebpOut = ebp_280
	esiOut = esi_233
	return eax_271
fn0042A600_exit:


word32 fn0042A710(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg0C, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A830
//      fn0042AB60
// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +000C:[0..31]
// LiveOut: eax ebp esp
// Trashed: SCZDOP eax ebp ebx ecx edi esi esp Top xmm0
// Preserved: edx
fn0042A710_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc6C
	struct <anonymous> tLoc60
	struct <anonymous> tLoc2C
	word32 dwLoc84
l0042A710:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_123 = fp - 4<i32>
	word32 esp_142 = fp - 0x7C<32>
	word32 edi_126 = dwArg04
	word32 esi_38 = GetLastError()
	branch dwArg0C == 0<32> l0042A75D
l0042A753:
	word32 eax_42 = fn0042D120(out esi_38)
	Mem49[dwArg0C:word32] = esi_38
	Mem50[dwArg0C + 4<i32>:word32] = eax_42
l0042A75D:
	branch esi_38 == 2<32> l0042A7FC
l0042A766:
	branch esi_38 == 3<32> l0042A7FC
l0042A76F:
	branch esi_38 == 0x7B<32> l0042A7FC
l0042A778:
	branch esi_38 == 0xF<32> l0042A7FC
l0042A77D:
	branch esi_38 == 0x15<32> l0042A7FC
l0042A782:
	branch esi_38 == 0x57<32> l0042A7FC
l0042A787:
	branch esi_38 == 0xA1<32> l0042A7FC
l0042A78F:
	branch esi_38 == 0x35<32> l0042A7FC
l0042A7FC:
	Mem70[dwArg04:word32] = 1<32>
	Mem71[dwArg04 + 4<i32>:word32] = 0<32>
l0042A794:
	branch esi_38 != 0x20<32> l0042A7A8
l0042A7A8:
	branch dwArg0C != 0<32> l0042A7ED
l0042A7AC:
	word32 ebx_85
	fn00402890(&tLoc2C, dwLoc84, 0x431524<32>, out ebx_85)
	word32 esi_97
	word32 eax_107 = fn00428430(&tLoc6C, esi_97, fn0042D120(out esi_97))
	ebp_123 = fn00429B30(&tLoc60, ebx_85, dwArg04, &tLoc2C, Mem112[eax_107:word32], Mem105[eax_107 + 4<i32>:word32], out edi_126)
	CxxThrowException(ebp_123 - 92<i32>, 0x437718<32>)
l0042A7ED:
	Mem149[edi_126:word32] = 0<32>
	Mem150[edi_126 + 4<i32>:word32] = 0xFFFF<32>
l0042A799:
	Mem151[dwArg04:word32] = 0xA<32>
	Mem152[dwArg04 + 4<i32>:word32] = 0xFFFF<32>
l0042A809:
	Mem163[fs:0x00000000<p32>:word32] = Mem158[ebp_123 - 12<i32>:word32]
	word32 esp_168 = esp_142 + 4<i32>
	word32 eax_209
	word32 ecx_260
	fn00427500(Mem163[ebp_123 - 16<i32>:word32] ^ ebp_123, edx, Mem163[esp_168 + 8<i32>:word32], ebp_123, Mem163[esp_168 + 4<i32>:word32], Mem163[esp_168:word32], es, ds, Mem163[esp_168 + 8<i32>:word32], out eax_209, out ecx_260)
	ebpOut = Mem163[ebp_123:word32]
	return eax_209
fn0042A710_exit:


word32 fn0042A830(word32 edx, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A8D0
// MayUse:  cs:[0..15] ds:[0..15] edi:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ebp ecx edi Top xmm0
// Preserved: DP ebx esi esp
fn0042A830_entry:
	struct <anonymous> tLoc08
l0042A830:
	word32 eax_14
	word32 esi_11 = dwArg04
	branch Mem10[dwArg04 + 20<i32>:word32] <u 8<32> l0042A843
l0042A843:
	eax_14 = dwArg04
l0042A83F:
	eax_14 = Mem10[dwArg04:word32]
l0042A845:
	word32 eax_20 = GetFileAttributesW(eax_14)
	byte bl_87 = SLICE(eax_20, byte, 0)
	branch eax_20 != 0xFFFFFFFF<32> l0042A86D
l0042A86D:
	branch dwArg08 == 0<32> l0042A884
l0042A876:
	Mem33[dwArg08:word32] = 0<32>
	Mem43[dwArg08 + 4<i32>:word32] = fn0042D120(out esi_11)
l0042A884:
	branch (eax_20 & 0x400<32>) == 0<32> l0042A8BB
l0042A8BB:
	return (eax_20 & 0x10<32> | 0x20<32>) >>u 4<32>
l0042A88D:
	word32 ebp_220
	branch fn0042A520(eax_20, edi, esi_11, out ebp_220) == 0<8> l0042A8B0
l0042A8B0:
	return 9<32>
l0042A89A:
	word32 eax_172 = 4<32>
	branch (bl_87 & 0x10<8>) == 0<8> l0042A8AB
l0042A8A8_1:
	eax_172 = 0xB<32>
l0042A8AB:
	return eax_172
l0042A853:
	word32 ebp_219
	return Mem109[fn0042A710(edx, es, ds, &tLoc08, dwArg08, out ebp_219):word32]
fn0042A830_exit:


word32 fn0042A8D0(word32 edx, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404080
// MayUse:  cs:[0..15] ds:[0..15] edi:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp ebx
// Trashed: SCZDOP eax ebp ebx ecx Top xmm0
// Preserved: edi esi esp
fn0042A8D0_entry:
	struct <anonymous> tLoc08
l0042A8D0:
	Mem12[&tLoc08:word32] = 0<32>
	word32 esi_163
	Mem22[&tLoc08 + 4<i32>:word32] = fn0042D120(out esi_163)
	word32 ecx_49 = 0<32>
	branch fn0042A830(edx, edi, es, ds, dwArg04, &tLoc08) != 0<32> l0042A90A
l0042A905_1:
	ecx_49 = Mem53[&tLoc08:word32]
l0042A90A:
	word32 ebx_68
	word32 edi_70
	word32 esi_71
	word32 ebp_72
	branch fn0042A450(edx, es, ds, ecx_49, dwArg08, 0x4314AC<32>, out ebx_68, out ebp_72, out esi_71, out edi_70) == 0<8> l0042A91F
l0042A91F:
	word32 ebp_94
	word32 ebx_95 = fn0042A9E0(edx, es, ds, esi_71, edi_70, dwArg08, out ebp_94)
	ebpOut = ebp_94
	return ebx_95
l0042A917:
	ebpOut = ebp_72
	return ebx_68
fn0042A8D0_exit:


byte fn0042A940(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A9E0
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn0042A940_entry:
l0042A940:
	word32 eax_11 = dwArg04
	branch Mem0[dwArg04 + 20<i32>:word32] <u 8<32> l0042A94C
l0042A94A:
	eax_11 = Mem0[dwArg04:word32]
l0042A94C:
	word32 eax_13 = RemoveDirectoryW(eax_11)
	branch eax_13 != 0<32> l0042A98A
l0042A957:
	word32 eax_18 = GetLastError()
	branch eax_18 == 2<32> l0042A98A
l0042A962:
	branch eax_18 == 3<32> l0042A98A
l0042A967:
	branch eax_18 == 0x7B<32> l0042A98A
l0042A96C:
	branch eax_18 == 0xF<32> l0042A98A
l0042A971:
	branch eax_18 == 0x15<32> l0042A98A
l0042A976:
	branch eax_18 == 0x57<32> l0042A98A
l0042A97B:
	branch eax_18 == 0xA1<32> l0042A98A
l0042A982:
	branch eax_18 == 0x35<32> l0042A98A
l0042A98A:
	return 1<8>
l0042A987:
	return 0<8>
fn0042A940_exit:


byte fn0042A990(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A9E0
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn0042A990_entry:
l0042A990:
	word32 eax_11 = dwArg04
	branch Mem0[dwArg04 + 20<i32>:word32] <u 8<32> l0042A99C
l0042A99A:
	eax_11 = Mem0[dwArg04:word32]
l0042A99C:
	word32 eax_13 = DeleteFileW(eax_11)
	branch eax_13 != 0<32> l0042A9DA
l0042A9A7:
	word32 eax_18 = GetLastError()
	branch eax_18 == 2<32> l0042A9DA
l0042A9B2:
	branch eax_18 == 3<32> l0042A9DA
l0042A9B7:
	branch eax_18 == 0x7B<32> l0042A9DA
l0042A9BC:
	branch eax_18 == 0xF<32> l0042A9DA
l0042A9C1:
	branch eax_18 == 0x15<32> l0042A9DA
l0042A9C6:
	branch eax_18 == 0x57<32> l0042A9DA
l0042A9CB:
	branch eax_18 == 0xA1<32> l0042A9DA
l0042A9D2:
	branch eax_18 == 0x35<32> l0042A9DA
l0042A9DA:
	return 1<8>
l0042A9D7:
	return 0<8>
fn0042A990_exit:


word32 fn0042A9E0(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A8D0
// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ebp ebx
// Trashed: SCZO eax ebp ebx ecx edi Top xmm0
// Preserved: DP esi esp
fn0042A9E0_entry:
	word32 ebp
	word32 ebx
l0042A9E0:
	branch dwArg08 != 1<32> l0042AA04
l0042AA04:
	branch dwArg08 == 3<32> l0042AA44
l0042AA09:
	branch dwArg08 == 0xB<32> l0042AA44
l0042AA44:
	word32 eax_30
	branch fn0042A940(dwArg04) != 0<8> l0042AA5D
l0042AA5D:
	eax_30 = 0<32>
l0042AA55:
	eax_30 = GetLastError()
l0042AA5F:
	word32 esi_261
	word32 edi_262
	branch fn0042A450(edx, es, ds, eax_30, dwArg0C, 0x4314AC<32>, out ebx, out ebp, out esi_261, out edi_262) != 0<8> l0042AA00
l0042AA0E:
	word32 eax_102
	branch fn0042A990(dwArg04) != 0<8> l0042AA27
l0042AA27:
	eax_102 = 0<32>
l0042AA1F:
	eax_102 = GetLastError()
l0042AA29:
	word32 esi_259
	word32 edi_260
	branch fn0042A450(edx, es, ds, eax_102, dwArg0C, 0x4314AC<32>, out ebx, out ebp, out esi_259, out edi_260) == 0<8> l0042AA76
l0042AA76:
	ebpOut = ebp
	return ebx
l0042AA40:
	ebpOut = ebp
	return ebx
l0042A9EA:
	branch dwArg0C == 0<32> l0042AA00
l0042A9F2:
	Mem155[dwArg0C:word32] = 0<32>
	word32 esi_158
	Mem163[esi_158 + 4<i32>:word32] = fn0042D120(out esi_158)
l0042AA00:
	ebpOut = ebp
	return ebx
fn0042A9E0_exit:


word32 fn0042AA80(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404080
// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ebp ebx
// Trashed: SCZDOP eax ebp ebx ecx Top xmm0
// Preserved: edi esi esp
fn0042AA80_entry:
l0042AA80:
	word32 eax_13
	branch Mem10[dwArg08 + 20<i32>:word32] <u 8<32> l0042AA90
l0042AA90:
	eax_13 = dwArg08
l0042AA8C:
	eax_13 = Mem10[dwArg08:word32]
l0042AA92:
	word32 ecx_20
	branch Mem10[dwArg04 + 20<i32>:word32] <u 8<32> l0042AAA0
l0042AAA0:
	ecx_20 = dwArg04
l0042AA9C:
	ecx_20 = Mem10[dwArg04:word32]
l0042AAA2:
	word32 eax_37
	branch MoveFileExW(ecx_20, eax_13, 3<32>) != 0<32> l0042AAB8
l0042AAB8:
	eax_37 = 0<32>
l0042AAB0:
	eax_37 = GetLastError()
l0042AABA:
	word32 ebp_92
	word32 ebx_88 = fn0042A390(edx, es, ds, eax_37, dwArg0C, 0x431580<32>, out ebp_92)
	ebpOut = ebp_92
	return ebx_88
fn0042AA80_exit:


word32 fn0042AB60(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00403F40
//      fn00404080
// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0042AB60_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc2C
l0042AB60:
	word32 eax_39
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_169 = fp - 4<i32>
	word32 edi_215 = dwArg08
	word32 esi_186 = dwArg0C
	branch Mem36[dwArg08 + 20<i32>:word32] <u 8<32> l0042ABA1
l0042ABA1:
	eax_39 = dwArg08
l0042AB9D:
	eax_39 = Mem36[dwArg08:word32]
l0042ABA3:
	word32 esp_288
	word32 ebp_272
	word32 eax_45 = GetFileAttributesW(eax_39)
	word32 esp_185 = fp - 0x4C<32>
	branch eax_45 != 0xFFFFFFFF<32> l0042ABC2
l0042ABC2:
	branch (eax_45 & 0x400<32>) == 0<32> l0042ACB9
l0042ABCD:
	word32 edx_57
	branch Mem48[dwArg08 + 20<i32>:word32] <u 8<32> l0042ABD7
l0042ABD7:
	edx_57 = dwArg08
l0042ABD3:
	edx_57 = Mem48[dwArg08:word32]
l0042ABD9:
	Mem62[&tLoc2C + 16<i32>:word32] = 0<32>
	Mem66[&tLoc2C + 20<i32>:word32] = 7<32>
	Mem68[&tLoc2C:word16] = 0<16>
	word32 ecx_60 = edx_57
	word32 esi_69 = edx_57 + 2<i32>
l0042ABF2:
	ecx_60 = ecx_455 + 2<32>
	ecx_455 = ecx_60
	branch Mem68[ecx_455:word16] != 0<16> l0042ABF2
l0042ABFD:
	word32 ebp_95
	word32 ebx_96
	word32 esi_453
	edx = fn0042A160(&tLoc2C, edx_57, ecx_60 - esi_69 >> 1<32>, out ebx_96, out ebp_95, out esi_453, out edi_215)
	word32 esp_101 = <invalid>
	Mem109[esp_101 - 4<i32>:word32] = 0<32>
	word32 eax_107 = ebp_95 - 40<i32>
	branch Mem88[ebp_95 - 20<i32>:word32] <u 8<32> l0042AC18
l0042AC14_1:
	eax_107 = Mem109[ebp_95 - 40<i32>:word32]
l0042AC18:
	Mem114[esp_101 - 8<i32>:word32] = 0x2000000<32>
	Mem116[esp_101 - 12<i32>:word32] = 3<32>
	Mem118[esp_101 - 16<i32>:word32] = 0<32>
	Mem120[esp_101 - 20<i32>:word32] = 7<32>
	Mem122[esp_101 - 24<i32>:word32] = 0<32>
	Mem125[esp_101 - 28<i32>:word32] = eax_107
	Mem127[ebp_95 - 4<i32>:word32] = 0<32>
	word32 eax_128 = CreateFileW(Mem127[esp_101 - 28<i32>:LPCWSTR], Mem127[esp_101 - 24<i32>:DWORD], Mem127[esp_101 - 20<i32>:DWORD], Mem127[esp_101 - 16<i32>:LPSECURITY_ATTRIBUTES], Mem127[esp_101 - 12<i32>:DWORD], Mem127[esp_101 - 8<i32>:DWORD], Mem127[esp_101 - 4<i32>:HANDLE])
	Mem131[ebp_95 - 44<i32>:word32] = eax_128
	word32 eax_132 = Mem131[ebp_95 - 20<i32>:word32]
	Mem133[ebp_95 - 4<i32>:byte] = 3<8>
	branch eax_132 <u 8<32> l0042AC53
l0042AC44:
	Mem139[esp_101 - 4<i32>:word32] = 2<32>
	Mem141[esp_101 - 8<i32>:word32] = eax_132 + 1<32>
	Mem144[esp_101 - 12<i32>:word32] = Mem141[ebp_95 - 40<i32>:word32]
	edx = fn004289B0(Mem144[esp_101 - 12<i32>:word32], Mem144[esp_101 - 8<i32>:word32], Mem144[esp_101 - 4<i32>:word32])
l0042AC53:
	Mem155[ebp_95 - 4<i32>:byte] = 2<8>
	branch eax_128 != 0xFFFFFFFF<32> l0042AC6E
l0042AC6E:
	Mem163[esp_101 - 4<i32>:word32] = edi_215
	word32 esp_171 = <invalid>
	branch fn0042A520(ebx_96, edi_215, Mem163[esp_101 - 4<i32>:word32], out ebp_169) != 0<8> l0042ACA1
l0042ACA1:
	Mem182[esp_171:word32] = eax_128
	Mem183[ebp_169 - 4<i32>:word32] = 6<32>
	CloseHandle(Mem183[esp_171:HANDLE])
	esi_186 = Mem183[ebp_169 - 52<i32>:word32]
	Mem187[ebp_169 - 4<i32>:word32] = 0xFFFFFFFF<32>
	esp_185 = esp_171 + 4<32>
l0042ACB9:
	branch esi_186 == 0<32> l0042ACCB
l0042ACBD:
	Mem193[esi_186:word32] = 0<32>
	word32 esi_197
	Mem202[esi_197 + 4<i32>:word32] = fn0042D120(out esi_197)
l0042ACCB:
	word32 eax_207 = Mem205[ebp_169 - 56<i32>:word32]
	Mem208[ebp_169 - 48<i32>:word32] = 3<32>
	word32 esp_211 = esp_185 - 4<i32>
	Mem212[esp_211:word32] = eax_207
	Mem216[esp_211 - 4<i32>:word32] = edi_215
	branch (SLICE(eax_207, byte, 0) & 0x10<8>) != 0<8> l0042ACE2
l0042ACDB:
	Mem221[ebp_169 - 48<i32>:word32] = 2<32>
l0042ACE2:
	word32 esi_454
	word32 ebx_273
	Mem286[ebp_272 - 44<i32>:word32] = fn0042A600(es, ds, Mem270[esp_211 - 4<i32>:word32], Mem270[esp_211:byte], out edx, out ebx_273, out ebp_272, out esi_454)
	Mem290[ebx_273:word32] = Mem286[ebp_272 - 48<i32>:word32]
	Mem292[ebx_273 + 4<i32>:word32] = Mem290[ebp_272 - 44<i32>:word32]
	word32 esp_278 = <invalid>
	esp_288 = esp_278 + 8<32>
l0042AC7B:
	Mem295[esp_171:word32] = Mem163[ebp_169 - 56<i32>:word32]
	Mem297[esp_171 - 4<i32>:word32] = edi_215
	word32 ebx_300
	word32 esi_304
	word32 eax_298 = fn0042A600(es, ds, Mem297[esp_171 - 4<i32>:word32], Mem297[esp_171:byte], out edx, out ebx_300, out ebp_272, out esi_304)
	Mem314[ebx_300:word32] = 9<32>
	Mem315[ebx_300 + 4<i32>:word32] = eax_298
	word32 esp_305 = <invalid>
	Mem317[esp_305 + 4<32>:word32] = esi_304
	Mem318[ebp_272 - 4<i32>:word32] = 5<32>
	CloseHandle(Mem318[esp_305 + 4<32>:HANDLE])
	esp_288 = esp_305 + 8<32>
l0042AC5C:
	Mem323[esp_101 - 4<i32>:word32] = Mem155[ebp_95 - 52<i32>:word32]
	Mem325[esp_101 - 8<i32>:word32] = edi_215
	Mem327[esp_101 - 12<i32>:word32] = ebx_96
	fn0042A710(edx, es, ds, Mem327[esp_101 - 12<i32>:word32], Mem327[esp_101 - 4<i32>:word32], out ebp_272)
	word32 esp_336 = <invalid>
	esp_288 = esp_336 + 0xC<32>
l0042ABB2:
	fn0042A710(edx, es, ds, dwArg04, dwArg0C, out ebp_272)
	word32 esp_361 = <invalid>
	esp_288 = esp_361 + 0xC<32>
l0042ACFA:
	Mem377[fs:0x00000000<p32>:word32] = Mem374[ebp_272 - 12<i32>:word32]
	word32 esp_380 = esp_288 + 4<i32>
	word32 edi_381 = Mem377[esp_380:word32]
	word32 esi_383 = Mem377[esp_380 + 4<i32>:word32]
	word32 ebx_385 = Mem377[esp_380 + 8<i32>:word32]
	word32 eax_451
	word32 ecx_452
	fn00427500(Mem377[ebp_272 - 16<i32>:word32] ^ ebp_272, edx, ebx_385, ebp_272, esi_383, edi_381, es, ds, Mem377[esp_380 + 8<i32>:word32], out eax_451, out ecx_452)
	ebpOut = Mem377[ebp_272:word32]
	esiOut = esi_383
	ediOut = edi_381
	return ebx_385
fn0042AB60_exit:


word32 fn0042AF50(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042BAC0
//      fn0042C020
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0042AF50_entry:
l0042AF50:
	branch dwArg14 == 0<32> l0042AFA4
l0042AF5C:
	branch dwArg0C >=u dwArg08 l0042AFA4
l0042AF68:
	word32 ebx_25 = dwArg04 + dwArg08 * 2<32>
	word32 edx_26 = dwArg04 + dwArg0C * 2<32>
	branch edx_26 >=u ebx_25 l0042AFA4
l0042AF76:
l0042AF80:
	word32 ecx_31 = dwArg14
	word32 eax_33 = dwArg10
	branch dwArg14 == 0<32> l0042AF9D
l0042AF88:
	word16 si_95 = Mem15[edx_26:word16]
l0042AF90:
	branch Mem15[eax_33:word16] == si_95 l0042AFAC
l0042AFAC:
	return edx_26 - dwArg04 >> 1<32>
l0042AF95:
	eax_33 = eax_33 + 2<32>
	ecx_31 = ecx_31 - 1<32>
	branch ecx_31 != 0<32> l0042AF90
l0042AF9D:
	edx_26 = edx_26 + 2<32>
	branch edx_26 <u ebx_25 l0042AF80
l0042AFA4:
	return 0xFFFFFFFF<32>
fn0042AF50_exit:


word32 fn0042AFC0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B9F0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0042AFC0_entry:
l0042AFC0:
	branch dwArg14 == 0<32> l0042B021
l0042AFCC:
	branch dwArg08 == 0<32> l0042B021
l0042AFD4:
	word32 ecx_24 = dwArg0C
	branch dwArg08 - 1<32> >=u dwArg0C l0042AFE6
l0042AFE3_1:
	ecx_24 = dwArg08 - 1<32>
l0042AFE6:
	word32 edx_33 = dwArg04 + ecx_24 * 2<32>
l0042AFF0:
	word32 ecx_35 = dwArg14
	word32 eax_37 = dwArg10
	branch dwArg14 == 0<32> l0042B00D
l0042AFF8:
	word16 si_103 = Mem15[edx_33:word16]
l0042B000:
	branch Mem15[eax_37:word16] == si_103 l0042B016
l0042B016:
	return edx_33 - dwArg04 >> 1<32>
l0042B005:
	eax_37 = eax_37 + 2<32>
	ecx_35 = ecx_35 - 1<32>
	branch ecx_35 != 0<32> l0042B000
l0042B00D:
	branch edx_33 == dwArg04 l0042B021
l0042B021:
	return 0xFFFFFFFF<32>
fn0042AFC0_exit:
l0042B011:
	edx_33 = edx_33 - 2<32>


word32 fn0042B030(word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B320
// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0042B030_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc24
	word32 dwLoc18
	word32 dwLoc14
l0042B030:
	word32 esi_119
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	_Lockit(&dwLoc18, 0<32>)
	Mem41[&dwLoc14:word32] = Mem33[0x0043B0BC<p32>:word32]
	word32 eax_42 = operator returntype(&id)
	word32 ebp_137 = fp - 4<i32>
	word32 esp_144 = fp - 0x34<32>
	word32 eax_45 = Mem41[dwArg04 + 4<i32>:word32]
	branch eax_42 >=u Mem41[eax_45 + 12<i32>:word32] l0042B097
l0042B097:
	esi_119 = 0<32>
l0042B08B:
	esi_119 = Mem41[Mem41[eax_45 + 8<i32>:word32] + eax_42 * 4<32>:word32]
	branch esi_119 != 0<32> l0042B0FD
l0042B095:
l0042B099:
	branch Mem41[eax_45 + 20<i32>:byte] == 0<8> l0042B0B0
l0042B09F:
	word32 eax_61 = _Getgloballocale(eax_27)
	branch eax_42 >=u Mem41[eax_61 + 12<i32>:word32] l0042B0B4
l0042B0AA:
	esi_119 = Mem41[Mem41[eax_61 + 8<i32>:word32] + eax_42 * 4<32>:word32]
l0042B0B0:
	branch esi_119 != 0<32> l0042B0FD
l0042B0B4:
	esi_119 = Mem41[&dwLoc14:word32]
	branch esi_119 != 0<32> l0042B0FD
l0042B0BB:
	branch _Getcat(&dwLoc14, dwArg04, eax_27) != 0xFFFFFFFF<32> l0042B0E4
l0042B0CE:
	fn004013E0(&tLoc24)
	CxxThrowException(&tLoc24, 0x437AD8<32>)
l0042B0E4:
	esi_119 = Mem118[&dwLoc14:word32]
	Mem121[0x0043B0BC<p32>:word32] = esi_119
	word32 edx_122 = Mem121[esi_119:word32]
	word32 esp_128
	word32 ecx_130
	call Mem121[edx_122 + 4<i32>:word32] (retsize: 4;)
		uses: ecx:esi_119,edx:edx_122
		defs: ecx:ecx_130,esp:esp_128
	Mem135[esp_128 - 4<i32>:word32] = esi_119
	word32 esp_139 = <invalid>
	ebp_137 = fn0042749E(ecx_130, dwArg04, esi_119, eax_42)
	esp_144 = esp_139 + 4<32>
l0042B0FD:
	~_Lockit(ebp_137 - 20<i32>)
	Mem153[fs:0x00000000<p32>:word32] = Mem150[ebp_137 - 12<i32>:word32]
	word32 esp_156 = esp_144 + 4<i32>
	word32 edi_157 = Mem153[esp_156:word32]
	word32 esi_159 = Mem153[esp_156 + 4<i32>:word32]
	word32 ebp_163 = Mem153[ebp_137:word32]
	ebxOut = Mem153[esp_156 + 8<i32>:word32]
	ebpOut = ebp_163
	esiOut = esi_159
	ediOut = edi_157
	return esi_119
fn0042B030_exit:


void fn0042B120(word32 ecx, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042C020
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp ebx edi edx esi esp
fn0042B120_entry:
l0042B120:
	word32 esi_20 = ecx
	branch Mem6[ecx + 20<i32>:word32] >=u 1<32> l0042B130
l0042B129:
	word32 ebx_100
	word32 ebp_101
	word32 edi_102
	fn004288A0(ecx, 1<32>, out ebx_100, out ebp_101, out esi_20, out edi_102)
l0042B130:
	word32 ecx_31
	branch Mem28[esi_20 + 20<i32>:word32] <u 8<32> l0042B13A
l0042B13A:
	ecx_31 = esi_20
l0042B136:
	ecx_31 = Mem28[esi_20:word32]
l0042B13C:
	Mem38[ecx_31:word16] = wArg04
	Mem41[esi_20 + 16<i32>:word32] = 1<32>
	branch Mem38[esi_20 + 20<i32>:word32] <u 8<32> l0042B15F
l0042B15F:
	Mem50[esi_20 + 2<i32>:word16] = 0<16>
	return
l0042B151:
	Mem56[Mem41[esi_20:word32] + 2<i32>:word16] = 0<16>
	return
fn0042B120_exit:


byte fn0042B1A0(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B210
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn0042B1A0_entry:
l0042B1A0:
	word32 edx_126 = dwArg04
	word32 edi_12 = dwArg04
l0042B1B0:
	word16 ax_16 = Mem11[edi_12:word16]
	edi_12 = edi_12 + 2<32>
	branch ax_16 != 0<16> l0042B1B0
l0042B1BB:
	word32 ecx_29
	word32 edi_22 = edi_12 - (dwArg04 + 2<i32>)
	ecx_29 = ecx
	branch Mem11[ecx + 20<i32>:word32] <u 8<32> l0042B1CA
l0042B1C8:
	ecx_29 = Mem11[ecx:word32]
l0042B1CA:
	word32 esi_32 = Mem11[ecx + 16<i32>:word32]
	branch esi_32 != edi_22 >> 1<32> l0042B205
l0042B1D0:
	branch esi_32 == 0<32> l0042B1FE
l0042B1D4:
	word16 ax_41 = Mem11[ecx_29:word16]
	branch ax_41 != Mem11[edx_126:word16] l0042B1EE
l0042B1EE:
	word32 eax_51 = (0<32> - CONVERT(Mem11[ecx_29:word16] <u Mem11[edx_126:word16], bool, word32) & 0xFFFFFFFE<32>) + 1<32>
	branch eax_51 != 0<32> l0042B205
l0042B205:
	edxOut = edx_126
	return 0<8>
l0042B1FE:
	edxOut = edx_126
	return 1<8>
l0042B1DC:
	ecx_29 = ecx_29 + 2<32>
	edx_126 = edx_126 + 2<32>
	esi_32 = esi_32 - 1<32>
	branch esi_32 != 0<32> l0042B1D4
l0042B1E7:
	edxOut = edx_126
	return 1<8>
fn0042B1A0_exit:


word32 fn0042B210(word32 ecx, selector es, selector ds, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B630
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042B210_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc2C
	word32 dwLoc34
l0042B210:
	word32 eax_18 = Mem15[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	Mem41[dwArg04 + 16<i32>:word32] = 0<32>
	Mem42[dwArg04 + 20<i32>:word32] = 7<32>
	Mem44[dwArg04:word16] = 0<16>
	Mem57[dwArg04 + 24<i32>:word32] = ecx
	fn0042BB60(ecx, dwArg04 + 28<i32>, fp - 52<i32>, 0xFFFFFFFF<32>)
	word32 edx_288
	word32 ebx_100
	word32 ebp_110
	word32 eax_77 = fn0042C2A0(ecx, dwArg04 + 28<i32>, &tLoc2C, Mem71[dwArg04 + 28<i32>:word32], dwLoc34, out edx_288, out ebx_100, out ebp_110)
	Mem88[ebp_110 - 4<i32>:word32] = 1<32>
	branch ebx_100 == eax_77 l0042B2A4
l0042B298:
	word32 edi_290
	word32 esi_289
	fn0042A070(ebx_100, ecx, eax_77, 0<32>, 0xFFFFFFFF<32>, eax_18, out ebx_100, out ebp_110, out esi_289, out edi_290)
l0042B2A4:
	word32 eax_112 = Mem111[ebp_110 - 20<i32>:word32]
	Mem113[ebp_110 - 4<i32>:word32] = 2<32>
	branch eax_112 <u 8<32> l0042B2C2
l0042B2B3:
	fn004289B0(Mem122[ebp_110 - 40<i32>:word32], eax_112 + 1<32>, 2<32>)
l0042B2C2:
	word32 v18_136 = Mem135[0x0043A01C<p32>:word32]
	Mem144[ebp_110 - 4<i32>:byte] = 0<8>
	word32 esp_152 = fp - 0x48<32>
	word32 edx_146
	branch fn0042B1A0(ebx_100, v18_136, out edx_146) == 0<8> l0042B2FA
l0042B2D7:
	word32 edx_157 = Mem144[0x0043A018<p32>:word32]
	word32 ecx_158 = edx_157
l0042B2E2:
	ecx_158 = ecx_296 + 2<32>
	ecx_296 = ecx_158
	branch Mem144[ecx_296:word16] != 0<16> l0042B2E2
l0042B2ED:
	word32 ebx_293
	word32 esi_294
	word32 edi_295
	edx_146 = fn0042A160(ebx_100, edx_157, ecx_158 - (edx_157 + 2<i32>) >> 1<32>, out ebx_293, out ebp_110, out esi_294, out edi_295)
	esp_152 = <invalid>
l0042B2FA:
	Mem201[fs:0x00000000<p32>:word32] = Mem198[ebp_110 - 12<i32>:word32]
	word32 esp_204 = esp_152 + 4<i32>
	word32 eax_291
	word32 ecx_292
	fn00427500(Mem201[ebp_110 - 16<i32>:word32] ^ ebp_110, edx_146, Mem201[esp_204 + 8<i32>:word32], ebp_110, Mem201[esp_204 + 4<i32>:word32], Mem201[esp_204:word32], es, ds, Mem201[esp_204 + 8<i32>:word32], out eax_291, out ecx_292)
	return Mem201[ebp_110:word32]
fn0042B210_exit:


word32 fn0042B320(word32 esi, word32 edi, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404080
//      fn004143E0
// MayUse:  edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: eax ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn0042B320_entry:
l0042B320:
	word32 esp_14 = <invalid>
	Mem20[esp_14 - 4<i32>:word32] = fn0042C210(esi, edi)
	word32 ebx_22
	word32 edi_24
	word32 esi_25
	word32 ebp_26
	word32 eax_21 = fn0042B030(Mem20[esp_14 - 4<i32>:word32], out ebx_22, out ebp_26, out esi_25, out edi_24)
	ebxOut = ebx_22
	ebpOut = ebp_26
	esiOut = esi_25
	ediOut = edi_24
	return eax_21
fn0042B320_exit:


byte fn0042B330(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042BD90
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0042B330_entry:
l0042B330:
	word32 edx_110 = dwArg04
	branch Mem14[dwArg04 + 20<i32>:word32] <u 8<32> l0042B342
l0042B340:
	edx_110 = Mem14[dwArg04:word32]
l0042B342:
	word32 ecx_107
	ecx_107 = ecx
	branch Mem14[ecx + 20<i32>:word32] <u 8<32> l0042B34D
l0042B34B:
	ecx_107 = Mem14[ecx:word32]
l0042B34D:
	word32 ebx_31 = Mem14[ecx + 16<i32>:word32]
	word32 edi_29 = Mem14[dwArg04 + 16<i32>:word32]
	word32 esi_33 = ebx_31
	branch edi_29 >=u ebx_31 l0042B358
l0042B355_1:
	esi_33 = edi_29
l0042B358:
	word32 eax_137
	branch esi_33 == 0<32> l0042B385
l0042B35C:
l0042B360:
	branch Mem14[ecx_107:word16] != Mem14[edx_110:word16] l0042B375
l0042B375:
	eax_137 = (0<32> - CONVERT(Mem14[ecx_107:word16] <u Mem14[edx_110:word16], bool, word32) & 0xFFFFFFFE<32>) + 1<32>
	branch eax_137 != 0<32> l0042B396
l0042B368:
	ecx_107 = ecx_107 + 2<32>
	edx_110 = edx_110 + 2<32>
	esi_33 = esi_33 - 1<32>
	branch esi_33 != 0<32> l0042B360
l0042B373:
l0042B385:
	branch edi_29 <=u ebx_31 l0042B392
l0042B392:
	eax_137 = CONVERT(edi_29 <u ebx_31, bool, word32)
l0042B396:
	edxOut = edx_110
	return SLICE(eax_137, byte, 0)
l0042B389:
	edxOut = edx_110
	return 0xFF<8>
fn0042B330_exit:


word32 fn0042B3A0(word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042C210
// MayUse:  edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042B3A0_entry:
	ptr32 fp
	selector fs
	word32 dwLoc3C
l0042B3A0:
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word32 eax_38 = _Init(1<32>, SLICE(eax_27, bool, 0))
	word32 ebp_45
	word32 ecx_196
	word32 eax_44 = fn00427511(eax_38, esi, edi, dwLoc3C, 0x34<32>, 1<32>, out ecx_196, out ebp_45)
	Mem53[ebp_45 - 20<i32>:word32] = eax_44
	Mem54[ebp_45 - 4<i32>:byte] = 2<8>
	word32 esi_51 = eax_44
	branch eax_44 == 0<32> l0042B413
l0042B413:
	esi_51 = 0<32>
l0042B401:
	codecvt(eax_44, 0<32>)
	Mem66[eax_44:word32] = 0x004315DC<p32>
l0042B415:
	word32 edi_69 = Mem68[ebp_45 + 8<i32>:word32]
	Mem74[ebp_45 - 4<i32>:byte] = 1<8>
	Mem77[edi_69 + 4<i32>:word32] = _New_Locimp(eax_38, eax_27)
	branch esi_51 == 0<32> l0042B45F
l0042B42D:
	_Locimp_Addfac(Mem89[edi_69 + 4<i32>:word32], esi_51, operator returntype(&id), eax_27)
	word32 ecx_93 = Mem92[edi_69 + 4<i32>:word32]
	Mem95[ecx_93 + 16<i32>:word32] = 0<32>
	operator =(ecx_93 + 0x18<32>, 0x4315D4<32>)
l0042B45F:
	Mem103[ebp_45 - 4<i32>:word32] = 3<32>
	branch eax_38 == 0<32> l0042B47D
l0042B46A:
	word32 eax_108 = Mem103[eax_38:word32]
	word32 esp_117
	word32 eax_118
	word32 edx_120
	call Mem103[eax_108 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_108,ecx:eax_38,edx:edx_120
		defs: eax:eax_118,edx:edx_120,esp:esp_117
	branch eax_118 == 0<32> l0042B47D
l0042B475:
	word32 edx_126 = Mem103[eax_118:word32]
	Mem129[esp_117 - 4<i32>:word32] = 1<32>
	call Mem129[edx_126:word32] (retsize: 4;)
		uses: ecx:eax_118,edx:edx_126
l0042B47D:
	Mem142[fs:0x00000000<p32>:word32] = Mem139[ebp_45 - 12<i32>:word32]
	return Mem142[ebp_45:word32]
fn0042B3A0_exit:


word32 fn0042B4C0(ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B630
// MayUse:  fs:[0..15]
// LiveOut: eax ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042B4C0_entry:
	ptr32 fp
	selector fs
l0042B4C0:
	Mem21[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_46 = fp - 4<i32>
	branch Mem21[0x0043B0AC<p32>:word32] <= Mem21[Mem21[Mem21[fs:0x2C<32>:word32] + Mem21[0x0043B10C<p32>:word32] * 4<32>:word32] + 4<32>:word32] l0042B543
l0042B4FE:
	fn0042D454(0x43B0AC<32>)
	branch Mem29[0x0043B0AC<p32>:word32] != 0xFFFFFFFF<32> l0042B543
l0042B514:
	word32 ebx_121
	word32 esi_122
	word32 edi_123
	fn0042A160(0x0043A038<p32>, 0x431608<32>, 2<32>, out ebx_121, out ebp_46, out esi_122, out edi_123)
	word32 esp_52 = <invalid>
	Mem58[esp_52 - 4<i32>:word32] = 0x4309F0<32>
	fn00427952(Mem58[esp_52 - 4<i32>:word32])
	Mem66[esp_52 - 8<i32>:word32] = 0x43B0AC<32>
	fn0042D40A(Mem66[esp_52 - 8<i32>:word32])
l0042B543:
	Mem81[fs:0x00000000<p32>:word32] = Mem78[ebp_46 - 12<i32>:word32]
	ebpOut = Mem81[ebp_46:word32]
	return 0x0043A038<p32>
fn0042B4C0_exit:


word32 fn0042B560(ptr32 & edxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B630
//      fn0042B830
//      fn0042C020
// MayUse:  fs:[0..15]
// LiveOut: eax ebp edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042B560_entry:
	ptr32 fp
	selector fs
	word32 edx
	word32 esi
l0042B560:
	Mem21[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_46 = fp - 4<i32>
	branch Mem21[0x0043B0A8<p32>:word32] <= Mem21[Mem21[Mem21[fs:0x2C<32>:word32] + Mem21[0x0043B10C<p32>:word32] * 4<32>:word32] + 4<32>:word32] l0042B5E3
l0042B59E:
	fn0042D454(0x43B0A8<32>)
	branch Mem29[0x0043B0A8<p32>:word32] != 0xFFFFFFFF<32> l0042B5E3
l0042B5B4:
	word32 ebx_123
	word32 esi_124
	word32 edi_125
	edx = fn0042A160(0x0043A020<p32>, 0x431604<32>, 1<32>, out ebx_123, out ebp_46, out esi_124, out edi_125)
	word32 esp_52 = <invalid>
	Mem58[esp_52 - 4<i32>:word32] = 0x430A70<32>
	fn00427952(Mem58[esp_52 - 4<i32>:word32])
	Mem66[esp_52 - 8<i32>:word32] = 0x43B0A8<32>
	esi = fn0042D40A(Mem66[esp_52 - 8<i32>:word32])
l0042B5E3:
	Mem81[fs:0x00000000<p32>:word32] = Mem78[ebp_46 - 12<i32>:word32]
	word32 ebp_85 = Mem81[ebp_46:word32]
	edxOut = edx
	ebpOut = ebp_85
	esiOut = esi
	return 0x0043A020<p32>
fn0042B560_exit:


void fn0042B600(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B630
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0042B600_entry:
l0042B600:
	Mem12[dwArg04 + 16<i32>:word32] = 0<32>
	Mem13[dwArg04 + 20<i32>:word32] = 7<32>
	Mem15[dwArg04:word16] = 0<16>
	Mem16[dwArg04 + 24<i32>:word32] = ecx
	Mem18[dwArg04 + 28<i32>:word32] = Mem16[ecx + 16<i32>:word32]
	return
fn0042B600_exit:


word32 fn0042B630(word32 ecx, selector es, selector ds, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A600
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042B630_entry:
	ptr32 fp
	selector fs
l0042B630:
	word32 esp_280
	Mem34[fs:0<32>:word32] = fp - 16<i32>
	Mem61[fn0042B830(ecx, es, ds) - 4<i32>:word32] = 0<32>
	word32 ebp_64
	word32 edx_533
	word32 esi_534
	word32 eax_62 = fn0042B560(out edx_533, out ebp_64, out esi_534)
	Mem77[ebp_64 - 4<i32>:byte] = 1<8>
	word32 esp_69 = <invalid>
	Mem81[esp_69 - 0x24<32>:word32] = esp_69 - 0x20<32>
	fn0042B600(eax_62, Mem81[esp_69 - 0x24<32>:word32])
	Mem95[esp_69 - 0x44<32>:word32] = esp_69 - 0x40<32>
	word32 ebp_97 = fn0042B210(eax_62, es, ds, Mem95[esp_69 - 0x44<32>:word32])
	word32 esp_103 = <invalid>
	Mem116[esp_103 - 0x20<32>:word32] = esp_103 - 0x1C<32>
	fn0042B600(ebp_97 - 40<i32>, Mem116[esp_103 - 0x20<32>:word32])
	Mem130[esp_103 - 0x40<32>:word32] = esp_103 - 0x3C<32>
	fn0042B210(ebp_97 - 40<i32>, es, ds, Mem130[esp_103 - 0x40<32>:word32])
	word32 edi_151
	word32 ebp_150
	word32 edx_149
	word32 eax_146 = fn0042BD90(es, ds, out edx_149, out ebp_150, out edi_151)
	Mem159[ebp_150 - 4<i32>:byte] = 0<8>
	word32 esp_153 = <invalid>
	word32 esp_158 = esp_153 + 0x80<32>
	branch eax_146 == 0<32> l0042B7D2
l0042B6C5:
	word32 ebp_165
	word32 eax_163 = fn0042B4C0(out ebp_165)
	Mem178[ebp_165 - 4<i32>:byte] = 2<8>
	word32 esp_170 = <invalid>
	Mem182[esp_170 - 0x24<32>:word32] = esp_170 - 0x20<32>
	fn0042B600(eax_163, Mem182[esp_170 - 0x24<32>:word32])
	Mem196[esp_170 - 0x44<32>:word32] = esp_170 - 0x40<32>
	word32 ebp_198 = fn0042B210(eax_163, es, ds, Mem196[esp_170 - 0x44<32>:word32])
	word32 esp_204 = <invalid>
	Mem217[esp_204 - 0x20<32>:word32] = esp_204 - 0x1C<32>
	fn0042B600(ebp_198 - 40<i32>, Mem217[esp_204 - 0x20<32>:word32])
	Mem231[esp_204 - 0x40<32>:word32] = esp_204 - 0x3C<32>
	fn0042B210(ebp_198 - 40<i32>, es, ds, Mem231[esp_204 - 0x40<32>:word32])
	word32 esp_254 = <invalid>
	word32 eax_247 = fn0042BD90(es, ds, out edx_149, out ebp_150, out edi_151)
	Mem260[ebp_150 - 4<i32>:byte] = 0<8>
	esp_158 = esp_254 + 0x80<32>
	branch eax_247 == 0<32> l0042B7D2
l0042B7D2:
	Mem266[edi_151 + 16<i32>:word32] = 0<32>
	Mem267[edi_151 + 20<i32>:word32] = 7<32>
	Mem269[edi_151:word16] = 0<16>
	word32 eax_271 = Mem269[ebp_150 - 20<i32>:word32]
	Mem272[ebp_150 - 4<i32>:word32] = 3<32>
	branch eax_271 <u 8<32> l0042B803
l0042B7F4:
	word32 esp_276 = esp_158 - 4<i32>
	Mem277[esp_276:word32] = 2<32>
	Mem281[esp_276 - 4<i32>:word32] = eax_271 + 1<32>
	esp_280 = esp_276 - 4<i32>
l0042B715:
	word32 ebx_320
	word32 eax_311
	Mem283[esp_254 + 0x7C<32>:word32] = 0xFFFFFFFF<32>
	Mem285[esp_254 + 0x78<32>:word32] = 0x2E<32>
	word32 eax_287 = fn0042BB10(ebp_150 - 40<i32>, Mem285[esp_254 + 0x78<32>:word16], Mem285[esp_254 + 0x7C<32>:word32])
	branch eax_287 != 0xFFFFFFFF<32> l0042B746
l0042B746:
	word32 eax_299 = ebp_150 - 40<i32>
	branch Mem285[ebp_150 - 20<i32>:word32] <u 8<32> l0042B751
l0042B74D_1:
	eax_299 = Mem285[ebp_150 - 40<i32>:word32]
l0042B751:
	Mem307[esp_254 + 0x7C<32>:word32] = eax_299 + eax_287 * 2<32>
	eax_311 = fn00429CB0(ebp_150 - 88<i32>, Mem307[esp_254 + 0x7C<32>:word32], out ebp_150)
	ebx_320 = 4<32>
l0042B728:
	Mem324[ebp_150 - 48<i32>:word32] = 0<32>
	Mem325[ebp_150 - 44<i32>:word32] = 7<32>
	Mem327[ebp_150 - 64<i32>:word16] = 0<16>
	eax_311 = ebp_150 - 64<i32>
	ebx_320 = 2<32>
l0042B762:
	Mem333[esp_254 + 0x7C<32>:word32] = eax_311
	word32 ebx_347 = ebx_320 | 1<32>
	edx_149 = fn00429C20(edi_151, Mem333[esp_254 + 0x7C<32>:word32])
	byte bl_348 = SLICE(ebx_347, byte, 0)
	branch (bl_348 & 4<8>) == 0<8> l0042B796
l0042B772:
	Mem354[ebp_150 - 96<i32>:word32] = ebx_347 & 0xFFFFFFFB<32>
	word32 eax_355 = Mem354[ebp_150 - 68<i32>:word32]
	Mem356[ebp_150 - 4<i32>:word32] = 5<32>
	bl_348 = SLICE(ebx_347, byte, 0) & 0xFB<8> (alias)
	branch eax_355 <u 8<32> l0042B796
l0042B787:
	Mem362[esp_254 + 0x7C<32>:word32] = 2<32>
	Mem364[esp_254 + 0x78<32>:word32] = eax_355 + 1<32>
	Mem367[esp_254 + 0x74<32>:word32] = Mem364[ebp_150 - 88<i32>:word32]
	edx_149 = fn004289B0(Mem367[esp_254 + 0x74<32>:word32], Mem367[esp_254 + 0x78<32>:word32], Mem367[esp_254 + 0x7C<32>:word32])
l0042B796:
	Mem378[ebp_150 - 4<i32>:word32] = 0<32>
	branch (bl_348 & 2<8>) == 0<8> l0042B7BD
l0042B7A2:
	word32 eax_384 = Mem378[ebp_150 - 44<i32>:word32]
	Mem385[ebp_150 - 4<i32>:byte] = 6<8>
	branch eax_384 <u 8<32> l0042B7BD
l0042B7AE:
	Mem392[esp_254 + 0x7C<32>:word32] = 2<32>
	Mem394[esp_254 + 0x78<32>:word32] = eax_384 + 1<32>
	Mem397[esp_254 + 0x74<32>:word32] = Mem394[ebp_150 - 64<i32>:word32]
	edx_149 = fn004289B0(Mem397[esp_254 + 0x74<32>:word32], Mem397[esp_254 + 0x78<32>:word32], Mem397[esp_254 + 0x7C<32>:word32])
l0042B7BD:
	word32 ecx_409 = Mem408[ebp_150 - 20<i32>:word32]
	Mem410[ebp_150 - 4<i32>:word32] = 7<32>
	esp_158 = esp_254 + 0x80<32>
	branch ecx_409 <u 8<32> l0042B803
l0042B7CC:
	Mem415[esp_254 + 0x7C<32>:word32] = 2<32>
	Mem419[esp_254 + 0x78<32>:word32] = ecx_409 + 1<32>
	esp_280 = esp_254 + 0x78<32>
l0042B7F8:
	word32 esp_424 = esp_280 - 4<i32>
	Mem425[esp_424:word32] = Mem421[ebp_150 - 40<i32>:word32]
	edx_149 = fn004289B0(Mem425[esp_424:word32], Mem425[esp_424 + 4<i32>:word32], Mem425[esp_424 + 8<i32>:word32])
	esp_158 = esp_424 + 0xC<32>
l0042B803:
	Mem448[fs:0x00000000<p32>:word32] = Mem441[ebp_150 - 12<i32>:word32]
	word32 esp_451 = esp_158 + 4<i32>
	word32 edi_452 = Mem448[esp_451:word32]
	word32 ebx_456 = Mem448[esp_451 + 8<i32>:word32]
	word32 eax_535
	word32 ecx_536
	fn00427500(Mem448[ebp_150 - 16<i32>:word32] ^ ebp_150, edx_149, ebx_456, ebp_150, Mem448[esp_451 + 4<i32>:word32], edi_452, es, ds, Mem448[esp_451 + 8<i32>:word32], out eax_535, out ecx_536)
	ebpOut = Mem448[ebp_150:word32]
	ediOut = edi_452
	return ebx_456
fn0042B630_exit:


word32 fn0042B830(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B630
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042B830_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc2C
l0042B830:
	word32 edx_147
	word32 esp_149
	word32 esi_154
	word32 ebp_143
	word32 ebx_155
	word32 edi_146
	Mem34[fs:0<32>:word32] = fp - 16<i32>
	word32 esi_39 = Mem38[ecx + 16<i32>:word32]
	word32 ebx_100 = ecx
	word32 eax_44 = fn0042B9F0(ecx, esi_39)
	branch esi_39 == 0<32> l0042B8D9
l0042B87B:
	branch eax_44 == 0<32> l0042B8D9
l0042B87F:
	word32 ecx_61
	branch Mem52[ecx + 20<i32>:word32] <u 8<32> l0042B889
l0042B889:
	ecx_61 = ecx
l0042B885:
	ecx_61 = Mem52[ecx:word32]
l0042B88B:
	word32 ecx_66 = CONVERT(Mem52[ecx_61 + eax_44 * 2<32>:word16], word16, word32)
	branch ecx_66 == 0x2F<32> l0042B899
l0042B894:
	branch ecx_66 != 0x5C<32> l0042B8D9
l0042B899:
	branch fn0042BCD0(ecx, eax_44) != 0<8> l0042B8D6
l0042B8D6:
l0042B8D9:
	branch Mem96[ecx + 20<i32>:word32] <u 8<32> l0042B8E1
l0042B8DF:
	ebx_100 = Mem96[ecx:word32]
l0042B8E1:
	Mem106[&tLoc2C + 16<i32>:word32] = 0<32>
	word32 edx_103 = ebx_100 + eax_44 * 2<32>
	Mem108[&tLoc2C + 20<i32>:word32] = 7<32>
	Mem113[&tLoc2C:word16] = 0<16>
	word32 ecx_107 = edx_103
l0042B900:
	ecx_107 = ecx_450 + 2<32>
	ecx_450 = ecx_107
	branch Mem113[ecx_450:word16] != 0<16> l0042B900
l0042B90B:
	word32 ebx_446
	word32 esi_447
	edx_147 = fn0042A160(&tLoc2C, edx_103, ecx_107 - (edx_103 + 2<i32>) >> 1<32>, out ebx_446, out ebp_143, out esi_447, out edi_146)
	esp_149 = <invalid>
	esi_154 = ebp_143 - 40<i32>
	ebx_155 = 2<32>
l0042B8A7:
	word32 ebp_158
	word32 edx_442
	word32 esi_443
	word32 eax_156 = fn0042B560(out edx_442, out ebp_158, out esi_443)
	Mem171[ebp_158 - 48<i32>:word32] = 0<32>
	word32 esp_163 = <invalid>
	Mem173[esp_163 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem175[esp_163 - 8<i32>:word32] = 0<32>
	Mem177[ebp_158 - 64<i32>:word16] = 0<16>
	Mem180[esp_163 - 12<i32>:word32] = eax_156
	Mem181[ebp_158 - 44<i32>:word32] = 7<32>
	word32 ebx_444
	word32 esi_445
	edx_147 = fn0042A070(ebp_158 - 64<i32>, Mem181[esp_163 - 16<i32>:word32], Mem181[esp_163 - 12<i32>:word32], Mem181[esp_163 - 8<i32>:word32], Mem181[esp_163 - 4<i32>:word32], Mem181[esp_163:word32], out ebx_444, out ebp_143, out esi_445, out edi_146)
	esp_149 = esp_163
	esi_154 = ebp_143 - 64<i32>
	ebx_155 = 1<32>
l0042B921:
	Mem198[edi_146 + 16<i32>:word32] = 0<32>
	Mem199[edi_146 + 20<i32>:word32] = 7<32>
	Mem202[ebp_143 - 68<i32>:word32] = ebx_155
	Mem204[edi_146:word16] = 0<16>
	Mem205[ebp_143 - 4<i32>:word32] = 1<32>
	branch edi_146 == esi_154 l0042B973
l0042B942:
	word32 eax_209 = Mem205[edi_146 + 20<i32>:word32]
	branch eax_209 <u 8<32> l0042B958
l0042B94A:
	word32 esp_215 = esp_149 - 4<i32>
	Mem216[esp_215:word32] = 2<32>
	Mem218[esp_215 - 4<i32>:word32] = eax_209 + 1<32>
	Mem221[esp_215 - 8<i32>:word32] = Mem218[edi_146:word32]
	edx_147 = fn004289B0(Mem221[esp_215 - 8<i32>:word32], Mem221[esp_215 - 4<i32>:word32], Mem221[esp_215:word32])
l0042B958:
	Mem235[edi_146 + 16<i32>:word32] = 0<32>
	Mem236[edi_146 + 20<i32>:word32] = 7<32>
	word32 esp_239 = esp_149 - 4<i32>
	Mem241[esp_239:word32] = esi_154
	Mem243[edi_146:word16] = 0<16>
	fn0042A010(edi_146, Mem243[esp_239:word32])
l0042B973:
	word32 ebx_252 = ebx_155 | 4<32>
	byte bl_253 = SLICE(ebx_252, byte, 0)
	branch (bl_253 & 2<8>) == 0<8> l0042B99F
l0042B97B:
	Mem260[ebp_143 - 68<i32>:word32] = ebx_252 & 0xFFFFFFFD<32>
	word32 eax_261 = Mem260[ebp_143 - 20<i32>:word32]
	Mem262[ebp_143 - 4<i32>:word32] = 2<32>
	bl_253 = SLICE(ebx_252, byte, 0) & 0xFD<8> (alias)
	branch eax_261 <u 8<32> l0042B99F
l0042B990:
	word32 esp_268 = esp_149 - 4<i32>
	Mem269[esp_268:word32] = 2<32>
	Mem271[esp_268 - 4<i32>:word32] = eax_261 + 1<32>
	Mem274[esp_268 - 8<i32>:word32] = Mem271[ebp_143 - 40<i32>:word32]
	edx_147 = fn004289B0(Mem274[esp_268 - 8<i32>:word32], Mem274[esp_268 - 4<i32>:word32], Mem274[esp_268:word32])
l0042B99F:
	Mem285[ebp_143 - 4<i32>:word32] = 0xFFFFFFFF<32>
	branch (bl_253 & 1<8>) == 0<8> l0042B9C9
l0042B9AB:
	word32 ecx_291 = Mem285[ebp_143 - 44<i32>:word32]
	Mem292[ebp_143 - 4<i32>:word32] = 3<32>
	branch ecx_291 <u 8<32> l0042B9C9
l0042B9BA:
	word32 esp_296 = esp_149 - 4<i32>
	Mem297[esp_296:word32] = 2<32>
	Mem301[esp_296 - 4<i32>:word32] = ecx_291 + 1<32>
	Mem304[esp_296 - 8<i32>:word32] = Mem301[ebp_143 - 64<i32>:word32]
	edx_147 = fn004289B0(Mem304[esp_296 - 8<i32>:word32], Mem304[esp_296 - 4<i32>:word32], Mem304[esp_296:word32])
l0042B9C9:
	Mem326[fs:0x00000000<p32>:word32] = Mem319[ebp_143 - 12<i32>:word32]
	word32 esp_329 = esp_149 + 4<i32>
	word32 eax_448
	word32 ecx_449
	fn00427500(Mem326[ebp_143 - 16<i32>:word32] ^ ebp_143, edx_147, Mem326[esp_329 + 8<i32>:word32], ebp_143, Mem326[esp_329 + 4<i32>:word32], Mem326[esp_329:word32], es, ds, Mem326[esp_329 + 8<i32>:word32], out eax_448, out ecx_449)
	return Mem326[ebp_143:word32]
fn0042B830_exit:


word32 fn0042B9F0(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B830
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esi esp
fn0042B9F0_entry:
l0042B9F0:
	word32 esi_129 = dwArg04
	branch dwArg08 != 2<32> l0042BA38
l0042BA38:
	branch dwArg08 == 0<32> l0042BA5D
l0042B9FF:
	word32 ecx_20
	word32 eax_17 = Mem10[dwArg04 + 20<i32>:word32]
	branch eax_17 <u 8<32> l0042BA0B
l0042BA0B:
	ecx_20 = dwArg04
l0042BA07:
	ecx_20 = Mem10[dwArg04:word32]
l0042BA0D:
	word32 ecx_24 = CONVERT(Mem10[ecx_20:word16], word16, word32)
	branch ecx_24 == 0x2F<32> l0042BA1A
l0042BA15:
	branch ecx_24 != 0x5C<32> l0042BA3C
l0042BA1A:
	word32 eax_35
	branch eax_17 <u 8<32> l0042BA23
l0042BA23:
	eax_35 = dwArg04
l0042BA1F:
	eax_35 = Mem10[dwArg04:word32]
l0042BA25:
	word32 eax_40 = CONVERT(Mem10[eax_35 + 2<i32>:word16], word16, word32)
	branch eax_40 == 0x2F<32> l0042BA33
l0042BA2E:
	branch eax_40 != 0x5C<32> l0042BA3C
l0042BA3C:
	word32 eax_50
	branch Mem10[dwArg04 + 20<i32>:word32] <u 8<32> l0042BA46
l0042BA46:
	eax_50 = dwArg04
l0042BA42:
	eax_50 = Mem10[dwArg04:word32]
l0042BA48:
	word32 eax_59 = CONVERT(Mem10[eax_50 - 2<i32> + dwArg08 * 2<32>:word16], word16, word32)
	branch eax_59 == 0x2F<32> l0042BA57
l0042BA52:
	branch eax_59 != 0x5C<32> l0042BA5D
l0042BA5D:
	word32 ecx_69
	branch Mem10[dwArg04 + 20<i32>:word32] <u 8<32> l0042BA67
l0042BA67:
	ecx_69 = dwArg04
l0042BA63:
	ecx_69 = Mem10[dwArg04:word32]
l0042BA69:
	word32 eax_112 = fn0042AFC0(ecx_69, Mem86[dwArg04 + 16<i32>:word32], dwArg08 - 1<i32>, 0x4315B8<32>, 2<32>)
	branch eax_112 != 0xFFFFFFFF<32> l0042BA9C
l0042BA85:
	branch dwArg08 <=u 1<32> l0042BA33
l0042BA8A:
	eax_112 = fn0042BB10(dwArg04, 0x3A<16>, dwArg08 - 2<i32>)
	branch eax_112 == 0xFFFFFFFF<32> l0042BA33
l0042BA9C:
	branch eax_112 != 1<32> l0042BABA
l0042BAA1:
	branch Mem126[dwArg04 + 20<i32>:word32] <u 8<32> l0042BAA9
l0042BAA7:
	esi_129 = Mem126[dwArg04:word32]
l0042BAA9:
	word32 ecx_132 = CONVERT(Mem126[esi_129:word16], word16, word32)
	branch ecx_132 == 0x2F<32> l0042BA33
l0042BAB1:
	branch ecx_132 == 0x5C<32> l0042BA33
l0042BABA:
	return eax_112 + 1<32>
l0042BA57:
	return dwArg08 - 1<i32>
l0042BA33:
	return 0<32>
fn0042B9F0_exit:


word32 fn0042BAC0(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042BCD0
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: edi esp
fn0042BAC0_entry:
l0042BAC0:
	word32 edx_10 = dwArg04
l0042BAD0:
	edx_10 = edx_75 + 2<32>
	edx_75 = edx_10
	branch Mem8[edx_75:word16] != 0<16> l0042BAD0
l0042BADB:
	word32 ecx_28
	word32 edx_18 = edx_10 - (dwArg04 + 2<i32>)
	ecx_28 = ecx
	branch Mem8[ecx + 20<i32>:word32] <u 8<32> l0042BAEB
l0042BAE9:
	ecx_28 = Mem8[ecx:word32]
l0042BAEB:
	return fn0042AF50(ecx_28, Mem38[ecx + 16<i32>:word32], dwArg08, dwArg04, edx_18 >> 1<32>)
fn0042BAC0_exit:


word32 fn0042BB10(word32 ecx, word16 wArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B630
//      fn0042B9F0
// MayUse:  ecx:[0..31] Stack +0004:[0..15] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0042BB10_entry:
l0042BB10:
	word32 edx_10 = ecx
	branch Mem0[ecx + 20<i32>:word32] <u 8<32> l0042BB1D
l0042BB1B:
	edx_10 = Mem0[ecx:word32]
l0042BB1D:
	word32 eax_13 = Mem0[ecx + 16<i32>:word32]
	branch eax_13 == 0<32> l0042BB53
l0042BB23:
	word32 ecx_18 = dwArg08
	branch eax_13 - 1<32> >=u dwArg08 l0042BB2D
l0042BB2A_1:
	ecx_18 = eax_13 - 1<32>
l0042BB2D:
	word32 eax_26 = edx_10 + ecx_18 * 2<32>
	branch Mem0[eax_26:word16] == wArg04 l0042BB4C
l0042BB3A:
l0042BB40:
	branch eax_26 == edx_10 l0042BB53
l0042BB53:
	return 0xFFFFFFFF<32>
l0042BB44:
	eax_26 = eax_26 - 2<32>
	branch Mem0[eax_26:word16] != wArg04 l0042BB40
l0042BB4C:
	return eax_26 - edx_10 >> 1<32>
fn0042BB10_exit:


void fn0042BB60(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B210
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn0042BB60_entry:
l0042BB60:
	word32 ebp_10 = dwArg10
	word32 esi_14 = dwArg04
	branch dwArg10 != 0xFFFFFFFF<32> l0042BB73
l0042BB70:
	ebp_10 = Mem13[dwArg04 + 16<i32>:word32]
l0042BB73:
	Mem22[dwArg08:word32] = 0<32>
	Mem23[dwArg0C:word32] = 0<32>
	branch Mem23[dwArg04 + 16<i32>:word32] == 0<32> l0042BC9F
l0042BB91:
	word32 edi_164 = 0<32>
	branch ebp_10 <u 2<32> l0042BBF7
l0042BB99:
	word32 ecx_38
	word32 eax_35 = Mem30[dwArg04 + 20<i32>:word32]
	branch eax_35 <u 8<32> l0042BBA5
l0042BBA5:
	ecx_38 = dwArg04
l0042BBA1:
	ecx_38 = Mem30[dwArg04:word32]
l0042BBA7:
	word32 ecx_42 = CONVERT(Mem30[ecx_38:word16], word16, word32)
	branch ecx_42 == 0x2F<32> l0042BBB4
l0042BBAF:
	branch ecx_42 != 0x5C<32> l0042BBF7
l0042BBB4:
	word32 ecx_53
	branch eax_35 <u 8<32> l0042BBBD
l0042BBBD:
	ecx_53 = dwArg04
l0042BBB9:
	ecx_53 = Mem30[dwArg04:word32]
l0042BBBF:
	word32 ecx_58 = CONVERT(Mem30[ecx_53 + 2<i32>:word16], word16, word32)
	branch ecx_58 == 0x2F<32> l0042BBCD
l0042BBC8:
	branch ecx_58 != 0x5C<32> l0042BBF7
l0042BBCD:
	branch ebp_10 == 2<32> l0042BBEE
l0042BBD2:
	word32 eax_75
	branch eax_35 <u 8<32> l0042BBDB
l0042BBDB:
	eax_75 = dwArg04
l0042BBD7:
	eax_75 = Mem30[dwArg04:word32]
l0042BBDD:
	branch fn0042BCB0(Mem30[eax_75 + 4<i32>:word16]) != 0<8> l0042BBF7
l0042BBF7:
	word32 eax_103
	branch Mem100[dwArg04 + 20<i32>:word32] <u 8<32> l0042BC01
l0042BC01:
	eax_103 = dwArg04
l0042BBFD:
	eax_103 = Mem100[dwArg04:word32]
l0042BC03:
	word32 eax_107 = CONVERT(Mem100[eax_103:word16], word16, word32)
	branch eax_107 == 0x2F<32> l0042BC63
l0042BC0B:
	branch eax_107 == 0x5C<32> l0042BC63
l0042BC63:
	Mem120[dwArg0C:word32] = 1<32>
	branch ebp_10 <=u 1<32> l0042BC9E
l0042BC6E:
	word32 eax_127 = 1<32>
	word32 ecx_128 = 2<32>
l0042BC75:
	word32 edx_135
	branch Mem132[dwArg04 + 20<i32>:word32] <u 8<32> l0042BC7F
l0042BC7F:
	edx_135 = dwArg04
l0042BC7B:
	edx_135 = Mem132[dwArg04:word32]
l0042BC81:
	word32 edx_141 = CONVERT(Mem132[ecx_128 + 0<i32> + edx_135:word16], word16, word32)
	branch edx_141 == 0x2F<32> l0042BC90
l0042BC8B:
	branch edx_141 != 0x5C<32> l0042BC9E
l0042BC90:
	Mem158[dwArg08:word32] = Mem132[dwArg08:word32] + 1<32>
	eax_127 = eax_127 + 1<32>
	ecx_128 = ecx_128 + 2<32>
	branch eax_127 <u ebp_10 l0042BC75
l0042BBEE:
	Mem166[dwArg0C:word32] = 2<32>
	edi_164 = 2<32>
l0042BC10:
	bool v23_282 = edi_164 == ebp_10
	branch edi_164 >=u ebp_10 l0042BC4B
l0042BC14:
	word32 ecx_184
	word32 eax_181 = Mem180[dwArg04 + 20<i32>:word32]
	branch eax_181 <u 8<32> l0042BC20
l0042BC20:
	ecx_184 = dwArg04
l0042BC1C:
	ecx_184 = Mem180[dwArg04:word32]
l0042BC22:
	branch Mem180[ecx_184 + edi_164 * 2<32>:word16] == 0x3A<16> l0042BC49
l0042BC29:
	word32 eax_196
	branch eax_181 <u 8<32> l0042BC32
l0042BC32:
	eax_196 = dwArg04
l0042BC2E:
	eax_196 = Mem180[dwArg04:word32]
l0042BC34:
	word32 eax_201 = CONVERT(Mem180[eax_196 + edi_164 * 2<32>:word16], word16, word32)
	branch eax_201 == 0x2F<32> l0042BC49
l0042BC3D:
	branch eax_201 == 0x5C<32> l0042BC49
l0042BC42:
	Mem210[dwArg0C:word32] = Mem180[dwArg0C:word32] + 1<32>
	edi_164 = edi_164 + 1<32>
	branch edi_164 <u ebp_10 l0042BC14
l0042BC49:
	v23_282 = edi_164 == ebp_10
l0042BC4B:
	branch v23_282 l0042BC9E
l0042BC4D:
	branch Mem229[dwArg04 + 20<i32>:word32] <u 8<32> l0042BC55
l0042BC53:
	esi_14 = Mem229[dwArg04:word32]
l0042BC55:
	branch Mem229[esi_14 + edi_164 * 2<32>:word16] != 0x3A<16> l0042BC9E
l0042BC9E:
l0042BC9F:
	return
l0042BC5C:
	Mem269[dwArg0C:word32] = Mem229[dwArg0C:word32] + 1<32>
	return
fn0042BB60_exit:


byte fn0042BCB0(word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042BB60
// MayUse:  Stack +0004:[0..15]
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: esp
fn0042BCB0_entry:
l0042BCB0:
	branch wArg04 == 0x2F<16> l0042BCC4
l0042BCBB:
	branch wArg04 == 0x5C<16> l0042BCC4
l0042BCC4:
	return 1<8>
l0042BCC1:
	return 0<8>
fn0042BCB0_exit:


byte fn0042BCD0(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B830
//      fn0042C020
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: esi esp
fn0042BCD0_entry:
l0042BCD0:
	word32 ecx_133 = dwArg04
	word32 esi_23 = dwArg08
	branch dwArg08 == 0<32> l0042BD3A
l0042BCDD:
	word32 edx_13 = Mem8[dwArg04 + 20<i32>:word32]
l0042BCE0:
	word32 eax_18
	branch edx_13 <u 8<32> l0042BCE9
l0042BCE9:
	eax_18 = dwArg04
l0042BCE5:
	eax_18 = Mem8[dwArg04:word32]
l0042BCEB:
	word32 eax_25 = CONVERT(Mem8[eax_18 - 2<i32> + esi_23 * 2<32>:word16], word16, word32)
	branch eax_25 == 0x2F<32> l0042BCFA
l0042BCF5:
	branch eax_25 != 0x5C<32> l0042BCFF
l0042BCFA:
	esi_23 = esi_23 - 1<32>
	branch esi_23 != 0<32> l0042BCE0
l0042BCFF:
	branch esi_23 == 0<32> l0042BD3A
l0042BD03:
	branch esi_23 != 2<32> l0042BD3E
l0042BD3E:
	branch esi_23 <u 3<32> l0042BD8A
l0042BD43:
	word32 edx_50
	word32 eax_47 = Mem8[dwArg04 + 20<i32>:word32]
	branch eax_47 <u 8<32> l0042BD4F
l0042BD4F:
	edx_50 = dwArg04
l0042BD4B:
	edx_50 = Mem8[dwArg04:word32]
l0042BD51:
	word32 edx_54 = CONVERT(Mem8[edx_50:word16], word16, word32)
	branch edx_54 == 0x2F<32> l0042BD5E
l0042BD59:
	branch edx_54 != 0x5C<32> l0042BD8A
l0042BD5E:
	word32 eax_65
	branch eax_47 <u 8<32> l0042BD67
l0042BD67:
	eax_65 = dwArg04
l0042BD63:
	eax_65 = Mem8[dwArg04:word32]
l0042BD69:
	word32 eax_70 = CONVERT(Mem8[eax_65 + 2<i32>:word16], word16, word32)
	branch eax_70 == 0x2F<32> l0042BD77
l0042BD72:
	branch eax_70 != 0x5C<32> l0042BD8A
l0042BD77:
	word32 eax_89 = fn0042BAC0(dwArg04, 0x4315B8<32>, 2<32>)
	return CONVERT(eax_89 == esi_23, bool, int8)
l0042BD08:
	word32 eax_109
	word32 edx_106 = Mem8[dwArg04 + 20<i32>:word32]
	branch edx_106 <u 8<32> l0042BD14
l0042BD14:
	eax_109 = dwArg04
l0042BD10:
	eax_109 = Mem8[dwArg04:word32]
l0042BD16:
	word32 eax_113 = CONVERT(Mem8[eax_109:word16], word16, word32)
	branch eax_113 <u 0x61<32> l0042BD23
l0042BD1E:
	branch eax_113 <=u 0x7A<32> l0042BD2C
l0042BD23:
	branch SLICE(eax_113, word16, 0) >u 0xFFA6<16> l0042BD8A
l0042BD2C:
	branch edx_106 <u 8<32> l0042BD33
l0042BD31:
	ecx_133 = Mem8[dwArg04:word32]
l0042BD33:
	branch Mem8[ecx_133 + 2<i32>:word16] != 0x3A<16> l0042BD8A
l0042BD8A:
	return 0<8>
l0042BD3A:
	return 1<8>
fn0042BCD0_exit:


word32 fn0042BD90(selector es, selector ds, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B630
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp edi edx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved: DP
fn0042BD90_entry:
	ptr32 fp
	selector fs
	word32 edi
l0042BD90:
	Mem26[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_28 = fp - 4<i32>
	word32 esp_23 = fp - 24<i32>
l0042BDC0:
	word32 ebx_113
	word32 edx_100
	word32 edx_32 = Mem29[ebp_28 + 0x84<32>:word32]
	word32 ebx_33 = Mem29[ebp_28 + 96<i32>:word32]
	word32 eax_34 = Mem29[ebp_28 + 68<i32>:word32]
	word32 ecx_35 = Mem29[ebp_28 + 36<i32>:word32]
	branch Mem29[ebp_28 + 32<i32>:word32] != Mem29[ebp_28 + 64<i32>:word32] l0042BDDB
l0042BDD7:
	branch ecx_35 == eax_34 l0042BE25
l0042BDDB:
	branch ebx_33 != Mem29[ebp_28 + 0x80<32>:word32] l0042BDE8
l0042BDE3:
	branch Mem29[ebp_28 + 100<i32>:word32] == edx_32 l0042BE25
l0042BE25:
	edx_100 = Mem29[ebp_28 + 0x84<32>:word32]
	branch Mem29[ebp_28 + 32<i32>:word32] != Mem29[ebp_28 + 64<i32>:word32] l0042BE61
l0042BE33:
	branch ecx_35 != eax_34 l0042BE61
l0042BE37:
	branch ebx_33 != Mem29[ebp_28 + 0x80<32>:word32] l0042BE48
l0042BE3F:
	branch Mem29[ebp_28 + 100<i32>:word32] != edx_100 l0042BE48
l0042BE48:
	branch ecx_35 != eax_34 l0042BE61
l0042BE61:
	ebx_113 = 1<32>
l0042BE4C:
	ebx_113 = 0xFFFFFFFF<32>
l0042BE44:
	ebx_113 = 0<32>
l0042BDE8:
	word32 esp_96 = esp_23 - 4<i32>
	Mem97[esp_96:word32] = ebp_28 + 72<i32>
	branch SLICE(CONVERT(fn0042B330(ebp_28 + 8<i32>, Mem97[esp_96:word32], out edx_100), byte, uint32) >>u 0x1F<32>, byte, 0) != 0<8> l0042BE7A
l0042BE7A:
	ebx_113 = 0xFFFFFFFF<32>
l0042BDFB:
	Mem118[esp_96:word32] = ebp_28 + 8<i32>
	branch SLICE(CONVERT(fn0042B330(ebp_28 + 72<i32>, Mem118[esp_96:word32], out edx_100), byte, uint32) >>u 0x1F<32>, byte, 0) != 0<8> l0042BE73
l0042BE73:
	ebx_113 = 1<32>
l0042BE7D:
	word32 eax_140 = Mem137[ebp_28 + 28<i32>:word32]
	Mem141[ebp_28 - 4<i32>:byte] = 4<8>
	branch eax_140 <u 8<32> l0042BEDE
l0042BE89:
	word32 ecx_144 = Mem141[ebp_28 + 8<i32>:word32]
	byte cl_153 = SLICE(ecx_144, byte, 0)
	branch eax_140 <=u 0x7FFFFFFE<32> l0042BE9A
l0042BE94:
	_invalid_parameter_noinfo_noreturn()
l0042BE9A:
	word32 ecx_160 = ecx_144
	branch (eax_140 + 1<32>) * 2<32> <u 0x1000<32> l0042BED5
l0042BEA3:
	branch (cl_153 & 0x1F<8>) == 0<8> l0042BEAE
l0042BEA8:
	_invalid_parameter_noinfo_noreturn()
l0042BEAE:
	word32 eax_163 = Mem141[ecx_144 - 4<i32>:word32]
	branch eax_163 <u ecx_144 l0042BEBB
l0042BEB5:
	_invalid_parameter_noinfo_noreturn()
l0042BEBB:
	word32 ecx_168 = ecx_144 - eax_163
	branch ecx_168 >=u 4<32> l0042BEC8
l0042BEC2:
	_invalid_parameter_noinfo_noreturn()
l0042BEC8:
	branch ecx_168 <=u 0x23<32> l0042BED3
l0042BECD:
	_invalid_parameter_noinfo_noreturn()
l0042BED3:
	ecx_160 = eax_163
l0042BED5:
	word32 esp_187 = esp_23 - 4<i32>
	Mem189[esp_187:word32] = ecx_160
	fn00427E3E(Mem189[esp_187:(ptr32 void)])
l0042BEDE:
	word32 eax_200 = Mem199[ebp_28 + 60<i32>:word32]
	Mem201[ebp_28 - 4<i32>:byte] = 5<8>
	branch eax_200 <u 8<32> l0042BF3F
l0042BEEA:
	word32 ecx_204 = Mem201[ebp_28 + 40<i32>:word32]
	byte cl_213 = SLICE(ecx_204, byte, 0)
	branch eax_200 <=u 0x7FFFFFFE<32> l0042BEFB
l0042BEF5:
	_invalid_parameter_noinfo_noreturn()
l0042BEFB:
	word32 ecx_220 = ecx_204
	branch (eax_200 + 1<32>) * 2<32> <u 0x1000<32> l0042BF36
l0042BF04:
	branch (cl_213 & 0x1F<8>) == 0<8> l0042BF0F
l0042BF09:
	_invalid_parameter_noinfo_noreturn()
l0042BF0F:
	word32 eax_223 = Mem201[ecx_204 - 4<i32>:word32]
	branch eax_223 <u ecx_204 l0042BF1C
l0042BF16:
	_invalid_parameter_noinfo_noreturn()
l0042BF1C:
	word32 ecx_228 = ecx_204 - eax_223
	branch ecx_228 >=u 4<32> l0042BF29
l0042BF23:
	_invalid_parameter_noinfo_noreturn()
l0042BF29:
	branch ecx_228 <=u 0x23<32> l0042BF34
l0042BF2E:
	_invalid_parameter_noinfo_noreturn()
l0042BF34:
	ecx_220 = eax_223
l0042BF36:
	word32 esp_244 = esp_23 - 4<i32>
	Mem246[esp_244:word32] = ecx_220
	fn00427E3E(Mem246[esp_244:(ptr32 void)])
l0042BF3F:
	word32 eax_257 = Mem256[ebp_28 + 92<i32>:word32]
	Mem258[ebp_28 - 4<i32>:byte] = 6<8>
	branch eax_257 <u 8<32> l0042BFA0
l0042BF4B:
	word32 ecx_261 = Mem258[ebp_28 + 72<i32>:word32]
	byte cl_270 = SLICE(ecx_261, byte, 0)
	branch eax_257 <=u 0x7FFFFFFE<32> l0042BF5C
l0042BF56:
	_invalid_parameter_noinfo_noreturn()
l0042BF5C:
	word32 ecx_277 = ecx_261
	branch (eax_257 + 1<32>) * 2<32> <u 0x1000<32> l0042BF97
l0042BF65:
	branch (cl_270 & 0x1F<8>) == 0<8> l0042BF70
l0042BF6A:
	_invalid_parameter_noinfo_noreturn()
l0042BF70:
	word32 eax_280 = Mem258[ecx_261 - 4<i32>:word32]
	branch eax_280 <u ecx_261 l0042BF7D
l0042BF77:
	_invalid_parameter_noinfo_noreturn()
l0042BF7D:
	word32 ecx_285 = ecx_261 - eax_280
	branch ecx_285 >=u 4<32> l0042BF8A
l0042BF84:
	_invalid_parameter_noinfo_noreturn()
l0042BF8A:
	branch ecx_285 <=u 0x23<32> l0042BF95
l0042BF8F:
	_invalid_parameter_noinfo_noreturn()
l0042BF95:
	ecx_277 = eax_280
l0042BF97:
	word32 esp_301 = esp_23 - 4<i32>
	Mem303[esp_301:word32] = ecx_277
	fn00427E3E(Mem303[esp_301:(ptr32 void)])
l0042BFA0:
	word32 eax_314 = Mem313[ebp_28 + 124<i32>:word32]
	Mem315[ebp_28 - 4<i32>:word32] = 7<32>
	branch eax_314 <u 8<32> l0042C004
l0042BFAF:
	word32 ecx_318 = Mem315[ebp_28 + 104<i32>:word32]
	byte cl_327 = SLICE(ecx_318, byte, 0)
	branch eax_314 <=u 0x7FFFFFFE<32> l0042BFC0
l0042BFBA:
	_invalid_parameter_noinfo_noreturn()
l0042BFC0:
	word32 ecx_334 = ecx_318
	branch (eax_314 + 1<32>) * 2<32> <u 0x1000<32> l0042BFFB
l0042BFC9:
	branch (cl_327 & 0x1F<8>) == 0<8> l0042BFD4
l0042BFCE:
	_invalid_parameter_noinfo_noreturn()
l0042BFD4:
	word32 eax_337 = Mem315[ecx_318 - 4<i32>:word32]
	branch eax_337 <u ecx_318 l0042BFE1
l0042BFDB:
	_invalid_parameter_noinfo_noreturn()
l0042BFE1:
	word32 ecx_342 = ecx_318 - eax_337
	branch ecx_342 >=u 4<32> l0042BFEE
l0042BFE8:
	_invalid_parameter_noinfo_noreturn()
l0042BFEE:
	branch ecx_342 <=u 0x23<32> l0042BFF9
l0042BFF3:
	_invalid_parameter_noinfo_noreturn()
l0042BFF9:
	ecx_334 = eax_337
l0042BFFB:
	word32 esp_358 = esp_23 - 4<i32>
	Mem360[esp_358:word32] = ecx_334
	fn00427E3E(Mem360[esp_358:(ptr32 void)])
l0042C004:
	Mem437[fs:0x00000000<p32>:word32] = Mem400[ebp_28 - 12<i32>:word32]
	word32 ebp_443 = Mem437[ebp_28:word32]
	edxOut = edx_100
	ebpOut = ebp_443
	ediOut = edi
	return ebx_113
fn0042BD90_exit:
l0042BE0E:
	Mem447[esp_96:word32] = ebp_28 + 8<i32>
	word32 ebp_469
	word32 edi_732
	word32 edx_467 = fn0042C020(edx_100, es, ds, Mem447[esp_96:word32], out ebp_469, out edi_732)
	word32 esp_470 = <invalid>
	Mem479[esp_470 - 4<i32>:word32] = ebp_469 + 72<i32>
	fn0042C020(edx_467, es, ds, Mem479[esp_470 - 4<i32>:word32], out ebp_28, out edi)
	word32 esp_487 = <invalid>
	esp_23 = esp_487 + 8<32>


word32 fn0042C020(word32 edx, selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042BD90
// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp edi edx esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042C020_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc2C
l0042C020:
	word32 eax_18 = Mem15[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 eax_35 = Mem32[dwArg04 + 16<i32>:word32]
	word32 edi_34 = Mem32[dwArg04 + 24<i32>:word32]
	Mem37[dwArg04 + 28<i32>:word32] = Mem32[dwArg04 + 28<i32>:word32] + eax_35
	word32 ebp_320 = fp - 4<i32>
	word32 esp_183 = fp - 0x3C<32>
	word32 esi_33 = dwArg04
	word32 ebx_38 = Mem37[dwArg04 + 28<i32>:word32]
	branch ebx_38 != Mem37[edi_34 + 16<i32>:word32] l0042C078
l0042C078:
	byte al_122
	edx = eax_35
	branch eax_35 <=u 2<32> l0042C0D0
l0042C07F:
	word32 ecx_47
	word32 eax_44 = Mem37[dwArg04 + 20<i32>:word32]
	branch eax_44 <u 8<32> l0042C08B
l0042C08B:
	ecx_47 = dwArg04
l0042C087:
	ecx_47 = Mem37[dwArg04:word32]
l0042C08D:
	word32 ecx_51 = CONVERT(Mem37[ecx_47:word16], word16, word32)
	branch ecx_51 == 0x2F<32> l0042C09A
l0042C095:
	branch ecx_51 != 0x5C<32> l0042C0D0
l0042C09A:
	word32 ecx_62
	branch eax_44 <u 8<32> l0042C0A3
l0042C0A3:
	ecx_62 = dwArg04
l0042C09F:
	ecx_62 = Mem37[dwArg04:word32]
l0042C0A5:
	word32 ecx_67 = CONVERT(Mem37[ecx_62 + 2<i32>:word16], word16, word32)
	branch ecx_67 == 0x2F<32> l0042C0B3
l0042C0AE:
	branch ecx_67 != 0x5C<32> l0042C0D0
l0042C0B3:
	word32 eax_78
	branch eax_44 <u 8<32> l0042C0BC
l0042C0BC:
	eax_78 = dwArg04
l0042C0B8:
	eax_78 = Mem37[dwArg04:word32]
l0042C0BE:
	word32 eax_83 = CONVERT(Mem37[eax_78 + 4<i32>:word16], word16, word32)
	branch eax_83 == 0x2F<32> l0042C0D0
l0042C0C7:
	branch eax_83 == 0x5C<32> l0042C0D0
l0042C0D0:
	al_122 = 0<8>
l0042C0CC:
	al_122 = 1<8>
l0042C0D2:
	word32 ecx_103
	branch Mem37[edi_34 + 20<i32>:word32] <u 8<32> l0042C0DC
l0042C0DC:
	ecx_103 = edi_34
l0042C0D8:
	ecx_103 = Mem37[edi_34:word32]
l0042C0DE:
	word32 ecx_115 = CONVERT(Mem37[ecx_103 + ebx_38 * 2<32>:word16], word16, word32)
	branch ecx_115 == 0x2F<32> l0042C0F0
l0042C0E7:
	branch ecx_115 != 0x5C<32> l0042C172
l0042C0F0:
	branch al_122 != 0<8> l0042C1E3
l0042C0F8:
	word32 eax_134
	branch Mem37[dwArg04 + 20<i32>:word32] <u 8<32> l0042C102
l0042C102:
	eax_134 = dwArg04
l0042C0FE:
	eax_134 = Mem37[dwArg04:word32]
l0042C104:
	branch Mem37[eax_134 - 2<i32> + eax_35 * 2<32>:word16] == 0x3A<16> l0042C1E3
l0042C1E3:
	fn0042B120(dwArg04, 0x2F<16>)
	esp_183 = fp - 0x3C<32>
l0042C110:
	branch ebx_38 == Mem37[edi_34 + 16<i32>:word32] l0042C13D
l0042C115:
	word32 eax_197
	word32 ecx_195 = Mem192[dwArg04 + 28<i32>:word32]
	branch Mem192[edi_34 + 20<i32>:word32] <u 8<32> l0042C122
l0042C122:
	eax_197 = edi_34
l0042C11E:
	eax_197 = Mem192[edi_34:word32]
l0042C124:
	word32 eax_202 = CONVERT(Mem192[eax_197 + ecx_195 * 2<32>:word16], word16, word32)
	branch eax_202 == 0x2F<32> l0042C132
l0042C12D:
	branch eax_202 != 0x5C<32> l0042C13D
l0042C132:
	Mem211[dwArg04 + 28<i32>:word32] = ecx_195 + 1<i32>
	branch ecx_195 + 1<i32> != Mem211[edi_34 + 16<i32>:word32] l0042C115
l0042C13D:
	word32 ebx_218 = Mem217[dwArg04 + 28<i32>:word32]
	branch ebx_218 != Mem217[edi_34 + 16<i32>:word32] l0042C172
l0042C145:
	branch fn0042BCD0(edi_34, ebx_218 - 1<32>) != 0<8> l0042C172
l0042C172:
	word32 eax_250
	word32 ebx_248 = Mem245[dwArg04 + 28<i32>:word32]
	branch Mem245[edi_34 + 20<i32>:word32] <u 8<32> l0042C17F
l0042C17F:
	eax_250 = edi_34
l0042C17B:
	eax_250 = Mem245[edi_34:word32]
l0042C181:
	word32 v18_262 = Mem260[edi_34 + 16<i32>:word32]
	word32 eax_268 = fn0042AF50(eax_250, v18_262, ebx_248, 0x4315B8<32>, 2<32>)
	branch eax_268 != 0xFFFFFFFF<32> l0042C19D
l0042C19A:
	eax_268 = Mem267[edi_34 + 16<i32>:word32]
l0042C19D:
	word32 ebx_645
	word32 eax_319 = fn0042C2A0(edi_34, dwArg04, &tLoc2C, ebx_248, eax_268 - ebx_248, out edx, out ebx_645, out ebp_320)
	Mem330[ebp_320 - 4<i32>:word32] = 0<32>
	branch dwArg04 == eax_319 l0042C1C3
l0042C1B7:
	word32 edi_648
	word32 ebx_646
	word32 esi_647
	edx = fn0042A070(dwArg04, v18_262, eax_319, 0<32>, 0xFFFFFFFF<32>, eax_18, out ebx_646, out ebp_320, out esi_647, out edi_648)
l0042C1C3:
	word32 eax_354 = Mem353[ebp_320 - 20<i32>:word32]
	Mem355[ebp_320 - 4<i32>:word32] = 1<32>
	esp_183 = fp - 0x3C<32>
	branch eax_354 <u 8<32> l0042C1EC
l0042C1D2:
	edx = fn004289B0(Mem364[ebp_320 - 40<i32>:word32], eax_354 + 1<32>, 2<32>)
	esp_183 = fp - 0x3C<32>
l0042C154:
	Mem377[dwArg04 + 28<i32>:word32] = ebx_218 - 1<32>
	word32 esi_384
	word32 eax_378 = fn0042B560(out edx, out ebp_320, out esi_384)
	esp_183 = <invalid>
	branch esi_384 == eax_378 l0042C1EC
l0042C164:
	Mem393[esp_183 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem395[esp_183 - 8<i32>:word32] = 0<32>
	Mem397[esp_183 - 12<i32>:word32] = eax_378
	word32 ebx_642
	word32 edi_644
	word32 esi_643
	edx = fn0042A070(esi_384, Mem397[esp_183 - 16<i32>:word32], Mem397[esp_183 - 12<i32>:word32], Mem397[esp_183 - 8<i32>:word32], Mem397[esp_183 - 4<i32>:word32], Mem397[esp_183:word32], out ebx_642, out ebp_320, out esi_643, out edi_644)
l0042C05F:
	Mem412[dwArg04 + 16<i32>:word32] = 0<32>
	branch Mem37[dwArg04 + 20<i32>:word32] <u 8<32> l0042C06E
l0042C06C:
	esi_33 = Mem412[dwArg04:word32]
l0042C06E:
	Mem420[esi_33:word16] = 0<16>
l0042C1EC:
	Mem429[fs:0x00000000<p32>:word32] = Mem424[ebp_320 - 12<i32>:word32]
	word32 esp_433 = esp_183 + 4<i32>
	word32 edi_434 = Mem429[esp_433:word32]
	word32 ecx_641
	word32 eax_640
	fn00427500(Mem429[ebp_320 - 16<i32>:word32] ^ ebp_320, edx, Mem429[esp_433 + 8<i32>:word32], ebp_320, Mem429[esp_433 + 4<i32>:word32], edi_434, es, ds, Mem429[esp_433 + 8<i32>:word32], out eax_640, out ecx_641)
	ebpOut = Mem429[ebp_320:word32]
	ediOut = edi_434
	return edx
fn0042C020_exit:


word32 fn0042C210(word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B320
// MayUse:  edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: eax esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn0042C210_entry:
	ptr32 fp
	selector fs
l0042C210:
	Mem21[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_45 = fp - 4<i32>
	branch Mem21[0x0043B0B8<p32>:word32] <= Mem21[Mem21[Mem21[fs:0x2C<32>:word32] + Mem21[0x0043B10C<p32>:word32] * 4<32>:word32] + 4<32>:word32] l0042C28C
l0042C24E:
	fn0042D454(0x43B0B8<32>)
	branch Mem29[0x0043B0B8<p32>:word32] != 0xFFFFFFFF<32> l0042C28C
l0042C264:
	ebp_45 = fn0042B3A0(esi, edi)
	word32 esp_50 = <invalid>
	Mem57[esp_50 - 4<i32>:word32] = 0x430AF0<32>
	fn00427952(Mem57[esp_50 - 4<i32>:word32])
	Mem65[esp_50 - 8<i32>:word32] = 0x43B0B8<32>
	fn0042D40A(Mem65[esp_50 - 8<i32>:word32])
l0042C28C:
	Mem80[fs:0x00000000<p32>:word32] = Mem77[ebp_45 - 12<i32>:word32]
	return 0x0043B0B0<p32>
fn0042C210_exit:


word32 fn0042C2A0(word32 ecx, word32 esi, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B210
//      fn0042C020
// MayUse:  ecx:[0..31] esi:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ebp ebx edx
// Trashed: SCZO eax ebp ebx ecx edi edx Top
// Preserved: esi esp
fn0042C2A0_entry:
	word32 dwLoc18
l0042C2A0:
	Mem23[dwArg04 + 16<i32>:word32] = 0<32>
	Mem25[dwArg04 + 20<i32>:word32] = 7<32>
	Mem27[dwArg04:word16] = 0<16>
	word32 ebp_30
	word32 ebx_31
	word32 esi_35
	word32 edi_59
	edxOut = fn0042A070(dwArg04, dwLoc18, ecx, dwArg08, dwArg0C, esi, out ebx_31, out ebp_30, out esi_35, out edi_59)
	ebxOut = ebx_31
	ebpOut = ebp_30
	return esi_35
fn0042C2A0_exit:


void fn0042C2E0(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esi esp
fn0042C2E0_entry:
l0042C2E0:
	Mem12[ecx:word32] = 0x00431624<p32>
	branch (bArg04 & 1<8>) == 0<8> l0042C2FB
l0042C2F0:
	fn0042763F(ecx)
l0042C2FB:
	return
fn0042C2E0_exit:


word32 fn0042C310(ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428DE0
// MayUse:  fs:[0..15]
// LiveOut: eax esi
// Trashed: SCZO eax ecx esi Top
// Preserved: ebp esp
fn0042C310_entry:
	ptr32 fp
	selector fs
	word32 esi
l0042C310:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem21[fs:0<32>:word32] = fp - 16<i32>
	branch Mem21[0x0043B0C0<p32>:word32] <= Mem21[Mem21[Mem21[fs:0x2C<32>:word32] + Mem21[0x0043B10C<p32>:word32] * 4<32>:word32] + 4<32>:word32] l0042C382
l0042C34E:
	fn0042D454(0x43B0C0<32>)
	branch Mem29[0x0043B0C0<p32>:word32] != 0xFFFFFFFF<32> l0042C382
l0042C364:
	fn00427952(0x430B50<32>)
	esi = fn0042D40A(0x43B0C0<32>)
l0042C382:
	Mem64[fs:0x00000000<p32>:word32] = eax_13
	esiOut = esi
	return 0x0043A050<p32>
fn0042C310_exit:


void fn0042C3A0(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: eax edx Top
// Preserved: esp
fn0042C3A0_entry:
l0042C3A0:
	Mem7[dwArg04:word32] = dwArg08
	Mem9[dwArg04 + 4<i32>:word32] = ecx
	return
fn0042C3A0_exit:


void fn0042C3B0(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: esp
fn0042C3B0_entry:
l0042C3B0:
	branch ecx != Mem0[dwArg04 + 4<i32>:word32] l0042C3C6
l0042C3B9:
	branch Mem0[dwArg04:word32] != dwArg08 l0042C3C6
l0042C3C6:
	return
l0042C3C1:
	return
fn0042C3B0_exit:


void fn0042C3D0(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: esp
fn0042C3D0_entry:
	ptr32 fp
l0042C3D0:
	word32 eax_6 = Mem0[ecx:word32]
	word32 eax_16
	call Mem14[eax_6 + 12<i32>:word32] (retsize: 4;)
		uses: eax:eax_6,ecx:ecx,edx:fp - 8<i32>,Stack +0004:fp - 8<i32>,Stack +0008:dwArg04,Stack +0018:dwArg04,Stack +001C:dwArg08
		defs: eax:eax_16
	branch Mem14[eax_16 + 4<i32>:word32] != Mem14[dwArg08 + 4<i32>:word32] l0042C3FB
l0042C3ED:
	branch Mem14[eax_16:word32] != Mem14[dwArg08:word32] l0042C3FB
l0042C3FB:
	return
l0042C3F3:
	return
fn0042C3D0_exit:


void fn0042CD80(word32 ebx, selector es, selector ds, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0042CD80_entry:
	ptr32 fp
	selector fs
l0042CD80:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_109 = fp - 4<i32>
	word32 esp_29 = fp - 0x58<32>
	word32 edi_34 = dwArg08
	branch Mem35[0x0043B0D8<p32>:word32] <= Mem35[Mem35[Mem35[fs:0x2C<32>:word32] + Mem35[0x0043B10C<p32>:word32] * 4<32>:word32] + 4<32>:word32] l0042CE20
l0042CDD4:
	fn0042D454(0x43B0D8<32>)
	esp_29 = fp - 0x58<32>
	branch Mem43[0x0043B0D8<p32>:word32] != 0xFFFFFFFF<32> l0042CE20
l0042CDEA:
	word32 ecx_367
	word32 edx_368
	word32 ebx_369
	word32 esi_370
	fn00402A70(0x0043A054<p32>, dwArg08, 0x4316C4<32>, 0xD<32>, ebx, out ecx_367, out edx_368, out ebx_369, out ebp_109, out esi_370, out edi_34)
	word32 esp_67 = <invalid>
	Mem74[esp_67 + 4<32>:word32] = 0x430B80<32>
	fn00427952(Mem74[esp_67 + 4<32>:word32])
	Mem82[esp_67:word32] = 0x43B0D8<32>
	Mem83[ebp_109 - 4<i32>:word32] = 0xFFFFFFFF<32>
	fn0042D40A(Mem83[esp_67:word32])
	esp_29 = esp_67 + 8<32>
l0042CE20:
	word32 edx_120
	word32 ebp_116
	word32 ebx_129
	word32 esp_122
	word32 esi_121
	word32 edi_128
	word32 esp_94 = esp_29 - 4<i32>
	Mem96[esp_94:word32] = edi_34
	word32 eax_97 = strerror(Mem96[esp_94:int32])
	branch eax_97 == 0<32> l0042CE64
l0042CE64:
	Mem104[esp_94:word32] = 0xFFFFFFFF<32>
	Mem106[esp_94 - 4<i32>:word32] = 0<32>
	Mem108[esp_94 - 8<i32>:word32] = 0x43A054<32>
	Mem111[ebp_109 - 24<i32>:word32] = 0<32>
	Mem112[ebp_109 - 20<i32>:word32] = 0xF<32>
	Mem113[ebp_109 - 40<i32>:byte] = 0<8>
	edx_120 = fn004113C0(ebp_109 - 40<i32>, Mem113[esp_94 - 12<i32>:word32], Mem113[esp_94 - 8<i32>:word32], Mem113[esp_94 - 4<i32>:word32], Mem113[esp_94:word32], out ebp_116, out esi_121)
	esp_122 = <invalid>
	edi_128 = ebp_116 - 40<i32>
	ebx_129 = 2<32>
l0042CE30:
	Mem131[ebp_109 - 48<i32>:word32] = 0<32>
	Mem132[ebp_109 - 44<i32>:word32] = 0xF<32>
	Mem133[ebp_109 - 64<i32>:byte] = 0<8>
	word32 ecx_130 = eax_97
l0042CE47:
	ecx_130 = ecx_376 + 1<32>
	ecx_376 = ecx_130
	branch Mem133[ecx_376:byte] != 0<8> l0042CE47
l0042CE4E:
	Mem147[esp_94:word32] = ecx_130 - (eax_97 + 1<i32>)
	Mem150[esp_94 - 4<i32>:word32] = eax_97
	word32 edi_373
	word32 ecx_371
	word32 ebx_372
	fn00402A70(ebp_109 - 64<i32>, eax_97 + 1<i32>, Mem150[esp_94 - 4<i32>:word32], Mem150[esp_94:word32], Mem150[esp_94 + 16<i32>:word32], out ecx_371, out edx_120, out ebx_372, out ebp_116, out esi_121, out edi_373)
	word32 esp_162 = <invalid>
	esp_122 = esp_162 + 8<32>
	edi_128 = ebp_116 - 64<i32>
	ebx_129 = 1<32>
l0042CE8F:
	Mem174[esi_121 + 16<i32>:word32] = 0<32>
	Mem175[esi_121 + 20<i32>:word32] = 0xF<32>
	Mem176[esi_121:byte] = 0<8>
	branch Mem171[edi_128 + 20<i32>:word32] <u 0x10<32> l0042CEB2
l0042CEB2:
	word32 esp_181 = esp_122 - 4<i32>
	Mem182[esp_181:word32] = Mem176[edi_128 + 16<i32>:word32] + 1<32>
	Mem184[esp_181 - 4<i32>:word32] = edi_128
	Mem186[esp_181 - 8<i32>:word32] = esi_121
	memcpy(Mem186[esp_181 - 8<i32>:(ptr32 void)], Mem186[esp_181 - 4<i32>:(ptr32 void)], Mem186[esp_181:size_t])
l0042CEA6:
	Mem191[esi_121:word32] = Mem176[edi_128:word32]
	Mem192[edi_128:word32] = 0<32>
l0042CEC1:
	Mem200[esi_121 + 16<i32>:word32] = Mem194[edi_128 + 16<i32>:word32]
	word32 eax_201 = Mem200[edi_128 + 20<i32>:word32]
	Mem202[edi_128 + 16<i32>:word32] = 0<32>
	Mem203[edi_128 + 20<i32>:word32] = 0xF<32>
	Mem204[esi_121 + 20<i32>:word32] = eax_201
	Mem205[edi_128:byte] = 0<8>
	word32 ebx_198 = ebx_129 | 4<32>
	byte bl_206 = SLICE(ebx_198, byte, 0)
	branch (bl_206 & 2<8>) == 0<8> l0042CF0A
l0042CEE6:
	Mem213[ebp_116 - 68<i32>:word32] = ebx_198 & 0xFFFFFFFD<32>
	word32 eax_214 = Mem213[ebp_116 - 20<i32>:word32]
	Mem215[ebp_116 - 4<i32>:word32] = 2<32>
	bl_206 = SLICE(ebx_198, byte, 0) & 0xFD<8> (alias)
	branch eax_214 <u 0x10<32> l0042CF0A
l0042CEFB:
	word32 esp_221 = esp_122 - 4<i32>
	Mem222[esp_221:word32] = 1<32>
	Mem224[esp_221 - 4<i32>:word32] = eax_214 + 1<32>
	Mem227[esp_221 - 8<i32>:word32] = Mem224[ebp_116 - 40<i32>:word32]
	edx_120 = fn004289B0(Mem227[esp_221 - 8<i32>:word32], Mem227[esp_221 - 4<i32>:word32], Mem227[esp_221:word32])
l0042CF0A:
	Mem238[ebp_116 - 4<i32>:word32] = 0xFFFFFFFF<32>
	branch (bl_206 & 1<8>) == 0<8> l0042CF34
l0042CF16:
	word32 ecx_244 = Mem238[ebp_116 - 44<i32>:word32]
	Mem245[ebp_116 - 4<i32>:word32] = 3<32>
	branch ecx_244 <u 0x10<32> l0042CF34
l0042CF25:
	word32 esp_249 = esp_122 - 4<i32>
	Mem250[esp_249:word32] = 1<32>
	Mem254[esp_249 - 4<i32>:word32] = ecx_244 + 1<32>
	Mem257[esp_249 - 8<i32>:word32] = Mem254[ebp_116 - 64<i32>:word32]
	edx_120 = fn004289B0(Mem257[esp_249 - 8<i32>:word32], Mem257[esp_249 - 4<i32>:word32], Mem257[esp_249:word32])
l0042CF34:
	Mem277[fs:0x00000000<p32>:word32] = Mem271[ebp_116 - 12<i32>:word32]
	word32 esp_280 = esp_122 + 4<i32>
	word32 eax_374
	word32 ecx_375
	fn00427500(Mem277[ebp_116 - 16<i32>:word32] ^ ebp_116, edx_120, Mem277[esp_280 + 8<i32>:word32], ebp_116, Mem277[esp_280 + 4<i32>:word32], Mem277[esp_280:word32], es, ds, Mem277[esp_280 + 8<i32>:word32], out eax_374, out ecx_375)
	return
fn0042CD80_exit:


void fn0042D100()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn0042D100_entry:
l0042D100:
	return
fn0042D100_exit:


word32 fn0042D120(ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042A390
//      fn0042A450
//      fn0042A710
//      fn0042A830
//      fn0042A8D0
//      fn0042A9E0
//      fn0042AB60
// MayUse:  fs:[0..15]
// LiveOut: eax esi
// Trashed: SCZO eax ecx esi Top
// Preserved: ebp esp
fn0042D120_entry:
	ptr32 fp
	selector fs
	word32 esi
l0042D120:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem21[fs:0<32>:word32] = fp - 16<i32>
	branch Mem21[0x0043B0DC<p32>:word32] <= Mem21[Mem21[Mem21[fs:0x2C<32>:word32] + Mem21[0x0043B10C<p32>:word32] * 4<32>:word32] + 4<32>:word32] l0042D18B
l0042D15E:
	fn0042D454(0x43B0DC<32>)
	branch Mem29[0x0043B0DC<p32>:word32] != 0xFFFFFFFF<32> l0042D18B
l0042D174:
	fn00427952(0x430B70<32>)
	esi = fn0042D40A(0x43B0DC<32>)
l0042D18B:
	Mem63[fs:0x00000000<p32>:word32] = eax_13
	esiOut = esi
	return 0x0043A06C<p32>
fn0042D120_exit:


void fn0042D1B1()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0042D1B1_exit:
fn0042D1B1_entry:


word32 fn0042D289(word32 ebx, word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428BE0
//      fn0042A520
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp ecx Top
// Preserved: esp
fn0042D289_entry:
l0042D289:
l0042D28D_thunk_fn00427511:
	word32 ebp_14
	word32 ecx_25
	word32 eax_13 = fn00427511(ebx, esi, edi, dwArg00, dwArg04, dwArg08, out ecx_25, out ebp_14)
	ebpOut = ebp_14
	return eax_13
fn0042D289_exit:


void fn0042D292(void * ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00428BE0
//      fn0042A520
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: Top
// Preserved: esp
fn0042D292_entry:
l0042D292:
l0042D292_thunk_fn00427E3E:
	fn00427E3E(ptrArg04)
	return
fn0042D292_exit:


word32 fn0042D40A(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B4C0
//      fn0042B560
//      fn0042C210
//      fn0042C310
//      fn0042CD80
//      fn0042D120
// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut: esi
// Trashed: SCZO eax ecx esi Top
// Preserved: ebp esp
fn0042D40A_entry:
	selector fs
l0042D40A:
	EnterCriticalSection(0x0043B0E4<p32>)
	word32 ecx_15 = Mem13[0x0043A074<p32>:word32]
	Mem19[0x0043A074<p32>:word32] = ecx_15 + 1<32>
	Mem22[dwArg04:word32] = ecx_15 + 1<32>
	Mem28[Mem22[Mem22[fs:0x2C<32>:word32] + Mem22[0x0043B10C<p32>:word32] * 4<32>:word32] + 4<32>:word32] = Mem22[0x0043A074<p32>:word32]
	LeaveCriticalSection(0x0043B0E4<p32>)
l0042D4A6:
	word32 eax_34 = Mem28[0x0043B100<p32>:word32]
	branch eax_34 != 0<32> l0042D4D4
l0042D4D4:
	SetEvent(eax_34)
	ResetEvent(Mem39[0x0043B100<p32>:word32])
	return
l0042D4AF:
	word32 esi_49 = Mem48[0x0043A008<p32>:word32]
	word32 esi_56 = __ror<word32,byte>(esi_49 ^ Mem48[0x0043B108<p32>:word32], SLICE(esi_49, byte, 0) & 0x1F<8>)
	fn004029A0()
	call esi_56 (retsize: 4;)
		uses: Stack +0010:dwArg04
	return
fn0042D40A_exit:


void fn0042D454(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042B4C0
//      fn0042B560
//      fn0042C210
//      fn0042C310
//      fn0042CD80
//      fn0042D120
// MayUse:  fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp edi esi esp
fn0042D454_entry:
	selector fs
l0042D454:
	EnterCriticalSection(0x0043B0E4<p32>)
l0042D468:
	branch Mem20[dwArg04:word32] != 0<32> l0042D47C
l0042D47C:
	branch Mem20[dwArg04:word32] == 0xFFFFFFFF<32> l0042D472
l0042D472:
	fn0042D4E8(0x64<32>)
l0042D481:
	Mem42[Mem20[Mem20[fs:0x2C<32>:word32] + Mem20[0x0043B10C<p32>:word32] * 4<32>:word32] + 4<32>:word32] = Mem20[0x0043A074<p32>:word32]
l0042D46D:
	Mem44[dwArg04:word32] = 0xFFFFFFFF<32>
l0042D49B:
	LeaveCriticalSection(0x0043B0E4<p32>)
	return
fn0042D454_exit:


void fn0042D4E8(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042D454
// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esi esp
fn0042D4E8_entry:
l0042D4E8:
	branch Mem6[0x0043B100<p32>:word32] != 0<32> l0042D521
l0042D521:
	LeaveCriticalSection(0x0043B0E4<p32>)
	WaitForSingleObjectEx(Mem21[0x0043B100<p32>:word32], dwArg04, 0<32>)
	EnterCriticalSection(0x0043B0E4<p32>)
l0042D4F5:
	word32 esi_30 = Mem11[0x0043A008<p32>:word32]
	word32 esi_42 = __ror<word32,byte>(esi_30 ^ Mem34[0x0043B104<p32>:word32], SLICE(esi_30, byte, 0) & 0x1F<8>)
	fn004029A0()
	word32 ecx_48
	call esi_42 (retsize: 4;)
		uses: ecx:ecx_48,Stack +001C:dwArg04
		defs: ecx:ecx_48
l0042D545:
	return
fn0042D4E8_exit:


word64 fn0042D550(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00418C30
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: edx:eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esi esp
fn0042D550_entry:
l0042D550:
	word32 edi_118 = 0<32>
	branch dwArg08 >= 0<32> l0042D571
l0042D55D:
	edi_118 = 1<32>
	dwArg08 = -dwArg08 - (dwArg04 != 0<32>)
	dwArg04 = -dwArg04
l0042D571:
	word32 eax_31 = dwArg10
	branch dwArg10 >= 0<32> l0042D58D
l0042D579:
	eax_31 = -dwArg10 - (dwArg0C != 0<32>)
	edi_118 = edi_118 + 1<32>
	dwArg10 = eax_31
	dwArg0C = -dwArg0C
l0042D58D:
	word32 eax_102
	word32 edx_116
	branch eax_31 != 0<32> l0042D5A9
l0042D5A9:
	word64 ebx_ecx_217 = SEQ(eax_31, dwArg0C)
	word64 edx_eax_220 = SEQ(dwArg08, dwArg04)
l0042D5B7:
	uint64 v22_146 = ebx_ecx_217 >>u 1<32>
	word32 ecx_62 = SLICE(v22_146, word32, 0)
	edx_eax_220 = edx_eax_220 >>u 1<32>
	ebx_ecx_217 = v22_146 (alias)
	branch SLICE(v22_146, word32, 32) != 0<32> l0042D5B7
l0042D5C3:
	word32 eax_76 = CONVERT(edx_eax_220 /u ecx_62, word32, uint32)
	word64 edx_eax_84 = eax_76 *u64 dwArg0C
	word32 esi_101 = eax_76
	word32 eax_92 = SLICE(edx_eax_84, word32, 0)
	word32 edx_86 = SLICE(edx_eax_84, word32, 32) + dwArg10 *u eax_76
	branch edx_86 <u 0<32> l0042D5E5
l0042D5D7:
	branch edx_86 >u dwArg08 l0042D5E5
l0042D5DD:
	branch edx_86 <u dwArg08 l0042D5E6
l0042D5DF:
	branch eax_92 <=u dwArg04 l0042D5E6
l0042D5E5:
	esi_101 = eax_76 - 1<32>
l0042D5E6:
	edx_116 = 0<32>
	eax_102 = esi_101
l0042D591:
	word64 edx_eax_106 = CONVERT(dwArg08, word32, uint64)
	eax_102 = CONVERT(SEQ(CONVERT(edx_eax_106 %u dwArg0C, word64, uint32), dwArg04) /u dwArg0C, word32, uint32)
	edx_116 = CONVERT(edx_eax_106 /u dwArg0C, word32, uint32)
l0042D5EA:
	branch edi_118 != 1<32> l0042D5F4
l0042D5ED:
	eax_102 = -eax_102
	edx_116 = -edx_116 - CONVERT(eax_102 != 0<32>, bool, word32)
l0042D5F4:
	return SEQ(edx_116, eax_102)
fn0042D550_exit:


word32 fn0042D670(ui64 qwArg04, ui64 qwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00424170
// MayUse:  Stack +0004:[0..63] Stack +000C:[0..63]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebx edi esp
fn0042D670_entry:
	word32 dwArg08 = SLICE(qwArg04, word32, 32)
	word32 dwArg04 = SLICE(qwArg04, word32, 0)
	word32 dwArg10 = SLICE(qwArg0C, word32, 32)
	word32 dwArg0C = SLICE(qwArg0C, word32, 0)
l0042D670:
	word32 edi_10 = 0<32>
	ui64 qwArg04_231 = qwArg04
	branch dwArg08 >= 0<32> l0042D690
l0042D67C:
	edi_10 = 1<32>
	qwArg04_231 = SEQ(-dwArg08 - (dwArg04 != 0<32>), -dwArg04) (alias)
l0042D690:
	word32 dwArg04_172 = SLICE(qwArg04_231, word32, 0)
	word32 dwArg08_170 = SLICE(qwArg04_231, word32, 32)
	word32 eax_28 = dwArg10
	ui64 qwArg0C_228 = qwArg0C
	branch dwArg10 >= 0<32> l0042D6AB
l0042D698:
	eax_28 = -dwArg10 - (dwArg0C != 0<32>)
	qwArg0C_228 = SEQ(eax_28, -dwArg0C) (alias)
l0042D6AB:
	word32 eax_103
	word32 dwArg10_174 = SLICE(qwArg0C_228, word32, 32)
	word32 dwArg0C_168 = SLICE(qwArg0C_228, word32, 0)
	branch eax_28 != 0<32> l0042D6CA
l0042D6CA:
	word64 ebx_ecx_223 = SEQ(eax_28, dwArg0C_168)
	word64 edx_eax_226 = qwArg04_231
l0042D6D8:
	uint64 v23_154 = ebx_ecx_223 >>u 1<32>
	word32 ecx_57 = SLICE(v23_154, word32, 0)
	edx_eax_226 = edx_eax_226 >>u 1<32>
	ebx_ecx_223 = v23_154 (alias)
	branch SLICE(v23_154, word32, 32) != 0<32> l0042D6D8
l0042D6E4:
	word64 edx_eax_151
	word32 eax_71 = CONVERT(edx_eax_226 /u ecx_57, word32, uint32)
	word64 edx_eax_80 = dwArg0C_168 *u64 eax_71
	word32 eax_88 = SLICE(edx_eax_80, word32, 0)
	word32 edx_82 = SLICE(edx_eax_80, word32, 32) + dwArg10_174 *u eax_71
	branch edx_82 <u 0<32> l0042D703
l0042D6F5:
	branch edx_82 >u dwArg08_170 l0042D703
l0042D6FB:
	edx_eax_151 = SEQ(edx_82, eax_88) (alias)
	branch edx_82 <u dwArg08_170 l0042D70B
l0042D6FD:
	edx_eax_151 = SEQ(edx_82, eax_88) (alias)
	branch eax_88 <=u dwArg04_172 l0042D70B
l0042D703:
	edx_eax_151 = SEQ(edx_82, eax_88) - qwArg0C_228
l0042D70B:
	eax_103 = SLICE(edx_eax_151 - qwArg04_231, word32, 0) (alias)
	branch edi_10 >= 1<32> l0042D71D
l0042D6AF:
	eax_103 = CONVERT(SEQ(CONVERT(CONVERT(dwArg08_170, word32, uint64) %u dwArg0C_168, word64, uint32), dwArg04_172) %u dwArg0C_168, word64, uint32)
	branch edi_10 >= 1<32> l0042D716
l0042D716:
	eax_103 = -eax_103
l0042D6C8:
l0042D71D:
	return eax_103
fn0042D670_exit:


word32 fn0042D730(word128 xmm0, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041C3F6
// MayUse:  xmm0:[0..127]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: P esp
fn0042D730_entry:
l0042D730:
	word128 xmm5_6 = SEQ(0<64>, Mem0[0x00432FC8<p32>:real64])
l0042D75B:
	branch (SLICE(xmm0, word32, 0) & 0x7FFFFFFF<32>) >=u 0x7F800000<32> l0042D8BB_in_fn0042D730
l0042D8BB_in_fn0042D730:
	fn0042D8CD(8<32>, xmm0)
	edxOut = 0x80000000<32>
	return 0<32>
l0042D76F:
	word128 xmm0_23 = SEQ(SLICE(xmm0, word64, 64), CONVERT(SLICE(xmm0, real32, 0), real32, real64))
l0042D76F_thunk_fn0042D773:
	word32 edx_25
	word32 eax_24 = fn0042D773(1<32>, xmm0_23, xmm5_6, out edx_25)
	edxOut = edx_25
	return eax_24
fn0042D730_exit:


word32 fn0042D773(word32 ecx, word128 xmm0, word128 xmm5, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042D730
//      fn0042D911
// MayUse:  ecx:[0..31] xmm0:[0..127] xmm5:[0..63]
// LiveOut: eax edx
// Trashed: SCZOP eax edx Top xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: esp
fn0042D773_entry:
l0042D773:
	branch ecx != 2<32> l0042D790
l0042D778:
	branch SLICE(xmm0, real64, 0) <=u Mem0[0x00432FE8<p32>:real64] l0042D790
l0042D786:
	fn0042D8CD(0x10<32>, xmm0)
l0042D790:
	branch SLICE(xmm0, real64, 0) >=u SLICE(xmm5, real64, 0) l0042D8BB
l0042D79A:
	branch SLICE(xmm0, real64, 0) <u Mem0[0x00432FC0<p32>:real64] l0042D8BB
l0042D8BB:
	fn0042D8CD(8<32>, xmm0)
	edxOut = 0x80000000<32>
	return 0<32>
l0042D7AC:
	word128 xmm1_48 = __psrl<word64[2]>(__psll<word64[2]>(xmm0, 1<8>), 1<8>)
	branch ecx == 1<32> l0042D7F9
l0042D7BF:
	branch SLICE(xmm1_48, real64, 0) >u Mem0[0x00432FE0<p32>:real64] l0042D7F9
l0042D7CD:
	branch SLICE(xmm1_48, real64, 0) == 0.0 l0042D7F9
l0042D7D7:
	__wait()
	branch (__fstcw() & 0x10<16>) != 0<16> l0042D7F9
l0042D7F9:
	word128 xmm6_119 = 0<128>
	branch SLICE(xmm1_48, real64, 0) == 0.0 l0042D8AD
l0042D807:
	word128 xmm5_83 = CONVERT(Mem80[0x00433000<p32>:word32], word32, word128)
	word128 xmm2_89 = __pand<word128>(xmm1_48, SEQ(0<64>, Mem80[0x00432FA0<p32>:real64])) | SEQ(0<64>, Mem80[0x00432FA8<p32>:real64])
	word128 xmm1_91 = __psrl<word64[2]>(xmm1_48, 0x34<8>)
	word128 xmm3_98 = __psll<word64[2]>(xmm2_89, SLICE(__psub<word64[2]>(xmm1_91, xmm5_83), byte, 0))
	word128 xmm4_102 = __psub<word64[2]>(xmm5_83, xmm1_91)
	word128 xmm7_105 = __psrl<word64[2]>(xmm2_89, SLICE(xmm4_102, byte, 0))
	word128 xmm1_108 = __pcmpgt<word32[4]>(xmm1_91, xmm5_83)
	word128 xmm1_109 = __punpckldq<word128>(xmm1_108, xmm1_108)
	word128 xmm1_112 = __pandn<word128>(xmm1_109, xmm7_105) | __pand<word128>(xmm3_98, xmm1_109)
	word128 xmm6_86 = SLICE(xmm0, real64, 0) == SLICE(xmm1_48, real64, 0) ? 0x0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF<128> : 0<128>
	xmm6_119 = __pandn<word128>(xmm6_86, __psub<word64[2]>(0<128>, xmm1_112)) | __pand<word128>(xmm1_112, xmm6_86)
	branch SLICE(xmm4_102, word32, 0) <= 0<32> l0042D8AD
l0042D88A:
	word128 xmm2_125 = __pxor<word128>(xmm2_89, __psll<word64[2]>(xmm7_105, SLICE(xmm4_102, byte, 0)))
	branch (SLICE(xmm2_125, word32, 0) | SLICE(xmm2_125, word32, 0)) == 0<32> l0042D8AD
l0042D8A3:
	fn0042D8CD(0x10<32>, xmm0)
l0042D8AD:
	edxOut = SLICE(xmm6_119, word32, 0)
	return SLICE(xmm6_119, word32, 0)
l0042D7E7:
	fn0042D8CD(2<32>, xmm0)
	edxOut = 0x80000000<32>
	return 0<32>
fn0042D773_exit:


void fn0042D8CD(word32 edx, word128 xmm0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042D730
//      fn0042D911
// MayUse:  edx:[0..31] xmm0:[0..63]
// LiveOut:
// Trashed: SCZO eax Top
// Preserved: edx esp
fn0042D8CD_entry:
l0042D8CD:
	__wait()
	word32 eax_6 = CONVERT(__fstcw(), word16, word32)
	byte al_10 = SLICE(eax_6, byte, 0)
	branch edx == 8<32> l0042D8E5
l0042D8DD:
	branch (Mem5[edx + 0x432FEF<32>:byte] & al_10) != 0<8> l0042D90D
l0042D8E5:
	__fldcw(Mem5[0x00433010<p32>:word16])
	except1(edx, 0<32>, SLICE(xmm0, real64, 0), SLICE(xmm0, real64, 0), eax_6)
l0042D90D:
	return
fn0042D8CD_exit:


word32 fn0042D911(word128 xmm0, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AE90
//      fn0041C5C0
//      fn0041C600
//      fn0041C680
//      fn0041C740
//      fn0041C7E0
//      fn0041C910
//      fn0041CC60
//      fn0041D540
//      fn0041DAF0
//      fn0041ED20
//      fn0041EE50
//      fn004204C0
//      fn00421620
//      fn004237A0
//      fn00424170
//      fn00425A20
//      fn004262A0
//      fn00426E70
// MayUse:  xmm0:[0..127]
// LiveOut: eax ecx edx
// Trashed: SCZOP eax ecx edx Top xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: esp
fn0042D911_entry:
l0042D911:
	word128 xmm5_6 = SEQ(0<64>, Mem0[0x00432FC8<p32>:real64])
l0042D93C:
	branch (SLICE(xmm0, word32, 0) & 0x7FFFFFFF<32>) >=u 0x7FF00000<32> l0042D8BB
l0042D953_thunk_fn0042D773:
	word32 edx_16
	word32 eax_15 = fn0042D773(1<32>, xmm0, xmm5_6, out edx_16)
	ecxOut = <invalid>
	edxOut = edx_16
	return eax_15
l0042D959:
	branch true l0042D773
l0042D95C_thunk_fn0042D773:
	word32 edx_32
	word32 eax_31 = fn0042D773(1<32>, xmm0, xmm5_6, out edx_32)
	ecxOut = <invalid>
	edxOut = edx_32
	return eax_31
l0042D962:
	word128 xmm1_49 = __psrl<word64[2]>(__psll<word64[2]>(xmm0, 1<8>), 1<8>)
	branch SLICE(xmm1_49, real64, 0) <=u Mem0[0x00432FD8<p32>:real64] l0042D9AD
l0042D97E:
	branch false l0042D999
l0042D999:
	fn0042D8CD(0x10<32>, xmm0)
	fn0042D8CD(1<32>, xmm0)
l0042D983:
	fn0042D8CD(1<32>, xmm0)
	fn0042D8CD(0x10<32>, xmm0)
l0042D9AD:
	branch SLICE(xmm1_49, real64, 0) >=u Mem0[0x00432FE0<p32>:real64] l0042D9E2
l0042D9E2:
	word128 xmm3_100 = xmm0
	branch true l0042D9FD
l0042D9EB:
	word128 xmm2_93 = SEQ(0<64>, Mem0[0x00432FC8<p32>:real64])
	branch SLICE(xmm0, real64, 0) <u Mem0[0x00432FC8<p32>:real64] l0042D9FD
l0042D9F9:
	xmm3_100 = __subp<real64[2]>(xmm0, xmm2_93)
l0042D9FD:
	branch SLICE(__psrl<word64[2]>(__psll<word64[2]>(xmm3_100, 0x23<8>), 0x23<8>), word32, 0) == 0<32> l0042DA1D
l0042DA13:
	fn0042D8CD(0x10<32>, xmm0)
l0042DA1D:
	branch SLICE(xmm0, real64, 0) >=u Mem0[0x00432FC8<p32>:real64] l0042D8BB
l0042DA21_thunk_fn0042D773:
	word32 edx_130
	word32 eax_129 = fn0042D773(1<32>, xmm0, xmm5_6, out edx_130)
	ecxOut = <invalid>
	edxOut = edx_130
	return eax_129
l0042DA27:
	branch SLICE(xmm0, real64, 0) <u Mem0[0x00432FC0<p32>:real64] l0042D8BB
l0042DA33_thunk_fn0042D773:
	word32 edx_151
	word32 eax_150 = fn0042D773(1<32>, xmm0, xmm5_6, out edx_151)
	ecxOut = <invalid>
	edxOut = edx_151
	return eax_150
l0042DA39:
l0042DA39_thunk_fn0042D773:
	word32 edx_165
	word32 eax_164 = fn0042D773(1<32>, xmm0, xmm5_6, out edx_165)
	ecxOut = <invalid>
	edxOut = edx_165
	return eax_164
l0042D9BB:
	branch SLICE(xmm1_49, real64, 0) == 0.0 l0042D7F9
l0042D9C3_thunk_fn0042D773:
	word32 edx_184
	word32 eax_183 = fn0042D773(1<32>, xmm0, xmm5_6, out edx_184)
	ecxOut = <invalid>
	edxOut = edx_184
	return eax_183
l0042D9C9:
	fn0042D8CD(2<32>, xmm0)
	fn0042D8CD(0x10<32>, xmm0)
l0042D9DD_thunk_fn0042D773:
	word32 edx_210
	word32 eax_209 = fn0042D773(1<32>, xmm0, xmm5_6, out edx_210)
	ecxOut = <invalid>
	edxOut = edx_210
	return eax_209
fn0042D911_exit:


