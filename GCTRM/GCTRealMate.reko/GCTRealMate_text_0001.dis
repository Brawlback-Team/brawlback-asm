word32 fn004110B0(word32 ecx, word32 dwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409E70
//      fn00410C50
//      fn00419888
//      fn0041A350
//      fn00427410
// MayUse:  ecx:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: esi esp
// Trashed: SCZO eax ecx edx esi esp Top xmm0
// Preserved: ebp
fn004110B0_entry:
	word32 esi
l004110B0:
	branch (Mem6[ecx + 60<i32>:byte] & 1<8>) == 0<8> l00411100
l004110B9:
	word32 edx_20
	word32 ecx_13 = Mem6[Mem6[ecx + 32<i32>:word32]:word32]
	branch ecx_13 == 0<32> l004110CB
l004110CB:
	edx_20 = Mem6[Mem6[ecx + 44<i32>:word32]:word32] + Mem6[Mem6[ecx + 28<i32>:word32]:word32]
l004110C2:
	edx_20 = Mem6[Mem6[ecx + 48<i32>:word32]:word32] + ecx_13
l004110D5:
	word32 eax_29 = Mem6[Mem6[ecx + 12<i32>:word32]:word32]
	branch edx_20 - eax_29 <u 0x1000<32> l004110F6
l004110E4:
	word32 ecx_34 = Mem6[eax_29 - 4<i32>:word32]
	branch eax_29 - ecx_34 >u 0x23<32> l00411143
l00411143:
	_invalid_parameter_noinfo_noreturn()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem48[ecx_34:word32] = dwArg00
	Mem50[ecx_34 + 4<i32>:word32] = dwArg04
	Mem52[ecx_34 + 8<i32>:word32] = 0<32>
	Mem53[ecx_34 + 12<i32>:word32] = 0<32>
	Mem55[ecx_34 + 16<i32>:word64] = 0<64>
	return ecx
l004110F4:
	eax_29 = ecx_34
l004110F6:
	fn0042763F(eax_29)
l00411100:
	Mem73[Mem71[ecx + 12<i32>:word32]:word32] = 0<32>
	Mem75[Mem73[ecx + 28<i32>:word32]:word32] = 0<32>
	Mem77[Mem75[ecx + 44<i32>:word32]:word32] = 0<32>
	Mem79[Mem77[ecx + 16<i32>:word32]:word32] = 0<32>
	Mem81[Mem79[ecx + 32<i32>:word32]:word32] = 0<32>
	Mem83[Mem81[ecx + 48<i32>:word32]:word32] = 0<32>
	Mem85[ecx + 60<i32>:word32] = Mem83[ecx + 60<i32>:word32] & 0xFFFFFFFE<32>
	Mem88[ecx + 56<i32>:word32] = 0<32>
	return esi
fn004110B0_exit:


void fn00411150(word32 ecx, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00411790
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: eax Top xmm0
// Preserved: ebp esp
fn00411150_entry:
l00411150:
	Mem11[ecx:word32] = dwArg04
	Mem13[ecx + 4<i32>:word32] = dwArg08
	Mem15[ecx + 8<i32>:word32] = 0<32>
	Mem16[ecx + 12<i32>:word32] = 0<32>
	Mem18[ecx + 16<i32>:word64] = 0<64>
	return
fn00411150_exit:


void fn00411180(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416170
// MayUse:  fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp edi esi esp
fn00411180_entry:
l00411180:
	word32 esi_11 = dwArg04
	branch dwArg04 == dwArg08 l0041119E
l0041118F:
l00411190:
	word32 esi_23
	word32 edx_74
	word32 ebp_75
	fn004148B0(esi_11, out edx_74, out ebp_75, out esi_23)
	esi_11 = esi_23 + 0x78<32>
	branch esi_23 + 0x78<32> != dwArg08 l00411190
l0041119E:
	return
fn00411180_exit:


word32 fn004111B0(word32 edi, word32 dwArg04, word32 dwArg08, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416170
// MayUse:  edi:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn004111B0_entry:
	word32 ebp
	word32 esi
	word32 ebx
l004111B0:
	word32 edx_38 = dwArg04
	branch dwArg08 * 0x78<32> <u 0x1000<32> l004111DE
l004111CA:
	word32 esi_18 = Mem17[dwArg04 - 4<i32>:word32]
	word32 ecx_19 = dwArg08 * 0x78<32> + 0x23<32>
	branch dwArg04 - esi_18 >u 0x23<32> l004111EC
l004111EC:
	_invalid_parameter_noinfo_noreturn()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l004111FF_thunk_fn00411200:
	word32 ebp_27
	word32 esi_31
	word32 edi_33
	word32 ebx_28 = fn00411200(ecx_19, edi, out ebp_27, out esi_31, out edi_33)
	ebpOut = ebp_27
	esiOut = esi_31
	ediOut = edi_33
	return ebx_28
l004111DB:
	edx_38 = esi_18
l004111DE:
	fn0042763F(edx_38)
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return ebx
fn004111B0_exit:


word32 fn00411200(word32 ecx, word32 edi, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040AA30
//      fn0040BE00
//      fn0040EE50
//      fn0040F2A0
//      fn004111B0
//      fn004194C0
// MayUse:  ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00411200_entry:
	ptr32 fp
	word32 ebx
	word32 esi
	word32 dwLoc2C
l00411200:
	word32 ebp_112 = fp - 4<i32>
	word32 esi_16 = ecx
	word32 eax_17 = 1<32>
	word32 edx_22 = Mem21[ecx + 8<i32>:word32]
	branch edx_22 == 0<32> l0041121B
l00411218_1:
	eax_17 = edx_22
l0041121B:
l00411220:
	word32 ecx_213
	word32 ebx_30 = eax_17 - edx_22
	branch ebx_30 <u 1<32> l0041122E
l00411229:
	branch eax_17 >=u 8<32> l00411241
l00411241:
	word32 edx_101
	word32 edi_37 = Mem21[ecx + 12<i32>:word32]
	word32 ecx_38 = eax_17 * 4<32>
	edi = edi_37 >>u 4<32>
	branch eax_17 <=u 0x3FFFFFFF<32> l0041125D
l0041125D:
	branch ecx_38 <u 0x1000<32> l0041128C
l0041128C:
	branch ecx_38 == 0<32> l0041129D
l0041129D:
	edx_101 = 0<32>
l00411290:
	word32 ecx_415
	edx_101 = fn00427511(ebx_30, ecx, edi_37 >>u 4<32>, dwLoc2C, ecx_38, edi, out ecx_415, out ebp_112)
l00411258:
	ecx_38 = 0xFFFFFFFF<32>
l00411265:
	word32 eax_70 = ecx_38 + 35<i32>
	branch eax_70 >u ecx_38 l00411270
l0041126D_1:
	eax_70 = 0xFFFFFFFF<32>
l00411270:
	word32 eax_89 = fn00427511(ebx_30, ecx, edi_37 >>u 4<32>, dwLoc2C, eax_70, edi, out ecx_213, out ebp_112)
	branch eax_89 == 0<32> l0041138B
l00411281:
	edx_101 = eax_89 + 35<i32> & 0xFFFFFFE0<32>
	Mem104[edx_101 - 4<i32>:word32] = eax_89
l0041129F:
	word32 eax_107 = Mem106[ecx + 4<i32>:word32]
	word32 esi_108 = Mem106[ecx + 8<i32>:word32]
	word32 edi_110 = edi_37 >>u 4<32> << 2<32>
	Mem113[ebp_112 - 12<i32>:word32] = edi_110
	Mem115[ebp_112 - 4<i32>:word32] = edx_101
	word32 ecx_116 = eax_107 + edi_110
	word32 edi_117 = edi_110 + edx_101
	word32 esi_119 = (esi_108 << 2<32>) - ecx_116 + eax_107
	memmove(edi_117, ecx_116, esi_119)
	word32 eax_128 = esi_119 + edi_117
	edi = Mem126[ebp_112 - 8<i32>:word32]
	word32 esi_131 = Mem126[ebp_112 - 16<i32>:word32]
	Mem132[ebp_112 - 20<i32>:word32] = eax_128
	word32 edx_133 = Mem132[edi + 4<i32>:word32]
	branch esi_131 >u ebx_30 l0041130D
l0041130D:
	memmove(eax_128, edx_133, ebx_30 * 4<32>)
	word32 esi_146 = Mem143[Mem143[ebp_112 - 8<i32>:word32] + 4<i32>:word32]
	word32 eax_147 = ebx_30 * 4<32> + esi_146
	word32 esi_149 = esi_146 - eax_147 + Mem143[ebp_112 - 12<i32>:word32]
	memmove(Mem153[ebp_112 - 4<i32>:word32], eax_147, esi_149)
	memset(Mem156[ebp_112 - 4<i32>:word32] + esi_149, 0<32>, ebx_30 * 4<32>)
	esi_16 = Mem166[ebp_112 - 4<i32>:word32]
	edi = Mem166[ebp_112 - 8<i32>:word32]
l004112D8:
	memmove(eax_128, edx_133, esi_131 * 4<32>)
	word32 esi_180 = Mem176[ebp_112 - 12<i32>:word32]
	memset(Mem183[ebp_112 - 20<i32>:word32] + esi_180, 0<32>, ebx_30 - esi_131 << 2<32>)
	esi_16 = Mem193[ebp_112 - 4<i32>:word32]
	memset(esi_16, 0<32>, esi_180)
l00411348:
	word32 eax_202 = Mem201[edi + 4<i32>:word32]
	branch eax_202 == 0<32> l0041137C
l00411352:
	word32 ecx_208 = Mem201[edi + 8<i32>:word32]
	branch ecx_208 << 2<32> <u 0x1000<32> l00411372
l00411360:
	word32 edx_212 = Mem201[eax_202 - 4<i32>:word32]
	ecx_213 = (ecx_208 << 2<32>) + 0x23<32>
	branch eax_202 - edx_212 >u 0x23<32> l0041138B
l0041138B:
	_invalid_parameter_noinfo_noreturn()
l00411370:
	eax_202 = edx_212
l00411372:
	fn0042763F(eax_202)
l0041137C:
	Mem234[edi + 4<i32>:word32] = esi_16
	Mem239[edi + 8<i32>:word32] = Mem234[edi + 8<i32>:word32] + ebx_30
	ebpOut = Mem239[ebp_112:word32]
	esiOut = esi
	ediOut = edi
	return ebx
l0041122E:
	ecx_213 = 0xFFFFFFF<32> - eax_17
	branch ecx_213 <u eax_17 l00411391
l00411391:
	fn00410C90(ecx_213)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 esp_260 = <invalid>
	Mem266[esp_260 - 4<i32>:word32] = 0x10<32>
	word32 ecx_414
	word32 ebp_283
	fn00427511(ebx_30, esi_16, edi, Mem266[esp_260 + -8<i32>:word32], Mem266[esp_260 - 4<i32>:word32], Mem266[esp_260:word32], out ecx_414, out ebp_283)
	ebpOut = ebp_283
	esiOut = esi_16
	ediOut = edi
	return ebx_30
fn00411200_exit:
l0041123D:
	eax_17 = eax_17 * 2<32>


word32 fn004113A0(word32 ebx, word32 esi, word32 edi, word32 dwArg00, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040BE00
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: eax ebp
// Trashed: SCZO eax ebp ecx Top
// Preserved: esp
fn004113A0_entry:
	word32 dwLoc08
l004113A0:
	word32 ebp_11
	word32 ecx_27
	word32 eax_10 = fn00427511(ebx, esi, edi, dwLoc08, 0x10<32>, dwArg00, out ecx_27, out ebp_11)
	ebpOut = ebp_11
	return eax_10
fn004113A0_exit:


word32 fn004113B0(word32 ecx, word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00408570
//      fn00409E70
//      fn0040AA30
//      fn0040BE00
//      fn0040DFF0
//      fn0040E130
//      fn0040E990
//      fn0040EB40
//      fn0040F7F0
//      fn0040F870
//      fn00410CF0
//      fn00410DA0
//      fn004113B0
//      fn004167E0
//      fn00416DA0
//      fn004170C0
//      fn0041A760
//      fn0041AEF0
//      fn0041C39F
//      fn0041C910
//      fn0041CC60
//      fn004262A0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp ebx ecx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn004113B0_entry:
	ptr32 fp
l004113B0:
	_Xout_of_range(0x431DFC<32>)
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 ecx_21 = Mem18[dwArg00 + 16<i32>:word32]
	branch ecx_21 <u dwArg04 l004113F7
l004113D5_thunk_fn004113F7:
	word32 ebp_26
	word32 ebx_27
	word32 edx_29
	word32 esi_30
	word32 ecx_28 = fn004113F7(ecx_21, fp - 8<i32>, ecx, out edx_29, out ebx_27, out ebp_26, out esi_30)
	edxOut = edx_29
	ebxOut = ebx_27
	ebpOut = ebp_26
	esiOut = esi_30
	ediOut = ecx
	return ecx_28
l004113D5_thunk_fn004113D7:
	word32 ebp_37
	word32 ebx_38
	word32 edi_40
	word32 edx_41
	word32 esi_42
	word32 ecx_39 = fn004113D7(dwArg00, ecx_21, dwArg08, dwArg04, ecx, 0x431DFC<32>, out edx_41, out ebx_38, out ebp_37, out esi_42, out edi_40)
	edxOut = edx_41
	ebxOut = ebx_38
	ebpOut = ebp_37
	esiOut = esi_42
	ediOut = edi_40
	return ecx_39
fn004113B0_exit:


word32 fn004113C0(word32 ecx, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0042CD80
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ebp edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn004113C0_entry:
	ptr32 fp
l004113C0:
	word32 ecx_19 = Mem16[dwArg04 + 16<i32>:word32]
	branch ecx_19 <u dwArg08 l004113D5_thunk_fn004113F7
l004113D5_thunk_fn004113F7:
	word32 ebp_24
	word32 edx_27
	word32 esi_28
	word32 ebx_70
	fn004113F7(ecx_19, fp - 4<i32>, ecx, out edx_27, out ebx_70, out ebp_24, out esi_28)
	ebpOut = ebp_24
	esiOut = esi_28
	return edx_27
l004113D5_thunk_fn004113D7:
	word32 ebp_35
	word32 edx_39
	word32 esi_40
	word32 ebx_71
	word32 edi_72
	fn004113D7(dwArg04, ecx_19, dwArg0C, dwArg08, ecx, dwArg00, out edx_39, out ebx_71, out ebp_35, out esi_40, out edi_72)
	ebpOut = ebp_35
	esiOut = esi_40
	return edx_39
fn004113C0_exit:


word32 fn004113D7(word32 eax, word32 ecx, word32 edx, word32 esi, word32 edi, word32 dwArg0C, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004113B0
//      fn004113C0
// MayUse:  eax:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] esi:[0..31] fs:[0..15] Stack +000C:[0..31]
// LiveOut: ebp ebx ecx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn004113D7_entry:
	word32 dwLoc0C
l004113D7:
	word32 ecx_6 = ecx - esi
	branch ecx_6 >=u edx l004113DE
l004113DB_1:
	edx = ecx_6
l004113DE:
	branch Mem0[eax + 20<i32>:word32] <u 0x10<32> l004113E6
l004113E4:
	eax = Mem0[eax:word32]
l004113E6:
	word32 eax_27 = eax + esi
	word32 esi_74
	word32 ebp_73
	word32 ebx_40
	word32 ecx_41
	word32 edx_43
	word32 edi_75
	fn00402A70(edi, edi, eax_27, edx, dwArg0C, out ecx_41, out edx_43, out ebx_40, out ebp_73, out esi_74, out edi_75)
	edxOut = edx_43
	ebxOut = ebx_40
	ebpOut = edx
	esiOut = eax_27
	ediOut = dwLoc0C
	return ecx_41
fn004113D7_exit:


word32 fn004113F7(word32 ecx, word32 ebp, word32 edi, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004113B0
//      fn004113C0
// MayUse:  ebp:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: ebp ebx ecx edx esi
// Trashed: SCZO eax ebp ebx ecx edx esi esp Top
// Preserved:
fn004113F7_entry:
	struct <anonymous> tLoc04
l004113F7:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg8 = <invalid>
	word32 edx_64
	word32 ebx_65
	word32 ebp_66
	word32 esi_67
	word32 edi_68
	fn004113B0(ecx, stackArg0, stackArg4, stackArg8, out edx_64, out ebx_65, out ebp_66, out esi_67, out edi_68)
	int3()
	int3()
	int3()
	int3()
	Mem6[&tLoc04:word32] = ebp
	word32 ebx_11 = Mem10[&tLoc04 + 12<i32>:word32]
	branch ebx_11 <=u 0x7FFFFFFF<32> l00411418
l00411410_thunk_fn00411418:
	word32 ebp_21
	word32 esi_24
	word32 ebx_22 = fn00411418(ebx_11, &tLoc04, ecx, edi, out ebp_21, out esi_24)
	edxOut = edx_27
	ebxOut = ebx_22
	ebpOut = ebp_21
	esiOut = esi_24
	return ecx_23
l00411410_thunk_fn00411412:
	word32 ebp_33
	word32 esi_37
	word32 ebx_34 = fn00411412(ebx_11, &tLoc04, ecx, edi, out ebp_33, out esi_37)
	edxOut = edx_36
	ebxOut = ebx_34
	ebpOut = ebp_33
	esiOut = esi_37
	return ecx_35
fn004113F7_exit:


word32 fn00411400(word32 ecx, word32 ebp, word32 edi, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409E70
//      fn0041A350
// MayUse:  ebp:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: ebp ebx esi esp
// Trashed: SCZO eax ebp ebx ecx edx esi esp Top
// Preserved:
fn00411400_entry:
	struct <anonymous> tLoc04
l00411400:
	Mem6[&tLoc04:word32] = ebp
	word32 ebx_11 = Mem10[&tLoc04 + 12<i32>:word32]
	branch ebx_11 <=u 0x7FFFFFFF<32> l00411410_thunk_fn00411418
l00411410_thunk_fn00411418:
	word32 ebp_21
	word32 esi_24
	word32 ebx_22 = fn00411418(ebx_11, &tLoc04, ecx, edi, out ebp_21, out esi_24)
	ebpOut = ebp_21
	esiOut = esi_24
	return ebx_22
l00411410_thunk_fn00411412:
	word32 ebp_33
	word32 esi_37
	word32 ebx_34 = fn00411412(ebx_11, &tLoc04, ecx, edi, out ebp_33, out esi_37)
	ebpOut = ebp_33
	esiOut = esi_37
	return ebx_34
fn00411400_exit:


word32 fn00411412(word32 ebx, word32 ebp, word32 esi, word32 edi, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004113B0
//      fn00411400
// MayUse:  ebp:[0..31] ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp ebx esi
// Trashed: SCZO eax ebp ebx ecx edx esi Top
// Preserved: esp
fn00411412_entry:
l00411412:
	_Xbad_alloc()
l00411412_thunk_fn00411418:
	word32 ebp_9
	word32 esi_12
	word32 ebx_10 = fn00411418(ebx, ebp, esi, edi, out ebp_9, out esi_12)
	ebpOut = ebp_9
	esiOut = esi_12
	return ebx_10
fn00411412_exit:


word32 fn00411418(word32 ebx, word32 ebp, word32 esi, word32 edi, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004113B0
//      fn00411400
// MayUse:  ebp:[0..31] ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp ebx esi
// Trashed: SCZO eax ebp ebx ecx edx esi esp Top
// Preserved: edi
fn00411418_entry:
	word32 dwLoc0C
l00411418:
	word32 ecx_6 = Mem0[ebp + 16<i32>:word32]
	branch ebx == 0<32> l004114E6
l00411423:
	branch (SLICE(ecx_6, byte, 0) & 6<8>) == 6<8> l004114E6
l004114E6:
	Mem18[esi + 56<i32>:word32] = 0<32>
	Mem20[esi + 60<i32>:word32] = ecx_6
	return
l00411430:
	word32 edi_74
	word32 ebp_48
	branch ebx <u 0x1000<32> l00411462
l00411439:
	word32 eax_33 = ebx + 35<i32>
	branch ebx + 35<i32> >u ebx l00411444
l00411441_1:
	eax_33 = 0xFFFFFFFF<32>
l00411444:
	word32 ecx_253
	word32 eax_47 = fn00427511(ebx, esi, edi, dwLoc0C, eax_33, edi, out ecx_253, out ebp_48)
	branch eax_47 == 0<32> l0041145C
l0041145C:
	_invalid_parameter_noinfo_noreturn()
l00411462:
	word32 ecx_254
	edi_74 = fn00427511(ebx, esi, edi, dwLoc0C, ebx, edi, out ecx_254, out ebp_48)
l00411451:
	edi_74 = eax_47 + 35<i32> & 0xFFFFFFE0<32>
	Mem79[edi_74 - 4<i32>:word32] = eax_47
l0041146D:
	memcpy(edi_74, Mem83[ebp_48 + 8<i32>:word32], ebx)
	word32 ecx_92 = Mem90[ebp_48 + 16<i32>:word32]
	Mem95[esi + 56<i32>:word32] = edi_74 + ebx
	Mem101[ebp_48 + 12<i32>:word32] = ecx_92 & 4<32>
	byte cl_110 = SLICE(ecx_92, byte, 0)
	branch (ecx_92 & 4<32>) != 0<32> l0041149C
l0041148D:
	Mem104[Mem101[esi + 12<i32>:word32]:word32] = edi_74
	Mem106[Mem104[esi + 28<i32>:word32]:word32] = edi_74
	Mem108[Mem106[esi + 44<i32>:word32]:word32] = ebx
l0041149C:
	word32 ecx_138 = ecx_92
	branch (cl_110 & 2<8>) != 0<8> l004114D9
l004114A1:
	word32 edx_119 = Mem115[esi + 56<i32>:word32]
	word32 eax_116 = Mem115[esi + 16<i32>:word32]
	word32 ecx_120 = edx_119
	branch (cl_110 & 0x18<8>) != 0<8> l004114AF
l004114AC_1:
	ecx_120 = edi_74
l004114AF:
	Mem133[eax_116:word32] = edi_74
	Mem136[Mem133[esi + 32<i32>:word32]:word32] = ecx_120
	ecx_138 = Mem136[ebp_48 + 16<i32>:word32]
	Mem139[Mem136[esi + 48<i32>:word32]:word32] = edx_119 - ecx_120
	branch Mem115[ebp_48 + 12<i32>:word32] == 0<32> l004114D9
l004114C6:
	Mem142[Mem139[esi + 12<i32>:word32]:word32] = edi_74
	Mem144[Mem142[esi + 28<i32>:word32]:word32] = 0<32>
	Mem146[Mem144[esi + 44<i32>:word32]:word32] = edi_74
l004114D9:
	Mem161[esi + 60<i32>:word32] = ecx_138 | 1<32>
	return
fn00411418_exit:


word32 fn00411500(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040BE00
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx Top
// Preserved: ebp esp
fn00411500_entry:
l00411500:
	return Mem6[ecx + 8<i32>:word32] - 1<32> & dwArg04 >>u 4<32>
fn00411500_exit:


word32 fn00411520(word32 ecx, selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
//      fn004154B0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx ecx edi edx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00411520_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc6C
	struct <anonymous> tLoc38
l00411520:
	Mem24[fs:0<32>:word32] = fp - 16<i32>
	fn00414490(&tLoc6C, fn00414420(&tLoc38, ecx), es, ds)
	CxxThrowException(&tLoc6C, 0x437C18<32>)
	int3()
	int3()
l0041156F_thunk_fn00411570:
	word32 ebx_67
	word32 ecx_68
	word32 edi_69
	word32 edx_70
	word32 esi_71
	word32 eax_66 = fn00411570(ecx_63, edx_62, out ecx_68, out edx_70, out ebx_67, out esi_71, out edi_69)
	ecxOut = ecx_68
	edxOut = edx_70
	ebxOut = ebx_67
	ebpOut = fp - 4<i32>
	esiOut = esi_71
	ediOut = edi_69
	return eax_66
fn00411520_exit:


word32 fn00411570(word32 ecx, word32 edx, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
//      fn00411520
//      fn004175B0
// MayUse:  ecx:[0..31] edx:[0..31] fs:[0..15]
// LiveOut: eax ebx ecx edi edx esi
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp xmm0
fn00411570_entry:
	ptr32 fp
	selector fs
l00411570:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 edi_37 = Mem36[ecx:word32]
	word32 esp_153 = fp - 0x44<32>
	word24 nLoc23_491 = SLICE(edx, word24, 8)
	word32 esi_121 = 0<32>
	word32 edx_42 = Mem40[Mem40[edi_37 + 4<i32>:word32] + 56<i32> + ecx:word32]
	branch edx_42 == 0<32> l004115C2
l004115B6:
	word32 eax_46 = Mem40[edx_42:word32]
	call Mem40[eax_46 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_46,ecx:edx_42,edx:edx_42
		defs: esp:esp_48
	edi_37 = Mem40[ecx:word32]
l004115C2:
	word32 eax_59 = edi_37
	word32 ebx_60 = Mem57[edi_37 + 4<i32>:word32]
	word32 edx_137 = edi_37
	branch Mem57[ebx_60 + 12<i32> + ecx:word32] != 0<32> l004115F2
l004115D7:
	word32 ebx_65 = Mem57[ebx_60 + 60<i32> + ecx:word32]
	branch ebx_65 == 0<32> l004115F2
l004115DF:
	branch ebx_65 == ecx l004115F2
l004115E3:
	flush(ebx_65)
	eax_59 = Mem57[ecx:word32]
	edx_137 = eax_59
l004115F2:
	word32 ebx_78 = Mem57[eax_59 + 4<i32>:word32]
	word32 ebx_81 = ebx_78 + ecx
	word24 nLoc1F_493 = SLICE(ebx_81, word24, 8)
	branch Mem57[ebx_78 + 12<i32> + ecx:word32] != 0<32> l00411715
l00411613:
	ui64 ebx_edi_526
	word32 edi_91 = Mem87[ebx_81 + 32<i32>:word32]
	word32 ebx_92 = Mem87[ebx_81 + 36<i32>:word32]
	branch ebx_92 > 0<32> l00411634
l0041161D:
	branch ebx_92 < 0<32> l00411624
l0041161F:
	branch edi_91 >u 1<32> l00411634
l00411634:
	ebx_edi_526 = SEQ(SLICE(SEQ(ebx_92, edi_91) - 1<64>, word32, 32), edi_91 - 1<32>) (alias)
l00411624:
	ebx_edi_526 = __movlp<real64[2],real64[1]>(0<128>) (alias)
l0041163A:
	branch (Mem116[ebx_81 + 20<i32>:word32] & 0x1C0<32>) == 0x40<32> l00411696
l0041164E:
l00411650:
	word32 edi_129 = SLICE(ebx_edi_526, word32, 0)
	word32 ebx_125 = SLICE(ebx_edi_526, word32, 32)
	branch esi_121 != 0<32> l0041170E
l00411658:
	branch ebx_125 < 0<32> l00411694
l0041165C:
	branch ebx_125 > 0<32> l00411662
l0041165E:
	branch edi_129 == 0<32> l00411694
l00411694:
	edx_137 = Mem136[ecx:word32]
l00411696:
	word32 eax_144 = Mem143[edx_137 + 4<i32>:word32]
	word32 esp_157 = esp_153 - 4<i32>
	Mem158[esp_157:word32] = edx
	ui64 ebx_edi_529 = ebx_edi_526
	branch sputc(Mem158[eax_144 + 56<i32> + ecx:word32], Mem158[esp_157:charconst ]) != 0xFFFFFFFF<32> l004116B1
l004116AE_1:
	esi_121 = 4<32>
	ebx_edi_529 = ebx_edi_526 (alias)
l004116B1:
	word32 edi_180 = SLICE(ebx_edi_529, word32, 0)
	word32 ebx_176 = SLICE(ebx_edi_529, word32, 32)
	branch esi_121 != 0<32> l0041170E
l004116B8:
	branch ebx_176 < 0<32> l0041170E
l004116BC:
	branch ebx_176 > 0<32> l004116C2
l004116BE:
	branch edi_180 == 0<32> l0041170E
l0041170E:
l00411715:
	word32 esp_192 = esp_153 - 4<i32>
	Mem193[esp_192:word32] = 0<32>
	Mem199[esp_192 - 4<i32>:word32] = esi_121
	word32 eax_201 = Mem199[Mem199[ecx:word32] + 4<i32>:word32]
	Mem202[eax_201 + 32<i32> + ecx:word32] = 0<32>
	Mem203[eax_201 + 36<i32> + ecx:word32] = 0<32>
	setstate(Mem203[Mem203[ecx:word32] + 4<i32>:word32] + ecx, Mem203[esp_192 - 4<i32>:int32], Mem203[esp_192:bool])
	word32 esp_207 = esp_192 + 4<32>
	branch CONVERT(uncaught_exception(), bool, uint8) != 0<8> l00411759
l00411751:
	_Osfx(ecx)
l00411759:
	word32 ecx_220 = Mem216[Mem216[Mem216[ecx:word32] + 4<i32>:word32] + 56<i32> + ecx:word32]
	branch ecx_220 == 0<32> l0041176F
l0041176A:
	word32 eax_224 = Mem216[ecx_220:word32]
	call Mem216[eax_224 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_224,ecx:ecx_220,edx:edx_238
		defs: edx:edx_252,esp:esp_250
l0041176F:
	Mem262[fs:0x00000000<p32>:word32] = eax_13
	word32 esp_265 = esp_207 + 4<i32>
	word32 edi_266 = Mem262[esp_265:word32]
	word32 esi_268 = Mem262[esp_265 + 4<i32>:word32]
	word32 ebx_270 = Mem262[esp_265 + 8<i32>:word32]
	ecxOut = Mem262[esp_207:word32]
	edxOut = edx_137
	ebxOut = ebx_270
	esiOut = esi_268
	ediOut = edi_266
	return ecx
fn00411570_exit:
l004116C2:
	word32 ecx_279 = ecx + Mem172[Mem172[ecx:word32] + 4<i32>:word32]
	word32 ecx_281 = Mem172[ecx_279 + 56<i32>:word32]
	word32 esp_285 = esp_153 - 4<i32>
	Mem286[esp_285:word32] = SEQ(nLoc23_491, Mem172[ecx_279 + 64<i32>:byte])
	branch sputc(ecx_281, Mem286[esp_285:charconst ]) != 0xFFFFFFFF<32> l004116E9
l004116E6_1:
	esi_121 = 4<32>
l004116E9:
	ebx_edi_529 = SEQ(SLICE(ebx_edi_529 + 0xFFFFFFFFFFFFFFFF<64>, word32, 32), edi_180 + 0xFFFFFFFF<32>) (alias)
l00411662:
	word32 ecx_306 = ecx + Mem136[Mem136[ecx:word32] + 4<i32>:word32]
	word32 ecx_308 = Mem136[ecx_306 + 56<i32>:word32]
	word32 esp_313 = esp_153 - 4<i32>
	Mem314[esp_313:word32] = SEQ(nLoc1F_493, Mem136[ecx_306 + 64<i32>:byte])
	branch sputc(ecx_308, Mem314[esp_313:charconst ]) != 0xFFFFFFFF<32> l00411689
l00411686_1:
	esi_121 = 4<32>
l00411689:
	ebx_edi_526 = SEQ(SLICE(ebx_edi_526 + 0xFFFFFFFFFFFFFFFF<64>, word32, 32), edi_129 + 0xFFFFFFFF<32>) (alias)


void fn00411790(word32 ecx, word32 dwArg04, word64 qwArg08, word32 dwArg10, byte bArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..63] Stack +0010:[0..31] Stack +0014:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: ebp ebx edi esi esp
fn00411790_entry:
	ptr32 fp
	word32 dwArg14
	word32 dwArg0C = SLICE(qwArg08, word32, 32)
	word32 dwArg08 = SLICE(qwArg08, word32, 0)
l00411790:
	__align_stack<word32>(fp - 4<i32>)
	word32 edx_24 = Mem23[ecx + 32<i32>:word32]
	word32 ebx_103 = dwArg0C
	word32 edi_138 = dwArg08
	word32 eax_25 = Mem23[edx_24:word32]
	branch eax_25 == 0<32> l004117BD
l004117B5:
	branch Mem23[ecx + 56<i32>:word32] >=u eax_25 l004117BD
l004117BA:
	Mem31[ecx + 56<i32>:word32] = eax_25
l004117BD:
	byte cl_35 = SLICE(dwArg14, byte, 0)
	branch (cl_35 & 1<8>) == 0<8> l00411870
l004117C9:
	word32 edx_41 = Mem33[Mem33[ecx + 28<i32>:word32]:word32]
	branch edx_41 == 0<32> l0041186D
l0041186D:
	edx_24 = Mem43[ecx + 32<i32>:word32]
l00411870:
	branch (cl_35 & 2<8>) == 0<8> l004118D1
l00411875:
	word32 ecx_55 = Mem54[edx_24:word32]
	branch ecx_55 == 0<32> l004118D1
l0041187B:
	word32 eax_86
	branch dwArg10 != 2<32> l00411888
l00411888:
	branch dwArg10 != 0<32> l004118BA
l004118BA:
	fn00411150(dwArg04, 0xFFFFFFFF<32>, 0xFFFFFFFF<32>)
	return
l0041188C:
	eax_86 = Mem54[Mem54[ecx + 16<i32>:word32]:word32]
l00411883:
	eax_86 = Mem54[ecx + 56<i32>:word32]
l00411891:
	ui64 ebx_edi_240 = CONVERT(eax_86 - ecx_55, word32, int64) + qwArg08
	edi_138 = SLICE(ebx_edi_240, word32, 0) (alias)
	ebx_103 = SLICE(ebx_edi_240, word32, 32) (alias)
	word32 ecx_104 = ecx_55 + edi_138
	branch Mem54[Mem54[ecx + 16<i32>:word32]:word32] >u ecx_104 l004118D1
l004118A9:
	branch ecx_104 >u Mem54[ecx + 56<i32>:word32] l004118D1
l004118AE:
	word32 eax_109 = Mem54[ecx + 48<i32>:word32]
	Mem111[eax_109:word32] = Mem54[eax_109:word32] - edi_138
	word32 eax_112 = Mem111[ecx + 32<i32>:word32]
	Mem114[eax_112:word32] = Mem111[eax_112:word32] + edi_138
l004117DA:
	branch dwArg10 != 2<32> l004117F2
l004117F2:
	branch dwArg10 != 0<32> l00411808
l00411808:
	branch dwArg10 != 1<32> l0041185B
l0041180D:
	branch (cl_35 & 2<8>) != 0<8> l0041185B
l0041185B:
	Mem130[dwArg04:word32] = 0xFFFFFFFF<32>
	Mem131[dwArg04 + 4<i32>:word32] = 0xFFFFFFFF<32>
l004117F6:
	ui64 ebx_edi_238 = qwArg08 + CONVERT(Mem43[Mem43[ecx + 12<i32>:word32]:word32] - edx_41, word32, int64)
	edi_138 = SLICE(ebx_edi_238, word32, 0) (alias)
	ebx_103 = SLICE(ebx_edi_238, word32, 32) (alias)
l004117E2:
	ui64 ebx_edi_235 = qwArg08 + CONVERT(Mem43[ecx + 56<i32>:word32] - edx_41, word32, int64)
	edi_138 = SLICE(ebx_edi_235, word32, 0) (alias)
	ebx_103 = SLICE(ebx_edi_235, word32, 32) (alias)
l00411812:
	word32 edx_162 = edx_41 + edi_138
	branch Mem43[Mem43[ecx + 12<i32>:word32]:word32] >u edx_162 l004118D1
l0041181F:
	branch edx_162 >u Mem43[ecx + 56<i32>:word32] l004118D1
l004118D1:
	edi_138 = 0xFFFFFFFF<32>
	ebx_103 = 0xFFFFFFFF<32>
l00411828:
	word32 eax_176 = Mem43[ecx + 44<i32>:word32]
	Mem178[eax_176:word32] = Mem43[eax_176:word32] - edi_138
	word32 eax_179 = Mem178[ecx + 28<i32>:word32]
	Mem181[eax_179:word32] = Mem178[eax_179:word32] + edi_138
	branch (cl_35 & 2<8>) == 0<8> l004118D6
l0041183B:
	word32 edx_187 = Mem181[Mem181[ecx + 32<i32>:word32]:word32]
	branch edx_187 == 0<32> l004118D6
l00411848:
	word32 eax_193 = Mem181[ecx + 48<i32>:word32]
	word32 ecx_194 = Mem181[Mem181[ecx + 28<i32>:word32]:word32] - edx_187
	Mem196[eax_193:word32] = Mem181[eax_193:word32] - ecx_194
	word32 eax_197 = Mem196[ecx + 32<i32>:word32]
	Mem199[eax_197:word32] = Mem196[eax_197:word32] + ecx_194
l004118D6:
	Mem209[dwArg04:word32] = edi_138
	Mem211[dwArg04 + 4<i32>:word32] = ebx_103
l004118DE:
	Mem222[dwArg04 + 8<i32>:word32] = 0<32>
	Mem225[dwArg04 + 12<i32>:word32] = 0<32>
	Mem227[dwArg04 + 16<i32>:word64] = 0<64>
	return
fn00411790_exit:


void fn00411900(word32 ecx, word32 dwArg04, word64 qwArg08, ui64 qwArg10, byte bArg20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..63] Stack +0010:[0..63] Stack +0020:[0..7]
// LiveOut:
// Trashed: SCZO eax ebx ecx edi edx esi Top xmm0
// Preserved: ebp esp
fn00411900_entry:
	ptr32 fp
	word32 dwArg20
	byte bArg20_259 = SLICE(dwArg20, byte, 0)
l00411900:
	__align_stack<word32>(fp - 4<i32>)
	ui64 ecx_esi_231 = qwArg08 + qwArg10
	word32 esi_155 = SLICE(ecx_esi_231, word32, 0)
	word32 ecx_157 = SLICE(ecx_esi_231, word32, 32)
	word32 eax_29 = Mem27[Mem27[ecx + 32<i32>:word32]:word32]
	branch eax_29 == 0<32> l00411932
l0041192A:
	branch Mem27[ecx + 56<i32>:word32] >=u eax_29 l00411932
l0041192F:
	Mem35[ecx + 56<i32>:word32] = eax_29
l00411932:
	branch (esi_155 & ecx_157) == 0xFFFFFFFF<32> l00411A1E
l00411A1E:
	wassert(0x431E7C<32>, 0x431E18<32>, 0xB0<32>)
	Mem61[dwArg04:word32] = 0xFFFFFFFF<32>
	Mem62[dwArg04 + 4<i32>:word32] = 0xFFFFFFFF<32>
l0041193F:
	byte dl_65 = SLICE(dwArg20, byte, 0)
	branch (dl_65 & 1<8>) == 0<8> l004119C6
l00411947:
	word32 eax_70 = Mem63[Mem63[ecx + 28<i32>:word32]:word32]
	branch eax_70 == 0<32> l004119C6
l004119C6:
	branch (dl_65 & 2<8>) == 0<8> l00411A12
l004119CB:
	branch Mem80[Mem80[ecx + 32<i32>:word32]:word32] == 0<32> l00411A12
l004119D3:
	branch ecx_157 < 0<32> l00411A12
l004119D7:
	branch ecx_157 > 0<32> l004119DD
l004119D9:
	branch Test(ULT,false) l00411A12
l004119DD:
	word32 edx_94 = Mem80[Mem80[ecx + 12<i32>:word32]:word32]
	int64 edx_eax_100 = CONVERT(Mem80[ecx + 56<i32>:word32] - edx_94, word32, int64)
	word32 edx_102 = SLICE(edx_eax_100, word32, 32)
	word32 eax_107 = SLICE(edx_eax_100, word32, 0)
	branch ecx_157 > edx_102 l00411A12
l004119F0:
	branch ecx_157 < edx_102 l004119F6
l004119F2:
	branch esi_155 >u eax_107 l00411A12
l004119F6:
	word32 eax_116 = Mem99[ecx + 48<i32>:word32]
	word32 edx_118 = edx_94 - Mem99[Mem99[ecx + 32<i32>:word32]:word32] + esi_155
	Mem120[eax_116:word32] = Mem99[eax_116:word32] - edx_118
	word32 eax_121 = Mem120[ecx + 32<i32>:word32]
	Mem123[eax_121:word32] = Mem120[eax_121:word32] + edx_118
	Mem128[dwArg04:word32] = esi_155
	Mem130[dwArg04 + 4<i32>:word32] = ecx_157
l00411954:
	branch ecx_157 < 0<32> l00411A12
l0041195C:
	branch ecx_157 > 0<32> l00411966
l0041195E:
	branch Test(ULT,false) l00411A12
l00411966:
	word32 edx_139 = Mem71[Mem71[ecx + 12<i32>:word32]:word32]
	int64 edx_eax_144 = CONVERT(Mem71[ecx + 56<i32>:word32] - edx_139, word32, int64)
	word32 edx_146 = SLICE(edx_eax_144, word32, 32)
	word32 eax_151 = SLICE(edx_eax_144, word32, 0)
	branch ecx_157 > edx_146 l00411A12
l0041197D:
	branch ecx_157 < edx_146 l00411987
l0041197F:
	branch esi_155 >u eax_151 l00411A12
l00411A12:
	esi_155 = 0xFFFFFFFF<32>
	ecx_157 = 0xFFFFFFFF<32>
l00411987:
	word32 eax_162 = Mem143[ecx + 44<i32>:word32]
	word32 edx_167 = edx_139 - eax_70 + esi_155
	Mem169[eax_162:word32] = Mem143[eax_162:word32] - edx_167
	word32 eax_170 = Mem169[ecx + 28<i32>:word32]
	Mem172[eax_170:word32] = Mem169[eax_170:word32] + edx_167
	branch (bArg20_259 & 2<8>) == 0<8> l00411A17
l004119A1:
	word32 edx_179 = Mem172[Mem172[ecx + 32<i32>:word32]:word32]
	branch edx_179 == 0<32> l00411A17
l00411A17:
	Mem188[dwArg04:word32] = esi_155
	Mem191[dwArg04 + 4<i32>:word32] = ecx_157
l004119AA:
	word32 eax_194 = Mem172[ecx + 48<i32>:word32]
	word32 ecx_195 = Mem172[Mem172[ecx + 28<i32>:word32]:word32] - edx_179
	Mem197[eax_194:word32] = Mem172[eax_194:word32] - ecx_195
	word32 eax_198 = Mem197[ecx + 32<i32>:word32]
	Mem200[eax_198:word32] = Mem197[eax_198:word32] + ecx_195
	Mem203[dwArg04:word32] = esi_155
	Mem204[dwArg04 + 4<i32>:word32] = ecx_157
l00411A43:
	Mem212[dwArg04 + 8<i32>:word32] = 0<32>
	Mem214[dwArg04 + 12<i32>:word32] = 0<32>
	Mem219[dwArg04 + 16<i32>:word64] = 0<64>
	return
fn00411900_exit:


void fn00411A70(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31]
// LiveOut:
// Trashed: SCZO eax edx Top
// Preserved: ebx edi esi esp
fn00411A70_entry:
l00411A70:
	word32 edi_11 = Mem9[ecx + 28<i32>:word32]
	word32 edx_12 = Mem9[edi_11:word32]
	branch edx_12 == 0<32> l00411AC3
l00411A7B:
	word32 ebx_16 = Mem9[ecx + 44<i32>:word32]
	branch edx_12 >=u Mem9[ebx_16:word32] + edx_12 l00411A8C
l00411A8C:
	branch (Mem9[ecx + 64<i32>:byte] & 1<8>) == 0<8> l00411AC3
l00411A92:
	word32 eax_25 = Mem9[Mem9[ecx + 32<i32>:word32]:word32]
	branch eax_25 == 0<32> l00411AC3
l00411A9B:
	branch edx_12 <u eax_25 l00411AA4
l00411A9F:
	branch edx_12 >=u Mem9[ecx + 56<i32>:word32] l00411AC3
l00411AC3:
	return
l00411AA4:
	word32 esi_50 = Mem48[ecx + 56<i32>:word32]
	branch esi_50 >=u eax_25 l00411AB3
l00411AAC:
	Mem54[ecx + 56<i32>:word32] = eax_25
	esi_50 = eax_25
	edx_12 = Mem54[edi_11:word32]
l00411AB3:
	Mem65[ebx_16:word32] = esi_50 - edx_12
	return
l00411A86:
	return
fn00411A70_exit:


void fn00411AD0(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esi esp
fn00411AD0_entry:
l00411AD0:
	word32 esi_13 = Mem12[Mem6[ecx + 28<i32>:word32]:word32]
	branch esi_13 == 0<32> l00411B1C
l00411ADD:
	branch Mem12[Mem12[ecx + 12<i32>:word32]:word32] >=u esi_13 l00411B1C
l00411AE4:
	byte dl_26 = SLICE(dwArg04, byte, 0)
	branch (Mem12[ecx + 64<i32>:byte] & 2<8>) != 0<8> l00411AF7
l00411AED:
	branch dwArg04 == 0xFFFFFFFF<32> l00411AF7
l00411AF2:
	branch dl_26 != Mem12[esi_13 - 1<i32>:byte] l00411B1C
l00411B1C:
	return
l00411AF7:
	word32 eax_41 = Mem12[ecx + 44<i32>:word32]
	Mem43[eax_41:word32] = Mem12[eax_41:word32] + 1<32>
	word32 eax_44 = Mem43[ecx + 28<i32>:word32]
	Mem46[eax_44:word32] = Mem43[eax_44:word32] - 1<32>
	branch dwArg04 == 0xFFFFFFFF<32> l00411B0D
l00411B06:
	Mem52[Mem46[Mem46[ecx + 28<i32>:word32]:word32]:byte] = dl_26
l00411B0D:
	branch dwArg04 != 0xFFFFFFFF<32> l00411B16
l00411B13_1:
l00411B16:
	return
fn00411AD0_exit:


void fn00411B30(word32 ecx, word32 ebx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebx:[0..31] ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ebp edx esp Top
// Preserved: ebx ecx edi esi
fn00411B30_entry:
	ptr32 fp
	word32 dwLoc28
l00411B30:
	word32 ebp_103 = fp - 4<i32>
	branch dwArg04 != 0xFFFFFFFF<32> l00411B48
l00411B48:
	word32 edx_20 = Mem19[Mem12[ecx + 32<i32>:word32]:word32]
	branch edx_20 == 0<32> l00411B61
l00411B52:
	branch edx_20 <u Mem19[Mem19[ecx + 48<i32>:word32]:word32] + edx_20 l00411D15
l00411B61:
	branch (Mem19[ecx + 64<i32>:byte] & 2<8>) != 0<8> l00411B72
l00411B72:
	word32 esi_42
	branch edx_20 != 0<32> l00411B7A
l00411B7A:
	esi_42 = Mem19[Mem19[ecx + 48<i32>:word32]:word32] - Mem19[Mem19[ecx + 12<i32>:word32]:word32] + edx_20
l00411B76:
	esi_42 = 0<32>
l00411B86:
	word32 ecx_141 = esi_42 >>u 1<32>
	branch ecx_141 >=u 0x100<32> l00411B98
l00411B95_1:
	ecx_141 = 0x100<32>
l00411B98:
	word32 ecx_127
	word32 ebx_111 = 0<32>
	word32 eax_147 = Mem61[Mem61[ecx + 12<i32>:word32]:word32]
	branch ecx_141 == 0<32> l00411BFF
l00411BA6:
	branch ~ecx_141 >=u esi_42 l00411BB4
l00411BB4:
	branch ecx_141 == 0<32> l00411BFC
l00411BB8:
	word32 edx_85 = ecx_141 + esi_42
	branch edx_85 <u 0x1000<32> l00411BE9
l00411BE9:
	branch edx_85 == 0<32> l00411BFA
l00411BFA:
	ebx_111 = 0<32>
l00411BED:
	word32 ecx_462
	ebx_111 = fn00427511(0<32>, esi_42, ecx, dwLoc28, edx_85, ebx, out ecx_462, out ebp_103)
l00411BC6:
	word32 eax_112 = edx_85 + 35<i32>
	branch edx_85 + 35<i32> >u edx_85 l00411BD1
l00411BCE_1:
	eax_112 = 0xFFFFFFFF<32>
l00411BD1:
	word32 eax_125 = fn00427511(0<32>, esi_42, ecx, dwLoc28, eax_112, ebx, out ecx_127, out ebp_103)
	branch eax_125 == 0<32> l00411C33
l00411BDE:
	ebx_111 = eax_125 + 35<i32> & 0xFFFFFFE0<32>
	Mem140[ebx_111 - 4<i32>:word32] = eax_125
l00411BAE:
	ecx_141 = ecx_141 >>u 1<32>
	branch ecx_141 != 0<32> l00411BA6
l00411BB2:
l00411BFC:
	eax_147 = Mem145[ebp_103 - 4<i32>:word32]
l00411BFF:
	branch esi_42 == 0<32> l00411C0E
l00411C03:
	memcpy(ebx_111, eax_147, esi_42)
l00411C0E:
	branch Mem172[ecx + 60<i32>:byte] == 0<8> l00411C43
l00411C14:
	word32 eax_178 = Mem172[ebp_103 - 4<i32>:word32]
	ecx_127 = eax_178
	branch esi_42 <u 0x1000<32> l00411C39
l00411C23:
	ecx_127 = Mem172[eax_178 - 4<i32>:word32]
	branch eax_178 - ecx_127 <=u 0x23<32> l00411C39
l00411C33:
	_invalid_parameter_noinfo_noreturn()
l00411C39:
	fn0042763F(ecx_127)
l00411C43:
	word32 edx_209 = Mem208[ecx + 16<i32>:word32]
	Mem210[ecx + 60<i32>:byte] = 1<8>
	branch esi_42 != 0<32> l00411C90
l00411C90:
	word32 ecx_221 = Mem210[ebp_103 - 4<i32>:word32]
	Mem228[ecx + 56<i32>:word32] = Mem210[ecx + 56<i32>:word32] - ecx_221 + ebx_111
	word32 edx_230 = Mem228[edx_209:word32]
	word32 edx_236 = edx_230 - ecx_221 + ebx_111
	word32 esi_233 = Mem228[Mem228[ecx + 32<i32>:word32]:word32] - edx_230
	word32 ecx_239 = ebx_111 - edx_236 + Mem228[ebp_103 - 8<i32>:word32]
	Mem240[ebp_103 - 4<i32>:word32] = Mem228[Mem228[ecx + 28<i32>:word32]:word32]
	Mem243[ebp_103 - 16<i32>:word32] = Mem240[Mem240[ecx + 12<i32>:word32]:word32]
	Mem245[Mem243[ecx + 16<i32>:word32]:word32] = edx_236
	Mem247[Mem245[ecx + 32<i32>:word32]:word32] = edx_236
	Mem249[Mem247[ecx + 48<i32>:word32]:word32] = ecx_239
	word32 eax_250 = Mem249[ecx + 48<i32>:word32]
	Mem252[eax_250:word32] = Mem249[eax_250:word32] - esi_233
	word32 eax_253 = Mem252[ecx + 32<i32>:word32]
	Mem255[eax_253:word32] = Mem252[eax_253:word32] + esi_233
	branch (Mem255[ecx + 64<i32>:byte] & 1<8>) == 0<8> l00411D01
l00411D01:
	Mem260[Mem255[ecx + 12<i32>:word32]:word32] = ebx_111
	Mem262[Mem260[ecx + 28<i32>:word32]:word32] = 0<32>
	Mem264[Mem262[ecx + 44<i32>:word32]:word32] = ebx_111
l00411CE0:
	word32 edx_268 = Mem255[ebp_103 - 4<i32>:word32] - Mem255[ebp_103 - 16<i32>:word32] + ebx_111
	word32 ecx_271 = Mem255[Mem255[ecx + 32<i32>:word32]:word32] - edx_268
	Mem275[Mem255[ecx + 12<i32>:word32]:word32] = ebx_111
	Mem277[Mem275[ecx + 28<i32>:word32]:word32] = edx_268
	Mem279[Mem277[ecx + 44<i32>:word32]:word32] = ecx_271 + 1<32>
l00411C4E:
	Mem280[ecx + 56<i32>:word32] = ebx_111
	Mem281[edx_209:word32] = ebx_111
	word32 edx_283 = Mem281[ebp_103 - 8<i32>:word32]
	Mem284[Mem281[ecx + 32<i32>:word32]:word32] = ebx_111
	Mem286[Mem284[ecx + 48<i32>:word32]:word32] = edx_283
	word32 ecx_288 = Mem286[ecx + 64<i32>:word32]
	Mem289[Mem286[ecx + 12<i32>:word32]:word32] = ebx_111
	word32 eax_290 = Mem289[ecx + 28<i32>:word32]
	branch (ecx_288 & 1<32>) == 0<32> l00411C80
l00411C80:
	Mem295[eax_290:word32] = 0<32>
	Mem297[Mem295[ecx + 44<i32>:word32]:word32] = ebx_111
l00411C70:
	Mem298[eax_290:word32] = ebx_111
	Mem300[Mem298[ecx + 44<i32>:word32]:word32] = 1<32>
l00411D14:
l00411D15:
	sputc(ecx, Mem308[ebp_103 + 8<32>:charconst ])
	return
l00411B67:
	return
l00411B3F:
	return
fn00411B30_exit:


word32 fn00411D30(word32 edx, word32 ebx, word32 edi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404080
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: DP
fn00411D30_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc28
l00411D30:
	word32 esi_120
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 ecx_36 = Mem31[edx + 4<i32>:word32] - Mem31[edx:word32]
	word32 edx_39 = SLICE(ecx_36 *s64 0x88888889<32>, word32, 32) + ecx_36
	word32 ebp_228 = fp - 4<i32>
	branch (edx_39 >> 6<32> >>u 0x1F<32>) + (edx_39 >> 6<32>) != 0<32> l00411D95
l00411D95:
	word32 ecx_46 = Mem31[edx + 32<i32>:word32]
	word32 edx_47 = Mem31[edx + 36<i32>:word32]
	branch ecx_46 >= edx_47 l00411DA9
l00411D9F:
	branch (Mem31[edx + 68<i32>:byte] & 2<8>) != 0<8> l00411EDC
l00411EDC:
	word32 edx_72
	word32 ecx_71 = fn00414540(fn00404000(&tLoc28, ecx_46, edx_47), edx, edi, es, ds, out edx_72)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l00411EFF_thunk_fn00411F00:
	word32 ebp_87
	word32 ebx_444
	word32 esi_445
	word32 edi_446
	word32 edx_443
	word32 ecx_442
	fn00411F00(ecx_71, edx_72, es, ds, ebx, out ecx_442, out edx_443, out ebx_444, out ebp_87, out esi_445, out edi_446)
	return ebp_87
l00411DA9:
	branch (Mem31[edx + 28<i32>:byte] & 4<8>) == 0<8> l00411E1B
l00411E1B:
	word32 edx_102 = edx + 44<i32>
	word32 eax_103 = Mem31[edx + 60<i32>:word32]
	branch Mem31[edx + 64<i32>:word32] <u 0x10<32> l00411E29
l00411E27:
	edx_102 = Mem31[edx + 44<i32>:word32]
l00411E29:
	word32 edi_441
	word32 ebx_440
	fn004038C0(0x0043B1F8<p32>, edx_102, eax_103, out ebx_440, out esi_120, out edi_441)
	word32 edi_127 = Mem110[esi_120:word32]
	word32 ecx_132 = Mem110[esi_120 + 4<i32>:word32] - edi_127
	word32 edx_136 = SLICE(ecx_132 *s64 0x88888889<32>, word32, 32) + ecx_132
	word32 dwLoc14_350 = 0<32>
	branch (edx_136 >> 6<32> >>u 0x1F<32>) + (edx_136 >> 6<32>) == 0<32> l00411EC1
l00411E58:
	word32 ebx_143 = 0<32>
l00411E60:
	word32 edx_149 = edi_127 + 4<i32> + ebx_143
	word32 eax_152 = Mem150[edx_149 + 16<i32>:word32]
	branch Mem150[edx_149 + 20<i32>:word32] <u 0x10<32> l00411E70
l00411E6E:
	edx_149 = Mem150[edx_149:word32]
l00411E70:
	word32 ebx_165
	word32 edi_167
	word32 esi_447
	fn004038C0(0x0043B1F8<p32>, edx_149, eax_152, out ebx_165, out esi_447, out edi_167)
	word32 edx_176 = edi_167 + 28<i32> + ebx_165
	word32 eax_178 = Mem159[edx_176 + 16<i32>:word32]
	branch Mem159[edx_176 + 20<i32>:word32] <u 0x10<32> l00411E8E
l00411E8C:
	edx_176 = Mem159[edx_176:word32]
l00411E8E:
	word32 ebx_189
	word32 edi_448
	fn004038C0(0x0043B1F8<p32>, edx_176, eax_178, out ebx_189, out esi_120, out edi_448)
	edi_127 = Mem184[esi_120:word32]
	word32 ecx_207 = Mem184[esi_120 + 4<i32>:word32] - edi_127
	word32 v19_205 = dwLoc14_350 + 1<32>
	word32 edx_211 = SLICE(ecx_207 *s64 0x88888889<32>, word32, 32) + ecx_207
	dwLoc14_350 = v19_205
	ebx_143 = ebx_189 + 0x78<32>
	branch v19_205 <u ((edx_211 >> 6<32>) >>u 0x1F<32>) + (edx_211 >> 6<32>) l00411E60
l00411DAF:
	word32 eax_227 = fn004140C0(edx, es, ds, out ebp_228)
	Mem242[ebp_228 - 4<i32>:word32] = 1<32>
	word32 esp_234 = <invalid>
	word32 ecx_244 = Mem242[eax_227 + 16<i32>:word32]
	branch Mem242[eax_227 + 20<i32>:word32] <u 0x10<32> l00411DCC
l00411DCA:
	eax_227 = Mem242[eax_227:word32]
l00411DCC:
	Mem250[esp_234 - 4<i32>:word32] = ecx_244
	word32 edi_439
	word32 ebx_438
	fn004038C0(0x0043B1F8<p32>, eax_227, Mem250[esp_234 - 4<i32>:word32], out ebx_438, out esi_120, out edi_439)
	word32 edx_266 = Mem250[ebp_228 - 20<i32>:word32]
	branch edx_266 <u 0x10<32> l00411EC1
l00411DE8:
	word32 ecx_270 = Mem250[ebp_228 - 40<i32>:word32]
	word32 edx_271 = edx_266 + 1<32>
	branch edx_266 <u 0xFFF<32> l00411E0C
l00411DF6:
	ecx_270 = Mem250[ecx_270 - 4<i32>:word32]
	edx_271 = edx_266 + 0x24<32>
	branch ecx_270 - ecx_270 <=u 0x23<32> l00411E0C
l00411E06:
	_invalid_parameter_noinfo_noreturn()
l00411E0C:
	Mem284[esp_234 - 4<i32>:word32] = edx_271
	Mem287[esp_234 - 8<i32>:word32] = ecx_270
	fn0042763F(Mem287[esp_234 - 8<i32>:word32])
l00411D74:
	word32 edx_292 = edx + 44<i32>
	word32 eax_293 = Mem31[edx + 60<i32>:word32]
	branch Mem31[edx + 64<i32>:word32] <u 0x10<32> l00411D82
l00411D80:
	edx_292 = Mem31[edx + 44<i32>:word32]
l00411D82:
	word32 ebx_436
	word32 edi_437
	fn004038C0(0x0043B1F8<p32>, edx_292, eax_293, out ebx_436, out esi_120, out edi_437)
l00411EC1:
	Mem317[esi_120 + 40<i32>:byte] = 1<8>
	Mem325[fs:0x00000000<p32>:word32] = Mem317[ebp_228 - 12<i32>:word32]
	return Mem325[ebp_228:word32]
fn00411D30_exit:


byte fn00411F00(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
//      fn00407D10
//      fn00408570
//      fn0040A880
//      fn00411D30
//      fn0041AEF0
//      fn0041CC60
//      fn00421620
//      fn004237A0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp ebx ecx edi edx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00411F00_entry:
	ptr32 fp
	selector fs
l00411F00:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word32 ecx_40 = Mem39[dwArg04 + 4<i32>:word32]
	word32 eax_42 = Mem41[ecx_40:word32]
	word32 esp_101
	call Mem41[eax_42 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_42,ecx:ecx_40,edx:edx,Stack +0004:eax_27,Stack +0018:ecx_40,Stack +0028:eax_13,Stack +002C:0x42DC78<32>,Stack +0030:0<32>,Stack +003C:dwArg04
		defs: esp:esp_43
	word32 ebp_137 = fp - 4<i32>
	word32 edi_205 = edx
	word32 esi_203 = ecx
	word32 ecx_50 = ecx
	word32 ebx_51 = Mem49[ecx + 20<i32>:word32]
	branch ebx_51 <u 0x10<32> l00411F54
l00411F52:
	ecx_50 = Mem49[ecx:word32]
l00411F54:
	word32 edx_105 = Mem49[ecx + 16<i32>:word32] + ecx_50
	branch ebx_51 <u 0x10<32> l00411F63
l00411F61:
	esi_203 = Mem61[ecx:word32]
l00411F63:
	word32 ecx_68 = edx
	word24 ebx_24_8_240 = SLICE(edx + 1<i32>, word24, 8)
l00411F68:
	ecx_68 = ecx_466 + 1<32>
	ecx_466 = ecx_68
	branch Mem61[ecx_466:byte] != 0<8> l00411F68
l00411F6F:
	word32 ebx_239
	word32 eax_204 = ecx_68 - (edx + 1<i32>) + edx
	branch esi_203 == edx_105 l00411FC6
l00411F7B:
l00411F80:
	branch edi_205 == eax_204 l00411FCA
l00411F84:
	Mem99[ebp_137 - 16<i32>:byte] = Mem95[esi_203:byte]
	Mem103[esp_101 - 4<i32>:word32] = Mem99[ebp_137 - 16<i32>:word32]
	word32 eax_111
	word32 ebp_112
	word32 edi_115
	word32 edx_117
	word32 ebx_464
	word32 esi_465
	fn00402DD0(ebp_137 - 32<i32>, edx_105, es, ds, out eax_111, out edx_117, out ebx_464, out ebp_112, out esi_465, out edi_115)
	word32 esp_119 = <invalid>
	toupper(eax_111, Mem103[esp_119:charconst ])
	Mem131[ebp_112 - 20<i32>:byte] = Mem103[edi_115:byte]
	Mem135[esp_119:word32] = Mem131[ebp_112 - 20<i32>:word32]
	word32 eax_136
	word32 ebx_138
	word32 edi_140
	word32 esi_141
	word32 edx_142
	fn00402DD0(ebp_112 - 32<i32>, edx_117, es, ds, out eax_136, out edx_142, out ebx_138, out ebp_137, out esi_141, out edi_140)
	word32 esp_144 = <invalid>
	ebx_24_8_240 = SLICE(ebx_138, word24, 8) (alias)
	esp_101 = esp_144 + 4<32>
	branch SLICE(ebx_138, byte, 0) != toupper(eax_136, Mem135[esp_144:charconst ]) l00411FD2
l00411FD2:
	Mem157[ebp_137 - 4<i32>:word32] = 2<32>
	word32 ecx_158 = Mem157[ebp_137 - 28<i32>:word32]
	branch ecx_158 == 0<32> l00411FF1
l00411FE0:
	word32 eax_162 = Mem157[ecx_158:word32]
	word32 eax_165
	call Mem157[eax_162 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_162,ecx:ecx_158,edx:edx_142
		defs: eax:eax_165,edx:edx_166,esp:esp_164
	branch eax_165 == 0<32> l00411FF1
l00411FE9:
	word32 edx_173 = Mem157[eax_165:word32]
	Mem176[esp_101 - 4<i32>:word32] = 1<32>
	call Mem176[edx_173:word32] (retsize: 4;)
		uses: ecx:eax_165,edx:edx_173
		defs: edx:edx_179,esp:esp_177
l00411FF1:
	Mem190[fs:0x00000000<p32>:word32] = Mem187[ebp_137 - 12<i32>:word32]
	word32 esp_193 = esp_101 + 4<i32>
	word32 edi_194 = Mem190[esp_193:word32]
	word32 esi_196 = Mem190[esp_193 + 4<i32>:word32]
	word32 ebx_198 = Mem190[esp_193 + 8<i32>:word32]
	word32 ebp_200 = Mem190[ebp_137:word32]
	ecxOut = Mem190[esp_101:word32]
	edxOut = edx_142
	ebxOut = ebx_198
	ebpOut = ebp_200
	esiOut = esi_196
	ediOut = edi_194
	return 0<8>
l00411FBA:
	edx_105 = Mem135[ebp_137 - 24<i32>:word32]
	esi_203 = esi_141 + 1<32>
	eax_204 = Mem135[ebp_137 + 8<i32>:word32]
	edi_205 = edi_140 + 1<32>
	branch esi_141 + 1<32> != edx_105 l00411F80
l00411FC6:
	branch edi_205 != eax_204 l00412005
l00411FCA:
	branch esi_203 != edx_105 l00412005
l00412005:
	ebx_239 = SEQ(ebx_24_8_240, 0<8>) (alias)
l00411FCE:
	ebx_239 = SEQ(ebx_24_8_240, 1<8>) (alias)
l00412007:
	Mem226[ebp_137 - 4<i32>:word32] = 3<32>
	byte bl_289 = SLICE(ebx_239, byte, 0)
	word32 ecx_227 = Mem226[ebp_137 - 28<i32>:word32]
	branch ecx_227 == 0<32> l00412026
l00412015:
	word32 eax_231 = Mem226[ecx_227:word32]
	word32 eax_270
	call Mem226[eax_231 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_231,ecx:ecx_227,edx:edx_253
		defs: eax:eax_270,edx:edx_271,esp:esp_269
	branch eax_270 == 0<32> l00412026
l0041201E:
	word32 edx_278 = Mem226[eax_270:word32]
	Mem281[esp_101 - 4<i32>:word32] = 1<32>
	call Mem281[edx_278:word32] (retsize: 4;)
		uses: ecx:eax_270,edx:edx_278
		defs: edx:edx_284,esp:esp_282
l00412026:
	Mem295[fs:0x00000000<p32>:word32] = Mem292[ebp_137 - 12<i32>:word32]
	word32 esp_298 = esp_101 + 4<i32>
	word32 edi_299 = Mem295[esp_298:word32]
	word32 esi_301 = Mem295[esp_298 + 4<i32>:word32]
	word32 ebx_303 = Mem295[esp_298 + 8<i32>:word32]
	word32 ebp_305 = Mem295[ebp_137:word32]
	ecxOut = Mem295[esp_101:word32]
	edxOut = edx_105
	ebxOut = ebx_303
	ebpOut = ebp_305
	esiOut = esi_301
	ediOut = edi_299
	return bl_289
fn00411F00_exit:


byte fn00412040(word32 ecx, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp ebx edi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412040_entry:
	ptr32 fp
	selector fs
	word32 ebx
	word24 ebx_24_8_212 = SLICE(ebx, word24, 8)
l00412040:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word32 ecx_38 = Mem37[dwArg04 + 4<i32>:word32]
	word32 eax_40 = Mem39[ecx_38:word32]
	word32 esp_131
	call Mem39[eax_40 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_40,ecx:ecx_38,Stack +0004:eax_27,Stack +0018:ecx_38,Stack +0028:eax_13,Stack +002C:0x42DC78<32>,Stack +0030:0<32>,Stack +003C:dwArg04
		defs: esp:esp_41
	word32 ebp_115 = fp - 4<i32>
	word32 esi_181 = ecx
	word32 ecx_48 = ecx
	word32 edx_120 = Mem47[ecx + 20<i32>:word32]
	branch edx_120 <u 0x10<32> l00412092
l00412090:
	ecx_48 = Mem47[ecx:word32]
l00412092:
	word32 eax_180 = Mem47[ecx + 16<i32>:word32] + ecx_48
	branch edx_120 <u 0x10<32> l004120A1
l0041209F:
	esi_181 = Mem59[ecx:word32]
l004120A1:
	word32 ebx_211
	branch esi_181 == eax_180 l0041213A
l004120A9:
	word32 edi_182 = 0x00431B90<p32>
l004120B0:
	branch edi_182 == 0x00431B98<p32> l004120FF
l004120B8:
	Mem77[ebp_115 + 8<i32>:byte] = Mem73[esi_181:byte]
	Mem81[esp_131 - 4<i32>:word32] = Mem77[ebp_115 + 8<i32>:word32]
	word32 eax_89
	word32 ebp_90
	word32 edi_93
	word32 edx_95
	word32 ebx_417
	word32 esi_418
	fn00402DD0(ebp_115 - 32<i32>, edx_120, es, ds, out eax_89, out edx_95, out ebx_417, out ebp_90, out esi_418, out edi_93)
	word32 esp_97 = <invalid>
	toupper(eax_89, Mem81[esp_97:charconst ])
	Mem109[ebp_90 - 16<i32>:byte] = Mem81[edi_93:byte]
	Mem113[esp_97:word32] = Mem109[ebp_90 - 16<i32>:word32]
	word32 eax_114
	word32 ebx_116
	word32 edi_118
	word32 esi_119
	fn00402DD0(ebp_90 - 32<i32>, edx_95, es, ds, out eax_114, out edx_120, out ebx_116, out ebp_115, out esi_119, out edi_118)
	word32 esp_122 = <invalid>
	ebx_24_8_212 = SLICE(ebx_116, word24, 8) (alias)
	esp_131 = esp_122 + 4<32>
	branch SLICE(ebx_116, byte, 0) != toupper(eax_114, Mem113[esp_122:charconst ]) l00412107
l00412107:
	Mem135[ebp_115 - 4<i32>:word32] = 2<32>
	word32 ecx_136 = Mem135[ebp_115 - 28<i32>:word32]
	branch ecx_136 == 0<32> l00412126
l00412115:
	word32 eax_140 = Mem135[ecx_136:word32]
	word32 eax_143
	call Mem135[eax_140 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_140,ecx:ecx_136
		defs: eax:eax_143,esp:esp_142
	branch eax_143 == 0<32> l00412126
l0041211E:
	word32 edx_151 = Mem135[eax_143:word32]
	Mem154[esp_131 - 4<i32>:word32] = 1<32>
	call Mem154[edx_151:word32] (retsize: 4;)
		uses: ecx:eax_143,edx:edx_151
		defs: esp:esp_155
l00412126:
	Mem168[fs:0x00000000<p32>:word32] = Mem165[ebp_115 - 12<i32>:word32]
	word32 esp_171 = esp_131 + 4<i32>
	word32 edi_172 = Mem168[esp_171:word32]
	word32 ebp_178 = Mem168[ebp_115:word32]
	ebxOut = Mem168[esp_171 + 8<i32>:word32]
	ebpOut = ebp_178
	ediOut = edi_172
	return 0<8>
l004120EE:
	eax_180 = Mem113[ebp_115 - 20<i32>:word32]
	esi_181 = esi_119 + 1<32>
	edi_182 = edi_118 + 1<32>
	branch esi_119 + 1<32> != eax_180 l004120B0
l004120F7:
	branch edi_118 != 0x431B97<32> l0041213A
l004120FF:
	branch esi_181 != eax_180 l0041213A
l0041213A:
	ebx_211 = SEQ(ebx_24_8_212, 0<8>) (alias)
l00412103:
	ebx_211 = SEQ(ebx_24_8_212, 1<8>) (alias)
l0041213C:
	Mem200[ebp_115 - 4<i32>:word32] = 3<32>
	byte bl_258 = SLICE(ebx_211, byte, 0)
	word32 ecx_201 = Mem200[ebp_115 - 28<i32>:word32]
	branch ecx_201 == 0<32> l0041215B
l0041214A:
	word32 eax_205 = Mem200[ecx_201:word32]
	word32 eax_239
	call Mem200[eax_205 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_205,ecx:ecx_201
		defs: eax:eax_239,esp:esp_238
	branch eax_239 == 0<32> l0041215B
l00412153:
	word32 edx_247 = Mem200[eax_239:word32]
	Mem250[esp_131 - 4<i32>:word32] = 1<32>
	call Mem250[edx_247:word32] (retsize: 4;)
		uses: ecx:eax_239,edx:edx_247
		defs: esp:esp_251
l0041215B:
	Mem264[fs:0x00000000<p32>:word32] = Mem261[ebp_115 - 12<i32>:word32]
	word32 esp_267 = esp_131 + 4<i32>
	word32 edi_268 = Mem264[esp_267:word32]
	word32 ebp_274 = Mem264[ebp_115:word32]
	ebxOut = Mem264[esp_267 + 8<i32>:word32]
	ebpOut = ebp_274
	ediOut = edi_268
	return bl_258
fn00412040_exit:


word32 fn00412170(word32 ecx, word32 ebx, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412170_entry:
	ptr32 fp
	struct <anonymous> tLoc20
	struct <anonymous> tLoc14
l00412170:
	word32 ecx_27
	__align_stack<word32>(fp - 4<i32>)
	Mem18[&tLoc20:word32] = 0x00431A0C<p32>
	Mem19[&tLoc20 + 4<i32>:word32] = 0x00431A0D<p32>
	Mem22[&tLoc14:word64] = Mem19[&tLoc20:word64]
	word32 ebp_101 = fp - 4<i32>
	word32 edx_23 = Mem22[ecx + 20<i32>:word32]
	ecx_27 = ecx
	branch edx_23 <u 0x10<32> l004121B5
l004121B3:
	ecx_27 = Mem24[ecx:word32]
l004121B5:
	word32 eax_32 = Mem24[ecx + 16<i32>:word32] + ecx_27
	word32 ecx_33 = ecx
	branch edx_23 <u 0x10<32> l004121C3
l004121C1:
	ecx_33 = Mem24[ecx:word32]
l004121C3:
	word32 edx_105
	word32 eax_50 = fn00416080(&tLoc14, &tLoc20, ecx_33, eax_32, out edx_105)
	word32 esp_115 = fp - 0x24<32>
	word32 ecx_58 = Mem48[eax_50:word32]
	word32 eax_59 = Mem48[eax_50 + 4<i32>:word32]
	branch ecx_58 == eax_59 l0041220E
l004121DC:
	word32 esp_107 = <invalid>
	edx_105 = fn00416DA0(es, ds, ecx_58, eax_59, out ebx, out ebp_101, out edi)
	esp_115 = esp_107 + 0x1C<32>
l0041220E:
	word32 esp_121 = esp_115 + 4<i32>
	word32 esi_120 = Mem118[esp_115:word32]
	word32 ecx_182
	word32 eax_181
	fn00427500(Mem118[esp_115 + 28<i32>:word32] ^ esp_121, edx_105, ebx, ebp_101, esi_120, edi, es, ds, Mem118[esp_121 + -4<i32>:word32], out eax_181, out ecx_182)
	ebpOut = Mem118[ebp_101:word32]
	esiOut = esi_120
	ediOut = edi
	return ebx
fn00412170_exit:


word32 fn00412220(word32 ecx, word32 edx, word32 dwArg04, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
// MayUse:  ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp ebx edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412220_entry:
	ptr32 fp
l00412220:
	word32 ebp_161 = fp - 4<i32>
	word32 edi_23 = edx
	branch Mem6[edx + 20<i32>:word32] <u 0x10<32> l00412238
l00412236:
	edi_23 = Mem22[edx:word32]
l00412238:
	word32 edx_124
	word32 esp_137
	word32 ebx_136
	word32 edx_33 = Mem31[dwArg04 + 16<i32>:word32]
	word32 esi_143 = dwArg04
	word32 ecx_30 = Mem22[edx + 16<i32>:word32]
	branch ecx_30 >u Mem31[dwArg04 + 20<i32>:word32] - edx_33 l004122BE
l004122BE:
	esp_137 = <invalid>
	esi_143 = fn00414760(dwArg04, edi_23, ecx_30, out edx_124, out ebx_136, out ebp_161)
l0041224D:
	Mem69[dwArg04 + 16<i32>:word32] = edx_33 + ecx_30
	word32 ebx_70 = dwArg04
	branch Mem31[dwArg04 + 20<i32>:word32] <u 0x10<32> l0041225D
l0041225B:
	ebx_70 = Mem69[dwArg04:word32]
l0041225D:
	word32 dwArg04_181
	branch ecx_30 + edi_23 <=u ebx_70 l00412281
l00412264:
	branch edi_23 >u ebx_70 + edx_33 l00412281
l00412281:
	dwArg04_181 = ecx_30
l0041226B:
	branch ebx_70 >u edi_23 l00412278
l00412278:
	dwArg04_181 = ebx_70 - edi_23
l0041226F:
	dwArg04_181 = 0<32>
l00412284:
	memmove(ebx_70 + ecx_30, ebx_70, edx_33 + 1<i32>)
	memcpy(ebx_70, edi_23, dwArg04_181)
	memcpy(ebx_70 + dwArg04_181, dwArg04_181 + ecx_30 + edi_23, ecx_30 - dwArg04_181)
	edx_124 = dwArg04_181
	ebx_136 = ecx
	esp_137 = fp - 0x18<32>
l004122D2:
	Mem140[ebx_136 + 16<i32>:word32] = 0<32>
	Mem142[ebx_136 + 20<i32>:word32] = 0<32>
	Mem151[ebx_136:word128] = Mem142[esi_143:word128]
	Mem154[ebx_136 + 16<i32>:word64] = Mem151[esi_143 + 16<i32>:word64]
	Mem155[esi_143 + 16<i32>:word32] = 0<32>
	Mem156[esi_143 + 20<i32>:word32] = 0xF<32>
	Mem157[esi_143:byte] = 0<8>
	word32 esp_150 = esp_137 + 4<i32>
	word32 esi_158 = Mem157[esp_150:word32]
	word32 ebx_160 = Mem157[esp_150 + 4<i32>:word32]
	word32 ebp_163 = Mem157[ebp_161:word32]
	edxOut = edx_124
	ebxOut = ebx_160
	ebpOut = ebp_163
	esiOut = esi_158
	return ebx_136
fn00412220_exit:


word32 fn00412310(word32 ecx, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407D10
//      fn00408570
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp edi esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412310_entry:
	ptr32 fp
	word32 esi
	word32 dwLoc2C
l00412310:
	word32 ecx_128 = Mem20[ecx + 4<i32>:word32] - Mem20[ecx:word32]
	word32 edx_38 = SLICE(ecx_128 *s64 0x92492493<32>, word32, 32) + ecx_128
	word32 ebp_127 = fp - 4<i32>
	word32 edi_212 = ecx
	word32 esi_101 = dwArg04 - Mem20[ecx:word32]
	word32 ebx_42 = (edx_38 >> 4<32> >>u 0x1F<32>) + (edx_38 >> 4<32>)
	branch ebx_42 == 0x9249249<32> l004124DC
l0041235F:
	word32 eax_63
	word32 ecx_47 = Mem34[ecx + 8<i32>:word32] - Mem34[ecx:word32]
	word32 edx_53 = SLICE(ecx_47 *s64 0x92492493<32>, word32, 32) + ecx_47
	word32 ecx_57 = (edx_53 >> 4<32> >>u 0x1F<32>) + (edx_53 >> 4<32>)
	word32 ebx_380 = ebx_42 + 1<32>
	branch ecx_57 <=u 0x9249249<32> - (ecx_57 >>u 1<32>) l0041238E
l0041238E:
	eax_63 = (ecx_57 >>u 1<32>) + ecx_57
	branch eax_63 >=u ebx_42 + 1<32> l00412396
l00412393_1:
	eax_63 = ebx_42 + 1<32>
l0041238A:
	eax_63 = ebx_42 + 1<32>
l00412396:
	word32 ecx_70 = eax_63 * 7<32>
	word32 ecx_102 = ecx_70 << 2<32>
	branch eax_63 <=u 0x9249249<32> l004123B1
l004123B1:
	branch ecx_70 << 2<32> <u 0x1000<32> l004123E0
l004123E0:
	branch ecx_70 << 2<32> == 0<32> l004123F1
l004123F1:
	esi_101 = 0<32>
l004123E4:
	word32 ecx_503
	esi_101 = fn00427511(ebx_42 + 1<32>, esi_101, ecx, dwLoc2C, ecx_70 << 2<32>, edi, out ecx_503, out ebp_127)
l004123AC:
	ecx_102 = 0xFFFFFFFF<32>
l004123B9:
	word32 eax_106 = ecx_102 + 35<i32>
	branch eax_106 >u ecx_102 l004123C4
l004123C1_1:
	eax_106 = 0xFFFFFFFF<32>
l004123C4:
	word32 eax_126 = fn00427511(ebx_42 + 1<32>, esi_101, ecx, dwLoc2C, eax_106, edi, out ecx_128, out ebp_127)
	branch eax_126 == 0<32> l004124D6
l004123D5:
	esi_101 = eax_126 + 35<i32> & 0xFFFFFFE0<32>
	Mem141[esi_101 - 4<i32>:word32] = eax_126
l004123F3:
	word32 ecx_144 = Mem143[ebp_127 - 4<i32>:word32]
	Mem149[ebp_127 - 20<i32>:word32] = ecx_144 * 0x1C<32>
	word32 eax_151 = ecx_144 * 0x1C<32> + esi_101
	Mem152[ebp_127 - 4<i32>:word32] = eax_151
	Mem153[eax_151:word128] = 0<128>
	Mem155[eax_151 + 16<i32>:word64] = 0<64>
	Mem156[eax_151 + 24<i32>:word32] = 0<32>
	Mem157[eax_151 + 20<i32>:word32] = 0xF<32>
	word32 ecx_159 = Mem157[ecx:word32]
	word32 edx_160 = Mem157[ecx + 4<i32>:word32]
	word32 eax_161 = Mem157[ebp_127 - 8<i32>:word32]
	word32 dwLoc2C_430 = esi_101
	branch eax_161 == edx_160 l00412448
l00412431:
	fn00414630(ecx_159, eax_161, esi_101)
	edx_160 = Mem166[ecx + 4<i32>:word32]
	ecx_159 = Mem166[ebp_127 - 8<i32>:word32]
	dwLoc2C_430 = Mem166[ebp_127 - 4<i32>:word32] + 0x1C<32>
l00412448:
	fn00414630(ecx_159, edx_160, dwLoc2C_430)
	word32 ecx_199 = Mem189[ecx:word32]
	branch ecx_199 == 0<32> l004124AF
l00412456:
	ebp_127 = fn004133E0(ecx_199, Mem189[ecx + 4<i32>:word32], ebp_127, esi_101, ecx, out esi_101, out edi_212)
	word32 ebx_221 = Mem206[edi_212:word32]
	word32 ecx_223 = Mem206[edi_212 + 8<i32>:word32] - ebx_221
	word32 edx_226 = SLICE(ecx_223 *s64 0x92492493<32>, word32, 32) + ecx_223
	word32 eax_230 = (edx_226 >> 4<32> >>u 0x1F<32>) + (edx_226 >> 4<32>)
	branch eax_230 * 0x1C<32> <u 0x1000<32> l004124A2
l00412490:
	word32 edx_236 = Mem206[ebx_221 - 4<i32>:word32]
	ecx_128 = eax_230 * 0x1C<32> + 0x23<32>
	branch ebx_221 - edx_236 >u 0x23<32> l004124D6
l004124D6:
	_invalid_parameter_noinfo_noreturn()
l004124DC:
	word32 edi_257
	word32 esi_259
	word32 edx_501
	word32 ebp_502
	word32 ecx_256 = fn00403730(ecx_128, ebp_127, esi_101, edi_212, out edx_501, out ebp_502, out esi_259, out edi_257)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 edi_283 = Mem282[ecx_256:word32]
	word32 ecx_287 = Mem282[ecx_256 + 4<i32>:word32] - edi_283
	word32 edx_296 = SLICE(ecx_287 *s64 0x2AAAAAAB<32>, word32, 32)
	word32 eax_300 = (edx_296 >> 2<32> >>u 0x1F<32>) + (edx_296 >> 2<32>)
	branch eax_300 == 0xAAAAAAA<32> l00412630
l00412534_thunk_fn00412630:
	word32 ebp_345
	word32 edi_348
	word32 esi_350
	fn00412630(ecx_287, fp - 0x1C<32>, esi_259, edi_283, es, ds, out ebp_345, out esi_350, out edi_348)
	esiOut = esi_350
	ediOut = edi_348
	return ebp_345
l00412534_thunk_fn0041253A:
	word32 ebp_358
	word32 edi_361
	word32 esi_363
	fn0041253A(eax_300, ecx_256, fp - 0x1C<32>, edi_283, edi_257, out ebp_358, out esi_363, out edi_361)
	esiOut = esi_363
	ediOut = edi_361
	return ebp_358
l004124A0:
	ebx_221 = edx_236
l004124A2:
	fn0042763F(ebx_221)
	ebx_380 = Mem377[ebp_127 - 12<i32>:word32]
l004124AF:
	Mem391[edi_212:word32] = esi_101
	Mem394[edi_212 + 4<i32>:word32] = esi_101 + ebx_380 * 0x1C<32>
	Mem398[edi_212 + 8<i32>:word32] = Mem394[ebp_127 - 16<i32>:word32] + esi_101
	word32 ebp_409 = Mem398[ebp_127:word32]
	esiOut = esi
	ediOut = edi
	return ebp_409
fn00412310_exit:


word32 fn004124F0(word32 ecx, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00408570
//      fn00408DD0
//      fn00409E70
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn004124F0_entry:
	ptr32 fp
l004124F0:
	word32 edi_22 = Mem21[ecx:word32]
	word32 ecx_26 = Mem21[ecx + 4<i32>:word32] - edi_22
	word32 edx_35 = SLICE(ecx_26 *s64 0x2AAAAAAB<32>, word32, 32)
	word32 eax_39 = (edx_35 >> 2<32> >>u 0x1F<32>) + (edx_35 >> 2<32>)
	branch eax_39 == 0xAAAAAAA<32> l00412534_thunk_fn00412630
l00412534_thunk_fn00412630:
	word32 ebp_50
	word32 edi_53
	word32 esi_55
	word32 ebx_51 = fn00412630(ecx_26, fp - 4<i32>, esi, edi_22, es, ds, out ebp_50, out esi_55, out edi_53)
	ebpOut = ebp_50
	esiOut = esi_55
	ediOut = edi_53
	return ebx_51
l00412534_thunk_fn0041253A:
	word32 ebp_63
	word32 edi_66
	word32 esi_68
	word32 ebx_64 = fn0041253A(eax_39, ecx, fp - 4<i32>, edi_22, edi, out ebp_63, out esi_68, out edi_66)
	ebpOut = ebp_63
	esiOut = esi_68
	ediOut = edi_66
	return ebx_64
fn004124F0_exit:


word32 fn0041253A(word32 eax, word32 ebx, word32 ebp, word32 edi, word32 dwArg00, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412310
//      fn004124F0
// MayUse:  eax:[0..31] ebp:[0..31] ebx:[0..31] edi:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0041253A_entry:
	word32 dwLoc08
l0041253A:
	word32 edi_24
	word32 edx_14 = SLICE((Mem0[ebx + 8<i32>:word32] - edi) *s64 0x2AAAAAAB<32>, word32, 32)
	word32 ecx_18 = (edx_14 >> 2<32> >>u 0x1F<32>) + (edx_14 >> 2<32>)
	branch ecx_18 <=u 0xAAAAAAA<32> - (ecx_18 >>u 1<32>) l00412566
l00412566:
	edi_24 = (ecx_18 >>u 1<32>) + ecx_18
	branch edi_24 >=u eax + 1<i32> l0041256E
l0041256B_1:
	edi_24 = eax + 1<i32>
l00412562:
	edi_24 = eax + 1<i32>
l0041256E:
	word32 esi_101
	word32 ecx_30 = edi_24 * 3<32>
	word32 ecx_31 = ecx_30 << 3<32>
	branch edi_24 <=u 0xAAAAAAA<32> l00412581
l00412581:
	branch ecx_30 << 3<32> <u 0x1000<32> l004125B2
l0041257C:
	ecx_31 = 0xFFFFFFFF<32>
l00412589:
	word32 eax_40 = ecx_31 + 35<i32>
	branch eax_40 >u ecx_31 l00412594
l00412591_1:
	eax_40 = 0xFFFFFFFF<32>
l00412594:
	word32 eax_65 = fn00427511(ebx, eax + 1<i32>, edi_24, dwLoc08, eax_40, dwArg00, out ecx_31, out ebp)
	branch eax_65 == 0<32> l004125AC
l004125AC:
	_invalid_parameter_noinfo_noreturn()
l004125B2:
	branch ecx_31 == 0<32> l004125C3
l004125C3:
	esi_101 = 0<32>
l004125B6:
	word32 ecx_235
	esi_101 = fn00427511(ebx, eax + 1<i32>, edi_24, dwLoc08, ecx_31, dwArg00, out ecx_235, out ebp)
l004125A1:
	esi_101 = eax_65 + 35<i32> & 0xFFFFFFE0<32>
	Mem104[esi_101 - 4<i32>:word32] = eax_65
l004125C5:
	word32 eax_112 = Mem109[ebp - 4<i32>:word32]
	Mem115[ebp - 12<i32>:word32] = eax_112 * 0x18<32>
	word32 eax_117 = eax_112 * 0x18<32> + esi_101
	Mem118[ebp - 4<i32>:word32] = eax_117
	Mem119[eax_117 + 16<i32>:word32] = 0<32>
	Mem120[eax_117 + 20<i32>:word32] = 0xF<32>
	Mem121[eax_117:byte] = 0<8>
	word32 ecx_123 = Mem121[ebx:word32]
	word32 edx_124 = Mem121[ebx + 4<i32>:word32]
	word32 eax_125 = Mem121[ebp + 8<i32>:word32]
	word32 dwLoc08_216 = esi_101
	branch eax_125 == edx_124 l0041260C
l004125F5:
	fn00403BA0(ecx_123, eax_125, esi_101)
	edx_124 = Mem130[ebx + 4<i32>:word32]
	ecx_123 = Mem130[ebp + 8<i32>:word32]
	dwLoc08_216 = Mem130[ebp - 4<i32>:word32] + 0x18<32>
l0041260C:
	word32 edi_157 = fn00403BA0(ecx_123, edx_124, dwLoc08_216)
	word32 eax_165 = Mem154[ebp - 8<i32>:word32]
	ebpOut = Mem178[fn00403740(ebx, ebp, esi_101, edi_157, esi_101, eax_165 + 1<32>, edi_157):word32]
	esiOut = eax_165 + 1<32>
	ediOut = esi_101
	return edi_157
fn0041253A_exit:


word32 fn00412630(word32 ecx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412310
//      fn004124F0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412630_entry:
	struct <anonymous> tArg08
l00412630:
	word32 ebp_10
	word32 edi_12
	word32 esi_14
	word32 edx_95
	word32 ecx_11 = fn00403730(ecx, ebp, esi, edi, out edx_95, out ebp_10, out esi_14, out edi_12)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem22[&tArg08:word32] = ebp_10
	word32 edx_35 = Mem34[ecx_11:word32]
	word32 ebx_36 = Mem27[&tArg08 + 8<i32>:word32] - edx_35
	word32 eax_38 = Mem34[ecx_11 + 4<i32>:word32] - edx_35
	branch eax_38 >> 2<32> == 0x3FFFFFFF<32> l00412798
l00412665_thunk_fn00412798:
	word32 ebp_49
	word32 edi_52
	word32 esi_54
	word32 ebx_50 = fn00412798(ecx_11, &tArg08, esi_14, ecx_11, es, ds, out ebp_49, out esi_54, out edi_52)
	ebpOut = ebp_49
	esiOut = esi_54
	ediOut = edi_52
	return ebx_50
l00412665_thunk_fn0041266B:
	word32 ebp_61
	word32 edi_64
	word32 esi_66
	word32 ebx_62 = fn0041266B(eax_38 >> 2<32>, edx_35, ebx_36 >> 2<32>, &tArg08, ecx_11, es, ds, edi_12, out ebp_61, out esi_66, out edi_64)
	ebpOut = ebp_61
	esiOut = esi_66
	ediOut = edi_64
	return ebx_62
fn00412630_exit:


word32 fn00412640(word32 ecx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00408570
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412640_entry:
	struct <anonymous> tLoc04
l00412640:
	Mem6[&tLoc04:word32] = ebp
	word32 edx_22 = Mem21[ecx:word32]
	word32 ebx_23 = Mem11[&tLoc04 + 8<i32>:word32] - edx_22
	word32 eax_25 = Mem21[ecx + 4<i32>:word32] - edx_22
	branch eax_25 >> 2<32> == 0x3FFFFFFF<32> l00412665_thunk_fn00412798
l00412665_thunk_fn00412798:
	word32 ebp_37
	word32 esi_81
	word32 edi_82
	word32 ebx_38 = fn00412798(ecx, &tLoc04, esi, ecx, es, ds, out ebp_37, out esi_81, out edi_82)
	ebpOut = ebp_37
	return ebx_38
l00412665_thunk_fn0041266B:
	word32 ebp_49
	word32 esi_83
	word32 edi_84
	word32 ebx_50 = fn0041266B(eax_25 >> 2<32>, edx_22, ebx_23 >> 2<32>, &tLoc04, ecx, es, ds, edi, out ebp_49, out esi_83, out edi_84)
	ebpOut = ebp_49
	return ebx_50
fn00412640_exit:


word32 fn0041266B(word32 eax, word32 edx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412630
//      fn00412640
// MayUse:  cs:[0..15] ds:[0..15] eax:[0..31] ebp:[0..31] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0041266B_entry:
	word32 dwLoc08
	word32 dwArg04
	word32 dwArg08
l0041266B:
	word32 eax_20
	word32 ecx_10 = Mem0[edi + 8<i32>:word32] - edx
	Mem12[ebp - 12<i32>:word32] = eax + 1<i32>
	word32 edx_16 = ecx_10 >> 2<32> >>u 1<32>
	word32 esi_106 = eax + 1<i32>
	branch ecx_10 >> 2<32> <=u 0x3FFFFFFF<32> - edx_16 l0041268C
l0041268C:
	eax_20 = edx_16 + (ecx_10 >> 2<32>)
	branch eax_20 >=u eax + 1<i32> l00412694
l00412691_1:
	eax_20 = eax + 1<i32>
l00412688:
	eax_20 = eax + 1<i32>
l00412694:
	word32 ecx_160
	word32 ecx_26 = eax_20 * 4<32>
	Mem28[ebp - 16<i32>:word32] = ecx_26
	branch eax_20 <=u 0x3FFFFFFF<32> l004126AA
l004126AA:
	branch ecx_26 <u 0x1000<32> l004126D9
l004126D9:
	branch ecx_26 == 0<32> l004126EA
l004126EA:
	esi_106 = 0<32>
l004126DD:
	word32 ecx_348
	esi_106 = fn00427511(ebx, eax + 1<i32>, edi, dwLoc08, ecx_26, dwArg00, out ecx_348, out ebp)
l004126A5:
	ecx_26 = 0xFFFFFFFF<32>
l004126B2:
	word32 eax_62 = ecx_26 + 35<i32>
	branch eax_62 >u ecx_26 l004126BD
l004126BA_1:
	eax_62 = 0xFFFFFFFF<32>
l004126BD:
	word32 eax_82 = fn00427511(ebx, eax + 1<i32>, edi, dwLoc08, eax_62, dwArg00, out ecx_160, out ebp)
	branch eax_82 == 0<32> l00412792
l004126CE:
	esi_106 = eax_82 + 35<i32> & 0xFFFFFFE0<32>
	Mem97[esi_106 - 4<i32>:word32] = eax_82
l004126EC:
	word32 eax_100 = Mem99[ebp + 12<i32>:word32]
	word32 ebx_103 = Mem99[ebp - 8<i32>:word32]
	Mem104[ebp - 4<i32>:word32] = ebx * 4<32>
	Mem107[ebx * 4<32> + esi_106:word32] = Mem104[eax_100:word32]
	word32 eax_109 = Mem107[edi + 4<i32>:word32]
	word32 ecx_110 = Mem107[edi:word32]
	branch ebx_103 != eax_109 l0041271C
l0041271C:
	memmove(esi_106, ecx_110, ebx_103 - ecx_110)
	memmove(Mem128[ebp - 4<i32>:word32] + 4<i32> + esi_106, ebx_103, Mem121[edi + 4<i32>:word32] - ebx_103)
l0041270A:
	memmove(esi_106, ecx_110, eax_109 - ecx_110)
l00412740:
	word32 eax_150 = Mem149[edi:word32]
	branch eax_150 == 0<32> l00412772
l00412746:
	word32 ecx_155 = Mem149[edi + 8<i32>:word32] - eax_150
	branch (ecx_155 & 0xFFFFFFFC<32>) <u 0x1000<32> l00412768
l00412756:
	word32 edx_159 = Mem149[eax_150 - 4<i32>:word32]
	ecx_160 = (ecx_155 & 0xFFFFFFFC<32>) + 0x23<32>
	branch eax_150 - edx_159 >u 0x23<32> l00412792
l00412792:
	_invalid_parameter_noinfo_noreturn()
l00412792_thunk_fn00412798:
	word32 ebp_210
	word32 edi_213
	word32 esi_215
	word32 ebx_211 = fn00412798(ecx_160, ebp, esi_106, edi, es, ds, out ebp_210, out esi_215, out edi_213)
	ebpOut = ebp_210
	esiOut = esi_215
	ediOut = edi_213
	return ebx_211
l00412766:
	eax_150 = edx_159
l00412768:
	fn0042763F(eax_150)
l00412772:
	word32 eax_236 = Mem235[ebp - 12<i32>:word32]
	Mem241[edi:word32] = esi_106
	Mem243[edi + 4<i32>:word32] = esi_106 + eax_236 * 4<32>
	Mem246[edi + 8<i32>:word32] = Mem243[ebp - 16<i32>:word32] + esi_106
	ebpOut = Mem246[ebp:word32]
	esiOut = dwArg04
	ediOut = dwArg00
	return dwArg08
fn0041266B_exit:


word32 fn00412798(word32 ecx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412630
//      fn00412640
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00412798_entry:
	ptr32 fp
l00412798:
	word32 edi_12
	word32 esi_14
	word32 edx_111
	word32 ebp_112
	word32 ecx_11 = fn00403730(ecx, ebp, esi, edi, out edx_111, out ebp_112, out esi_14, out edi_12)
	int3()
	int3()
	int3()
	word32 edi_35 = Mem34[ecx_11:word32]
	word32 ecx_39 = Mem34[ecx_11 + 4<i32>:word32] - edi_35
	word32 edx_48 = SLICE(ecx_39 *s64 0x2AAAAAAB<32>, word32, 32)
	word32 eax_52 = (edx_48 >> 2<32> >>u 0x1F<32>) + (edx_48 >> 2<32>)
	branch eax_52 == 0xAAAAAAA<32> l00412902
l004127E4_thunk_fn00412902:
	word32 ebp_62
	word32 edi_65
	word32 esi_67
	word32 ebx_63 = fn00412902(ecx_39, fp + 8<32>, esi_14, edi_35, es, ds, out ebp_62, out esi_67, out edi_65)
	ebpOut = ebp_62
	esiOut = esi_67
	ediOut = edi_65
	return ebx_63
l004127E4_thunk_fn004127EA:
	word32 ebp_75
	word32 edi_78
	word32 esi_80
	word32 ebx_76 = fn004127EA(eax_52, ecx_11, fp + 8<32>, edi_35, edi_12, out ebp_75, out esi_80, out edi_78)
	ebpOut = ebp_75
	esiOut = esi_80
	ediOut = edi_78
	return ebx_76
fn00412798_exit:


word32 fn004127A0(word32 ecx, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00408570
//      fn0041A760
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn004127A0_entry:
	ptr32 fp
l004127A0:
	word32 edi_22 = Mem21[ecx:word32]
	word32 ecx_26 = Mem21[ecx + 4<i32>:word32] - edi_22
	word32 edx_35 = SLICE(ecx_26 *s64 0x2AAAAAAB<32>, word32, 32)
	word32 eax_39 = (edx_35 >> 2<32> >>u 0x1F<32>) + (edx_35 >> 2<32>)
	branch eax_39 == 0xAAAAAAA<32> l004127E4_thunk_fn00412902
l004127E4_thunk_fn00412902:
	word32 ebp_50
	word32 edi_53
	word32 esi_55
	word32 ebx_51 = fn00412902(ecx_26, fp - 4<i32>, esi, edi_22, es, ds, out ebp_50, out esi_55, out edi_53)
	ebpOut = ebp_50
	esiOut = esi_55
	ediOut = edi_53
	return ebx_51
l004127E4_thunk_fn004127EA:
	word32 ebp_63
	word32 edi_66
	word32 esi_68
	word32 ebx_64 = fn004127EA(eax_39, ecx, fp - 4<i32>, edi_22, edi, out ebp_63, out esi_68, out edi_66)
	ebpOut = ebp_63
	esiOut = esi_68
	ediOut = edi_66
	return ebx_64
fn004127A0_exit:


word32 fn004127EA(word32 eax, word32 ebx, word32 ebp, word32 edi, word32 dwArg00, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412630
//      fn004127A0
// MayUse:  eax:[0..31] ebp:[0..31] ebx:[0..31] edi:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn004127EA_entry:
	word32 dwLoc08
l004127EA:
	word32 edi_24
	word32 edx_14 = SLICE((Mem0[ebx + 8<i32>:word32] - edi) *s64 0x2AAAAAAB<32>, word32, 32)
	word32 ecx_18 = (edx_14 >> 2<32> >>u 0x1F<32>) + (edx_14 >> 2<32>)
	branch ecx_18 <=u 0xAAAAAAA<32> - (ecx_18 >>u 1<32>) l00412816
l00412816:
	edi_24 = (ecx_18 >>u 1<32>) + ecx_18
	branch edi_24 >=u eax + 1<i32> l0041281E
l0041281B_1:
	edi_24 = eax + 1<i32>
l00412812:
	edi_24 = eax + 1<i32>
l0041281E:
	word32 esi_101
	word32 ecx_30 = edi_24 * 3<32>
	word32 ecx_31 = ecx_30 << 3<32>
	branch edi_24 <=u 0xAAAAAAA<32> l00412831
l00412831:
	branch ecx_30 << 3<32> <u 0x1000<32> l00412862
l0041282C:
	ecx_31 = 0xFFFFFFFF<32>
l00412839:
	word32 eax_40 = ecx_31 + 35<i32>
	branch eax_40 >u ecx_31 l00412844
l00412841_1:
	eax_40 = 0xFFFFFFFF<32>
l00412844:
	word32 eax_65 = fn00427511(ebx, eax + 1<i32>, edi_24, dwLoc08, eax_40, dwArg00, out ecx_31, out ebp)
	branch eax_65 == 0<32> l0041285C
l0041285C:
	_invalid_parameter_noinfo_noreturn()
l00412862:
	branch ecx_31 == 0<32> l00412873
l00412873:
	esi_101 = 0<32>
l00412866:
	word32 ecx_242
	esi_101 = fn00427511(ebx, eax + 1<i32>, edi_24, dwLoc08, ecx_31, dwArg00, out ecx_242, out ebp)
l00412851:
	esi_101 = eax_65 + 35<i32> & 0xFFFFFFE0<32>
	Mem104[esi_101 - 4<i32>:word32] = eax_65
l00412875:
	word32 eax_112 = Mem109[ebp - 4<i32>:word32]
	word32 eax_114 = Mem109[ebp + 12<i32>:word32]
	Mem116[ebp - 4<i32>:word32] = eax_112 * 0x18<32>
	Mem118[eax_112 * 0x18<32> + 16<i32> + esi_101:word32] = 0<32>
	Mem119[eax_112 * 0x18<32> + 20<i32> + esi_101:word32] = 0<32>
	Mem121[eax_112 * 0x18<32> + esi_101:word128] = Mem119[eax_114:word128]
	Mem124[eax_112 * 0x18<32> + 16<i32> + esi_101:word64] = Mem121[eax_114 + 16<i32>:word64]
	Mem125[eax_114 + 16<i32>:word32] = 0<32>
	Mem126[eax_114 + 20<i32>:word32] = 0xF<32>
	Mem127[eax_114:byte] = 0<8>
	word32 ecx_129 = Mem127[ebx:word32]
	word32 edx_130 = Mem127[ebx + 4<i32>:word32]
	word32 eax_131 = Mem127[ebp + 8<i32>:word32]
	word32 dwLoc08_223 = esi_101
	branch eax_131 == edx_130 l004128DE
l004128C5:
	fn00403BA0(ecx_129, eax_131, esi_101)
	edx_130 = Mem136[ebx + 4<i32>:word32]
	ecx_129 = Mem136[ebp + 8<i32>:word32]
	dwLoc08_223 = Mem136[ebp - 4<i32>:word32] + 0x18<32> + esi_101
l004128DE:
	word32 edi_164 = fn00403BA0(ecx_129, edx_130, dwLoc08_223)
	word32 eax_172 = Mem161[ebp - 8<i32>:word32]
	ebpOut = Mem185[fn00403740(ebx, ebp, esi_101, edi_164, esi_101, eax_172 + 1<32>, edi_164):word32]
	esiOut = eax_172 + 1<32>
	ediOut = esi_101
	return edi_164
fn004127EA_exit:


word32 fn00412902(word32 ecx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412630
//      fn004127A0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: DP
fn00412902_entry:
	ptr32 fp
	word32 dwLoc04
l00412902:
	word32 edi_12
	word32 edx_118
	word32 ebp_119
	word32 esi_120
	word32 ecx_11 = fn00403730(ecx, ebp, esi, edi, out edx_118, out ebp_119, out esi_120, out edi_12)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 esi_37 = Mem35[ecx_11:word32]
	word32 ecx_41 = Mem35[ecx_11 + 4<i32>:word32] - esi_37
	word32 edx_50 = SLICE(ecx_41 *s64 0x2AAAAAAB<32>, word32, 32)
	word32 ebx_54 = (edx_50 >> 3<32> >>u 0x1F<32>) + (edx_50 >> 3<32>)
	branch ebx_54 == 0x5555555<32> l00412AD1
l00412957_thunk_fn00412AD1:
	word32 ebp_63
	word32 edi_66
	word32 esi_68
	word32 ebx_64 = fn00412AD1(ecx_41, fp + 8<32>, esi_37, ecx_11, es, ds, dwLoc04, out ebp_63, out esi_68, out edi_66)
	ebpOut = ebp_63
	esiOut = esi_68
	ediOut = edi_66
	return ebx_64
l00412957_thunk_fn0041295D:
	word32 ebp_77
	word32 edi_80
	word32 esi_82
	word32 ebx_78 = fn0041295D(ebx_54, fp + 8<32>, esi_37, ecx_11, es, ds, edi_12, dwLoc04, out ebp_77, out esi_82, out edi_80)
	ebpOut = ebp_77
	esiOut = esi_82
	ediOut = edi_80
	return ebx_78
fn00412902_exit:


word32 fn00412910(word32 ecx, word32 edi, selector es, selector ds, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00408570
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: DP
fn00412910_entry:
	ptr32 fp
	word32 dwLoc10
l00412910:
	word32 esi_24 = Mem22[ecx:word32]
	word32 ecx_28 = Mem22[ecx + 4<i32>:word32] - esi_24
	word32 edx_37 = SLICE(ecx_28 *s64 0x2AAAAAAB<32>, word32, 32)
	word32 ebx_41 = (edx_37 >> 3<32> >>u 0x1F<32>) + (edx_37 >> 3<32>)
	branch ebx_41 == 0x5555555<32> l00412957_thunk_fn00412AD1
l00412957_thunk_fn00412AD1:
	word32 ebp_51
	word32 esi_104
	word32 edi_105
	word32 ebx_52 = fn00412AD1(ecx_28, fp - 4<i32>, esi_24, ecx, es, ds, dwLoc10, out ebp_51, out esi_104, out edi_105)
	ebpOut = ebp_51
	return ebx_52
l00412957_thunk_fn0041295D:
	word32 ebp_65
	word32 esi_106
	word32 edi_107
	word32 ebx_66 = fn0041295D(ebx_41, fp - 4<i32>, esi_24, ecx, es, ds, edi, dwLoc10, out ebp_65, out esi_106, out edi_107)
	ebpOut = ebp_65
	return ebx_66
fn00412910_exit:


word32 fn0041295D(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, word32 dwArg10, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412902
//      fn00412910
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31] Stack +0010:[0..31]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: DP
fn0041295D_entry:
	word32 dwLoc08
	word32 dwArg04
	word32 dwArg08
l0041295D:
	word32 eax_26
	word32 edx_16 = SLICE((Mem0[edi + 8<i32>:word32] - esi) *s64 0x2AAAAAAB<32>, word32, 32)
	Mem15[ebp - 12<i32>:word32] = ebx + 1<32>
	word32 ecx_20 = (edx_16 >> 3<32> >>u 0x1F<32>) + (edx_16 >> 3<32>)
	word32 ebx_11 = ebx + 1<32>
	branch ecx_20 <=u 0x5555555<32> - (ecx_20 >>u 1<32>) l0041298A
l0041298A:
	eax_26 = (ecx_20 >>u 1<32>) + ecx_20
	branch eax_26 >=u ebx + 1<32> l00412992
l0041298F_1:
	eax_26 = ebx + 1<32>
l00412986:
	eax_26 = ebx + 1<32>
l00412992:
	word32 ecx_203
	word32 ecx_32 = eax_26 * 3<32>
	Mem35[ebp - 16<i32>:word32] = ecx_32 << 4<32>
	word32 ecx_33 = ecx_32 << 4<32>
	branch eax_26 <=u 0x5555555<32> l004129A7
l004129A7:
	branch ecx_32 << 4<32> <u 0x1000<32> l004129D6
l004129D6:
	branch ecx_32 << 4<32> == 0<32> l004129E7
l004129E7:
	esi = 0<32>
l004129DA:
	word32 ecx_408
	esi = fn00427511(ebx + 1<32>, esi, edi, dwLoc08, ecx_32 << 4<32>, dwArg00, out ecx_408, out ebp)
l004129A2:
	ecx_33 = 0xFFFFFFFF<32>
l004129AF:
	word32 eax_68 = ecx_33 + 35<i32>
	branch eax_68 >u ecx_33 l004129BA
l004129B7_1:
	eax_68 = 0xFFFFFFFF<32>
l004129BA:
	word32 eax_88 = fn00427511(ebx + 1<32>, esi, edi, dwLoc08, eax_68, dwArg00, out ecx_203, out ebp)
	branch eax_88 == 0<32> l00412ACB
l004129CB:
	esi = eax_88 + 35<i32> & 0xFFFFFFE0<32>
	Mem103[esi - 4<i32>:word32] = eax_88
l004129E9:
	word32 eax_106 = Mem105[ebp - 4<i32>:word32]
	Mem114[ebp - 4<i32>:word32] = eax_106 * 0x30<32>
	memset(eax_106 * 0x30<32> + esi, 0<32>, 0x30<32>)
	word32 eax_122 = Mem118[ebp - 4<i32>:word32] + esi
	Mem123[eax_122 + 20<i32>:word32] = 0xF<32>
	Mem124[eax_122 + 40<i32>:word32] = 0<32>
	Mem125[eax_122 + 44<i32>:word32] = 0xF<32>
	Mem126[eax_122 + 24<i32>:byte] = 0<8>
	word32 ecx_128 = Mem126[edi:word32]
	word32 edx_129 = Mem126[edi + 4<i32>:word32]
	word32 eax_130 = Mem126[ebp - 8<i32>:word32]
	word32 dwLoc08_323 = esi
	branch eax_130 == edx_129 l00412A49
l00412A30:
	fn004146B0(ecx_128, eax_130, esi)
	edx_129 = Mem134[edi + 4<i32>:word32]
	ecx_128 = Mem134[ebp - 8<i32>:word32]
	dwLoc08_323 = Mem134[ebp - 4<i32>:word32] + 0x30<32> + esi
l00412A49:
	fn004146B0(ecx_128, edx_129, dwLoc08_323)
	word32 ecx_168 = Mem158[edi:word32]
	branch ecx_168 == 0<32> l00412AA8
l00412A57:
	fn00403460(ecx_168, Mem158[edi + 4<i32>:word32], out ebp, out esi, out edi)
	word32 ebx_189 = Mem175[edi:word32]
	word32 edx_193 = SLICE((Mem175[edi + 8<i32>:word32] - ebx_189) *s64 0x2AAAAAAB<32>, word32, 32)
	word32 eax_197 = (edx_193 >> 3<32> >>u 0x1F<32>) + (edx_193 >> 3<32>)
	branch eax_197 * 0x30<32> <u 0x1000<32> l00412A9B
l00412A89:
	word32 edx_202 = Mem175[ebx_189 - 4<i32>:word32]
	ecx_203 = eax_197 * 0x30<32> + 0x23<32>
	branch ebx_189 - edx_202 >u 0x23<32> l00412ACB
l00412ACB:
	_invalid_parameter_noinfo_noreturn()
l00412ACB_thunk_fn00412AD1:
	word32 ebp_253
	word32 edi_256
	word32 esi_258
	word32 ebx_254 = fn00412AD1(ecx_203, ebp, esi, edi, es, ds, dwArg10, out ebp_253, out esi_258, out edi_256)
	ebpOut = ebp_253
	esiOut = esi_258
	ediOut = edi_256
	return ebx_254
l00412A99:
	ebx_189 = edx_202
l00412A9B:
	fn0042763F(ebx_189)
	ebx_11 = Mem273[ebp - 12<i32>:word32]
l00412AA8:
	Mem288[edi:word32] = esi
	Mem291[edi + 4<i32>:word32] = ebx_11 * 0x30<32> + esi
	Mem296[edi + 8<i32>:word32] = Mem291[ebp - 16<i32>:word32] + esi
	ebpOut = Mem296[ebp:word32]
	esiOut = dwArg04
	ediOut = dwArg00
	return dwArg08
fn0041295D_exit:


word32 fn00412AD1(word32 ecx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg10, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412902
//      fn00412910
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0010:[0..31]
// LiveOut: ebp ebx edi esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00412AD1_entry:
	ptr32 fp
	selector fs
	word32 dwLoc3C
l00412AD1:
	word32 edx_140
	word32 ebp_141
	word32 esi_142
	word32 edi_143
	word32 ecx_11 = fn00403730(ecx, ebp, esi, edi, out edx_140, out ebp_141, out esi_142, out edi_143)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 eax_33 = Mem30[0x0043A008<p32>:word32] ^ fp + 8<32>
	Mem45[fs:0<32>:word32] = fp - 4<32>
	word32 edi_50 = Mem46[ecx_11:word32]
	word32 esi_51 = dwArg10 - edi_50
	word32 ecx_54 = Mem46[ecx_11 + 4<i32>:word32] - edi_50
	word32 edx_59 = SLICE(esi_51 *s64 0x88888889<32>, word32, 32) + esi_51
	word32 edx_66 = SLICE(ecx_54 *s64 0x88888889<32>, word32, 32) + ecx_54
	word32 esi_63 = (edx_59 >> 5<32> >>u 0x1F<32>) + (edx_59 >> 5<32>)
	word32 eax_70 = (edx_66 >> 5<32> >>u 0x1F<32>) + (edx_66 >> 5<32>)
	branch eax_70 == 0x4444444<32> l00412DD4
l00412B4C_thunk_fn00412DD4:
	word32 ebp_79
	word32 esi_84
	word32 ebx_80 = fn00412DD4(ecx_54, fp + 8<32>, esi_63, edi_50, es, ds, dwLoc3C, out ebp_79, out esi_84)
	ebpOut = ebp_79
	esiOut = esi_84
	ediOut = edi_82
	return ebx_80
l00412B4C_thunk_fn00412B52:
	word32 ebp_94
	word32 esi_99
	word32 ebx_95 = fn00412B52(eax_70, ecx_11, fp + 8<32>, esi_63, edi_50, es, ds, eax_33, out ebp_94, out esi_99)
	ebpOut = ebp_94
	esiOut = esi_99
	ediOut = edi_97
	return ebx_95
fn00412AD1_exit:


word32 fn00412AE0(word32 ecx, selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00408570
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ebx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00412AE0_entry:
	ptr32 fp
	selector fs
	word32 dwLoc48
l00412AE0:
	word32 eax_18 = Mem15[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 edi_38 = Mem33[ecx:word32]
	word32 esi_39 = dwArg04 - edi_38
	word32 ecx_42 = Mem33[ecx + 4<i32>:word32] - edi_38
	word32 edx_47 = SLICE(esi_39 *s64 0x88888889<32>, word32, 32) + esi_39
	word32 edx_54 = SLICE(ecx_42 *s64 0x88888889<32>, word32, 32) + ecx_42
	word32 esi_51 = (edx_47 >> 5<32> >>u 0x1F<32>) + (edx_47 >> 5<32>)
	word32 eax_58 = (edx_54 >> 5<32> >>u 0x1F<32>) + (edx_54 >> 5<32>)
	branch eax_58 == 0x4444444<32> l00412B4C_thunk_fn00412DD4
l00412B4C_thunk_fn00412DD4:
	word32 ebp_67
	word32 esi_72
	word32 ebx_68 = fn00412DD4(ecx_42, fp - 4<i32>, esi_51, edi_38, es, ds, dwLoc48, out ebp_67, out esi_72)
	ebpOut = ebp_67
	esiOut = esi_72
	return ebx_68
l00412B4C_thunk_fn00412B52:
	word32 ebp_82
	word32 esi_87
	word32 ebx_83 = fn00412B52(eax_58, ecx, fp - 4<i32>, esi_51, edi_38, es, ds, eax_18, out ebp_82, out esi_87)
	ebpOut = ebp_82
	esiOut = esi_87
	return ebx_83
fn00412AE0_exit:


word32 fn00412B52(word32 eax, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412902
//      fn00412AE0
// MayUse:  cs:[0..15] ds:[0..15] eax:[0..31] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31]
// LiveOut: ebp ebx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: cs ds es fs gs ss
fn00412B52_entry:
	ptr32 fp
	selector fs
	word32 dwLoc08
	word32 esp_125 = fp
l00412B52:
	word32 eax_27
	word32 ecx_10 = Mem0[ebx + 8<i32>:word32] - edi
	Mem12[ebp - 44<i32>:word32] = eax + 1<32>
	word32 edx_17 = SLICE(ecx_10 *s64 0x88888889<32>, word32, 32) + ecx_10
	word32 ecx_21 = (edx_17 >> 5<32> >>u 0x1F<32>) + (edx_17 >> 5<32>)
	branch ecx_21 <=u 0x4444444<32> - (ecx_21 >>u 1<32>) l00412B87
l00412B87:
	eax_27 = (ecx_21 >>u 1<32>) + ecx_21
	branch eax_27 >=u Mem12[ebp - 44<i32>:word32] l00412B91
l00412B8D_1:
	eax_27 = Mem12[ebp - 44<i32>:word32]
l00412B91:
	Mem33[ebp - 52<i32>:word32] = eax_27
l00412B7D:
	word32 ecx_34 = Mem12[ebp - 44<i32>:word32]
	Mem36[ebp - 52<i32>:word32] = ecx_34
	eax_27 = ecx_34
l00412B94:
	word32 edi_105
	word32 ecx_40 = eax_27 * 0xF<32>
	word32 ecx_293 = ecx_40 << 2<32>
	branch eax_27 <=u 0x4444444<32> l00412BAA
l00412BAA:
	branch ecx_40 << 2<32> <u 0x1000<32> l00412BDB
l00412BA5:
	ecx_293 = 0xFFFFFFFF<32>
l00412BB2:
	word32 eax_50 = ecx_293 + 35<i32>
	branch eax_50 >u ecx_293 l00412BBD
l00412BBA_1:
	eax_50 = 0xFFFFFFFF<32>
l00412BBD:
	word32 eax_83 = fn00427511(ebx, esi, edi, dwLoc08, eax_50, dwArg00, out ecx_293, out ebp)
	esp_125 = fp
	branch eax_83 == 0<32> l00412BD5
l00412BCA:
	edi_105 = eax_83 + 35<i32> & 0xFFFFFFE0<32>
	Mem98[edi_105 - 4<i32>:word32] = eax_83
l00412BEE:
	Mem102[ebp - 4<i32>:word32] = 0<32>
	Mem106[ebp - 36<i32>:word32] = edi_105
	word32 eax_104 = esi * 0xF<32>
	Mem110[ebp - 64<i32>:word32] = eax_104 << 2<32>
	word32 esi_109 = (eax_104 << 2<32>) + edi_105
	Mem112[esi_109 + 16<i32>:word32] = 0<32>
	Mem113[esi_109 + 20<i32>:word32] = 0xF<32>
	Mem114[ebp - 68<i32>:word32] = edi_105
	Mem115[ebp - 56<i32>:word32] = esi_109 + 60<i32>
	Mem116[ebp - 48<i32>:word32] = esi_109 + 60<i32>
	Mem117[ebp - 40<i32>:word32] = esi_109
	Mem118[esi_109:byte] = 0<8>
	Mem119[esi_109 + 24<i32>:word32] = 0<32>
	Mem120[esi_109 + 28<i32>:word32] = 0<32>
	Mem121[esi_109 + 32<i32>:word32] = 0<32>
	Mem122[esi_109 + 52<i32>:word32] = 0<32>
	Mem123[esi_109 + 56<i32>:word32] = 0xF<32>
	Mem124[esi_109 + 36<i32>:byte] = 0<8>
	word32 esp_126 = esp_125 - 4<i32>
	Mem127[esp_126:word32] = 0<32>
	Mem129[esp_126 - 4<i32>:word32] = 0x4317A9<32>
	Mem131[ebp - 4<i32>:byte] = 3<8>
	word32 edi_137
	word32 esi_139
	word32 ebp_566
	word32 ecx_563
	word32 ebx_565
	word32 edx_564
	fn00402A70(esi_109, edi_105, Mem131[esp_126 - 4<i32>:word32], Mem131[esp_126:word32], Mem131[esp_126 + 16<i32>:word32], out ecx_563, out edx_564, out ebx_565, out ebp_566, out esi_139, out edi_137)
	word32 esp_141 = <invalid>
	Mem148[esp_141 + 4<32>:word32] = 0<32>
	Mem150[esp_141:word32] = 0x4317A9<32>
	word32 edi_156
	word32 esi_158
	word32 ecx_567
	word32 edx_157
	fn00402A70(esi_139 + 36<i32>, edi_137, Mem150[esp_141:word32], Mem150[esp_141 + 4<i32>:word32], Mem150[esp_141 + 20<i32>:word32], out ecx_567, out edx_157, out ebx, out ebp, out esi_158, out edi_156)
	Mem166[ebp - 4<i32>:byte] = 0<8>
	word32 eax_167 = Mem166[ebx + 4<i32>:word32]
	Mem168[ebp - 48<i32>:word32] = esi_158
	word32 esi_169 = Mem168[ebp - 60<i32>:word32]
	Mem170[ebp - 40<i32>:word32] = eax_167
	word32 esp_160 = <invalid>
	esp_125 = esp_160 + 8<32>
	branch esi_169 != eax_167 l00412CE6
l00412CE6:
	Mem174[esp_160 + 4<32>:word32] = edi_156
	Mem176[esp_160:word32] = esi_169
	Mem179[esp_160 - 4<i32>:word32] = Mem176[ebx:word32]
	word32 ebx_187
	word32 edi_189
	word32 esi_190
	word32 ebp_192
	word32 edx_193 = fn00413980(edx_157, es, ds, Mem179[esp_160 - 4<i32>:word32], Mem179[esp_160:word32], Mem179[esp_160 + 4<i32>:word32], out ebx_187, out ebp_192, out esi_190, out edi_189)
	word32 esp_194 = <invalid>
	Mem204[esp_194 + 8<32>:word32] = Mem179[ebp_192 - 56<i32>:word32]
	Mem206[ebp_192 - 48<i32>:word32] = edi_189
	Mem209[esp_194 + 4<32>:word32] = Mem206[ebx_187 + 4<i32>:word32]
	Mem211[esp_194:word32] = esi_190
	word32 esp_220 = <invalid>
	word32 esi_574
	edx_157 = fn00413980(edx_193, es, ds, Mem211[esp_194:word32], Mem211[esp_194 + 4<i32>:word32], Mem211[esp_194 + 8<i32>:word32], out ebx, out ebp, out esi_574, out edi)
	esp_125 = esp_220 + 0xC<32>
l00412C84:
	word32 esi_228 = Mem170[ebp - 36<i32>:word32]
	word32 edi_230 = Mem170[ebx:word32]
	Mem232[ebp - 32<i32>:word64] = 0<64>
	Mem233[ebp - 24<i32>:word32] = 0<32>
	Mem234[ebp - 32<i32>:word32] = esi_228
	Mem235[ebp - 28<i32>:word32] = esi_228
	Mem236[ebp - 24<i32>:word32] = ebx
	Mem237[ebp - 4<i32>:byte] = 4<8>
l00412CA5:
	branch edi_230 == eax_167 l00412D04
l00412D04:
	edi = Mem243[ebp - 36<i32>:word32]
l00412D07:
	word32 esi_248 = Mem247[ebx:word32]
	branch esi_248 == 0<32> l00412D72
l00412D0D:
	word32 eax_252 = Mem247[ebx + 4<i32>:word32]
	Mem254[ebp - 40<i32>:word32] = eax_252
	branch esi_248 == eax_252 l00412D28
l00412D17:
	word32 esi_267
	word32 edx_570
	word32 ecx_569
	fn004014C0(esi_248, out ecx_569, out edx_570, out ebx, out ebp, out esi_267, out edi)
	esi_248 = esi_267 + 0x3C<32>
	branch esi_267 + 0x3C<32> != Mem254[ebp - 40<i32>:word32] l00412D17
l00412D26:
	esi_248 = Mem254[ebx:word32]
l00412D28:
	word32 ecx_282 = Mem254[ebx + 8<i32>:word32] - esi_248
	word32 edx_285 = SLICE(ecx_282 *s64 0x88888889<32>, word32, 32) + ecx_282
	word32 eax_289 = (edx_285 >> 5<32> >>u 0x1F<32>) + (edx_285 >> 5<32>)
	edx_157 = edx_285 >> 5<32>
	ecx_293 = eax_289 * 0x3C<32>
	branch eax_289 * 0x3C<32> <u 0x1000<32> l00412D68
l00412D52:
	edx_157 = Mem254[esi_248 - 4<i32>:word32]
	ecx_293 = eax_289 * 0x3C<32> + 0x23<32>
	esi = esi_248 - edx_157
	branch esi >u 0x23<32> l00412BD5
l00412BD5:
	_invalid_parameter_noinfo_noreturn()
l00412BDB:
	branch ecx_293 == 0<32> l00412BEC
l00412BEC:
	edi_105 = 0<32>
l00412BDF:
	word32 esp_316 = esp_125 - 4<i32>
	Mem317[esp_316:word32] = ecx_293
	esp_125 = esp_316 + 4<32>
	word32 ecx_573
	edi_105 = fn00427511(ebx, esi, edi, Mem317[esp_316 + -4<i32>:word32], Mem317[esp_316:word32], Mem317[esp_316 + 4<i32>:word32], out ecx_573, out ebp)
l00412D66:
	esi_248 = edx_157
l00412D68:
	word32 esp_343 = esp_125 - 4<i32>
	Mem345[esp_343:word32] = ecx_293
	Mem348[esp_343 - 4<i32>:word32] = esi_248
	fn0042763F(Mem348[esp_343 - 4<i32>:word32])
l00412D72:
	word32 eax_358 = (Mem355[ebp - 44<i32>:word32] << 4<32>) - Mem355[ebp - 44<i32>:word32]
	Mem363[ebx:word32] = edi
	Mem365[ebx + 4<i32>:word32] = edi + eax_358 * 4<32>
	Mem370[ebx + 8<i32>:word32] = edi + ((Mem365[ebp - 52<i32>:word32] << 4<32>) - Mem365[ebp - 52<i32>:word32]) * 4<32>
	Mem376[fs:0x00000000<p32>:word32] = Mem370[ebp - 12<i32>:word32]
	word32 esp_379 = esp_125 + 4<i32>
	word32 esi_382 = Mem376[esp_379 + 4<i32>:word32]
	word32 ebx_384 = Mem376[esp_379 + 8<i32>:word32]
	word32 eax_571
	word32 ecx_572
	fn00427500(Mem376[ebp - 20<i32>:word32] ^ ebp, edx_157, ebx_384, ebp, esi_382, Mem376[esp_379:word32], es, ds, Mem376[esp_379 + 8<i32>:word32], out eax_571, out ecx_572)
	ebpOut = Mem376[ebp:word32]
	esiOut = esi_382
	return ebx_384
fn00412B52_exit:
l00412CA9:
	word32 esp_435 = esp_125 - 4<i32>
	Mem436[esp_435:word32] = edi_230
	Mem439[ebp - 60<i32>:word32] = esi_228
	word32 edx_568
	word32 ebp_442
	fn004028D0(esi_228, edi_230, Mem439[esp_435:word32], out edx_568, out ebp_442)
	Mem452[ebp_442 - 4<i32>:byte] = 5<8>
	word32 esp_443 = <invalid>
	Mem454[esp_443:word32] = edi_230 + 24<i32>
	word32 edi_459
	word32 esi_461
	word32 ebp_462
	ebx = fn00418780(esi_228 + 24<i32>, esi_228, es, ds, Mem454[esp_443:word32], out ebp_462, out esi_461, out edi_459)
	Mem473[ebp_462 - 4<i32>:byte] = 6<8>
	word32 esp_464 = <invalid>
	Mem475[esp_464:word32] = edi_459 + 36<i32>
	fn004028D0(esi_461 + 36<i32>, edi_459, Mem475[esp_464:word32], out edx_157, out ebp)
	Mem489[ebp - 4<i32>:byte] = 4<8>
	eax_167 = Mem489[ebp - 40<i32>:word32]
	Mem493[ebp - 28<i32>:word32] = esi_461 + 0x3C<32>
	word32 esp_480 = <invalid>
	esp_125 = esp_480 + 4<32>
	esi_228 = esi_461 + 0x3C<32>
	edi_230 = edi_459 + 0x3C<32>


word32 fn00412DD4(word32 ecx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg10, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412902
//      fn00412AE0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0010:[0..31]
// LiveOut: ebp ebx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412DD4_entry:
	ptr32 fp
l00412DD4:
	word32 edx_13
	word32 ebp_99
	word32 esi_100
	word32 edi_101
	word32 ecx_11 = fn00403730(ecx, ebp, esi, edi, out edx_13, out ebp_99, out esi_100, out edi_101)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	__align_stack<word32>(fp + 8<32>)
	word32 ebx_38 = Mem35[dwArg10 + 20<i32>:word32]
	branch ebx_38 <u 0x10<32> l00412E08
l00412E04_thunk_fn00412E08:
	word32 ebp_47
	word32 esi_52
	word32 edi_102
	word32 ebx_48 = fn00412E08(edx_13, ebx_38, fp + 8<32>, ecx_11, es, ds, out ebp_47, out esi_52, out edi_102)
	ebpOut = ebp_47
	esiOut = esi_52
	return ebx_48
l00412E04_thunk_fn00412E06:
	word32 ebp_62
	word32 esi_67
	word32 edi_103
	word32 ebx_63 = fn00412E06(edx_13, ebx_38, fp + 8<32>, ecx_11, es, ds, out ebp_62, out esi_67, out edi_103)
	ebpOut = ebp_62
	esiOut = esi_67
	return ebx_63
fn00412DD4_exit:


word32 fn00412DE0(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409E70
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412DE0_entry:
	ptr32 fp
l00412DE0:
	__align_stack<word32>(fp - 4<i32>)
	word32 ebx_25 = Mem21[dwArg04 + 20<i32>:word32]
	branch ebx_25 <u 0x10<32> l00412E04_thunk_fn00412E08
l00412E04_thunk_fn00412E08:
	word32 ebp_36
	word32 edi_39
	word32 esi_41
	word32 ebx_37 = fn00412E08(edx, ebx_25, fp - 4<i32>, ecx, es, ds, out ebp_36, out esi_41, out edi_39)
	ebpOut = ebp_36
	esiOut = esi_41
	ediOut = edi_39
	return ebx_37
l00412E04_thunk_fn00412E06:
	word32 ebp_51
	word32 edi_54
	word32 esi_56
	word32 ebx_52 = fn00412E06(edx, ebx_25, fp - 4<i32>, ecx, es, ds, out ebp_51, out esi_56, out edi_54)
	ebpOut = ebp_51
	esiOut = esi_56
	ediOut = edi_54
	return ebx_52
fn00412DE0_exit:


word32 fn00412E06(word32 edx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412DD4
//      fn00412DE0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00412E06_entry:
l00412E06:
l00412E06_thunk_fn00412E08:
	word32 ebp_18
	word32 edi_21
	word32 esi_23
	word32 ebx_19 = fn00412E08(edx, ebx, ebp, edi, es, ds, out ebp_18, out esi_23, out edi_21)
	ebpOut = ebp_18
	esiOut = esi_23
	ediOut = edi_21
	return ebx_19
fn00412E06_exit:


word32 fn00412E08(word32 edx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412DD4
//      fn00412DE0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412E08_entry:
	ptr32 fp
	struct <anonymous> tArg14
	struct <anonymous> tArg20
l00412E08:
	branch ebx <u 0x10<32> l00412E18
l00412E16:
l00412E18:
	word32 ebx_17 = Mem9[edx + 20<i32>:word32]
	word32 ecx_18 = edx
	branch ebx_17 <u 0x10<32> l00412E24
l00412E22:
	ecx_18 = Mem9[edx:word32]
l00412E24:
	word32 eax_26 = Mem9[edx + 16<i32>:word32] + ecx_18
	branch ebx_17 <u 0x10<32> l00412E30
l00412E2E:
	edx = Mem9[edx:word32]
l00412E30:
	Mem35[&tArg14:word32] = edx
	word32 edx_41 = Mem35[edi + 20<i32>:word32]
	Mem43[&tArg14 + 4<i32>:word32] = eax_26
	Mem47[&tArg20:word64] = Mem43[&tArg14:word64]
	word32 ecx_40 = edi
	branch edx_41 <u 0x10<32> l00412E58
l00412E56:
	ecx_40 = Mem48[edi:word32]
l00412E58:
	word32 eax_56 = Mem48[edi + 16<i32>:word32] + ecx_40
	word32 ecx_57 = edi
	branch edx_41 <u 0x10<32> l00412E66
l00412E64:
	ecx_57 = Mem48[edi:word32]
l00412E66:
	word32 edx_155
	word32 eax_74 = fn004160F0(&tArg20, &tArg14, ecx_57, eax_56, out edx_155)
	word32 esp_165 = fp
	word32 ecx_82 = Mem72[eax_74:word32]
	word32 eax_83 = Mem72[eax_74 + 4<i32>:word32]
	branch ecx_82 == eax_83 l00412EB1
l00412E7F:
	word32 esp_157 = <invalid>
	word32 ebx_242
	word32 edi_243
	edx_155 = fn004170C0(es, ds, ecx_82, eax_83, out ebx_242, out ebp, out edi_243)
	esp_165 = esp_157 + 0x24<32>
l00412EB1:
	word32 esp_171 = esp_165 + 4<i32>
	word32 edi_170 = Mem168[esp_165:word32]
	word32 esi_172 = Mem168[esp_171:word32]
	word32 ebx_174 = Mem168[esp_171 + 4<i32>:word32]
	word32 eax_244
	word32 ecx_245
	fn00427500(Mem168[esp_165 + 44<i32>:word32] ^ esp_171 + 8<i32>, edx_155, ebx_174, ebp, esi_172, edi_170, es, ds, Mem168[esp_171 + 4<i32>:word32], out eax_244, out ecx_245)
	ebpOut = Mem168[ebp:word32]
	esiOut = esi_172
	ediOut = edi_170
	return ebx_174
fn00412E08_exit:


word32 fn00412ED0(word32 ecx, word32 edx, selector es, selector ds, word32 dwArg24, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040FBC0
//      fn00410F60
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0024:[0..31]
// LiveOut: eax ebp ebx edx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00412ED0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc2C
	word32 dwLoc20
	word32 dwLoc18
l00412ED0:
	word32 esi_50
	word32 eax_18 = Mem15[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	_Lockit(&dwLoc18, 0<32>)
	Mem44[&dwLoc20:word32] = Mem40[0x0043B114<p32>:word32]
	word32 ecx_166 = &id
	word32 eax_45 = operator returntype(ecx_166)
	word32 ebp_169 = fp - 4<i32>
	word32 esp_180 = fp - 0x3C<32>
	word32 eax_47 = Mem44[ecx + 4<i32>:word32]
	branch eax_45 >=u Mem44[eax_47 + 12<i32>:word32] l00412F39
l00412F39:
	esi_50 = 0<32>
l00412F2D:
	ecx_166 = Mem44[eax_47 + 8<i32>:word32]
	esi_50 = Mem44[ecx_166 + eax_45 * 4<32>:word32]
	branch esi_50 != 0<32> l00412F93
l00412F37:
l00412F3B:
	branch Mem44[eax_47 + 20<i32>:byte] == 0<8> l00412F52
l00412F41:
	word32 eax_63 = _Getgloballocale(eax_18)
	branch eax_45 >=u Mem44[eax_63 + 12<i32>:word32] l00412F56
l00412F4C:
	esi_50 = Mem44[Mem44[eax_63 + 8<i32>:word32] + eax_45 * 4<32>:word32]
l00412F52:
	branch esi_50 != 0<32> l00412F93
l00412F56:
	branch Mem44[&dwLoc20:word32] != 0<32> l00412F93
l00412F5D:
	branch _Getcat(&dwLoc20, ecx, eax_18) == 0xFFFFFFFF<32> l00412FBA
l00412FBA:
	fn004013E0(&tLoc2C)
	CxxThrowException(&tLoc2C, 0x437AD8<32>)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 edx_132 = Mem131[ecx_115 + 16<i32>:word32]
	branch 0x7FFFFFFF<32> - edx_132 <u 1<32> l0041310E
l00412FFD_thunk_fn0041310E:
	word32 ebp_138
	word32 ebx_139
	word32 edx_142
	word32 esi_143
	word32 edi_326
	word32 eax_137 = fn0041310E(0x7FFFFFFF<32>, eax_45, dwArg24, out edx_142, out ebx_139, out ebp_138, out esi_143, out edi_326)
	edxOut = edx_142
	ebxOut = ebx_139
	ebpOut = ebp_138
	esiOut = esi_143
	return eax_137
l00412FFD_thunk_fn00413003:
	word32 ebp_149
	word32 ebx_150
	word32 esi_153
	word32 edx_155
	word32 edi_327
	word32 eax_148 = fn00413003(0x7FFFFFFF<32>, edx_132, ecx_115, fp + 20<i32>, eax_45, out edx_155, out ebx_150, out ebp_149, out esi_153, out edi_327)
	edxOut = edx_155
	ebxOut = ebx_150
	ebpOut = ebp_149
	esiOut = esi_153
	return eax_148
l00412F70:
	word32 esi_160 = Mem92[&dwLoc20:word32]
	ebp_169 = fn0042749E(ecx_166, ecx, esi_160, eax_45)
	word32 eax_176 = Mem164[esi_160:word32]
	call Mem164[eax_176 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_176,ecx:esi_160,edx:edx_183
		defs: edx:edx_183,esp:esp_180
	Mem187[0x0043B114<p32>:word32] = Mem164[ebp_169 - 28<i32>:word32]
l00412F93:
	~_Lockit(ebp_169 - 20<i32>)
	Mem195[fs:0x00000000<p32>:word32] = Mem192[ebp_169 - 12<i32>:word32]
	word32 esp_198 = esp_180 + 4<i32>
	word32 esi_201 = Mem195[esp_198 + 4<i32>:word32]
	word32 ebx_203 = Mem195[esp_198 + 8<i32>:word32]
	word32 eax_239
	word32 ecx_325
	fn00427500(Mem195[ebp_169 - 16<i32>:word32] ^ ebp_169, edx, ebx_203, ebp_169, esi_201, Mem195[esp_198:word32], es, ds, Mem195[esp_198 + 8<i32>:word32], out eax_239, out ecx_325)
	word32 ebp_248 = Mem195[ebp_169:word32]
	edxOut = edx
	ebxOut = ebx_203
	ebpOut = ebp_248
	esiOut = esi_201
	return eax_239
fn00412ED0_exit:


word32 fn00412FE0(word32 ecx, word32 ebp, word32 edi, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407D10
//      fn00408570
//      fn00409E70
//      fn00410120
//      fn004197A0
//      fn0041A350
// MayUse:  ebp:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00412FE0_entry:
	struct <anonymous> tLoc04
l00412FE0:
	Mem6[&tLoc04:word32] = ebp
	word32 edx_22 = Mem21[ecx + 16<i32>:word32]
	branch 0x7FFFFFFF<32> - edx_22 <u 1<32> l00412FFD_thunk_fn0041310E
l00412FFD_thunk_fn0041310E:
	word32 ebp_29
	word32 ebx_30
	word32 edi_32
	word32 edx_33
	word32 esi_34
	fn0041310E(0x7FFFFFFF<32>, edi, Mem24[&tLoc04 + 16<i32>:word32], out edx_33, out ebx_30, out ebp_29, out esi_34, out edi_32)
	ebxOut = ebx_30
	ebpOut = ebp_29
	esiOut = esi_34
	ediOut = edi_32
	return edx_33
l00412FFD_thunk_fn00413003:
	word32 ebp_40
	word32 ebx_41
	word32 edi_43
	word32 esi_44
	word32 edx_46
	fn00413003(0x7FFFFFFF<32>, edx_22, ecx, &tLoc04, edi, out edx_46, out ebx_41, out ebp_40, out esi_44, out edi_43)
	ebxOut = ebx_41
	ebpOut = ebp_40
	esiOut = esi_44
	ediOut = edi_43
	return edx_46
fn00412FE0_exit:


word32 fn00413003(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 dwArg00, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412ED0
//      fn00412FE0
// MayUse:  ebp:[0..31] ebx:[0..31] ecx:[0..31] edx:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: eax ebp ebx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00413003_entry:
	ptr32 fp
	word32 dwLoc08
	word32 dwArg04
	word32 dwArg08
l00413003:
	word32 esi_104 = Mem0[ebx + 20<i32>:word32]
	Mem11[ebp - 8<i32>:word32] = esi_104
	word32 edi_105 = edx + 1<i32> | 0xF<32>
	branch edi_105 <=u ecx l00413017
l00413017:
	branch esi_104 <=u ecx - (esi_104 >>u 1<32>) l00413028
l00413028:
	word32 eax_20 = (esi_104 >>u 1<32>) + esi_104
	branch edi_105 >=u eax_20 l0041302F
l0041302C_1:
	edi_105 = eax_20
l00413021:
	edi_105 = 0x7FFFFFFF<32>
l00413013:
	edi_105 = ecx
l0041302F:
	word32 esp_109
	word32 eax_29 = edi_105 + 1<32>
	word32 ecx_36 = -CONVERT(CONVERT(eax_29 <u 0<32>, bool, int8), byte, uint32) | eax_29
	branch ecx_36 <u 0x1000<32> l0041306F
l0041306F:
	branch ecx_36 == 0<32> l00413083
l00413083:
	esi_104 = 0<32>
l00413073:
	word32 ecx_257
	word32 eax_52 = fn00427511(ebx, esi_104, edi_105, dwLoc08, ecx_36, dwArg00, out ecx_257, out ebp)
	edx = Mem47[ebp - 4<i32>:word32]
	esi_104 = eax_52
l00413045:
	word32 eax_63 = ecx_36 + 35<i32>
	edx = 0xFFFFFFFF<32>
	branch ecx_36 + 35<i32> >u ecx_36 l00413050
l0041304D_1:
	eax_63 = 0xFFFFFFFF<32>
l00413050:
	word32 ecx_256
	word32 eax_77 = fn00427511(ebx, esi_104, edi_105, dwLoc08, eax_63, dwArg00, out ecx_256, out ebp)
	branch eax_77 == 0<32> l004130E8
l00413061:
	edx = Mem72[ebp - 4<i32>:word32]
	esi_104 = eax_77 + 35<i32> & 0xFFFFFFE0<32>
	Mem93[esi_104 - 4<i32>:word32] = eax_77
l00413085:
	Mem103[ebx + 20<i32>:word32] = edi_105
	Mem106[ebx + 16<i32>:word32] = edx + 1<i32>
	edi_105 = esi_104 + edx
	Mem107[ebp - 4<i32>:word32] = edi_105
	esp_109 = fp - 4<i32>
	branch Mem96[ebp - 8<i32>:word32] <u 0x10<32> l004130EE
l0041309B:
	word32 edi_112 = Mem110[ebx:word32]
	memcpy(esi_104, edi_112, edx)
	word32 ecx_118 = Mem116[ebp - 4<i32>:word32]
	Mem121[ecx_118:byte] = Mem116[ebp + 16<i32>:byte]
	Mem122[ecx_118 + 1<i32>:byte] = 0<8>
	branch Mem122[ebp - 8<i32>:word32] <u 0xFFF<32> l004130D1
l004130BF:
	edx = Mem122[edi_112 - 4<i32>:word32]
	edi_105 = edi_112 - edx
	branch edi_105 >u 0x23<32> l004130E8
l004130E8:
	_invalid_parameter_noinfo_noreturn()
	esp_109 = fp
l004130EE:
	word32 esp_135 = esp_109 - 4<i32>
	Mem138[esp_135:word32] = ebx
	Mem142[esp_135 - 4<i32>:word32] = esi_104
	memcpy(Mem142[esp_135 - 4<i32>:(ptr32 void)], Mem142[esp_135:(ptr32 void)], Mem142[esp_135 + 4<i32>:size_t])
	Mem151[edi_105:byte] = Mem142[ebp + 16<i32>:byte]
	Mem153[edi_105 + 1<i32>:byte] = 0<8>
	Mem154[ebx:word32] = esi_104
	word32 edi_155 = Mem154[esp_135 + 8<32>:word32]
	word32 esi_157 = Mem154[esp_135 + 0xC<32>:word32]
	word32 ebx_159 = Mem154[esp_135 + 0x10<32>:word32]
	word32 ebp_161 = Mem154[ebp:word32]
	edxOut = edx
	ebxOut = ebx_159
	ebpOut = ebp_161
	esiOut = esi_157
	ediOut = edi_155
	return <invalid>
l004130CF:
	edi_112 = edx
l004130D1:
	fn0042763F(edi_112)
	Mem176[ebx:word32] = esi_104
	word32 ebp_185 = Mem176[ebp:word32]
	edxOut = edx
	ebxOut = dwArg08
	ebpOut = ebp_185
	esiOut = dwArg04
	ediOut = dwArg00
	return <invalid>
fn00413003_exit:


word32 fn0041310E(word32 ecx, word32 edi, word32 dwArg24, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412ED0
//      fn00412FE0
// MayUse:  ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0024:[0..31]
// LiveOut: eax ebp ebx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn0041310E_entry:
	ptr32 fp
l0041310E:
	word32 ecx_7
	fn00403860(ecx, out ecx_7)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 edx_28 = Mem26[ecx_7 + 16<i32>:word32]
	branch 0x7FFFFFFF<32> - edx_28 <u dwArg24 l00413275
l0041313F_thunk_fn00413275:
	word32 ebp_37
	word32 ebx_38
	word32 edi_40
	word32 edx_41
	word32 esi_42
	word32 eax_36 = fn00413275(0x7FFFFFFF<32>, edi, dwArg24, out edx_41, out ebx_38, out ebp_37, out esi_42, out edi_40)
	edxOut = edx_41
	ebxOut = ebx_38
	ebpOut = ebp_37
	esiOut = esi_42
	ediOut = edi_40
	return eax_36
l0041313F_thunk_fn00413145:
	word32 ebp_48
	word32 ebx_49
	word32 edi_51
	word32 esi_52
	word32 edx_54
	word32 eax_47 = fn00413145(0x7FFFFFFF<32>, edx_28, ecx_7, fp + 28<i32>, dwArg24, edi, out edx_54, out ebx_49, out ebp_48, out esi_52, out edi_51)
	edxOut = edx_54
	ebxOut = ebx_49
	ebpOut = ebp_48
	esiOut = esi_52
	ediOut = edi_51
	return eax_47
fn0041310E_exit:


word32 fn00413120(word32 ecx, word32 ebp, word32 edi, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040EB40
//      fn00413B30
//      fn004175B0
//      fn00418C30
// MayUse:  ebp:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00413120_entry:
	struct <anonymous> tLoc04
l00413120:
	Mem6[&tLoc04:word32] = ebp
	word32 edx_20 = Mem18[ecx + 16<i32>:word32]
	word32 esi_19 = Mem18[&tLoc04 + 8<i32>:word32]
	branch 0x7FFFFFFF<32> - edx_20 <u esi_19 l0041313F_thunk_fn00413275
l0041313F_thunk_fn00413275:
	word32 ebp_30
	word32 ebx_31
	word32 edi_33
	word32 edx_34
	word32 esi_35
	fn00413275(0x7FFFFFFF<32>, edi, Mem25[&tLoc04 + 8<i32>:word32], out edx_34, out ebx_31, out ebp_30, out esi_35, out edi_33)
	ebxOut = ebx_31
	ebpOut = ebp_30
	esiOut = esi_35
	ediOut = edi_33
	return edx_34
l0041313F_thunk_fn00413145:
	word32 ebp_41
	word32 ebx_42
	word32 edi_44
	word32 esi_45
	word32 edx_47
	fn00413145(0x7FFFFFFF<32>, edx_20, ecx, &tLoc04, esi_19, edi, out edx_47, out ebx_42, out ebp_41, out esi_45, out edi_44)
	ebxOut = ebx_42
	ebpOut = ebp_41
	esiOut = esi_45
	ediOut = edi_44
	return edx_47
fn00413120_exit:


word32 fn00413145(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 dwArg00, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412ED0
//      fn00413120
// MayUse:  ebp:[0..31] ebx:[0..31] ecx:[0..31] edx:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: eax ebp ebx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00413145_entry:
	ptr32 fp
	word32 dwLoc08
	word32 dwArg04
	word32 dwArg08
l00413145:
	word32 eax_6 = edx + esi
	word32 esi_109 = Mem0[ebx + 20<i32>:word32]
	Mem12[ebp - 8<i32>:word32] = eax_6
	Mem14[ebp - 12<i32>:word32] = esi_109
	word32 edi_111 = eax_6 | 0xF<32>
	branch (eax_6 | 0xF<32>) <=u ecx l0041315E
l0041315E:
	branch esi_109 <=u ecx - (esi_109 >>u 1<32>) l0041316F
l0041316F:
	word32 eax_23 = (esi_109 >>u 1<32>) + esi_109
	branch (eax_6 | 0xF<32>) >=u eax_23 l00413176
l00413173_1:
	edi_111 = eax_23
l00413168:
	edi_111 = 0x7FFFFFFF<32>
l0041315A:
	edi_111 = ecx
l00413176:
	word32 esp_117
	word32 eax_32 = edi_111 + 1<32>
	word32 ecx_39 = -CONVERT(CONVERT(eax_32 <u 0<32>, bool, int8), byte, uint32) | eax_32
	branch ecx_39 <u 0x1000<32> l004131B6
l004131B6:
	branch ecx_39 == 0<32> l004131CA
l004131CA:
	esi_109 = 0<32>
l004131BA:
	word32 ecx_279
	word32 eax_55 = fn00427511(ebx, esi_109, edi_111, dwLoc08, ecx_39, dwArg00, out ecx_279, out ebp)
	edx = Mem50[ebp - 4<i32>:word32]
	esi_109 = eax_55
l0041318C:
	word32 eax_66 = ecx_39 + 35<i32>
	edx = 0xFFFFFFFF<32>
	branch ecx_39 + 35<i32> >u ecx_39 l00413197
l00413194_1:
	eax_66 = 0xFFFFFFFF<32>
l00413197:
	word32 ecx_278
	word32 eax_80 = fn00427511(ebx, esi_109, edi_111, dwLoc08, eax_66, dwArg00, out ecx_278, out ebp)
	branch eax_80 == 0<32> l00413246
l004131A8:
	edx = Mem75[ebp - 4<i32>:word32]
	esi_109 = eax_80 + 35<i32> & 0xFFFFFFE0<32>
	Mem96[esi_109 - 4<i32>:word32] = eax_80
l004131CC:
	Mem103[ebx + 16<i32>:word32] = Mem99[ebp - 8<i32>:word32]
	Mem105[ebp - 4<i32>:word32] = CONVERT(Mem103[ebp + 20<i32>:byte], byte, int32)
	word32 eax_106 = Mem105[ebp + 16<i32>:word32]
	Mem108[ebx + 20<i32>:word32] = edi_111
	edi_111 = esi_109 + edx
	Mem113[ebp - 16<i32>:word32] = edi_111
	Mem115[ebp - 8<i32>:word32] = eax_106 + edi_111
	esp_117 = fp - 4<i32>
	branch Mem113[ebp - 12<i32>:word32] <u 0x10<32> l0041324C
l004131F1:
	word32 edi_120 = Mem118[ebx:word32]
	memcpy(esi_109, edi_120, edx)
	memset(Mem131[ebp - 16<i32>:word32], Mem128[ebp - 4<i32>:word32], Mem124[ebp + 16<i32>:word32])
	word32 ecx_138 = Mem134[ebp - 12<i32>:word32]
	Mem140[Mem134[ebp - 8<i32>:word32]:byte] = 0<8>
	branch ecx_138 <u 0xFFF<32> l0041322F
l0041321D:
	edx = Mem140[edi_120 - 4<i32>:word32]
	edi_111 = edi_120 - edx
	branch edi_111 >u 0x23<32> l00413246
l00413246:
	_invalid_parameter_noinfo_noreturn()
	esp_117 = fp
l0041324C:
	word32 esp_151 = esp_117 - 4<i32>
	Mem154[esp_151:word32] = ebx
	Mem158[esp_151 - 4<i32>:word32] = esi_109
	memcpy(Mem158[esp_151 - 4<i32>:(ptr32 void)], Mem158[esp_151:(ptr32 void)], Mem158[esp_151 + 4<i32>:size_t])
	Mem164[esp_151 - 8<i32>:word32] = Mem158[ebp + 16<i32>:word32]
	Mem167[esp_151 - 12<i32>:word32] = Mem164[ebp - 4<i32>:word32]
	Mem171[esp_151 - 16<i32>:word32] = edi_111
	memset(Mem171[esp_151 - 16<i32>:(ptr32 void)], Mem171[esp_151 - 12<i32>:int32], Mem171[esp_151 - 8<i32>:size_t])
	Mem176[Mem171[ebp - 8<i32>:word32]:byte] = 0<8>
	word32 edi_178 = Mem176[esp_151 + 8<32>:word32]
	Mem180[ebx:word32] = esi_109
	word32 esi_181 = Mem180[esp_151 + 0xC<32>:word32]
	word32 ebx_183 = Mem180[esp_151 + 0x10<32>:word32]
	word32 ebp_185 = Mem180[ebp:word32]
	edxOut = edx
	ebxOut = ebx_183
	ebpOut = ebp_185
	esiOut = esi_181
	ediOut = edi_178
	return <invalid>
l0041322D:
	edi_120 = edx
l0041322F:
	fn0042763F(edi_120)
	Mem200[ebx:word32] = esi_109
	word32 ebp_209 = Mem200[ebp:word32]
	edxOut = edx
	ebxOut = dwArg08
	ebpOut = ebp_209
	esiOut = dwArg04
	ediOut = dwArg00
	return <invalid>
fn00413145_exit:


word32 fn00413275(word32 ecx, word32 edi, word32 dwArg24, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412ED0
//      fn00413120
// MayUse:  ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0024:[0..31]
// LiveOut: eax ebp ebx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top
// Preserved: esp
fn00413275_entry:
	ptr32 fp
l00413275:
	word32 ecx_7
	fn00403860(ecx, out ecx_7)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 edx_29 = Mem28[ecx_7 + 16<i32>:word32]
	branch 0x7FFFFFFF<32> - edx_29 <u dwArg24 l004133D4
l004132A5_thunk_fn004133D4:
	word32 ebp_39
	word32 edi_41
	word32 edx_42
	word32 esi_43
	fn004133D4(0x7FFFFFFF<32>, edx_29, fp + 28<i32>, dwArg24, edi, out edx_42, out ebp_39, out esi_43, out edi_41)
	edxOut = edx_42
	ebxOut = ecx_7
	ebpOut = ebp_39
	esiOut = esi_43
	ediOut = edi_41
	return eax_38
l004132A5_thunk_fn004132AB:
	word32 ebp_49
	word32 ebx_50
	word32 edi_52
	word32 esi_53
	word32 edx_55
	fn004132AB(0x7FFFFFFF<32>, edx_29, ecx_7, fp + 28<i32>, dwArg24, edi, out edx_55, out ebx_50, out ebp_49, out esi_53, out edi_52)
	edxOut = edx_55
	ebxOut = ebx_50
	ebpOut = ebp_49
	esiOut = esi_53
	ediOut = edi_52
	return eax_48
fn00413275_exit:


word32 fn00413280(word32 ecx, word32 ebp, word32 edi, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040EB40
//      fn00410CF0
//      fn00413B30
//      fn004175B0
//      fn00418C30
// MayUse:  ebp:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: ebp ebx ecx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00413280_entry:
	struct <anonymous> tLoc04
l00413280:
	Mem6[&tLoc04:word32] = ebp
	word32 edx_21 = Mem20[ecx + 16<i32>:word32]
	word32 esi_23 = Mem20[&tLoc04 + 8<i32>:word32]
	branch 0x7FFFFFFF<32> - edx_21 <u esi_23 l004132A5_thunk_fn004133D4
l004132A5_thunk_fn004133D4:
	word32 ebp_32
	word32 edi_34
	word32 edx_35
	word32 esi_36
	word32 ecx_33 = fn004133D4(0x7FFFFFFF<32>, edx_21, &tLoc04, esi_23, edi, out edx_35, out ebp_32, out esi_36, out edi_34)
	edxOut = edx_35
	ebxOut = ecx
	ebpOut = ebp_32
	esiOut = esi_36
	ediOut = edi_34
	return ecx_33
l004132A5_thunk_fn004132AB:
	word32 ebp_42
	word32 ebx_43
	word32 edi_45
	word32 esi_46
	word32 edx_48
	word32 ecx_44 = fn004132AB(0x7FFFFFFF<32>, edx_21, ecx, &tLoc04, esi_23, edi, out edx_48, out ebx_43, out ebp_42, out esi_46, out edi_45)
	edxOut = edx_48
	ebxOut = ebx_43
	ebpOut = ebp_42
	esiOut = esi_46
	ediOut = edi_45
	return ecx_44
fn00413280_exit:


word32 fn004132AB(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, word32 dwArg00, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412ED0
//      fn00413280
// MayUse:  ebp:[0..31] ebx:[0..31] ecx:[0..31] edx:[0..31] esi:[0..31] fs:[0..15] Stack +0000:[0..31]
// LiveOut: ebp ebx ecx edi edx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004132AB_entry:
	ptr32 fp
	word32 dwLoc08
	word32 dwArg04
	word32 dwArg08
l004132AB:
	word32 edi_107 = Mem0[ebx + 20<i32>:word32]
	word32 eax_9 = edx + esi
	Mem12[ebp - 8<i32>:word32] = eax_9
	Mem14[ebp - 12<i32>:word32] = edi_107
	word32 esi_109 = eax_9 | 0xF<32>
	branch (eax_9 | 0xF<32>) <=u ecx l004132C4
l004132C4:
	branch edi_107 <=u ecx - (edi_107 >>u 1<32>) l004132D5
l004132D5:
	word32 eax_23 = (edi_107 >>u 1<32>) + edi_107
	branch (eax_9 | 0xF<32>) >=u eax_23 l004132DC
l004132D9_1:
	esi_109 = eax_23
l004132CE:
	esi_109 = 0x7FFFFFFF<32>
l004132C0:
	esi_109 = ecx
l004132DC:
	word32 esp_115
	word32 eax_32 = esi_109 + 1<32>
	word32 ecx_142 = -CONVERT(CONVERT(eax_32 <u 0<32>, bool, int8), byte, uint32) | eax_32
	branch ecx_142 <u 0x1000<32> l0041331C
l0041331C:
	branch ecx_142 == 0<32> l00413330
l00413330:
	edi_107 = 0<32>
l00413320:
	word32 eax_55 = fn00427511(ebx, esi_109, edi_107, dwLoc08, ecx_142, dwArg00, out ecx_142, out ebp)
	edx = Mem50[ebp - 4<i32>:word32]
	edi_107 = eax_55
l004132F2:
	word32 eax_66 = ecx_142 + 35<i32>
	edx = 0xFFFFFFFF<32>
	branch ecx_142 + 35<i32> >u ecx_142 l004132FD
l004132FA_1:
	eax_66 = 0xFFFFFFFF<32>
l004132FD:
	word32 eax_80 = fn00427511(ebx, esi_109, edi_107, dwLoc08, eax_66, dwArg00, out ecx_142, out ebp)
	branch eax_80 == 0<32> l004133A5
l0041330E:
	edx = Mem75[ebp - 4<i32>:word32]
	edi_107 = eax_80 + 35<i32> & 0xFFFFFFE0<32>
	Mem96[edi_107 - 4<i32>:word32] = eax_80
l00413332:
	Mem103[ebx + 16<i32>:word32] = Mem99[ebp - 8<i32>:word32]
	word32 eax_104 = Mem103[ebp + 20<i32>:word32]
	Mem106[ebx + 20<i32>:word32] = esi_109
	esi_109 = edi_107 + edx
	Mem111[ebp - 8<i32>:word32] = esi_109
	Mem113[ebp - 4<i32>:word32] = eax_104 + esi_109
	esp_115 = fp - 4<i32>
	branch Mem111[ebp - 12<i32>:word32] <u 0x10<32> l004133AB
l00413350:
	word32 esi_118 = Mem116[ebx:word32]
	memcpy(edi_107, esi_118, edx)
	memcpy(Mem129[ebp - 8<i32>:word32], Mem126[ebp - 16<i32>:word32], Mem122[ebp + 20<i32>:word32])
	word32 ecx_136 = Mem132[ebp - 12<i32>:word32]
	Mem138[Mem132[ebp - 4<i32>:word32]:byte] = 0<8>
	branch ecx_136 <u 0xFFF<32> l0041338E
l0041337C:
	edx = Mem138[esi_118 - 4<i32>:word32]
	ecx_142 = ecx_136 + 0x24<32>
	esi_109 = esi_118 - edx
	branch esi_109 >u 0x23<32> l004133A5
l004133A5:
	_invalid_parameter_noinfo_noreturn()
	esp_115 = fp
l004133AB:
	word32 esp_149 = esp_115 - 4<i32>
	Mem152[esp_149:word32] = ebx
	Mem156[esp_149 - 4<i32>:word32] = edi_107
	memcpy(Mem156[esp_149 - 4<i32>:(ptr32 void)], Mem156[esp_149:(ptr32 void)], Mem156[esp_149 + 4<i32>:size_t])
	Mem162[esp_149 - 8<i32>:word32] = Mem156[ebp + 20<i32>:word32]
	Mem165[esp_149 - 12<i32>:word32] = Mem162[ebp - 16<i32>:word32]
	Mem169[esp_149 - 16<i32>:word32] = esi_109
	memcpy(Mem169[esp_149 - 16<i32>:(ptr32 void)], Mem169[esp_149 - 12<i32>:(ptr32 void)], Mem169[esp_149 - 8<i32>:size_t])
	Mem174[Mem169[ebp - 4<i32>:word32]:byte] = 0<8>
	Mem176[ebx:word32] = edi_107
	word32 edi_177 = Mem176[esp_149 + 8<32>:word32]
	word32 esi_179 = Mem176[esp_149 + 0xC<32>:word32]
	word32 ebx_181 = Mem176[esp_149 + 0x10<32>:word32]
	word32 ebp_183 = Mem176[ebp:word32]
	edxOut = edx
	ebxOut = ebx_181
	ebpOut = ebp_183
	esiOut = esi_179
	ediOut = edi_177
	return ecx_142
l0041338C:
	esi_118 = edx
l0041338E:
	word32 ecx_193 = fn0042763F(esi_118)
	Mem198[ebx:word32] = edi_107
	word32 ebp_207 = Mem198[ebp:word32]
	edxOut = edx
	ebxOut = dwArg08
	ebpOut = ebp_207
	esiOut = dwArg04
	ediOut = dwArg00
	return ecx_193
fn004132AB_exit:


word32 fn004133D4(word32 ecx, word32 edx, word32 ebp, word32 esi, word32 edi, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412ED0
//      fn00413280
// MayUse:  ebp:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp ecx edi edx esi
// Trashed: SCZO eax ebp ecx edi edx esi Top
// Preserved: esp
fn004133D4_entry:
l004133D4:
	word32 ecx_7
	fn00403860(ecx, out ecx_7)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 esp_8 = <invalid>
	Mem15[esp_8 - 4<i32>:word32] = ebp
	Mem19[esp_8 - 8<i32>:word32] = esi
	Mem22[esp_8 - 12<i32>:word32] = edi
	branch ecx_7 == edx l00413437
l004133EB_thunk_fn004133ED:
	word32 ebp_28
	word32 edi_30
	word32 esi_31
	word32 edx_34
	word32 ecx_29 = fn004133ED(ecx_7, edx, Mem22[esp_8 - 12<i32>:word32], Mem22[esp_8 - 8<i32>:word32], Mem22[esp_8 - 4<i32>:word32], out edx_34, out ebp_28, out esi_31, out edi_30)
	edxOut = edx_34
	ebpOut = ebp_28
	esiOut = esi_31
	ediOut = edi_30
	return ecx_29
l004133EB_thunk_fn004133ED:
	word32 ebp_39
	word32 edi_41
	word32 esi_42
	word32 edx_45
	word32 ecx_40 = fn004133ED(ecx_7, edx, Mem22[esp_8 - 12<i32>:word32], Mem22[esp_8 - 8<i32>:word32], Mem22[esp_8 - 4<i32>:word32], out edx_45, out ebp_39, out esi_42, out edi_41)
	edxOut = edx_45
	ebpOut = ebp_39
	esiOut = esi_42
	ediOut = edi_41
	return ecx_40
fn004133D4_exit:


word32 fn004133E0(word32 ecx, word32 edx, word32 ebp, word32 esi, word32 edi, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040EE50
//      fn00412310
//      fn00414630
// MayUse:  ebp:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] esi:[0..31]
// LiveOut: ebp edi esi
// Trashed: SCZO eax ebp ecx edi edx esi Top
// Preserved: esp
fn004133E0_entry:
l004133E0:
	branch ecx == edx l00413437_in_fn004133E0
l00413437_in_fn004133E0:
	esiOut = esi
	ediOut = edi
	return ebp
l004133EB_thunk_fn004133ED:
	word32 ebp_26
	word32 edi_28
	word32 esi_29
	word32 edx_58
	fn004133ED(ecx, edx, edi, esi, ebp, out edx_58, out ebp_26, out esi_29, out edi_28)
	esiOut = esi_29
	ediOut = edi_28
	return ebp_26
fn004133E0_exit:


word32 fn004133ED(word32 esi, word32 edi, word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004133D4
//      fn004133E0
// MayUse:  edi:[0..31] esi:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp ecx edi edx esi
// Trashed: SCZO eax ebp ecx edi edx esi esp Top
// Preserved:
fn004133ED_entry:
	ptr32 fp
	word32 ebp
	word32 edx
l004133ED:
l004133F0:
	word32 ecx_132 = Mem5[esi + 20<i32>:word32]
	branch ecx_132 <u 0x10<32> l0041341F
l004133F8:
	word32 eax_66 = Mem5[esi:word32]
	branch ecx_132 <u 0xFFF<32> l00413415
l00413403:
	edx = Mem5[eax_66 - 4<i32>:word32]
	branch eax_66 - edx >u 0x23<32> l0041343B
l0041343B:
	_invalid_parameter_noinfo_noreturn()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem34[ecx_132 + 0x24<32>:word32] = 0x00431834<p32>
	word32 ecx_133 = Mem34[dwArg04 + 4<i32>:word32]
	Mem36[ecx_132 + 0x28<32>:word32] = ecx_133
	word32 esp_29 = fp - 16<i32>
	branch ecx_133 == 0<32> l00413473
l0041346E:
	word32 eax_40 = Mem36[ecx_133:word32]
	call Mem36[eax_40 + 12<i32>:word32] (retsize: 4;)
		uses: eax:eax_40,edx:edx_46,Stack +0014:dwArg00,Stack +0018:dwArg04,Stack +001C:dwArg08
		defs: ecx:ecx_44,edx:edx_46,esp:esp_42
l00413473:
	Mem52[ecx_132 + 0x2C<32>:word32] = Mem36[dwArg04 + 8<i32>:word32]
	Mem54[ecx_132 + 0x30<32>:word32] = Mem52[dwArg04 + 12<i32>:word32]
	Mem56[ecx_132 + 0x34<32>:word32] = Mem54[dwArg04 + 16<i32>:word32]
	word32 edi_59 = Mem56[esp_29:word32]
	word32 esi_61 = Mem56[esp_29 + 4<i32>:word32]
	edxOut = edx
	ebpOut = ebp
	esiOut = esi_61
	ediOut = edi_59
	return ecx_133
l00413413:
	eax_66 = edx
l00413415:
	ecx_132 = fn0042763F(eax_66)
l0041341F:
	Mem79[esi + 16<i32>:word32] = 0<32>
	Mem80[esi + 20<i32>:word32] = 0xF<32>
	Mem81[esi:byte] = 0<8>
	esi = esi + 0x1C<32>
	branch esi != edi l004133F0
l00413437:
	edxOut = edx
	ebpOut = dwArg08
	esiOut = dwArg04
	ediOut = dwArg00
	return ecx_132
fn004133ED_exit:


word32 fn004135F0(word32 ecx, word32 dwArg04, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00414490
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: edi esi
// Trashed: SCZO eax ebx ecx edi esi Top xmm0
// Preserved: ebp esp
fn004135F0_entry:
	ptr32 fp
	selector fs
l004135F0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_29 = Mem27[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem35[fs:0<32>:word32] = fp - 16<i32>
	Mem41[ecx:word32] = 0x00431384<p32>
	Mem45[ecx + 4<i32>:word64] = 0<64>
	_std_exception_copy(dwArg04 + 4<i32>, ecx + 4<i32>, eax_29, ecx, ecx, eax_13, 0x42EA68<32>, 0xFFFFFFFF<32>)
	Mem54[ecx:word32] = 0x004324DC<p32>
	Mem57[ecx + 12<i32>:word32] = Mem54[dwArg04 + 12<i32>:word32]
	Mem59[ecx + 16<i32>:word32] = Mem57[dwArg04 + 16<i32>:word32]
	Mem62[ecx + 20<i32>:word32] = 0x00431834<p32>
	word32 ecx_63 = Mem62[dwArg04 + 24<i32>:word32]
	Mem65[ecx + 24<i32>:word32] = ecx_63
	word32 esp_55 = esp_49 + 8<32>
	branch ecx_63 == 0<32> l00413670
l0041366B:
	word32 eax_69 = Mem65[ecx_63:word32]
	call Mem65[eax_69 + 12<i32>:word32] (retsize: 4;)
		uses: eax:eax_69,ecx:ecx_63
		defs: esp:esp_70
l00413670:
	Mem79[ecx + 28<i32>:word32] = Mem65[dwArg04 + 28<i32>:word32]
	Mem81[ecx + 32<i32>:word32] = Mem79[dwArg04 + 32<i32>:word32]
	Mem83[ecx + 36<i32>:word32] = Mem81[dwArg04 + 36<i32>:word32]
	Mem86[ecx:word32] = 0x0043238C<p32>
	Mem87[ecx + 20<i32>:word32] = 0x004323B4<p32>
	Mem91[fs:0x00000000<p32>:word32] = eax_13
	word32 esp_94 = esp_55 + 4<i32>
	word32 esi_97 = Mem91[esp_94 + 4<i32>:word32]
	ediOut = Mem91[esp_94:word32]
	return esi_97
fn004135F0_exit:


void fn00413770(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004198E3
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx esi Top
// Preserved: ebp esp
fn00413770_entry:
	ptr32 fp
	selector fs
l00413770:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem24[fs:0<32>:word32] = fp - 16<i32>
	Mem27[ecx:word32] = 0x0043238C<p32>
	Mem28[ecx + 20<i32>:word32] = 0x00431834<p32>
	word32 ecx_30 = Mem29[ecx + 24<i32>:word32]
	branch ecx_30 == 0<32> l004137C2
l004137B0:
	word32 eax_35 = Mem29[Mem29[ecx_30:word32] + 16<i32>:word32]
	word32 eax_37
	call eax_35 (retsize: 4;)
		uses: eax:eax_35,ecx:ecx_30,Stack +0020:bArg04
		defs: eax:eax_37
	branch SLICE(eax_37, byte, 0) == 0<8> l004137C2
l004137BB:
	Mem45[ecx + 24<i32>:word32] = 0<32>
l004137C2:
	Mem48[ecx:word32] = 0x00431384<p32>
	_std_exception_destroy(ecx + 4<i32>)
	branch (bArg04 & 1<8>) == 0<8> l004137E6
l004137DB:
	Mem66[esp_56:word32] = 0x28<32>
	Mem68[esp_56 - 4<i32>:word32] = ecx
	fn0042763F(Mem68[esp_56 - 4<i32>:word32])
l004137E6:
	Mem78[fs:0x00000000<p32>:word32] = eax_13
	return
fn00413770_exit:


word32 fn00413980(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412310
// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: ebp ebx edi edx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00413980_entry:
	ptr32 fp
	selector fs
l00413980:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_116 = fp - 4<i32>
	word32 esp_107 = fp - 0x34<32>
	word32 edi_108 = dwArg0C
	word32 ebx_110 = dwArg04
	branch dwArg04 == dwArg08 l00413A12
l004139D5:
	word32 esp_47 = esp_107 - 4<i32>
	Mem49[esp_47:word32] = ebx_110
	Mem53[ebp_116 - 32<i32>:word32] = edi_108
	word32 ebp_57
	word32 edx_184
	fn004028D0(edi_108, edi_108, Mem53[esp_47:word32], out edx_184, out ebp_57)
	Mem67[ebp_57 - 4<i32>:byte] = 1<8>
	word32 esp_58 = <invalid>
	word32 esi_66 = ebx_110 + 36<i32>
	Mem70[esp_58:word32] = esi_66 - 12<i32>
	word32 edi_80
	word32 esi_82
	word32 ebp_83
	word32 ebx_78 = fn00418780(edi_108 + 24<i32>, esi_66, es, ds, Mem70[esp_58:word32], out ebp_83, out esi_82, out edi_80)
	word32 esp_85 = <invalid>
	Mem94[esp_85:word32] = esi_82
	Mem96[ebp_83 - 4<i32>:byte] = 2<8>
	fn004028D0(edi_80 + 36<i32>, edi_80, Mem96[esp_85:word32], out edx, out ebp_116)
	Mem109[ebp_116 - 4<i32>:byte] = 0<8>
	Mem111[ebp_116 - 24<i32>:word32] = edi_80 + 0x3C<32>
	word32 esp_100 = <invalid>
	esp_107 = esp_100 + 4<32>
	edi_108 = edi_80 + 0x3C<32>
	ebx_110 = ebx_78 + 0x3C<32>
	branch ebx_78 + 0x3C<32> != Mem111[ebp_116 + 12<i32>:word32] l004139D5
l00413A12:
	Mem120[fs:0x00000000<p32>:word32] = Mem117[ebp_116 - 12<i32>:word32]
	word32 esp_123 = esp_107 + 4<i32>
	word32 edi_124 = Mem120[esp_123:word32]
	word32 esi_126 = Mem120[esp_123 + 4<i32>:word32]
	word32 ebx_128 = Mem120[esp_123 + 8<i32>:word32]
	word32 eax_182
	word32 ecx_183
	fn00427500(Mem120[ebp_116 - 16<i32>:word32] ^ ebp_116, edx, ebx_128, ebp_116, esi_126, edi_124, es, ds, Mem120[esp_123 + 8<i32>:word32], out eax_182, out ecx_183)
	word32 ebp_155 = Mem120[ebp_116:word32]
	ebxOut = ebx_128
	ebpOut = ebp_155
	esiOut = esi_126
	ediOut = edi_124
	return edx
fn00413980_exit:


byte fn00413A40(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
// MayUse:  ecx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: ebp esp
fn00413A40_entry:
l00413A40:
	branch Mem10[ecx + 20<i32>:word32] <u 0x10<32> l00413A4C
l00413A4A:
l00413A4C:
	branch Mem10[ecx + 16<i32>:word32] != 0<32> l00413A5C
l00413A5C:
	return 0<8>
l00413A52:
	return 1<8>
fn00413A40_exit:


word32 fn00413A70(word32 ecx, word32 edi, word32 dwArg08, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
// MayUse:  ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0008:[0..31]
// LiveOut: eax ebp esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00413A70_entry:
	word32 ebp
	word32 esi
l00413A70:
	word32 esi_19 = dwArg08
	branch Mem18[dwArg08 + 20<i32>:word32] <u 0x10<32> l00413A86
l00413A84:
	esi_19 = Mem18[dwArg08:word32]
l00413A86:
	word32 edx_26 = Mem18[ecx + 16<i32>:word32]
	word32 ebx_29 = Mem18[dwArg08 + 16<i32>:word32]
	branch ebx_29 >u Mem18[ecx + 20<i32>:word32] - edx_26 l00413B0B
l00413B0B:
	word32 ebp_52
	word32 ebx_222
	word32 edx_221
	word32 eax_51 = fn00414760(ecx, edi, ebx_29, out edx_221, out ebx_222, out ebp_52)
	word32 esp_58 = <invalid>
	word32 esi_63 = Mem46[esp_58:word32]
	ebpOut = Mem46[ebp_52:word32]
	esiOut = esi_63
	return eax_51
l00413A95:
	Mem73[ecx + 16<i32>:word32] = edx_26 + ebx_29
	word32 edi_74 = ecx
	branch Mem18[ecx + 20<i32>:word32] <u 0x10<32> l00413AA6
l00413AA4:
	edi_74 = Mem73[ecx:word32]
l00413AA6:
	word32 dwArg08_166
	branch ebx_29 + esi_19 <=u edi_74 l00413ACA
l00413AAD:
	branch esi_19 >u edi_74 + edx_26 l00413ACA
l00413ACA:
	dwArg08_166 = ebx_29
l00413AB4:
	branch edi_74 >u esi_19 l00413AC1
l00413AC1:
	dwArg08_166 = edi_74 - esi_19
l00413AB8:
	dwArg08_166 = 0<32>
l00413ACD:
	memmove(edi_74 + ebx_29, edi_74, edx_26 + 1<i32>)
	memcpy(edi_74, esi_19, dwArg08_166)
	memcpy(edi_74 + dwArg08_166, dwArg08_166 + ebx_29 + esi_19, ebx_29 - dwArg08_166)
	ebpOut = ebp
	esiOut = esi
	return ecx
fn00413A70_exit:


word32 fn00413B30(word32 ecx, selector es, selector ds, ptr32 & esiOut, ptr32 & esOut, ptr32 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404080
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ds ebp es esi esp
// Trashed: SCZDOP ds eax ebp ebx ecx edi edx es esi esp Top xmm0
// Preserved:
fn00413B30_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc4C
l00413B30:
	Mem34[fs:0<32>:word32] = fp - 16<i32>
	word32 edx_46
	word32 eax_60
	word32 ebp_61
	word32 ebx_62
	word32 esi_65
	word32 edi_1550
	word32 edx_1549
	fn00402DD0(fn00415100(ecx, &tLoc4C, out edx_46), edx_46, es, ds, out eax_60, out edx_1549, out ebx_62, out ebp_61, out esi_65, out edi_1550)
	Mem76[ebp_61 - 60<i32>:word32] = eax_60
	Mem77[ebp_61 - 4<i32>:word32] = 1<32>
	word32 esp_102 = <invalid>
	word32 ecx_78 = Mem77[ebp_61 - 68<i32>:word32]
	branch ecx_78 == 0<32> l00413BA1
l00413B90:
	word32 edx_82 = Mem77[ecx_78:word32]
	word32 eax_84
	call Mem77[edx_82 + 8<i32>:word32] (retsize: 4;)
		uses: ecx:ecx_78,edx:edx_82
		defs: eax:eax_84,esp:esp_83
	branch eax_84 == 0<32> l00413BA1
l00413B99:
	word32 edx_92 = Mem77[eax_84:word32]
	Mem95[esp_102 - 4<i32>:word32] = 1<32>
	call Mem95[edx_92:word32] (retsize: 4;)
		uses: ecx:eax_84,edx:edx_92
		defs: esp:esp_96
l00413BA1:
	word32 esp_103 = esp_102 - 4<i32>
	Mem104[esp_103:word32] = 0x25<32>
	Mem108[ebp_61 - 4<i32>:word32] = 0xFFFFFFFF<32>
	byte al_109 = widen(eax_60, Mem108[esp_103:charconst ])
	Mem116[ebp_61 - 20<i32>:byte] = Mem108[ebx_62 + 68<i32>:byte]
	Mem120[esp_103:word32] = Mem116[ebp_61 - 20<i32>:word32]
	Mem123[ebp_61 - 34<i32>:byte] = al_109
	Mem126[esp_103 - 4<i32>:word32] = Mem123[ebp_61 - 60<i32>:word32]
	Mem127[ebp_61 - 21<i32>:byte] = 1<8>
	Mem128[ebp_61 - 56<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_144 = <invalid>
	word32 ebx_136
	selector ds_1075
	selector es_1082
	Mem156[esp_144 + 4<32>:word32] = fn004154B0(esi_65, al_109, ebx_62, esi_65, 0xFFFFFFFF<32>, es, ds, Mem128[esp_103 - 4<i32>:word32], Mem128[esp_103:byte], out ebx_136, out es_1082, out ds_1075)
	word32 esi_1083
	word32 ebp_1077 = fn00415200(ebx_136, es_1082, ds_1075, out esi_1083)
	Mem174[ebp_1077 - 44<i32>:word32] = 0<32>
	Mem176[ebp_1077 - 28<i32>:word32] = 0<32>
	Mem180[ebp_1077 - 33<i32>:byte] = 0<8>
	Mem181[ebp_1077 - 40<i32>:word32] = 0<32>
	word32 esp_164 = <invalid>
	word32 esp_1090 = esp_164 + 4<32>
	word32 edx_1099 = 0<32>
l00413C00:
	word32 edi_184 = Mem183[esi_1083 + 20<i32>:word32]
	word32 ebx_185 = esi_1083
	branch edi_184 <u 0x10<32> l00413C0C
l00413C0A:
	ebx_185 = Mem183[esi_1083:word32]
l00413C0C:
	word32 eax_191 = Mem183[esi_1083 + 16<i32>:word32]
	branch edx_1099 >=u eax_191 l00413EC2
l00413C17:
	word32 esp_199 = esp_1090 - 4<i32>
	Mem200[esp_199:word32] = eax_191 - edx_1099
	Mem205[esp_199 - 4<i32>:word32] = CONVERT(Mem200[ebp_1077 - 34<i32>:byte], byte, int32)
	Mem209[esp_199 - 8<i32>:word32] = ebx_185 + edx_1099
	word32 eax_210 = memchr(Mem209[esp_199 - 8<i32>:(ptr32 void)], Mem209[esp_199 - 4<i32>:int32], Mem209[esp_199:size_t])
	word32 esp_1006 = esp_199 + 4<32>
	branch eax_210 == 0<32> l00413EBF
l00413C35:
	word32 ecx_216 = eax_210 - ebx_185
	Mem217[ebp_1077 - 20<i32>:word32] = ecx_216
	branch ecx_216 == 0xFFFFFFFF<32> l00413EBF
l00413EBF:
	eax_191 = Mem221[esi_1083 + 16<i32>:word32]
l00413EC2:
	word32 esp_229 = esp_1090
	word32 ebx_226 = Mem225[ebp_1077 - 40<i32>:word32]
	branch ebx_226 == Mem225[ebp_1077 - 44<i32>:word32] l00413EE8
l00413ECA:
	wassert(0x431F60<32>, 0x431E80<32>, 0x1D3<32>)
	eax_191 = Mem236[esi_1083 + 16<i32>:word32]
	esp_229 = esp_273 + 0xC<32>
	edi_184 = Mem236[esi_1083 + 20<i32>:word32]
l00413EE8:
	word32 ecx_295
	branch ebx_226 != 0<32> l00413EF4
l00413EF4:
	ecx_295 = ebx_226 * 0x78<32> + 0xFFFFFFA4<32> + Mem288[Mem288[ebp_1077 - 32<i32>:word32]:word32]
	eax_191 = Mem288[esi_1083 + 16<i32>:word32]
l00413EEC:
	ecx_295 = Mem288[ebp_1077 - 32<i32>:word32] + 0x2C<32>
l00413F0C:
	word32 edx_303 = esi_1083
	branch edi_184 <u 0x10<32> l00413F15
l00413F13:
	edx_303 = Mem288[esi_1083:word32]
l00413F15:
	word32 eax_315 = eax_191 + edx_303
	branch edi_184 <u 0x10<32> l00413F1E
l00413F1C:
	esi_1083 = Mem288[esi_1083:word32]
l00413F1E:
	word32 edi_330 = Mem288[ecx_295 + 20<i32>:word32]
	word32 edx_332 = Mem288[ebp_1077 - 28<i32>:word32] + esi_1083
	word32 esi_333 = ecx_295
	branch edi_330 <u 0x10<32> l00413F2F
l00413F2D:
	esi_333 = Mem288[ecx_295:word32]
l00413F2F:
	word32 ebx_341 = Mem288[ecx_295 + 16<i32>:word32] + esi_333
	word32 esi_342 = ecx_295
	branch edi_330 <u 0x10<32> l00413F3D
l00413F3B:
	esi_342 = Mem288[ecx_295:word32]
l00413F3D:
	word32 edi_359
	word32 esi_350 = esi_342 + Mem288[ecx_295 + 16<i32>:word32]
	Mem355[ebp_1077 - 52<i32>:word32] = ecx_295
	word32 ebx_352 = ebx_341 - esi_350
	branch edi_330 <u 0x10<32> l00413F4E
l00413F4E:
	edi_359 = Mem355[ebp_1077 - 52<i32>:word32]
l00413F4A:
	edi_359 = Mem355[ecx_295:word32]
l00413F51:
	word32 esp_380 = esp_229 - 4<i32>
	Mem381[esp_380:word32] = eax_315 - edx_332
	Mem383[esp_380 - 4<i32>:word32] = edx_332
	Mem386[esp_380 - 8<i32>:word32] = ebx_352
	word32 esi_371 = esi_350 - edi_359
	Mem388[esp_380 - 12<i32>:word32] = esi_371
	word32 ebp_398
	word32 esi_1551
	fn004167E0(ecx_295, esi_371, edi_359, Mem388[esp_380 - 12<i32>:word32], Mem388[esp_380 - 8<i32>:word32], Mem388[esp_380 - 4<i32>:word32], Mem388[esp_380:word32], out ebp_398, out esi_1551)
	word32 edi_412 = Mem388[ebp_398 - 56<i32>:word32]
	branch Mem388[ebp_398 - 21<i32>:byte] != 0<8> l00413F9C
l00413F67:
	word32 ebx_414 = Mem388[ebp_398 - 32<i32>:word32]
	branch edi_412 < 0<32> l00413F78
l00413F6E:
	branch (Mem388[ebx_414 + 68<i32>:byte] & 1<8>) != 0<8> l00414098
l00414098:
	word32 eax_426 = fn00403F80(ebp_398 - 0xD4<32>, edi_412, 0<32>)
	Mem430[ebp_398 - 4<i32>:word32] = 2<32>
	word32 ecx_469
	word32 edi_1557
	word32 esi_1556
	word32 ebp_1555
	word32 edx_1553
	word32 ebx_1554
	fn00411520(eax_426, es_1082, ds_1075, out ecx_469, out edx_1553, out ebx_1554, out ebp_1555, out esi_1556, out edi_1557)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem501[fs:0<32>:word32] = fp + 0x60<32>
	word32 edi_506 = Mem504[ecx_469:word32]
	word32 esi_507 = Mem504[ecx_469 + 4<i32>:word32] - edi_506
	word32 edx_512 = SLICE(esi_507 *s64 0x88888889<32>, word32, 32) + esi_507
	word32 esi_516 = (edx_512 >> 6<32> >>u 0x1F<32>) + (edx_512 >> 6<32>)
	branch esi_516 != 0<32> l00414126
l00414110_thunk_fn00414126:
	word32 ebp_520
	word32 esi_525
	fn00414126(ecx_469, fp + 0x6C<32>, esi_516, edi_506, es_1082, ds_1075, out ebp_520, out esi_525)
	esiOut = esi_525
	esOut = <invalid>
	dsOut = <invalid>
	return ebp_520
l00414110_thunk_fn00414112:
	word32 ebp_535
	word32 esi_540
	fn00414112(ecx_469, fp + 0x6C<32>, esi_516, edi_506, es_1082, ds_1075, out ebp_535, out esi_540)
	esiOut = esi_540
	esOut = <invalid>
	dsOut = <invalid>
	return ebp_535
l00413F78:
	word32 eax_550 = Mem388[ebp_398 - 44<i32>:word32]
	word32 ecx_551 = 0<32>
	branch eax_550 <= 0<32> l00413F99
l00413F81:
	word32 edx_554 = 0<32>
	word32 esi_557 = eax_550
l00413F85:
	word32 eax_560 = Mem559[ebx_414:word32]
	branch Mem559[edx_554 + eax_560:word32] != 0xFFFFFFFF<32> l00413F91
l00413F8D:
	Mem565[edx_554 + eax_560:word32] = ecx_551
	ecx_551 = ecx_551 + 1<32>
l00413F91:
	edx_554 = edx_554 + 0x78<32>
	esi_557 = esi_557 - 1<32>
	branch esi_557 != 0<32> l00413F85
l00413F99:
l00413F9C:
	byte al_593 = widen(Mem582[ebp_398 - 60<i32>:word32], ' ')
	Mem596[ebp_398 - 0xC0<32>:word32] = 0xFFFFFFFF<32>
	Mem597[ebp_398 - 0xAC<32>:word32] = 0<32>
	Mem598[ebp_398 - 0xA8<32>:word32] = 0xF<32>
	Mem599[ebp_398 - 0xBC<32>:byte] = 0<8>
	Mem600[ebp_398 - 0x94<32>:word32] = 0<32>
	Mem601[ebp_398 - 0x90<32>:word32] = 0xF<32>
	Mem602[ebp_398 - 0xA4<32>:byte] = 0<8>
	Mem603[ebp_398 - 104<i32>:byte] = 0<8>
	Mem605[ebp_398 - 0x88<32>:word64] = __movlp<real64[2],real64[1]>(0<128>)
	Mem606[ebp_398 - 128<i32>:word32] = 6<32>
	Mem607[ebp_398 - 124<i32>:word32] = 0<32>
	Mem608[ebp_398 - 120<i32>:byte] = al_593
	Mem609[ebp_398 - 116<i32>:word32] = 0x201<32>
	Mem610[ebp_398 - 108<i32>:word32] = 0<32>
	Mem611[ebp_398 - 112<i32>:word32] = 0<32>
	Mem612[ebp_398 - 88<i32>:word32] = 0xFFFFFFFF<32>
	Mem613[ebp_398 - 84<i32>:word32] = 0x7FFFFFFF<32>
	Mem614[ebp_398 - 80<i32>:word32] = 0<32>
	Mem616[ebp_398 - 4<i32>:word32] = 3<32>
	word32 ebx_617 = Mem616[ebp_398 - 32<i32>:word32]
	word32 ebp_659
	word32 edi_662
	word32 ebx_661 = fn00416170(ebx_617, ebx_617, es_1082, ds_1075, Mem622[ebp_398 - 44<i32>:word32], ebp_398 - 0xC0<32>, out ebp_659, out edi_662)
	word32 ebp_676
	word32 edx_677
	word32 esi_1552
	fn004148B0(ebp_659 - 0xC0<32>, out edx_677, out ebp_676, out esi_1552)
	word32 esp_660 = <invalid>
	branch Mem625[ebp_676 - 33<i32>:byte] == 0<8> l00414062
l0041405E:
	Mem685[ebx_661 + 28<i32>:word32] = Mem625[ebx_661 + 28<i32>:word32] | 4<32>
l00414062:
	Mem694[ebx_661 + 36<i32>:word32] = edi_662 + 1<i32>
	branch Mem689[ebp_676 - 21<i32>:byte] == 0<8> l00414074
l00414074:
	Mem697[ebx_661 + 28<i32>:word32] = Mem694[ebx_661 + 28<i32>:word32] & 0xFFFFFFFE<32>
l0041406E:
	Mem701[ebx_661 + 28<i32>:word32] = Mem694[ebx_661 + 28<i32>:word32] | 1<32>
l00414078:
	Mem711[fs:0x00000000<p32>:word32] = Mem707[ebp_676 - 12<i32>:word32]
	word32 esi_718 = Mem711[esp_660 + 0x14<32>:word32]
	word32 ecx_1559
	word32 eax_1558
	fn00427500(Mem711[ebp_676 - 16<i32>:word32] ^ ebp_676, edx_677, Mem711[esp_660 + 0x18<32>:word32], ebp_676, esi_718, Mem711[esp_660 + 0x10<32>:word32], es_1082, ds_1075, Mem711[esp_660 + 0x18<32>:word32], out eax_1558, out ecx_1559)
	word32 ebp_747 = Mem711[ebp_676:word32]
	esiOut = esi_718
	esOut = <invalid>
	dsOut = <invalid>
	return ebp_747
fn00413B30_exit:
l00413C43:
	word32 ebx_760
	word32 eax_749 = Mem217[ebp_1077 - 40<i32>:word32]
	branch eax_749 != 0<32> l00413C52
l00413C52:
	ebx_760 = Mem217[Mem217[ebp_1077 - 32<i32>:word32]:word32] + 0xFFFFFFA4<32> + eax_749 * 0x78<32>
	ecx_216 = Mem217[ebp_1077 - 20<i32>:word32]
l00413C4A:
	ebx_760 = Mem217[ebp_1077 - 32<i32>:word32] + 0x2C<32>
l00413C67:
	word32 eax_766 = esi_1083
	branch edi_184 <u 0x10<32> l00413C70
l00413C6E:
	eax_766 = Mem217[esi_1083:word32]
l00413C70:
	word32 edx_773 = esi_1083
	branch edi_184 <u 0x10<32> l00413C76
l00413C74:
	edx_773 = Mem217[esi_1083:word32]
l00413C76:
	branch Mem217[ecx_216 + 1<i32> + eax_766:byte] != Mem217[ecx_216 + edx_773:byte] l00413CE8
l00413CE8:
	word32 eax_790 = Mem217[ebp_1077 - 32<i32>:word32]
	word32 ecx_792 = Mem217[eax_790 + 4<i32>:word32] - Mem217[eax_790:word32]
	word32 edx_796 = SLICE(ecx_792 *s64 0x88888889<32>, word32, 32) + ecx_792
	word32 ecx_797 = Mem217[ebp_1077 - 40<i32>:word32]
	branch ecx_797 <u ((edx_796 >> 6<32>) >>u 0x1F<32>) + (edx_796 >> 6<32>) l00413D29
l00413D0A:
	branch ecx_797 == 0<32> l00413D29
l00413D0E:
	wassert(0x431ED8<32>, 0x431E80<32>, 0x1B9<32>)
	edi_184 = Mem815[esi_1083 + 20<i32>:word32]
	esp_1006 = esp_843 + 0xC<32>
l00413D29:
	word32 eax_854 = Mem853[ebp_1077 - 20<i32>:word32]
	word32 edx_855 = Mem853[ebp_1077 - 28<i32>:word32]
	branch eax_854 == edx_855 l00413D93
l00413D33:
	word32 ecx_859 = esi_1083
	branch edi_184 <u 0x10<32> l00413D3C
l00413D3A:
	ecx_859 = Mem853[esi_1083:word32]
l00413D3C:
	word32 eax_866 = eax_854 + ecx_859
	word32 ecx_868 = esi_1083
	branch edi_184 <u 0x10<32> l00413D47
l00413D45:
	ecx_868 = Mem853[esi_1083:word32]
l00413D47:
	word32 edi_878 = Mem853[ebx_760 + 20<i32>:word32]
	word32 ecx_882 = ecx_868 + edx_855
	word32 edx_883 = ebx_760
	branch edi_878 <u 0x10<32> l00413D55
l00413D53:
	edx_883 = Mem853[ebx_760:word32]
l00413D55:
	Mem894[ebp_1077 - 28<i32>:word32] = edx_883 + Mem853[ebx_760 + 16<i32>:word32]
	word32 edx_895 = ebx_760
	branch edi_878 <u 0x10<32> l00413D64
l00413D62:
	edx_895 = Mem894[ebx_760:word32]
l00413D64:
	word32 edi_911
	word32 edx_903 = edx_895 + Mem894[ebx_760 + 16<i32>:word32]
	Mem906[ebp_1077 - 28<i32>:word32] = Mem894[ebp_1077 - 28<i32>:word32] - edx_903
	Mem907[ebp_1077 - 48<i32>:word32] = ebx_760
	branch edi_878 <u 0x10<32> l00413D76
l00413D76:
	edi_911 = Mem907[ebp_1077 - 48<i32>:word32]
l00413D72:
	edi_911 = Mem907[ebx_760:word32]
l00413D79:
	word32 esp_931 = esp_1006 - 4<i32>
	Mem932[esp_931:word32] = eax_866 - ecx_882
	Mem934[esp_931 - 4<i32>:word32] = ecx_882
	Mem938[esp_931 - 8<i32>:word32] = Mem934[ebp_1077 - 28<i32>:word32]
	Mem942[esp_931 - 12<i32>:word32] = edx_903 - edi_911
	fn004167E0(ebx_760, esi_1083, edi_911, Mem942[esp_931 - 12<i32>:word32], Mem942[esp_931 - 8<i32>:word32], Mem942[esp_931 - 4<i32>:word32], Mem942[esp_931:word32], out ebp_1077, out esi_1083)
	eax_854 = Mem942[ebp_1077 - 20<i32>:word32]
	edi_184 = Mem942[esi_1083 + 20<i32>:word32]
	Mem969[ebp_1077 - 28<i32>:word32] = eax_854
	word32 esp_961 = <invalid>
	esp_1006 = esp_961 + 8<32>
l00413D93:
	word32 ecx_971 = eax_854 + 1<i32>
	Mem975[ebp_1077 - 48<i32>:word32] = ecx_971
	word32 eax_973 = esi_1083
	branch edi_184 <u 0x10<32> l00413DA2
l00413DA0:
	eax_973 = Mem975[esi_1083:word32]
l00413DA2:
	word32 ecx_986 = Mem975[ebp_1077 - 32<i32>:word32]
	word32 ebx_988 = (Mem975[ebp_1077 - 40<i32>:word32] << 4<32>) - Mem975[ebp_1077 - 40<i32>:word32]
	word32 edx_990 = Mem975[ecx_986:word32]
	Mem991[ebp_1077 - 20<i32>:word32] = eax_973 + ecx_971
	Mem996[ebp_1077 - 64<i32>:byte] = Mem991[ecx_986 + 68<i32>:byte]
	word32 edx_992 = edx_990 + (ebx_988 << 3<32>)
	word32 ecx_1000 = esi_1083
	branch edi_184 <u 0x10<32> l00413DC9
l00413DC7:
	ecx_1000 = Mem996[esi_1083:word32]
l00413DC9:
	word32 esp_1007 = esp_1006 - 4<i32>
	Mem1008[esp_1007:word32] = Mem996[ebp_1077 - 64<i32>:word32]
	word32 eax_1010 = Mem1008[esi_1083 + 16<i32>:word32]
	Mem1013[esp_1007 - 4<i32>:word32] = Mem1008[ebp_1077 - 48<i32>:word32]
	Mem1020[esp_1007 - 8<i32>:word32] = Mem1013[ebp_1077 - 60<i32>:word32]
	Mem1021[ebp_1077 - 52<i32>:word32] = eax_1010 + ecx_1000
	Mem1024[esp_1007 - 12<i32>:word32] = edx_992
	word32 esp_1084 = <invalid>
	word32 ebx_1078
	byte al_1102 = fn00415610(ebp_1077 - 20<i32>, ebp_1077 - 52<i32>, ebx_988 << 3<32>, ebp_1077, esi_1083, es_1082, ds_1075, out ebx_1078, out ebp_1077, out esi_1083, out es_1082, out ds_1075)
	esp_1090 = esp_1084 + 0x10<32>
	word32 ecx_1091 = esi_1083
	branch Mem1024[esi_1083 + 20<i32>:word32] <u 0x10<32> l00413DF3
l00413DF1:
	ecx_1091 = Mem1024[esi_1083:word32]
l00413DF3:
	edx_1099 = Mem1024[ebp_1077 - 20<i32>:word32] - ecx_1091
	Mem1100[ebp_1077 - 52<i32>:word32] = edx_1099
	branch al_1102 == 0<8> l00413C00
l00413E03:
	word32 ecx_1106 = Mem1100[ebp_1077 - 32<i32>:word32]
	Mem1107[ebp_1077 - 28<i32>:word32] = edx_1099
	word32 edi_1110 = Mem1107[ecx_1106:word32] + ebx_1078
	word32 eax_1111 = Mem1107[edi_1110 + 112<i32>:word32]
	branch (SLICE(eax_1111, byte, 0) & 1<8>) == 0<8> l00413E63
l00413E14:
	word32 ecx_1116 = Mem1107[edi_1110 + 76<i32>:word32]
	branch (SLICE(ecx_1116, byte, 0) & 0x40<8>) == 0<8> l00413E47
l00413E47:
	Mem1122[edi_1110 + 72<i32>:byte] = 0x30<8>
	Mem1127[edi_1110 + 76<i32>:word32] = ecx_1116 & 0xFFFFFF3F<32> | 0x100<32>
	eax_1111 = eax_1111 & 0xFFFFFFFD<32>
l00413E1C:
	branch (ecx_1116 & 0x180<32>) == 0<32> l00413E42
l00413E24:
	wassert(0x4320C0<32>, 0x432068<32>, 0xB4<32>)
	eax_1111 = Mem1137[edi_1110 + 112<i32>:word32]
	esp_1090 = esp_1155 + 0xC<32>
	edx_1099 = Mem1137[ebp_1077 - 52<i32>:word32]
l00413E42:
	eax_1111 = eax_1111 & 0xFFFFFFFE<32>
l00413E5D:
	ecx_1106 = Mem1171[ebp_1077 - 32<i32>:word32]
	Mem1177[edi_1110 + 112<i32>:word32] = eax_1111
l00413E63:
	branch (SLICE(eax_1111, byte, 0) & 2<8>) == 0<8> l00413E73
l00413E67:
	branch (Mem1184[edi_1110 + 76<i32>:byte] & 0x20<8>) == 0<8> l00413E73
l00413E6D:
	Mem1195[edi_1110 + 112<i32>:word32] = eax_1111 & 0xFFFFFFFD<32>
l00413E73:
	word32 eax_1204 = Mem1198[ebx_1078 + Mem1198[ecx_1106:word32]:word32]
	branch eax_1204 == 0xFFFFFFFD<32> l00413C00
l00413E81:
	branch eax_1204 != 0xFFFFFFFF<32> l00413E95
l00413E95:
	branch eax_1204 != 0xFFFFFFFE<32> l00413EA9
l00413EA9:
	word32 ecx_1213 = Mem1198[ebp_1077 - 56<i32>:word32]
	branch eax_1204 <= ecx_1213 l00413EB1
l00413EAE_1:
	ecx_1213 = eax_1204
l00413EB1:
	Mem1220[ebp_1077 - 44<i32>:word32] = Mem1198[ebp_1077 - 44<i32>:word32] + 1<32>
	Mem1222[ebp_1077 - 40<i32>:word32] = Mem1220[ebp_1077 - 40<i32>:word32] + 1<32>
	Mem1225[ebp_1077 - 56<i32>:word32] = ecx_1213
l00413E9A:
	Mem1227[ebp_1077 - 44<i32>:word32] = Mem1198[ebp_1077 - 44<i32>:word32] + 1<32>
	Mem1229[ebp_1077 - 40<i32>:word32] = Mem1227[ebp_1077 - 40<i32>:word32] + 1<32>
	Mem1231[ebp_1077 - 33<i32>:byte] = 1<8>
l00413E86:
	Mem1233[ebp_1077 - 44<i32>:word32] = Mem1198[ebp_1077 - 44<i32>:word32] + 1<32>
	Mem1235[ebp_1077 - 40<i32>:word32] = Mem1233[ebp_1077 - 40<i32>:word32] + 1<32>
	Mem1237[ebp_1077 - 21<i32>:byte] = 0<8>
l00413C7F:
	word32 eax_1238 = esi_1083
	branch edi_184 <u 0x10<32> l00413C88
l00413C86:
	eax_1238 = Mem217[esi_1083:word32]
l00413C88:
	word32 eax_1245 = eax_1238 + (ecx_216 + 1<32>)
	word32 ecx_1247 = esi_1083
	branch edi_184 <u 0x10<32> l00413C94
l00413C92:
	ecx_1247 = Mem217[esi_1083:word32]
l00413C94:
	word32 edi_1259 = Mem217[ebx_760 + 20<i32>:word32]
	word32 edx_1261 = Mem217[ebp_1077 - 28<i32>:word32] + ecx_1247
	word32 ecx_1262 = ebx_760
	branch edi_1259 <u 0x10<32> l00413CA5
l00413CA3:
	ecx_1262 = Mem217[ebx_760:word32]
l00413CA5:
	Mem1271[ebp_1077 - 28<i32>:word32] = ecx_1262 + Mem217[ebx_760 + 16<i32>:word32]
	word32 ecx_1272 = ebx_760
	branch edi_1259 <u 0x10<32> l00413CB4
l00413CB2:
	ecx_1272 = Mem1271[ebx_760:word32]
l00413CB4:
	word32 edi_1288
	word32 ecx_1280 = ecx_1272 + Mem1271[ebx_760 + 16<i32>:word32]
	Mem1283[ebp_1077 - 28<i32>:word32] = Mem1271[ebp_1077 - 28<i32>:word32] - ecx_1280
	Mem1284[ebp_1077 - 48<i32>:word32] = ebx_760
	branch edi_1259 <u 0x10<32> l00413CC6
l00413CC6:
	edi_1288 = Mem1284[ebp_1077 - 48<i32>:word32]
l00413CC2:
	edi_1288 = Mem1284[ebx_760:word32]
l00413CC9:
	Mem1308[esp_199:word32] = eax_1245 - edx_1261
	Mem1310[esp_199 - 4<i32>:word32] = edx_1261
	Mem1314[esp_199 - 8<i32>:word32] = Mem1310[ebp_1077 - 28<i32>:word32]
	Mem1316[esp_199 - 12<i32>:word32] = ecx_1280 - edi_1288
	fn004167E0(ebx_760, esi_1083, edi_1288, Mem1316[esp_199 - 12<i32>:word32], Mem1316[esp_199 - 8<i32>:word32], Mem1316[esp_199 - 4<i32>:word32], Mem1316[esp_199:word32], out ebp_1077, out esi_1083)
	word32 edx_1342 = Mem1316[ebp_1077 - 20<i32>:word32]
	Mem1345[ebp_1077 - 28<i32>:word32] = edx_1342 + 2<32>
	word32 esp_1336 = <invalid>
	esp_1090 = esp_1336 + 8<32>
	edx_1099 = edx_1342 + 2<32>


word32 fn004140C0(word32 ecx, selector es, selector ds, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00411D30
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn004140C0_entry:
	ptr32 fp
	selector fs
l004140C0:
	Mem29[fs:0<32>:word32] = fp - 16<i32>
	word32 edi_35 = Mem33[ecx:word32]
	word32 esi_36 = Mem33[ecx + 4<i32>:word32] - edi_35
	word32 edx_41 = SLICE(esi_36 *s64 0x88888889<32>, word32, 32) + esi_36
	word32 esi_45 = (edx_41 >> 6<32> >>u 0x1F<32>) + (edx_41 >> 6<32>)
	branch esi_45 != 0<32> l00414110_thunk_fn00414126
l00414110_thunk_fn00414126:
	word32 ebp_54
	word32 esi_111
	word32 eax_53 = fn00414126(ecx, fp - 4<i32>, esi_45, edi_35, es, ds, out ebp_54, out esi_111)
	ebpOut = ebp_54
	return eax_53
l00414110_thunk_fn00414112:
	word32 ebp_69
	word32 esi_112
	word32 eax_68 = fn00414112(ecx, fp - 4<i32>, esi_45, edi_35, es, ds, out ebp_69, out esi_112)
	ebpOut = ebp_69
	return eax_68
fn004140C0_exit:


word32 fn00414112(word32 ecx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
//      fn004140C0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00414112_entry:
l00414112:
	word32 ebp_15
	word32 edx_49
	word32 ecx_14 = fn004028D0(Mem8[ebp - 60<i32>:word32], edi, ecx + 0x2C<32>, out edx_49, out ebp_15)
l00414121_thunk_fn00414126:
	word32 ebp_32
	word32 esi_37
	word32 eax_31 = fn00414126(ecx_14, ebp_15, esi, edi, es, ds, out ebp_32, out esi_37)
	ebpOut = ebp_32
	esiOut = esi_37
	return eax_31
fn00414112_exit:


word32 fn00414126(word32 ecx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
//      fn004140C0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00414126_entry:
	selector fs
l00414126:
	word32 edx_6 = Mem0[ecx + 32<i32>:word32]
	word32 eax_7 = Mem0[ecx + 36<i32>:word32]
	branch edx_6 >= eax_7 l0041413A
l00414130:
	branch (Mem0[ecx + 68<i32>:byte] & 2<8>) != 0<8> l004143BE
l004143BE:
	word32 eax_19 = fn00404000(ebp - 96<i32>, edx_6, eax_7)
	Mem23[ebp - 4<i32>:word32] = 0<32>
	word32 edx_694
	word32 ecx_35 = fn00414540(eax_19, esi, edi, es, ds, out edx_694)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l004143DF_thunk_fn004143E0:
	ebpOut = fn004143E0(ecx_35, es, ds)
	esiOut = esi
	return eax_45
l0041413A:
	Mem56[ebp - 24<i32>:word32] = 0<32>
	Mem57[ebp - 20<i32>:word32] = 0xF<32>
	Mem58[ebp - 40<i32>:byte] = 0<8>
	Mem59[ebp - 4<i32>:word32] = 1<32>
	word32 ecx_61 = Mem59[ecx + 60<i32>:word32]
	branch esi == 0<32> l0041417D
l0041415A:
l00414160:
	word32 ecx_69 = ecx_61 + Mem59[edi + 20<i32>:word32]
	branch Mem59[edi:word32] != 0xFFFFFFFE<32> l00414172
l00414168:
	word32 eax_72 = Mem59[edi + 56<i32>:word32]
	branch ecx_69 <u eax_72 l00414170
l0041416D_1:
	eax_72 = ecx_69
l00414170:
	ecx_69 = eax_72
l00414172:
	ecx_61 = ecx_69 + Mem59[edi + 44<i32>:word32]
	edi = edi + 0x78<32>
	esi = esi - 1<32>
	branch esi != 0<32> l00414160
l0041417D:
	word32 esi_683
	word32 edi_684
	word32 ebp_139
	word32 ebx_140
	fn00414E40(ebp - 40<i32>, edi, es, ds, ecx_61, out ebx_140, out ebp_139, out esi_683, out edi_684)
	word32 edi_150 = Mem98[ebp_139 - 56<i32>:word32]
	word32 esp_144 = <invalid>
	word32 edx_152 = edi_150 + 44<i32>
	branch Mem98[edi_150 + 64<i32>:word32] <u 0x10<32> l00414195
l00414192:
	edx_152 = Mem98[edi_150 + 44<i32>:word32]
l00414195:
	word32 esp_186
	word32 esi_160 = Mem98[ebp_139 - 24<i32>:word32]
	word32 ecx_157 = Mem98[edi_150 + 60<i32>:word32]
	word32 eax_161 = Mem98[ebp_139 - 20<i32>:word32] - esi_160
	Mem162[ebp_139 - 44<i32>:word32] = ecx_157
	Mem165[esp_144:word32] = ecx_157
	Mem168[esp_144 - 4<i32>:word32] = edx_152
	branch ecx_157 >u eax_161 l004141CE
l004141CE:
	Mem171[ebp_139 - 44<i32>:byte] = 0<8>
	Mem174[esp_144 - 8<i32>:word32] = Mem171[ebp_139 - 44<i32>:word32]
	Mem176[esp_144 - 12<i32>:word32] = ecx_157
	word32 edx_692
	word32 esi_693
	fn00413280(ebp_139 - 40<i32>, ebp_139, edi_150, out edx_692, out ebx_140, out ebp_139, out esi_693, out edi_150)
	esp_186 = <invalid>
l004141A9:
	Mem193[ebp_139 - 24<i32>:word32] = esi_160 + ecx_157
	word32 eax_194 = ebp_139 - 40<i32>
	branch Mem168[ebp_139 - 20<i32>:word32] <u 0x10<32> l004141BA
l004141B6_1:
	eax_194 = Mem193[ebp_139 - 40<i32>:word32]
l004141BA:
	word32 esi_199 = esi_160 + eax_194
	Mem202[esp_144 - 8<i32>:word32] = esi_199
	memmove(Mem202[esp_144 - 8<i32>:(ptr32 void)], Mem202[esp_144 - 4<i32>:(ptr32 void)], Mem202[esp_144:size_t])
	Mem208[esi_199 + Mem202[ebp_139 - 44<i32>:word32]:byte] = 0<8>
	esp_186 = esp_144 + 4<32>
l004141DE:
	word32 esi_212 = Mem211[edi_150:word32]
	Mem215[ebp_139 - 44<i32>:word32] = 0<32>
	word32 ecx_218 = Mem215[edi_150 + 4<i32>:word32] - esi_212
	Mem219[ebp_139 - 52<i32>:word32] = esi_212
	word32 edx_222 = SLICE(ecx_218 *s64 0x88888889<32>, word32, 32) + ecx_218
	word32 edx_223 = edx_222 >> 6<32>
	branch (edx_222 >> 6<32> >>u 0x1F<32>) + (edx_222 >> 6<32>) == 0<32> l0041437B
l00414206:
	Mem232[ebp_139 - 48<i32>:word32] = 0<32>
	word32 eax_229 = 0<32>
l00414210:
	word32 edi_237 = eax_229 + esi_212
	word32 ecx_238 = edi_237 + 4<i32>
	branch Mem235[eax_229 + 24<i32> + esi_212:word32] <u 0x10<32> l00414220
l0041421D:
	ecx_238 = Mem235[edi_237 + 4<i32>:word32]
l00414220:
	word32 esp_274
	word32 esi_273
	word32 edx_247 = Mem235[ebp_139 - 24<i32>:word32]
	word32 edi_246 = Mem235[edi_237 + 20<i32>:word32]
	word32 eax_248 = Mem235[ebp_139 - 20<i32>:word32] - edx_247
	word32 esp_251 = esp_186 - 4<i32>
	Mem252[esp_251:word32] = edi_246
	Mem255[esp_251 - 4<i32>:word32] = ecx_238
	branch edi_246 >u eax_248 l00414256
l00414256:
	Mem258[ebp_139 - 68<i32>:byte] = 0<8>
	Mem262[esp_251 - 8<i32>:word32] = Mem258[ebp_139 - 68<i32>:word32]
	Mem264[esp_251 - 12<i32>:word32] = edi_246
	word32 edi_691
	word32 edx_690
	fn00413280(ebp_139 - 40<i32>, ebp_139, edi_246, out edx_690, out ebx_140, out ebp_139, out esi_273, out edi_691)
	esp_274 = <invalid>
l00414231:
	word32 esi_280 = ebp_139 - 40<i32>
	word32 eax_281 = edi_246 + edx_247
	branch Mem255[ebp_139 - 20<i32>:word32] <u 0x10<32> l0041423F
l0041423B_1:
	esi_280 = Mem255[ebp_139 - 40<i32>:word32]
l0041423F:
	Mem289[ebp_139 - 24<i32>:word32] = eax_281
	word32 esi_286 = esi_280 + edx_247
	Mem292[esp_251 - 8<i32>:word32] = esi_286
	memmove(Mem292[esp_251 - 8<i32>:(ptr32 void)], Mem292[esp_251 - 4<i32>:(ptr32 void)], Mem292[esp_251:size_t])
	Mem295[esi_286 + edi_246:byte] = 0<8>
	esp_274 = esp_251 + 4<32>
	esi_273 = Mem295[ebp_139 - 52<i32>:word32]
l00414266:
	word32 ecx_358
	word32 eax_301 = Mem300[ebp_139 - 48<i32>:word32]
	branch Mem300[eax_301 + esi_273:word32] != 0xFFFFFFFE<32> l004142F3
l00414273:
	branch (Mem300[eax_301 + 112<i32> + esi_273:byte] & 8<8>) != 0<8> l00414295
l0041427A:
	wassert(0x432000<32>, 0x431F90<32>, 0xEA<32>)
	eax_301 = Mem314[ebp_139 - 48<i32>:word32]
	esp_274 = esp_344 + 0xC<32>
l00414295:
	word32 edi_356 = Mem355[eax_301 + 56<i32> + esi_273:word32]
	ecx_358 = Mem355[ebp_139 - 24<i32>:word32]
	branch edi_356 <=u ecx_358 l004142F6
l004142A0:
	byte dl_361 = Mem355[eax_301 + 72<i32> + esi_273:byte]
	word32 eax_364 = Mem355[ebp_139 - 20<i32>:word32] - ecx_358
	Mem365[ebp_139 - 72<i32>:byte] = dl_361
	word32 edi_362 = edi_356 - ecx_358
	branch edi_362 >u eax_364 l004142DC
l004142DC:
	word32 esp_370 = esp_274 - 4<i32>
	Mem371[esp_370:word32] = Mem365[ebp_139 - 72<i32>:word32]
	Mem372[ebp_139 - 76<i32>:byte] = 0<8>
	Mem375[esp_370 - 4<i32>:word32] = edi_362
	Mem378[esp_370 - 8<i32>:word32] = Mem375[ebp_139 - 76<i32>:word32]
	Mem380[esp_370 - 12<i32>:word32] = edi_362
	word32 edi_689
	fn00413120(ebp_139 - 40<i32>, ebp_139, edi_362, out ebx_140, out ebp_139, out esi_273, out edi_689)
	esp_274 = <invalid>
l004142B2:
	Mem396[ebp_139 - 24<i32>:word32] = ecx_358 + edi_362
	word32 esi_397 = ebp_139 - 40<i32>
	branch Mem365[ebp_139 - 20<i32>:word32] <u 0x10<32> l004142C3
l004142BF_1:
	esi_397 = Mem396[ebp_139 - 40<i32>:word32]
l004142C3:
	word32 esp_401 = esp_274 - 4<i32>
	Mem403[esp_401:word32] = edi_362
	Mem410[esp_401 - 4<i32>:word32] = CONVERT(dl_361, byte, int32)
	word32 esi_408 = esi_397 + ecx_358
	Mem412[esp_401 - 8<i32>:word32] = esi_408
	memset(Mem412[esp_401 - 8<i32>:(ptr32 void)], Mem412[esp_401 - 4<i32>:int32], Mem412[esp_401:size_t])
	Mem414[esi_408 + edi_362:byte] = 0<8>
	esp_274 = esp_401 + 4<32>
	esi_273 = Mem414[ebp_139 - 52<i32>:word32]
l004142F0:
	eax_301 = Mem420[ebp_139 - 48<i32>:word32]
l004142F3:
	ecx_358 = Mem423[ebp_139 - 24<i32>:word32]
l004142F6:
	word32 edi_432 = eax_301 + esi_273
	word32 edx_433 = edi_432 + 28<i32>
	branch Mem430[eax_301 + 48<i32> + esi_273:word32] <u 0x10<32> l00414306
l00414303:
	edx_433 = Mem430[edi_432 + 28<i32>:word32]
l00414306:
	word32 esi_439 = Mem430[ebp_139 - 20<i32>:word32]
	word32 edi_442 = Mem430[edi_432 + 44<i32>:word32]
	word32 esp_450 = esp_274 - 4<i32>
	Mem451[esp_450:word32] = edi_442
	Mem454[esp_450 - 4<i32>:word32] = edx_433
	branch edi_442 >u esi_439 - ecx_358 l00414338
l00414338:
	Mem457[ebp_139 - 64<i32>:byte] = 0<8>
	Mem461[esp_450 - 8<i32>:word32] = Mem457[ebp_139 - 64<i32>:word32]
	Mem463[esp_450 - 12<i32>:word32] = edi_442
	word32 edx_686
	word32 esi_687
	word32 edi_688
	fn00413280(ebp_139 - 40<i32>, ebp_139, edi_442, out edx_686, out ebx_140, out ebp_139, out esi_687, out edi_688)
	esp_186 = <invalid>
l00414316:
	Mem483[ebp_139 - 24<i32>:word32] = ecx_358 + edi_442
	word32 eax_484 = ebp_139 - 40<i32>
	branch esi_439 <u 0x10<32> l00414326
l00414322_1:
	eax_484 = Mem483[ebp_139 - 40<i32>:word32]
l00414326:
	word32 esi_489 = eax_484 + ecx_358
	Mem492[esp_450 - 8<i32>:word32] = esi_489
	memmove(Mem492[esp_450 - 8<i32>:(ptr32 void)], Mem492[esp_450 - 4<i32>:(ptr32 void)], Mem492[esp_450:size_t])
	Mem497[esi_489 + edi_442:byte] = 0<8>
	esp_186 = esp_450 + 4<32>
l00414348:
	edi_150 = Mem500[ebp_139 - 56<i32>:word32]
	Mem504[ebp_139 - 48<i32>:word32] = Mem500[ebp_139 - 48<i32>:word32] + 0x78<32>
	Mem506[ebp_139 - 44<i32>:word32] = Mem504[ebp_139 - 44<i32>:word32] + 1<32>
	esi_212 = Mem506[edi_150:word32]
	word32 ecx_509 = Mem506[edi_150 + 4<i32>:word32] - esi_212
	Mem510[ebp_139 - 52<i32>:word32] = esi_212
	word32 edx_513 = SLICE(ecx_509 *s64 0x88888889<32>, word32, 32) + ecx_509
	edx_223 = edx_513 >> 6<32>
	eax_229 = Mem510[ebp_139 - 48<i32>:word32]
	branch Mem510[ebp_139 - 44<i32>:word32] <u ((edx_513 >> 6<32>) >>u 0x1F<32>) + (edx_513 >> 6<32>) l00414210
l0041437B:
	word32 eax_523 = Mem522[ebp_139 - 60<i32>:word32]
	word128 xmm0_524 = Mem522[ebp_139 - 40<i32>:word128]
	Mem526[edi_150 + 40<i32>:byte] = 1<8>
	Mem527[eax_523 + 16<i32>:word32] = 0<32>
	Mem528[eax_523 + 20<i32>:word32] = 0<32>
	Mem529[eax_523:word128] = xmm0_524
	Mem532[eax_523 + 16<i32>:word64] = Mem529[ebp_139 - 24<i32>:word64]
l004143A1:
	Mem539[fs:0x00000000<p32>:word32] = Mem532[ebp_139 - 12<i32>:word32]
	word32 esp_544 = esp_186 + 4<i32>
	word32 esi_547 = Mem539[esp_544 + 4<i32>:word32]
	word32 ecx_685
	word32 eax_630
	fn00427500(Mem539[ebp_139 - 16<i32>:word32] ^ ebp_139, edx_223, ebx_140, ebp_139, esi_547, Mem539[esp_544:word32], es, ds, Mem539[esp_544 + 4<i32>:word32], out eax_630, out ecx_685)
	ebpOut = Mem539[ebp_139:word32]
	esiOut = esi_547
	return eax_630
fn00414126_exit:


word32 fn004143E0(word32 ecx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
//      fn00413B30
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp
// Trashed: SCZO eax ebp ecx edx esp Top xmm0
// Preserved: DP ebx edi esi
fn004143E0_entry:
	ptr32 fp
l004143E0:
	word32 ebp_7 = fp - 4<i32>
	word32 esi_17 = ecx
	branch Mem19[ecx + 16<i32>:word32] == 0<32> l00414416
l004143F2:
	word32 edi_28 = ecx
	branch Mem19[ecx + 20<i32>:word32] <u 0x10<32> l004143FF
l004143FB:
	edi_28 = Mem27[ecx:word32]
	esi_17 = edi_28
l004143FF:
	word32 ebx_38
	word32 edi_40
	word32 esi_42
	word32 ebp_133
	word32 esi_134
	word32 edi_135
	fn00428BE0(esi_42, es, ds, esi_42, ebx_38 + edi_40, fn0042B320(esi_17, edi_28, out ebx_38, out ebp_133, out esi_42, out edi_40), out ebp_7, out esi_134, out edi_135)
l00414416:
	return Mem87[ebp_7:word32]
fn004143E0_exit:


word32 fn00414420(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00411520
// MayUse:  ecx:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: edi esi esp
fn00414420_entry:
l00414420:
	Mem18[ecx:word32] = 0x00431384<p32>
	Mem20[ecx + 4<i32>:word64] = 0<64>
	_std_exception_copy(edx + 4<i32>, ecx + 4<i32>)
	Mem30[ecx:word32] = 0x004324DC<p32>
	Mem34[ecx + 12<i32>:word32] = Mem30[edx + 12<i32>:word32]
	Mem36[ecx + 16<i32>:word32] = Mem34[edx + 16<i32>:word32]
	Mem38[ecx + 24<i32>:word32] = 0<32>
	Mem39[ecx + 28<i32>:word32] = 0<32>
	Mem40[ecx + 32<i32>:word32] = 0<32>
	Mem41[ecx + 36<i32>:word32] = 0xFFFFFFFF<32>
	Mem42[ecx:word32] = 0x0043238C<p32>
	Mem43[ecx + 20<i32>:word32] = 0x004323B4<p32>
	return ecx
fn00414420_exit:


void fn00414490(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00411520
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDOP eax ebx ecx edx Top xmm0
// Preserved: ebp edi esi esp
fn00414490_entry:
	ptr32 fp
	selector fs
l00414490:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 16<i32>
	Mem37[ecx + 40<i32>:word32] = 0x00432380<p32>
	Mem38[ecx + 48<i32>:word32] = 0x0043248C<p32>
	word32 edi_46
	word32 esi_47 = fn004135F0(ecx, edx, out edi_46)
	word32 eax_56 = Mem54[edi_46 + 40<i32>:word32]
	Mem57[edi_46:word32] = 0x00432398<p32>
	Mem58[edi_46 + 20<i32>:word32] = 0x004323AC<p32>
	Mem60[Mem58[eax_56 + 4<i32>:word32] + 40<i32> + edi_46:word32] = 0x00431850<p32>
	word32 edx_62 = Mem60[Mem60[edi_46 + 40<i32>:word32] + 4<i32>:word32]
	Mem64[edx_62 + 36<i32> + edi_46:word32] = edx_62 - 8<i32>
	fn00403D50(edi_46 + 20<i32>, esi_47 + 20<i32> & 0<32> - (esi_47 != 0<32>), es, ds)
	Mem91[fs:0x00000000<p32>:word32] = eax_13
	return
fn00414490_exit:


word32 fn00414540(word32 ecx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00411D30
//      fn00413B30
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ecx edx
// Trashed: SCZDOP eax ebp ebx ecx edx Top xmm0
// Preserved: esp
fn00414540_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc6C
	struct <anonymous> tLoc38
l00414540:
	Mem24[fs:0<32>:word32] = fp - 16<i32>
	word32 ebx_45 = fn00415FD0(&tLoc6C, fn00415F60(&tLoc38, ecx), es, ds)
	CxxThrowException(&tLoc6C, 0x437B20<32>)
	int3()
	int3()
l0041458F_thunk_fn00414590:
	word32 ecx_69
	word32 edx_70
	fn00414590(ebx_45, esi, edi, out ecx_69, out edx_70)
	edxOut = edx_70
	return ecx_69
fn00414540_exit:


word32 fn00414590(word32 ebx, word32 esi, word32 edi, ptr32 & ecxOut, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407D10
//      fn00408570
//      fn00414540
// MayUse:  ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: eax ecx edx
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: ebp esp
fn00414590_entry:
	ptr32 fp
l00414590:
	word32 ecx_19
	word32 edx_20
	word32 eax_18 = fn00402D70(ebx, fp - 4<i32>, esi, edi, out ecx_19, out edx_20)
	Mem27[eax_18 + 8<i32>:word128] = 0<128>
	Mem29[eax_18 + 24<i32>:word64] = 0<64>
	Mem30[eax_18 + 32<i32>:word32] = 0<32>
	Mem31[eax_18 + 24<i32>:word32] = 0<32>
	Mem32[eax_18 + 28<i32>:word32] = 0xF<32>
	Mem33[eax_18 + 8<i32>:byte] = 0<8>
	ecxOut = ecx_19
	edxOut = edx_20
	return eax_18
fn00414590_exit:


byte fn004145D0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040A880
// MayUse:  ecx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp esi esp
fn004145D0_entry:
	ptr32 fp
l004145D0:
	__align_stack<word32>(fp - 4<i32>)
	word32 edx_12 = ecx
	branch Mem10[ecx + 20<i32>:word32] <u 0x10<32> l004145E2
l004145E0:
	edx_12 = Mem15[ecx:word32]
l004145E2:
	word32 eax_20 = Mem15[ecx + 16<i32>:word32]
	word32 esi_22 = eax_20 + edx_12
	branch Mem10[ecx + 20<i32>:word32] <u 0x10<32> l004145EC
l004145EA:
	ecx = Mem15[ecx:word32]
l004145EC:
	branch ecx == esi_22 l0041461C
l004145F0:
	word32 edx_29 = 0x00431D0C<p32>
l004145F5:
	branch edx_29 == 0x00431D13<p32> l00414611
l004145FD:
	branch Mem15[ecx:byte] != Mem15[edx_29:byte] l0041461C
l00414603:
	ecx = ecx + 1<32>
	edx_29 = edx_29 + 1<32>
	branch ecx != esi_22 l004145F5
l00414609:
	branch edx_29 != 0x00431D13<p32> l0041461C
l00414611:
	branch ecx != esi_22 l0041461C
l0041461C:
	return 0<8>
l00414615:
	return 1<8>
fn004145D0_exit:


void fn00414630(word32 ecx, word32 edx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412310
// MayUse:  ecx:[0..31] edx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: ebp edi esi esp
fn00414630_entry:
	ptr32 fp
l00414630:
	word32 esi_11 = dwArg04
	branch ecx == edx l00414695
l00414640:
	word32 edx_22 = ecx + 20<i32>
	word32 ecx_23 = dwArg04 - ecx
l00414650:
	Mem26[esi_11 + 16<i32>:word32] = 0<32>
	edx_22 = edx_22 + 28<i32>
	Mem30[ecx_23 - 28<i32> + edx_22:word32] = 0<32>
	Mem32[esi_11:word128] = Mem30[edx_22 - 48<i32>:word128]
	Mem35[esi_11 + 16<i32>:word64] = Mem32[edx_22 - 32<i32>:word64]
	Mem36[edx_22 - 32<i32>:word32] = 0<32>
	Mem37[edx_22 - 28<i32>:word32] = 0xF<32>
	Mem38[edx_22 - 48<i32>:byte] = 0<8>
	Mem40[esi_11 + 24<i32>:word32] = Mem38[edx_22 - 24<i32>:word32]
	esi_11 = esi_11 + 0x1C<32>
	branch edx_22 - 20<i32> != edx l00414650
l00414695:
	word32 edi_96
	word32 esi_95
	fn004133E0(esi_11, esi_11, fp - 4<i32>, esi_11, edx, out esi_95, out edi_96)
	return
fn00414630_exit:


void fn004146B0(word32 ecx, word32 edx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412310
// MayUse:  ecx:[0..31] edx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: ebp edi esi esp
fn004146B0_entry:
l004146B0:
	word32 esi_11 = dwArg04
	branch ecx == edx l00414741
l004146C4:
	word32 edx_22 = ecx + 44<i32>
	word32 ecx_23 = dwArg04 - ecx
l004146D0:
	Mem26[esi_11 + 16<i32>:word32] = 0<32>
	Mem29[esi_11 + 20<i32>:word32] = 0<32>
	edx_22 = edx_22 + 48<i32>
	Mem32[esi_11:word128] = Mem29[edx_22 - 92<i32>:word128]
	Mem35[esi_11 + 16<i32>:word64] = Mem32[edx_22 - 76<i32>:word64]
	Mem36[edx_22 - 76<i32>:word32] = 0<32>
	Mem37[edx_22 - 72<i32>:word32] = 0xF<32>
	Mem38[edx_22 - 92<i32>:byte] = 0<8>
	Mem39[esi_11 + 40<i32>:word32] = 0<32>
	Mem41[ecx_23 - 48<i32> + edx_22:word32] = 0<32>
	Mem43[esi_11 + 24<i32>:word128] = Mem41[edx_22 - 68<i32>:word128]
	Mem46[esi_11 + 40<i32>:word64] = Mem43[edx_22 - 52<i32>:word64]
	Mem48[edx_22 - 52<i32>:word32] = 0<32>
	Mem49[edx_22 - 48<i32>:word32] = 0xF<32>
	Mem50[edx_22 - 68<i32>:byte] = 0<8>
	esi_11 = esi_11 + 0x30<32>
	branch edx_22 - 44<i32> != edx l004146D0
l00414741:
	word32 esi_100
	word32 ebp_99
	word32 edi_101
	fn00403460(esi_11, esi_11, out ebp_99, out esi_100, out edi_101)
	return
fn004146B0_exit:


word32 fn00414760(word32 ecx, word32 edi, word32 dwArg04, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412220
//      fn00413A70
// MayUse:  ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax ebp ebx edx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00414760_entry:
	ptr32 fp
	word32 ebx
	word32 dwLoc28
l00414760:
	word32 esi_22 = Mem20[ecx + 16<i32>:word32]
	word32 ebp_116 = fp - 4<i32>
	word32 edx_10 = dwArg04
	branch 0x7FFFFFFF<32> - esi_22 <u dwArg04 l0041489F
l0041489F:
	word32 ecx_32
	fn00403860(0x7FFFFFFF<32>, out ecx_32)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l004148AF_thunk_fn004148B0:
	word32 ebp_41
	word32 edx_42
	word32 esi_308
	word32 eax_38 = fn004148B0(ecx_32, out edx_42, out ebp_41, out esi_308)
	edxOut = edx_42
	ebxOut = ecx
	ebpOut = ebp_41
	return eax_38
l0041478B:
	word32 eax_47 = esi_22 + dwArg04
	word32 esi_100 = Mem27[ecx + 20<i32>:word32]
	word32 edi_148 = eax_47 | 0xF<32>
	branch (eax_47 | 0xF<32>) <=u 0x7FFFFFFF<32> l004147A4
l004147A4:
	branch esi_100 <=u 0x7FFFFFFF<32> - (esi_100 >>u 1<32>) l004147B5
l004147B5:
	word32 eax_60 = (esi_100 >>u 1<32>) + esi_100
	branch (eax_47 | 0xF<32>) >=u eax_60 l004147BC
l004147B9_1:
	edi_148 = eax_60
l004147AE:
	edi_148 = 0x7FFFFFFF<32>
l004147A0:
	edi_148 = 0x7FFFFFFF<32>
l004147BC:
	word32 esp_153
	word32 eax_69 = edi_148 + 1<32>
	word32 ecx_76 = -CONVERT(CONVERT(eax_69 <u 0<32>, bool, int8), byte, uint32) | eax_69
	branch ecx_76 <u 0x1000<32> l004147F9
l004147F9:
	branch ecx_76 == 0<32> l0041480A
l0041480A:
	esi_100 = 0<32>
l004147FD:
	word32 ecx_310
	esi_100 = fn00427511(ecx, esi_100, edi_148, dwLoc28, ecx_76, edi, out ecx_310, out ebp_116)
l004147D2:
	word32 eax_101 = ecx_76 + 35<i32>
	edx_10 = 0xFFFFFFFF<32>
	branch ecx_76 + 35<i32> >u ecx_76 l004147DD
l004147DA_1:
	eax_101 = 0xFFFFFFFF<32>
l004147DD:
	word32 ecx_309
	word32 eax_115 = fn00427511(ecx, esi_100, edi_148, dwLoc28, eax_101, edi, out ecx_309, out ebp_116)
	branch eax_115 == 0<32> l0041487A
l004147EE:
	esi_100 = eax_115 + 35<i32> & 0xFFFFFFE0<32>
	Mem130[esi_100 - 4<i32>:word32] = eax_115
l0041480C:
	Mem137[ecx + 16<i32>:word32] = Mem133[ebp_116 - 4<i32>:word32]
	word32 eax_138 = Mem137[ebp_116 + 24<i32>:word32]
	Mem140[ecx + 20<i32>:word32] = edi_148
	word32 v16_145 = Mem144[ebp_116 - 16<i32>:word32]
	edi_148 = Mem140[ebp_116 - 8<i32>:word32] + 1<32>
	Mem152[ebp_116 - 4<i32>:word32] = esi_100 + eax_138
	esp_153 = fp - 0x2C<32>
	branch Mem147[ebp_116 - 12<i32>:word32] <u 0x10<32> l00414880
l0041482D:
	word32 edi_156 = Mem154[ecx:word32]
	memcpy(esi_100, v16_145, eax_138)
	memcpy(Mem163[ebp_116 - 4<i32>:word32], edi_156, Mem154[ebp_116 - 8<i32>:word32] + 1<32>)
	branch Mem166[ebp_116 - 12<i32>:word32] <u 0xFFF<32> l00414863
l00414851:
	edx_10 = Mem166[edi_156 - 4<i32>:word32]
	edi_148 = edi_156 - edx_10
	branch edi_148 >u 0x23<32> l0041487A
l0041487A:
	_invalid_parameter_noinfo_noreturn()
	esp_153 = fp - 0x20<32>
l00414880:
	memcpy(Mem181[esp_153:(ptr32 void)], Mem181[esp_153 + 4<i32>:(ptr32 void)], Mem181[esp_153 + 8<i32>:size_t])
	word32 esp_184 = esp_153 - 4<i32>
	Mem187[esp_184:word32] = edi_148
	Mem191[esp_184 - 4<i32>:word32] = ecx
	Mem196[esp_184 - 8<i32>:word32] = Mem191[ebp_116 - 4<i32>:word32]
	memcpy(Mem196[esp_184 - 8<i32>:(ptr32 void)], Mem196[esp_184 - 4<i32>:(ptr32 void)], Mem196[esp_184:size_t])
	Mem202[ecx:word32] = esi_100
	word32 ebx_208 = Mem202[esp_184 + 0x18<32>:word32]
	word32 ebp_210 = Mem202[ebp_116:word32]
	edxOut = edx_10
	ebxOut = ebx_208
	ebpOut = ebp_210
	return ecx
l00414861:
	edi_156 = edx_10
l00414863:
	fn0042763F(edi_156)
	Mem225[ecx:word32] = esi_100
	word32 ebp_234 = Mem225[ebp_116:word32]
	edxOut = edx_10
	ebxOut = ebx
	ebpOut = ebp_234
	return ecx
fn00414760_exit:


word32 fn004148B0(word32 ecx, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404C60
//      fn0040EE50
//      fn00411180
//      fn00413B30
//      fn00414760
//      fn00415200
//      fn00416170
//      fn00416530
//      fn004173F0
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: eax ebp edx esi
// Trashed: SCZO eax ebp ecx edx esi Top
// Preserved: esp
fn004148B0_entry:
	ptr32 fp
	word32 ebp
	selector fs
	word32 edx
l004148B0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem24[fs:0<32>:word32] = fp - 16<i32>
	word32 esp_21 = fp - 24<i32>
	word32 eax_169 = fp - 16<i32>
	branch Mem24[ecx + 88<i32>:byte] == 0<8> l004148FE
l004148DB:
	word32 ecx_30 = Mem29[ecx + 96<i32>:word32]
	branch ecx_30 == 0<32> l004148FA
l004148E9:
	word32 eax_34 = Mem29[ecx_30:word32]
	call Mem29[eax_34 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_34,ecx:ecx_30,edx:edx_38
		defs: eax:eax_36,edx:edx_38,esp:esp_35
	branch eax_169 == 0<32> l004148FA
l004148F2:
	word32 edx_44 = Mem29[eax_169:word32]
	Mem47[esp_21 - 4<i32>:word32] = 1<32>
	call Mem47[edx_44:word32] (retsize: 4;)
		uses: ecx:eax_36,edx:edx_44
		defs: eax:eax_49,edx:edx_51,esp:esp_48
l004148FA:
	Mem55[ecx + 88<i32>:byte] = 0<8>
l004148FE:
	word32 ecx_133
	word32 ecx_58 = Mem57[ecx + 48<i32>:word32]
	branch ecx_58 <u 0x10<32> l0041492E
l00414906:
	eax_169 = Mem57[ecx + 28<i32>:word32]
	ecx_133 = ecx_58 + 1<32>
	branch ecx_58 <u 0xFFF<32> l00414924
l00414912:
	edx = Mem57[eax_169 - 4<i32>:word32]
	ecx_133 = ecx_58 + 0x24<32>
	branch eax_169 - edx >u 0x23<32> l00414992
l00414922:
	eax_169 = edx
l00414924:
	word32 esp_75 = esp_21 - 4<i32>
	Mem77[esp_75:word32] = ecx_133
	Mem80[esp_75 - 4<i32>:word32] = eax_169
	fn0042763F(Mem80[esp_75 - 4<i32>:word32])
l0041492E:
	Mem86[ecx + 44<i32>:word32] = 0<32>
	Mem87[ecx + 48<i32>:word32] = 0xF<32>
	Mem88[ecx + 28<i32>:byte] = 0<8>
	word32 ecx_89 = Mem88[ecx + 24<i32>:word32]
	branch ecx_89 <u 0x10<32> l00414970
l00414948:
	eax_169 = Mem88[ecx + 4<i32>:word32]
	ecx_133 = ecx_89 + 1<32>
	branch ecx_89 <u 0xFFF<32> l00414966
l00414954:
	edx = Mem88[eax_169 - 4<i32>:word32]
	ecx_133 = ecx_89 + 0x24<32>
	branch eax_169 - edx >u 0x23<32> l00414992
l00414992:
	_invalid_parameter_noinfo_noreturn()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 esp_104 = esp_21 - 4<i32>
	Mem110[esp_104:word32] = fp - 4<i32>
	Mem113[esp_104 - 4<i32>:word32] = 0xFFFFFFFF<32>
	Mem115[esp_104 - 8<i32>:word32] = 0x42EA00<32>
	Mem123[esp_104 - 12<i32>:word32] = Mem115[fs:0<32>:word32]
	Mem126[esp_104 - 16<i32>:word32] = ecx
	Mem130[esp_104 - 20<i32>:word32] = Mem126[0x0043A008<p32>:word32] ^ esp_104
	Mem132[fs:0<32>:word32] = esp_104 - 12<i32>
	word32 eax_135 = Mem132[ecx_133 + 40<i32>:word32]
	Mem136[ecx_133:word32] = 0x00432428<p32>
	Mem137[ecx_133 + 20<i32>:word32] = 0x004324AC<p32>
	Mem139[Mem137[eax_135 + 4<i32>:word32] + 40<i32> + ecx_133:word32] = 0x0043249C<p32>
	word32 ecx_141 = Mem139[Mem139[ecx_133 + 40<i32>:word32] + 4<i32>:word32]
	Mem143[ecx_141 + 36<i32> + ecx_133:word32] = ecx_141 - 8<i32>
	Mem144[ecx_133:word32] = 0x00432480<p32>
	Mem145[ecx_133 + 20<i32>:word32] = 0x00431834<p32>
	Mem146[esp_104 - 4<i32>:word32] = 0<32>
	word32 ecx_147 = Mem146[ecx_133 + 24<i32>:word32]
	branch ecx_147 == 0<32> l00414A1A
l00414A06_thunk_fn00414A08:
	word32 ebp_152
	word32 esi_154
	word32 eax_151 = fn00414A08(ecx_147, esp_104, ecx_133, out ebp_152, out esi_154)
	edxOut = edx
	ebpOut = ebp_152
	esiOut = esi_154
	return eax_151
l00414A06_thunk_fn00414A08:
	word32 ebp_161
	word32 esi_163
	word32 eax_160 = fn00414A08(ecx_147, esp_104, ecx_133, out ebp_161, out esi_163)
	edxOut = edx
	ebpOut = ebp_161
	esiOut = esi_163
	return eax_160
l00414964:
	eax_169 = edx
l00414966:
	word32 esp_171 = esp_21 - 4<i32>
	Mem173[esp_171:word32] = ecx_133
	Mem176[esp_171 - 4<i32>:word32] = eax_169
	fn0042763F(Mem176[esp_171 - 4<i32>:word32])
l00414970:
	Mem182[ecx + 20<i32>:word32] = 0<32>
	Mem183[ecx + 24<i32>:word32] = 0xF<32>
	Mem184[ecx + 4<i32>:byte] = 0<8>
	Mem190[fs:0x00000000<p32>:word32] = eax_13
	word32 esi_194 = Mem190[esp_21 + 4<i32>:word32]
	edxOut = edx
	ebpOut = ebp
	esiOut = esi_194
	return eax_169
fn004148B0_exit:


word32 fn004149A0(word32 ecx, word32 ebp, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00419878
// MayUse:  ebp:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: ebp esi
// Trashed: SCZO eax ebp ecx esi Top
// Preserved: esp
fn004149A0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc04
l004149A0:
	Mem6[&tLoc04:word32] = ebp
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem24[fs:0<32>:word32] = fp - 16<i32>
	word32 eax_27 = Mem24[ecx + 40<i32>:word32]
	Mem28[ecx:word32] = 0x00432428<p32>
	Mem29[ecx + 20<i32>:word32] = 0x004324AC<p32>
	Mem31[Mem29[eax_27 + 4<i32>:word32] + 40<i32> + ecx:word32] = 0x0043249C<p32>
	word32 ecx_33 = Mem31[Mem31[ecx + 40<i32>:word32] + 4<i32>:word32]
	Mem35[ecx_33 + 36<i32> + ecx:word32] = ecx_33 - 8<i32>
	Mem36[ecx:word32] = 0x00432480<p32>
	Mem37[ecx + 20<i32>:word32] = 0x00431834<p32>
	word32 ecx_39 = Mem38[ecx + 24<i32>:word32]
	branch ecx_39 == 0<32> l00414A1A_in_fn004149A0
l00414A1A_in_fn004149A0:
	Mem44[ecx:word32] = 0x00431384<p32>
	_std_exception_destroy(ecx + 4<i32>)
	Mem54[ecx + 48<i32>:word32] = 0x0043248C<p32>
	Mem56[fs:0x00000000<p32>:word32] = eax_13
	word32 ebp_61 = Mem56[&tLoc04:word32]
	esiOut = Mem56[esp_47 + 8<32>:word32]
	return ebp_61
l00414A06_thunk_fn00414A08:
	word32 ebp_64
	word32 esi_66
	fn00414A08(ecx_39, &tLoc04, ecx, out ebp_64, out esi_66)
	esiOut = esi_66
	return ebp_64
fn004149A0_exit:


word32 fn00414A08(word32 ecx, word32 ebp, word32 esi, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004148B0
//      fn004149A0
// MayUse:  ebp:[0..31] ecx:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: eax ebp esi
// Trashed: SCZO eax ebp ecx esi esp Top
// Preserved:
fn00414A08_entry:
	selector fs
l00414A08:
	word32 eax_7 = Mem0[Mem0[ecx:word32] + 16<i32>:word32]
	word32 eax_11
	call eax_7 (retsize: 4;)
		uses: eax:eax_7,ecx:ecx
		defs: eax:eax_11
	branch SLICE(eax_11, byte, 0) == 0<8> l00414A1A
l00414A13:
	Mem18[esi + 24<i32>:word32] = 0<32>
l00414A1A:
	Mem21[esi:word32] = 0x00431384<p32>
	word32 eax_30 = _std_exception_destroy(esi + 4<i32>)
	Mem34[esi + 48<i32>:word32] = 0x0043248C<p32>
	Mem40[fs:0x00000000<p32>:word32] = Mem34[ebp - 12<i32>:word32]
	word32 esi_43 = Mem40[esp_27 + 8<32>:word32]
	ebpOut = Mem40[ebp:word32]
	esiOut = esi_43
	return eax_30
fn00414A08_exit:


word32 fn00414AF0(word32 ecx, word32 dwArg04, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00415FD0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: edi esi
// Trashed: SCZO eax ebx ecx edi esi Top xmm0
// Preserved: ebp esp
fn00414AF0_entry:
	ptr32 fp
	selector fs
l00414AF0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_29 = Mem27[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem35[fs:0<32>:word32] = fp - 16<i32>
	Mem41[ecx:word32] = 0x00431384<p32>
	Mem45[ecx + 4<i32>:word64] = 0<64>
	_std_exception_copy(dwArg04 + 4<i32>, ecx + 4<i32>, eax_29, ecx, ecx, eax_13, 0x42EA68<32>, 0xFFFFFFFF<32>)
	Mem54[ecx:word32] = 0x004324E8<p32>
	Mem57[ecx + 12<i32>:word32] = Mem54[dwArg04 + 12<i32>:word32]
	Mem59[ecx + 16<i32>:word32] = Mem57[dwArg04 + 16<i32>:word32]
	Mem62[ecx + 20<i32>:word32] = 0x00431834<p32>
	word32 ecx_63 = Mem62[dwArg04 + 24<i32>:word32]
	Mem65[ecx + 24<i32>:word32] = ecx_63
	word32 esp_55 = esp_49 + 8<32>
	branch ecx_63 == 0<32> l00414B70
l00414B6B:
	word32 eax_69 = Mem65[ecx_63:word32]
	call Mem65[eax_69 + 12<i32>:word32] (retsize: 4;)
		uses: eax:eax_69,ecx:ecx_63
		defs: esp:esp_70
l00414B70:
	Mem79[ecx + 28<i32>:word32] = Mem65[dwArg04 + 28<i32>:word32]
	Mem81[ecx + 32<i32>:word32] = Mem79[dwArg04 + 32<i32>:word32]
	Mem83[ecx + 36<i32>:word32] = Mem81[dwArg04 + 36<i32>:word32]
	Mem86[ecx:word32] = 0x00432480<p32>
	Mem87[ecx + 20<i32>:word32] = 0x00432420<p32>
	Mem91[fs:0x00000000<p32>:word32] = eax_13
	word32 esp_94 = esp_55 + 4<i32>
	word32 esi_97 = Mem91[esp_94 + 4<i32>:word32]
	ediOut = Mem91[esp_94:word32]
	return esi_97
fn00414AF0_exit:


void fn00414C00(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00419878
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esi esp
fn00414C00_entry:
	ptr32 fp
l00414C00:
	word32 esi_17
	branch (Mem10[fn004149A0(ecx, fp - 4<i32>, out esi_17) + 8<i32>:byte] & 1<8>) == 0<8> l00414C1C
l00414C11:
	fn0042763F(esi_17)
l00414C1C:
	return
fn00414C00_exit:


word32 fn00414E40(word32 ecx, word32 edi, selector es, selector ds, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
//      fn00417F50
//      fn00418C30
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ebx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: DP
fn00414E40_entry:
	ptr32 fp
	word32 ebp
	word32 ebx
	word32 esi
	selector fs
	word32 dwLoc20
	word32 edx
l00414E40:
	word32 ebp_131 = fp - 4<i32>
	word32 ebx_12 = dwArg04
	word32 eax_18 = Mem15[ecx + 16<i32>:word32]
	branch eax_18 >u dwArg04 l00414FCB
l00414E5B:
	edx = Mem19[ecx + 20<i32>:word32]
	branch edx == dwArg04 l00414FCB
l00414E69:
	word32 ecx_157
	branch edx >=u dwArg04 l00414F83
l00414F83:
	branch dwArg04 >=u 0x10<32> l00414FCA
l00414F88:
	branch edx <u 0x10<32> l00414FCA
l00414F8D:
	word32 edi_34 = Mem28[ecx:word32]
	memcpy(ecx, edi_34, eax_18 + 1<32>)
	word32 ecx_43 = Mem41[ecx + 20<i32>:word32]
	branch ecx_43 <u 0xFFF<32> l00414FB9
l00414FA7:
	edx = Mem41[edi_34 - 4<i32>:word32]
	ecx_157 = ecx_43 + 0x24<32>
	edi = edi_34 - edx
	branch edi >u 0x23<32> l00414FD3
l00414FB7:
	edi_34 = edx
l00414FB9:
	fn0042763F(edi_34)
	Mem66[ecx + 20<i32>:word32] = 0xF<32>
l00414FCA:
l00414FCB:
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return edx
l00414E70:
	ecx_157 = dwArg04 - eax_18
	branch 0x7FFFFFFF<32> - eax_18 <u ecx_157 l00414FD9
l00414E84:
	edi = dwArg04 | 0xF<32>
	branch (dwArg04 | 0xF<32>) <=u 0x7FFFFFFF<32> l00414E98
l00414E98:
	branch edx <=u 0x7FFFFFFF<32> - (edx >>u 1<32>) l00414EAE
l00414EAE:
	word32 eax_98 = (edx >>u 1<32>) + edx
	branch (dwArg04 | 0xF<32>) >=u eax_98 l00414EB6
l00414EB3_1:
	edi = eax_98
l00414EA7:
	edi = 0x7FFFFFFF<32>
l00414E91:
	edi = 0x7FFFFFFF<32>
l00414EB6:
	word32 eax_107 = edi + 1<32>
	word32 ecx_114 = -CONVERT(CONVERT(eax_107 <u 0<32>, bool, int8), byte, uint32) | eax_107
	branch ecx_114 <u 0x1000<32> l00414EF6
l00414EF6:
	branch ecx_114 == 0<32> l00414F0A
l00414F0A:
	ebx_12 = 0<32>
l00414EFA:
	word32 ecx_512
	word32 eax_130 = fn00427511(dwArg04, ecx, edi, dwLoc20, ecx_114, edi, out ecx_512, out ebp_131)
	edx = Mem125[ebp_131 - 4<i32>:word32]
	ebx_12 = eax_130
l00414ECC:
	word32 eax_141 = ecx_114 + 35<i32>
	branch ecx_114 + 35<i32> >u ecx_114 l00414ED7
l00414ED4_1:
	eax_141 = 0xFFFFFFFF<32>
l00414ED7:
	word32 eax_155 = fn00427511(dwArg04, ecx, edi, dwLoc20, eax_141, edi, out ecx_157, out ebp_131)
	branch eax_155 == 0<32> l00414FD3
l00414EE8:
	edx = Mem150[ebp_131 - 4<i32>:word32]
	ebx_12 = eax_155 + 35<i32> & 0xFFFFFFE0<32>
	Mem171[ebx_12 - 4<i32>:word32] = eax_155
l00414F0C:
	Mem178[ecx + 16<i32>:word32] = Mem174[ebp_131 + 8<i32>:word32]
	word32 eax_179 = Mem178[ebp_131 - 8<i32>:word32]
	Mem182[ecx + 20<i32>:word32] = edi
	branch edx <u 0x10<32> l00414F68
l00414F68:
	memcpy(ebx_12, ecx, eax_179 + 1<32>)
	word32 eax_195 = Mem193[ebp_131 - 8<i32>:word32]
	Mem198[ecx:word32] = ebx_12
	Mem199[ecx + 16<i32>:word32] = eax_195
	word32 ebp_206 = Mem199[ebp_131:word32]
	ebxOut = ebx
	ebpOut = ebp_206
	esiOut = esi
	ediOut = edi
	return edx
l00414F1F:
	word32 edi_208 = Mem185[ecx:word32]
	memcpy(ebx_12, edi_208, eax_179 + 1<32>)
	word32 ecx_214 = Mem212[ebp_131 - 4<i32>:word32]
	branch ecx_214 <u 0xFFF<32> l00414F4D
l00414F37:
	edx = Mem212[edi_208 - 4<i32>:word32]
	ecx_157 = ecx_214 + 0x24<32>
	edi = edi_208 - edx
	branch edi >u 0x23<32> l00414FD3
l00414FD3:
	_invalid_parameter_noinfo_noreturn()
l00414FD9:
	word32 ecx_231
	fn00403860(ecx_157, out ecx_231)
	int3()
	int3()
	word32 esp_232 = <invalid>
	Mem240[esp_232 - 4<i32>:word32] = ebp_131
	Mem243[esp_232 - 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem245[esp_232 - 12<i32>:word32] = 0x42EC83<32>
	Mem248[esp_232 - 16<i32>:word32] = Mem245[fs:0<32>:word32]
	word32 eax_251 = Mem248[0x0043A008<p32>:word32] ^ esp_232 - 4<i32>
	Mem252[esp_232 - 20<i32>:word32] = eax_251
	Mem256[esp_232 - 0x28<32>:word32] = ebx_12
	Mem260[esp_232 - 0x2C<32>:word32] = ecx
	Mem264[esp_232 - 0x30<32>:word32] = edi
	Mem266[esp_232 - 0x34<32>:word32] = eax_251
	Mem268[fs:0<32>:word32] = esp_232 - 16<i32>
	word32 edi_269 = Mem268[esp_232 + 4<i32>:word32]
	word32 esi_271 = Mem268[esp_232 + 12<i32>:word32]
	word32 ebx_272 = Mem268[esp_232 + 8<i32>:word32]
	Mem274[esp_232 - 32<i32>:word64] = 0<64>
	Mem275[esp_232 - 24<i32>:word32] = 0<32>
	Mem276[esp_232 - 32<i32>:word32] = edi_269
	Mem277[esp_232 - 28<i32>:word32] = edi_269
	Mem278[esp_232 - 24<i32>:word32] = ecx_231
	Mem279[esp_232 - 8<i32>:word32] = 0<32>
	branch ebx_272 == 0<32> l004150D6
l00415035_thunk_fn0041503B:
	word32 ebp_314
	word32 ebx_315
	word32 edi_317
	word32 edx_318
	word32 esi_319
	fn0041503B(ebx_272, esp_232 - 4<i32>, esi_271, edi_269, es, ds, out edx_318, out ebx_315, out ebp_314, out esi_319, out edi_317)
	ebxOut = ebx_315
	ebpOut = ebp_314
	esiOut = esi_319
	ediOut = edi_317
	return edx_318
l00415035_thunk_fn0041503B:
	word32 ebp_329
	word32 ebx_330
	word32 edi_332
	word32 edx_333
	word32 esi_334
	fn0041503B(ebx_272, esp_232 - 4<i32>, esi_271, edi_269, es, ds, out edx_333, out ebx_330, out ebp_329, out esi_334, out edi_332)
	ebxOut = ebx_330
	ebpOut = ebp_329
	esiOut = esi_334
	ediOut = edi_332
	return edx_333
l00414F4B:
	edi_208 = edx
l00414F4D:
	fn0042763F(edi_208)
	word32 eax_353 = Mem350[ebp_131 - 8<i32>:word32]
	Mem358[ecx:word32] = ebx_12
	Mem359[ecx + 16<i32>:word32] = eax_353
	word32 ebp_366 = Mem359[ebp_131:word32]
	ebxOut = ebx
	ebpOut = ebp_366
	esiOut = esi
	ediOut = edi
	return edx
fn00414E40_exit:


word32 fn00414FE0(word32 edx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416170
//      fn00416530
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ebp ebx edi esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00414FE0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc04
l00414FE0:
	Mem6[&tLoc04:word32] = ebp
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_18 = Mem15[0x0043A008<p32>:word32] ^ &tLoc04
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	branch dwArg08 == 0<32> l004150D6_in_fn00414FE0
l004150D6_in_fn00414FE0:
	Mem50[fs:0x00000000<p32>:word32] = eax_13
	word32 eax_69
	word32 ecx_133
	fn00427500(eax_18 ^ &tLoc04, edx, ebx, &tLoc04, esi, edi, es, ds, ebx, out eax_69, out ecx_133)
	word32 ebp_78 = Mem50[&tLoc04:word32]
	ebxOut = ebx
	ebpOut = ebp_78
	esiOut = esi
	ediOut = edi
	return eax_69
l00415035_thunk_fn0041503B:
	word32 ebp_81
	word32 ebx_82
	word32 edi_84
	word32 esi_86
	word32 edx_134
	word32 eax_80 = fn0041503B(dwArg08, &tLoc04, dwArg0C, dwArg04, es, ds, out edx_134, out ebx_82, out ebp_81, out esi_86, out edi_84)
	ebxOut = ebx_82
	ebpOut = ebp_81
	esiOut = esi_86
	ediOut = edi_84
	return eax_80
fn00414FE0_exit:


word32 fn0041503B(word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00414E40
//      fn00414FE0
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx edi edx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0041503B_entry:
	ptr32 fp
	selector fs
	word32 esp_101 = fp
l0041503B:
l00415040:
	word32 eax_8 = Mem7[esi:word32]
	word32 esp_10 = esp_101 - 4<i32>
	Mem12[esp_10:word32] = esi + 4<i32>
	Mem16[ebp - 32<i32>:word32] = edi
	Mem17[edi:word32] = eax_8
	word32 ebp_21
	word32 edx_155
	fn004028D0(edi + 4<i32>, edi, Mem17[esp_10:word32], out edx_155, out ebp_21)
	Mem31[ebp_21 - 4<i32>:byte] = 1<8>
	word32 esp_22 = <invalid>
	Mem33[esp_22:word32] = esi + 28<i32>
	word32 edx_114
	fn004028D0(edi + 28<i32>, edi, Mem33[esp_22:word32], out edx_114, out ebp)
	Mem47[edi + 56<i32>:word32] = Mem33[esi + 56<i32>:word32]
	Mem49[edi + 60<i32>:word32] = Mem47[esi + 60<i32>:word32]
	Mem51[edi + 64<i32>:word32] = Mem49[esi + 64<i32>:word32]
	Mem53[edi + 68<i32>:word32] = Mem51[esi + 68<i32>:word32]
	Mem56[edi + 72<i32>:byte] = Mem53[esi + 72<i32>:byte]
	Mem58[edi + 76<i32>:word32] = Mem56[esi + 76<i32>:word32]
	Mem60[edi + 80<i32>:word32] = Mem58[esi + 80<i32>:word32]
	Mem62[edi + 84<i32>:word32] = Mem60[esi + 84<i32>:word32]
	Mem63[edi + 88<i32>:byte] = 0<8>
	word32 esp_38 = <invalid>
	esp_101 = esp_38 + 4<32>
	branch Mem63[esi + 88<i32>:byte] == 0<8> l004150AE
l0041509B:
	Mem66[ebp - 4<i32>:byte] = 2<8>
	word32 ecx_67 = Mem66[esi + 96<i32>:word32]
	Mem68[edi + 96<i32>:word32] = ecx_67
	word32 eax_69 = Mem68[ecx_67:word32]
	call Mem68[eax_69 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_69,ecx:ecx_67
		defs: edx:edx_75,esp:esp_71
	Mem77[edi + 88<i32>:byte] = 1<8>
l004150AE:
	Mem82[edi + 104<i32>:word32] = Mem79[esi + 104<i32>:word32]
	Mem84[edi + 108<i32>:word32] = Mem82[esi + 108<i32>:word32]
	Mem86[edi + 112<i32>:word32] = Mem84[esi + 112<i32>:word32]
	Mem89[ebp - 4<i32>:byte] = 0<8>
	edi = edi + 0x78<32>
	Mem91[ebp - 24<i32>:word32] = edi
	ebx = ebx - 1<32>
	branch ebx != 0<32> l00415040
l004150D6:
	Mem100[fs:0x00000000<p32>:word32] = Mem91[ebp - 12<i32>:word32]
	word32 esp_103 = esp_101 + 4<i32>
	word32 edi_104 = Mem100[esp_103:word32]
	word32 esi_106 = Mem100[esp_103 + 4<i32>:word32]
	word32 ebx_108 = Mem100[esp_103 + 8<i32>:word32]
	word32 ecx_156
	word32 eax_130
	fn00427500(Mem100[ebp - 16<i32>:word32] ^ ebp, edx_114, ebx_108, ebp, esi_106, edi_104, es, ds, Mem100[esp_103 + 8<i32>:word32], out eax_130, out ecx_156)
	word32 ebp_139 = Mem100[ebp:word32]
	edxOut = edx_114
	ebxOut = ebx_108
	ebpOut = ebp_139
	esiOut = esi_106
	ediOut = edi_104
	return eax_130
fn0041503B_exit:


word32 fn00415100(word32 ecx, word32 dwArg04, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
//      fn00415200
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ebx ecx edi edx esi Top
// Preserved: ebp esp
fn00415100_entry:
	ptr32 fp
	selector fs
l00415100:
	word32 ebx_231
	word32 esi_41
	word32 ecx_46
	word32 eax_13 = Mem11[fs:0<32>:word32]
	bool fLoc24_188 = Mem27[0x0043A008<p32>:bool] ^ SLICE(fp, bool, 0)
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word32 dwLoc14_185 = 0<32>
	branch Mem33[ecx + 0x90<32>:byte] == 0<8> l00415153
l00415153:
	word32 eax_40 = _Init(1<32>, fLoc24_188)
	esi_41 = dwArg04
	dwLoc14_185 = eax_40
	ebx_231 = 2<32>
	ecx_46 = eax_40
l00415136:
	esi_41 = Mem47[ecx + 0x98<32>:word32]
	word32 eax_50 = Mem47[esi_41:word32]
	call Mem47[eax_50 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_50,ecx:esi_48,Stack +0020:0<32>,Stack +002C:dwArg04
	ebx_231 = 1<32>
	ecx_46 = esi_41
l00415172:
	Mem64[dwArg04 + 4<i32>:word32] = ecx_46
	word32 eax_65 = Mem64[ecx_46:word32]
	word32 edx_105
	call Mem64[eax_65 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_65,ecx:ecx_63
		defs: edx:edx_74
	branch (SLICE(ebx_231, byte, 0) & 2<8>) == 0<8> l004151B9
l00415190:
	ebx_231 = ebx_231 & 0xFFFFFFFD<32>
	branch dwLoc14_185 == 0<32> l004151B2
l004151A1:
	word32 eax_88 = Mem84[dwLoc14_185:word32]
	word32 esp_89
	word32 eax_90
	call Mem84[eax_88 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_88,ecx:dwLoc14_195
		defs: eax:eax_90,edx:edx_92,esp:esp_89
	branch eax_90 == 0<32> l004151B2
l004151AA:
	word32 edx_98 = Mem84[eax_90:word32]
	Mem101[esp_89 - 4<i32>:word32] = 1<32>
	call Mem101[edx_98:word32] (retsize: 4;)
		uses: ecx:eax_90,edx:edx_98
		defs: edx:edx_105
l004151B2:
l004151B9:
	branch (SLICE(ebx_231, byte, 0) & 1<8>) == 0<8> l004151DC
l004151BE:
	branch esi_41 == 0<32> l004151DC
l004151C9:
	word32 eax_123 = Mem117[esi_41:word32]
	word32 esp_138
	word32 eax_139
	call Mem117[eax_123 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_123,ecx:esi_68
		defs: eax:eax_139,edx:edx_141,esp:esp_138
	branch eax_139 == 0<32> l004151DC
l004151D4:
	word32 edx_147 = Mem117[eax_139:word32]
	Mem150[esp_138 - 4<i32>:word32] = 1<32>
	call Mem150[edx_147:word32] (retsize: 4;)
		uses: ecx:eax_139,edx:edx_147
		defs: edx:edx_154
l004151DC:
	Mem164[fs:0x00000000<p32>:word32] = eax_13
	edxOut = edx_105
	return dwArg04
fn00415100_exit:


word32 fn00415200(word32 ecx, selector es, selector ds, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00415200_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc18
l00415200:
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word32 edx_43
	word32 eax_59
	word32 ebp_60
	word32 ebx_61
	word32 edi_63
	word32 edx_426
	word32 esi_182
	fn00402DD0(fn00415100(ecx, &tLoc18, out edx_43), edx_43, es, ds, out eax_59, out edx_426, out ebx_61, out ebp_60, out esi_182, out edi_63)
	word32 esp_67 = <invalid>
	byte al_75 = widen(eax_59, Mem53[esp_67:charconst ])
	Mem78[ebp_60 - 4<i32>:word32] = 1<32>
	word24 ebx_24_8_84 = SLICE(ebx_61, word24, 8)
	word32 esp_146 = esp_67 + 4<32>
	word32 ecx_79 = Mem78[ebp_60 - 16<i32>:word32]
	branch ecx_79 == 0<32> l0041526F
l0041525E:
	word32 edx_83 = Mem78[ecx_79:word32]
	word32 eax_87
	call Mem78[edx_83 + 8<i32>:word32] (retsize: 4;)
		uses: ecx:ecx_79,edx:edx_83
		defs: eax:eax_87,esp:esp_86
	branch eax_87 == 0<32> l0041526F
l00415267:
	word32 edx_95 = Mem78[eax_87:word32]
	Mem98[esp_146 - 4<i32>:word32] = 1<32>
	call Mem98[edx_95:word32] (retsize: 4;)
		uses: ecx:eax_87,edx:edx_95
		defs: esp:esp_99
l0041526F:
	word32 esp_190
	word32 ebp_201
	word32 esi_206
	Mem106[ebp_60 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 ecx_110 = Mem106[esi_182 + 4<i32>:word32] - Mem106[esi_182:word32]
	word32 edx_113 = SLICE(ecx_110 *s64 0x88888889<32>, word32, 32) + ecx_110
	word32 eax_117 = (edx_113 >> 6<32> >>u 0x1F<32>) + (edx_113 >> 6<32>)
	byte al_267 = SLICE(eax_117, byte, 0)
	branch eax_117 != 0<32> l00415319
l00415319:
	word32 edi_120 = Mem106[ebp_60 + 8<i32>:word32]
	branch edi_120 <=u eax_117 l004153C5
l00415324:
	Mem124[ebp_60 - 0x8C<32>:word32] = 0xFFFFFFFF<32>
	Mem125[ebp_60 - 120<i32>:word32] = 0<32>
	Mem126[ebp_60 - 116<i32>:word32] = 0xF<32>
	Mem127[ebp_60 - 0x88<32>:byte] = 0<8>
	Mem128[ebp_60 - 96<i32>:word32] = 0<32>
	Mem129[ebp_60 - 92<i32>:word32] = 0xF<32>
	Mem130[ebp_60 - 112<i32>:byte] = 0<8>
	Mem131[ebp_60 - 52<i32>:byte] = 0<8>
	Mem133[ebp_60 - 84<i32>:word64] = __movlp<real64[2],real64[1]>(0<128>)
	Mem134[ebp_60 - 76<i32>:word32] = 6<32>
	Mem135[ebp_60 - 72<i32>:word32] = 0<32>
	Mem137[ebp_60 - 68<i32>:byte] = al_75
	Mem138[ebp_60 - 64<i32>:word32] = 0x201<32>
	Mem139[ebp_60 - 56<i32>:word32] = 0<32>
	Mem140[ebp_60 - 60<i32>:word32] = 0<32>
	Mem141[ebp_60 - 36<i32>:word32] = 0xFFFFFFFF<32>
	Mem142[ebp_60 - 32<i32>:word32] = 0x7FFFFFFF<32>
	Mem143[ebp_60 - 28<i32>:word32] = 0<32>
	Mem145[ebp_60 - 4<i32>:word32] = 3<32>
	word32 esp_147 = esp_146 - 4<i32>
	Mem148[esp_147:word32] = ebp_60 - 0x8C<32>
	Mem150[esp_147 - 4<i32>:word32] = esi_182
	Mem152[esp_147 - 8<i32>:word32] = edi_120
	word32 ebp_165
	word32 edi_428
	fn00416170(esi_182, SEQ(ebx_24_8_84, al_75), es, ds, Mem152[esp_147 - 8<i32>:word32], Mem152[esp_147:word32], out ebp_165, out edi_428)
	Mem179[ebp_165 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 edx_429
	word32 ebp_430
	fn004148B0(ebp_165 - 0x8C<32>, out edx_429, out ebp_430, out esi_182)
	word32 esp_166 = <invalid>
	esp_146 = esp_166 + 0xC<32>
l004153C5:
	esp_190 = esp_146 - 8<32>
	word32 edi_204
	byte bl_363 = fn00416760(esi_182 + 12<i32>, es, ds, out ebp_201, out esi_206, out edi_204)
	branch edi_204 == 0<32> l00415469
l004153D8:
	word32 edx_215 = 0<32>
l004153E0:
	word32 eax_222 = Mem219[esi_206:word32] + edx_215
	Mem224[eax_222:word32] = 0xFFFFFFFF<32>
	Mem225[eax_222 + 104<i32>:word32] = 0xFFFFFFFF<32>
	Mem226[eax_222 + 108<i32>:word32] = 0x7FFFFFFF<32>
	Mem227[eax_222 + 112<i32>:word32] = 0<32>
	Mem228[eax_222 + 20<i32>:word32] = 0<32>
	word32 ecx_223 = eax_222 + 4<i32>
	branch Mem228[eax_222 + 24<i32>:word32] <u 0x10<32> l00415411
l0041540F:
	ecx_223 = Mem228[eax_222 + 4<i32>:word32]
l00415411:
	Mem233[ecx_223:byte] = 0<8>
	Mem236[eax_222 + 44<i32>:word32] = 0<32>
	word32 ecx_235 = eax_222 + 28<i32>
	branch Mem236[eax_222 + 48<i32>:word32] <u 0x10<32> l00415426
l00415424:
	ecx_235 = Mem236[eax_222 + 28<i32>:word32]
l00415426:
	Mem241[ecx_235:byte] = 0<8>
	Mem246[eax_222 + 56<i32>:word32] = 0<32>
	Mem247[eax_222 + 60<i32>:word32] = 0<32>
	Mem248[eax_222 + 64<i32>:word32] = 6<32>
	Mem249[eax_222 + 68<i32>:word32] = 0<32>
	Mem253[eax_222 + 72<i32>:byte] = bl_363
	Mem254[eax_222 + 76<i32>:word32] = 0x201<32>
	Mem255[eax_222 + 84<i32>:word32] = 0<32>
	Mem256[eax_222 + 80<i32>:word32] = 0<32>
	edx_215 = edx_215 + 0x78<32>
	edi_204 = edi_204 - 1<32>
	branch edi_204 != 0<32> l004153E0
l00415294:
	Mem264[ebp_60 - 0x8C<32>:word32] = 0xFFFFFFFF<32>
	Mem265[ebp_60 - 120<i32>:word32] = eax_117
	Mem266[ebp_60 - 116<i32>:word32] = 0xF<32>
	Mem268[ebp_60 - 0x88<32>:byte] = al_267
	Mem269[ebp_60 - 96<i32>:word32] = eax_117
	Mem270[ebp_60 - 92<i32>:word32] = 0xF<32>
	Mem271[ebp_60 - 112<i32>:byte] = al_267
	Mem272[ebp_60 - 52<i32>:byte] = al_267
	Mem274[ebp_60 - 84<i32>:word64] = __movlp<real64[2],real64[1]>(0<128>)
	Mem275[ebp_60 - 76<i32>:word32] = 6<32>
	Mem276[ebp_60 - 72<i32>:word32] = eax_117
	Mem277[ebp_60 - 68<i32>:byte] = al_75
	Mem278[ebp_60 - 64<i32>:word32] = 0x201<32>
	Mem279[ebp_60 - 56<i32>:word32] = eax_117
	Mem280[ebp_60 - 60<i32>:word32] = eax_117
	Mem281[ebp_60 - 36<i32>:word32] = 0xFFFFFFFF<32>
	Mem282[ebp_60 - 32<i32>:word32] = 0x7FFFFFFF<32>
	Mem283[ebp_60 - 28<i32>:word32] = eax_117
	Mem285[ebp_60 - 4<i32>:word32] = 2<32>
	word32 esp_286 = esp_146 - 4<i32>
	Mem287[esp_286:word32] = ebp_60 - 0x8C<32>
	Mem290[esp_286 - 4<i32>:word32] = Mem287[ebp_60 + 8<i32>:word32]
	word32 edx_427
	fn004148B0(fn00416530(esi_182, edi_63, es, ds, Mem290[esp_286 - 4<i32>:word32], Mem290[esp_286:word32]) - 0x8C<32>, out edx_427, out ebp_201, out esi_206)
	word32 esp_299 = <invalid>
	esp_190 = esp_299 + 8<32>
l00415469:
	Mem320[esi_206 + 60<i32>:word32] = 0<32>
	branch Mem320[esi_206 + 64<i32>:word32] <u 0x10<32> l00415490
l00415490:
	Mem323[esi_206 + 44<i32>:byte] = 0<8>
	Mem333[fs:0x00000000<p32>:word32] = Mem323[ebp_201 - 12<i32>:word32]
	word32 ebp_346 = Mem333[ebp_201:word32]
	esiOut = Mem333[esp_190 + 8<i32>:word32]
	return ebp_346
l00415476:
	Mem349[Mem320[esi_206 + 44<i32>:word32]:byte] = 0<8>
	Mem351[fs:0x00000000<p32>:word32] = Mem349[ebp_201 - 12<i32>:word32]
	word32 ebp_360 = Mem351[ebp_201:word32]
	esiOut = Mem351[esp_190 + 8<i32>:word32]
	return ebp_360
fn00415200_exit:


word32 fn004154B0(word32 ecx, byte dl, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, byte bArg08, ptr32 & ebxOut, ptr32 & esOut, ptr32 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
// MayUse:  cs:[0..15] dl:[0..7] ds:[0..15] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..7]
// LiveOut: ds eax ebx es esp
// Trashed: SCZDOP ds eax ebp ebx ecx edi edx es esi esp Top xmm0
// Preserved:
fn004154B0_entry:
	ptr32 fp
	selector fs
	<unknown> tLoc48
	word32 dwLoc8C
	word32 dwLoc84
	word32 dwLoc80
l004154B0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_18 = Mem15[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem22[&tLoc48 + 16<i32>:word32] = ebx
	Mem25[&tLoc48 + 12<i32>:word32] = esi
	Mem28[&tLoc48 + 8<i32>:word32] = edi
	Mem30[&tLoc48 + 4<i32>:word32] = eax_18
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 ebx_37 = Mem34[ecx + 20<i32>:word32]
	word32 ecx_328 = 0<32>
l004154EA:
	word32 eax_332 = Mem44[ecx + 16<i32>:word32]
l004154F0:
	word32 dwLoc20_450 = ecx
	word32 edx_227 = ecx
	branch ebx_37 <u 0x10<32> l004154FF
l004154FA:
	edx_227 = Mem48[ecx:word32]
	dwLoc20_450 = edx_227
l004154FF:
	branch ecx_328 >=u eax_332 l004155CC
l00415507:
	Mem65[&tLoc48:word32] = eax_332 - ecx_328
	word32 eax_74 = memchr(edx_227 + ecx_328, CONVERT(dl, byte, int32), Mem73[&tLoc48:size_t])
	branch eax_74 == 0<32> l004155CC
l00415525:
	word32 edi_80 = eax_74 - dwLoc20_450
	branch edi_80 == 0xFFFFFFFF<32> l004155CC
l004155CC:
l00415531:
	edx_227 = edi_80 + 1<i32>
	branch edi_80 + 1<i32> >=u Mem73[ecx + 16<i32>:word32] l004155C0
l004155C0:
	branch (bArg08 & 1<8>) != 0<8> l004155EB
l004155EB:
	Mem97[&tLoc48:word32] = fn00402A60(ecx)
	word32 ebp_119
	word32 ebx_120
	word32 ecx_121
	word32 edx_123
	word32 esi_124
	word32 edi_662
	fn00411520(fn00403F80(&tLoc48 + 20<i32>, edi_80, Mem99[&tLoc48:word32]), es, ds, out ecx_121, out edx_123, out ebx_120, out ebp_119, out esi_124, out edi_662)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem133[&tLoc48:word32] = ebp_119
	word32 eax_150 = Mem148[0x0043A008<p32>:word32] ^ &tLoc48
	Mem154[fs:0<32>:word32] = fp - 0x54<32>
	word32 ebx_159 = Mem158[&tLoc48 + 8<i32>:word32]
	word32 ecx_160 = Mem158[&tLoc48 + 12<i32>:word32]
	Mem163[ebx_159:word32] = 0xFFFFFFFF<32>
	word32 eax_164 = Mem163[edx_123:word32]
	word32 edi_166 = Mem163[ecx_121:word32]
	word32 edx_168 = eax_164 - edi_166 + Mem163[&tLoc48 + 16<i32>:word32]
	branch edi_166 <u eax_164 l0041568F
l0041566F_thunk_fn0041568F:
	selector ds_175
	word32 ebx_178
	selector es_182
	word32 esi_665
	word32 ebp_664
	word32 eax_176 = fn0041568F(ecx_160, ebx_159, &tLoc48, ecx_121, edi_166, es, ds, SLICE(eax_150, byte, 0), esi_124, SLICE(ebx_120, byte, 0), dwLoc8C, SLICE(dwLoc84, byte, 0), dwLoc80, ebx_159, edx_168, ecx_121, out ebx_178, out ebp_664, out esi_665, out es_182, out ds_175)
	ebxOut = ebx_178
	esOut = es_182
	dsOut = ds_175
	return eax_176
l0041566F_thunk_fn00415671:
	selector ds_190
	word32 ebx_193
	selector es_197
	word32 esi_667
	word32 ebp_666
	word32 eax_191 = fn00415671(ecx_160, ebx_159, &tLoc48, ecx_121, edi_166, es, ds, eax_150, esi_124, ebx_120, dwLoc8C, dwLoc84, dwLoc80, ebx_159, edx_168, ecx_121, out ebx_193, out ebp_666, out esi_667, out es_197, out ds_190)
	ebxOut = ebx_193
	esOut = es_197
	dsOut = ds_190
	return eax_191
l004155C6:
l004155CF:
	Mem212[fs:0x00000000<p32>:word32] = eax_13
	word32 ebx_221 = Mem212[&tLoc48 + 16<i32>:word32]
	word32 ecx_663
	word32 eax_239
	fn00427500(eax_18 ^ fp - 4<i32>, edx_227, ebx_221, fp - 4<i32>, Mem212[&tLoc48 + 12<i32>:word32], Mem212[&tLoc48 + 8<i32>:word32], es, ds, Mem212[&tLoc48 + 16<i32>:word32], out eax_239, out ecx_663)
	ebxOut = ebx_221
	esOut = es
	dsOut = ds
	return eax_239
fn004154B0_exit:
l0041553D:
	word32 eax_250 = ecx
	branch ebx_37 <u 0x10<32> l00415546
l00415544:
	eax_250 = Mem73[ecx:word32]
l00415546:
	word32 ecx_256 = ecx
	branch ebx_37 <u 0x10<32> l0041554C
l0041554A:
	ecx_256 = Mem73[ecx:word32]
l0041554C:
	branch Mem73[edi_80 + 1<i32> + eax_250:byte] != Mem73[edi_80 + ecx_256:byte] l0041555A
l0041555A:
	word32 dwLoc20_497 = ecx
	branch ebx_37 <u 0x10<32> l00415567
l00415562:
	dwLoc20_497 = Mem272[ecx:word32]
l00415567:
	word32 eax_280 = ecx
	branch ebx_37 <u 0x10<32> l0041556D
l0041556B:
	eax_280 = Mem282[ecx:word32]
l0041556D:
	word32 eax_287 = eax_280 + Mem282[ecx + 16<i32>:word32]
	word32 ecx_288 = ecx
	branch ebx_37 <u 0x10<32> l00415579
l00415577:
	ecx_288 = Mem282[ecx:word32]
l00415579:
	word32 ecx_300 = ecx_288 + (edi_80 + 1<i32>)
	branch ecx_300 == eax_287 l00415599
l0041557F:
	word32 edi_309 = Mem282[dwArg04 + 12<i32>:word32]
l00415585:
	branch (SLICE(CONVERT(Mem282[edi_309 + CONVERT(Mem282[ecx_300:byte], byte, word32) * 2<32>:word16], word16, int32) >>u 2<32>, byte, 0) & 1<8>) == 0<8> l00415599
l00415594:
	ecx_300 = ecx_300 + 1<32>
	branch ecx_300 != eax_287 l00415585
l00415599:
	ecx_328 = ecx_300 - dwLoc20_497
	eax_332 = Mem282[ecx + 16<i32>:word32]
	branch ecx_328 >=u eax_332 l004155B8
l004155A3:
	word32 eax_335 = ecx
	branch ebx_37 <u 0x10<32> l004155AC
l004155AA:
	eax_335 = Mem282[ecx:word32]
l004155AC:
	eax_332 = Mem282[ecx + 16<i32>:word32]
	branch Mem282[eax_335 + ecx_328:byte] != dl l004155B8
l004155B7:
	ecx_328 = ecx_328 + 1<32>
l004155B8:
l00415555:
	ecx_328 = edi_80 + 2<i32>


byte fn00415610(word32 ecx, word32 edx, word32 ebx, word32 ebp, word32 esi, selector es, selector ds, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & esOut, ptr32 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ds eax ebp ebx es esi esp
// Trashed: SCZO ds eax ebp ebx ecx edi edx es esi esp Top xmm0
// Preserved:
fn00415610_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc04
	word32 dwLoc48
	word32 dwLoc40
	word32 dwLoc3C
l00415610:
	Mem6[&tLoc04:word32] = ebp
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ &tLoc04
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 ebx_38 = Mem37[&tLoc04 + 8<i32>:word32]
	word32 ecx_39 = Mem37[&tLoc04 + 12<i32>:word32]
	Mem42[ebx_38:word32] = 0xFFFFFFFF<32>
	word32 eax_43 = Mem42[edx:word32]
	word32 edi_45 = Mem42[ecx:word32]
	word32 edx_47 = eax_43 - edi_45 + Mem42[&tLoc04 + 16<i32>:word32]
	branch edi_45 <u eax_43 l0041566F_thunk_fn0041568F
l0041566F_thunk_fn0041568F:
	selector ds_59
	word32 ebp_61
	word32 ebx_62
	selector es_66
	word32 esi_67
	word32 eax_60 = fn0041568F(ecx_39, ebx_38, &tLoc04, ecx, edi_45, es, ds, SLICE(eax_27, byte, 0), esi, SLICE(ebx, byte, 0), dwLoc48, SLICE(dwLoc40, byte, 0), dwLoc3C, ebx_38, edx_47, ecx, out ebx_62, out ebp_61, out esi_67, out es_66, out ds_59)
	ebxOut = ebx_62
	ebpOut = ebp_61
	esiOut = esi_67
	esOut = es_66
	dsOut = ds_59
	return SLICE(eax_60, byte, 0)
l0041566F_thunk_fn00415671:
	selector ds_74
	word32 ebp_76
	word32 ebx_77
	selector es_81
	word32 esi_82
	word32 eax_75 = fn00415671(ecx_39, ebx_38, &tLoc04, ecx, edi_45, es, ds, eax_27, esi, ebx, dwLoc48, dwLoc40, dwLoc3C, ebx_38, edx_47, ecx, out ebx_77, out ebp_76, out esi_82, out es_81, out ds_74)
	ebxOut = ebx_77
	ebpOut = ebp_76
	esiOut = esi_82
	esOut = es_81
	dsOut = ds_74
	return SLICE(eax_75, byte, 0)
fn00415610_exit:


word32 fn00415671(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, word32 dwArg00, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg30, word32 dwArg34, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & esOut, ptr32 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004154B0
//      fn00415610
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31]
// LiveOut: ds eax ebp ebx es esi
// Trashed: SCZO ds eax ebp ebx ecx edi edx es esi Top xmm0
// Preserved: esp
fn00415671_entry:
l00415671:
	branch (Mem0[ebp + 20<i32>:byte] & 1<8>) != 0<8> l00415C3A
l00415675_thunk_fn0041568F:
	selector ds_19
	word32 ebp_21
	word32 ebx_22
	selector es_26
	word32 esi_27
	word32 eax_20 = fn0041568F(ecx, ebx, ebp, esi, edi, es, ds, SLICE(dwArg00, byte, 0), dwArg08, SLICE(dwArg0C, byte, 0), dwArg10, SLICE(dwArg18, byte, 0), dwArg1C, dwArg28, dwArg30, dwArg34, out ebx_22, out ebp_21, out esi_27, out es_26, out ds_19)
	ebxOut = ebx_22
	ebpOut = ebp_21
	esiOut = esi_27
	esOut = es_26
	dsOut = ds_19
	return eax_20
l00415675_thunk_fn0041568F:
	selector ds_34
	word32 ebp_36
	word32 ebx_37
	selector es_41
	word32 esi_42
	word32 eax_35 = fn0041568F(ecx, ebx, ebp, esi, edi, es, ds, SLICE(dwArg00, byte, 0), dwArg08, SLICE(dwArg0C, byte, 0), dwArg10, SLICE(dwArg18, byte, 0), dwArg1C, dwArg28, dwArg30, dwArg34, out ebx_37, out ebp_36, out esi_42, out es_41, out ds_34)
	ebxOut = ebx_37
	ebpOut = ebp_36
	esiOut = esi_42
	esOut = es_41
	dsOut = ds_34
	return eax_35
fn00415671_exit:


word32 fn0041568F(word32 ecx, word32 ebx, word32 ebp, word32 esi, word32 edi, selector es, selector ds, byte bArg00, word32 dwArg08, byte bArg0C, word32 dwArg10, byte bArg18, word32 dwArg1C, word32 dwArg28, word32 dwArg30, word32 dwArg34, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & esOut, ptr32 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004154B0
//      fn00415610
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0000:[0..7] Stack +0008:[0..31] Stack +000C:[8..15] Stack +0010:[0..31] Stack +0018:[8..15] Stack +001C:[0..31] Stack +0028:[0..31] Stack +0030:[0..31] Stack +0034:[0..31]
// LiveOut: ds eax ebp ebx es esi
// Trashed: SCZO ds eax ebp ebx ecx edi edx es esi esp Top xmm0
// Preserved: DP
fn0041568F_entry:
	ptr32 fp
	selector fs
	selector cs
	word32 dwArg00
	word32 dwArg0C
	word32 dwArg18
l0041568F:
	word24 eax_24_8_2643
	word32 eax_1393
	word32 eax_1023
	word32 eax_1033
	word32 eax_1038
	word32 eax_1047
	word32 eax_1153
	word32 eax_1088
	word32 ecx_1093
	branch Mem5[edi:byte] != widen(ecx, '|') l004156BB
l0041569B:
	word32 eax_13 = Mem5[ebp - 16<i32>:word32]
	Mem16[esi:word32] = Mem5[esi:word32] + 1<32>
	word32 ecx_17 = Mem16[esi:word32]
	Mem18[ebp - 25<i32>:byte] = 1<8>
	eax_24_8_2643 = SLICE(eax_13, word24, 8) (alias)
	branch ecx_17 <u Mem18[eax_13:word32] l004156BB
l004156BB:
	word24 eax_24_8_2647
	word32 edx_150
	word32 ecx_308
	word32 eax_154
	word32 esi_25 = Mem22[esi:word32]
	byte al_29 = widen(Mem22[ebp - 24<i32>:word32], '0')
	word32 edx_106 = Mem28[ebp - 24<i32>:word32]
	word32 esi_144 = Mem28[ebp - 32<i32>:word32]
	branch Mem28[esi_25:byte] == al_29 l004157BF
l004156D6:
	word32 ecx_35 = Mem28[esi_144:word32]
	word32 eax_36 = Mem28[edx_106 + 12<i32>:word32]
	Mem37[ebp - 40<i32>:word32] = ecx_35
	branch (SLICE(CONVERT(Mem37[eax_36 + CONVERT(Mem37[ecx_35:byte], byte, word32) * 2<32>:word16], word16, int32) >>u 2<32>, byte, 0) & 1<8>) == 0<8> l004157BF
l004156F0:
	word32 ecx_45 = Mem37[ebp - 16<i32>:word32]
	word32 eax_46 = Mem37[ebp - 40<i32>:word32]
	Mem47[ebp - 20<i32>:word32] = 0<32>
	branch eax_46 == Mem47[ecx_45:word32] l00415751
l00415701:
	word32 edi_51 = eax_46
l00415707:
	byte dl_55 = Mem54[edi_51:byte]
	branch (SLICE(CONVERT(Mem54[Mem54[edx_106 + 12<i32>:word32] + CONVERT(dl_55, byte, word32) * 2<32>:word16], word16, int32) >>u 2<32>, byte, 0) & 1<8>) == 0<8> l0041573C
l0041571A:
	Mem82[ebp - 20<i32>:word32] = CONVERT(narrow(edx_106, dl_55, '\0'), const char, int32) + Mem71[ebp - 20<i32>:word32] * 0xA<32> + 0xFFFFFFD0<32>
	edi_51 = edi_51 + 1<32>
	branch edi_51 != Mem82[ecx_45:word32] l00415707
l0041573C:
	ebx = Mem87[ebp - 44<i32>:word32]
	esi_144 = Mem87[ebp - 32<i32>:word32]
	edx_106 = Mem87[ebp - 24<i32>:word32]
	ecx_45 = Mem87[ebp - 16<i32>:word32]
	Mem93[ebp - 40<i32>:word32] = edi_51
	edi = Mem93[ebp - 48<i32>:word32]
	eax_46 = Mem93[ebp - 40<i32>:word32]
l00415751:
	Mem98[esi_144:word32] = eax_46
	branch eax_46 <u Mem98[ecx_45:word32] l0041576B
l0041576B:
	branch Mem105[Mem105[ebp - 40<i32>:word32]:byte] != widen(edx_106, '%') l004157A0
l0041577C:
	Mem119[ebx:word32] = Mem105[ebp - 20<i32>:word32] - 1<32>
	word32 eax_120 = Mem119[esi_144:word32]
	Mem123[esi_144:word32] = eax_120 + 1<32>
	eax_24_8_2647 = SLICE(eax_120 + 1<32>, word24, 8) (alias)
	branch Mem119[ebp - 25<i32>:byte] == 0<8> l00415A92
l00415791:
	eax_1153 = eax_120 + 1<32> - edi + Mem123[ebp + 16<i32>:word32]
	branch (Mem123[ebp + 20<i32>:byte] & 1<8>) != 0<8> l00415C88
l004157A0:
	word32 esi_136 = Mem133[esi_144:word32]
	byte al_140 = widen(Mem133[ebp - 24<i32>:word32], '$')
	word32 eax_143 = Mem139[ebp - 20<i32>:word32]
	esi_144 = Mem139[ebp - 32<i32>:word32]
	branch Mem139[esi_136:byte] != al_140 l00415800
l00415800:
	int64 edx_eax_146 = CONVERT(eax_143, word32, int64)
	Mem149[ebx + 60<i32>:word32] = SLICE(edx_eax_146, word32, 32)
	edx_150 = Mem149[ebp - 24<i32>:word32]
	Mem152[ebx + 56<i32>:word32] = SLICE(edx_eax_146, word32, 0)
	Mem153[ebx:word32] = 0xFFFFFFFF<32>
	eax_154 = Mem153[esi_144:word32]
	Mem155[ebp - 20<i32>:word32] = eax_154
l004157B7:
	edx_106 = Mem139[ebp - 24<i32>:word32]
	Mem158[ebx:word32] = eax_143 - 1<32>
	Mem160[esi_144:word32] = Mem158[esi_144:word32] + 1<32>
l004157BF:
	word32 ecx_164 = Mem163[ebp - 16<i32>:word32]
	word32 eax_1042 = Mem163[esi_144:word32]
	Mem167[ebp - 20<i32>:word32] = eax_1042
	branch eax_1042 == Mem167[ecx_164:word32] l00415861
l004157D1:
	Mem177[ebp - 40<i32>:byte] = Mem172[eax_1042:byte]
	word32 eax_186 = CONVERT(narrow(edx_106, Mem180[ebp + 0x28<32>:charconst ], '\0'), const char, int32)
	branch eax_186 >u 0x6C<32> l00415875
l004157F2:
	switch (eax_186 + 0xFFFFFFE0<32>) { l0041582F l00415875 l00415875 l00415841 l00415875 l00415875 l00415875 l00415845 l00415875 l00415875 l00415875 l00415835 l00415875 l0041581A l00415875 l00415875 l0041583B l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415820 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415826 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415875 l00415845 l00415875 l00415875 l00415875 l00415845 }
l00415826:
	Mem194[ebx + 76<i32>:word32] = Mem183[ebx + 76<i32>:word32] | 0x100<32>
l00415820:
	Mem198[ebx + 112<i32>:word32] = Mem183[ebx + 112<i32>:word32] | 4<32>
l0041583B:
	Mem202[ebx + 112<i32>:word32] = Mem183[ebx + 112<i32>:word32] | 1<32>
l0041581A:
	Mem206[ebx + 76<i32>:word32] = Mem183[ebx + 76<i32>:word32] | 0x40<32>
l00415835:
	Mem210[ebx + 76<i32>:word32] = Mem183[ebx + 76<i32>:word32] | 0x20<32>
l00415841:
	Mem214[ebx + 76<i32>:word32] = Mem183[ebx + 76<i32>:word32] | 0x18<32>
l00415875:
	Mem222[ebp - 20<i32>:word32] = Mem183[esi_144:word32]
l0041582F:
	Mem224[ebx + 112<i32>:word32] = Mem183[ebx + 112<i32>:word32] | 2<32>
l00415845:
	word32 eax_229 = Mem228[esi_144:word32]
	word32 ecx_231 = Mem228[ebp - 16<i32>:word32]
	edx_106 = Mem228[ebp - 24<i32>:word32]
	Mem234[esi_144:word32] = eax_229 + 1<32>
	Mem235[ebp - 20<i32>:word32] = eax_229 + 1<32>
	eax_1042 = eax_229 + 1<32>
	word32 ecx_236 = Mem235[ecx_231:word32]
	branch eax_229 + 1<32> != ecx_236 l004157D1
l0041585D:
	branch eax_229 + 1<32> <u ecx_236 l0041587A
l0041587A:
	byte al_249 = widen(Mem242[ebp - 24<i32>:word32], '*')
	word32 edx_253 = Mem248[esi_144:word32]
	branch Mem248[Mem248[ebp - 20<i32>:word32]:byte] != al_249 l004158D6
l0041588E:
	word32 eax_256 = Mem248[ebp - 16<i32>:word32]
	Mem258[ebp - 20<i32>:word32] = edx_253 + 1<32>
	edx_253 = edx_253 + 1<32>
	word32 eax_259 = Mem258[eax_256:word32]
	branch edx_253 + 1<32> == eax_259 l004158D4
l0041589B:
	word32 ecx_263 = Mem258[Mem258[ebp - 24<i32>:word32] + 12<i32>:word32]
l004158A3:
	branch (SLICE(CONVERT(Mem258[ecx_263 + CONVERT(Mem258[edx_253:byte], byte, word32) * 2<32>:word16], word16, int32) >>u 2<32>, byte, 0) & 1<8>) == 0<8> l004158B7
l004158B2:
	edx_253 = edx_253 + 1<32>
	branch edx_253 != eax_259 l004158A3
l004158B7:
	edi = Mem258[ebp - 48<i32>:word32]
	Mem284[ebp - 20<i32>:word32] = edx_253
	branch edx_253 == eax_259 l004158D4
l004158C1:
	byte al_293 = widen(Mem284[ebp - 24<i32>:word32], '$')
	edx_253 = Mem292[ebp - 20<i32>:word32]
	branch Mem292[edx_253:byte] != al_293 l004158D4
l004158D3:
	edx_253 = edx_253 + 1<32>
l004158D4:
	Mem304[esi_144:word32] = edx_253
l004158D6:
	ecx_308 = Mem307[ebp - 16<i32>:word32]
	Mem311[ebp - 20<i32>:word32] = edx_253
	eax_154 = edx_253
	branch edx_253 == Mem311[ecx_308:word32] l0041591A
l0041591A:
	edx_150 = Mem311[ebp - 24<i32>:word32]
l004158E2:
	word32 ecx_315 = CONVERT(Mem311[edx_253:byte], byte, word32)
	Mem316[ebp - 20<i32>:word32] = edx_253
	edx_150 = Mem316[ebp - 24<i32>:word32]
	branch (SLICE(CONVERT(Mem316[Mem316[edx_150 + 12<i32>:word32] + ecx_315 * 2<32>:word16], word16, int32) >>u 2<32>, byte, 0) & 1<8>) == 0<8> l0041591F
l0041591F:
	eax_154 = Mem316[ebp - 20<i32>:word32]
l004158F9:
	word32 eax_346 = fn00416CD0(ebp - 20<i32>, esi_144, Mem341[ebp - 16<i32>:word32], ebx + 56<i32>, edx_150)
	edx_150 = Mem344[ebp - 24<i32>:word32]
	eax_154 = Mem344[eax_346:word32]
	Mem357[ebp - 20<i32>:word32] = eax_154
	Mem358[esi_144:word32] = eax_154
l00415922:
	ecx_308 = Mem360[ebp - 16<i32>:word32]
l00415925:
	branch eax_154 <u Mem365[ecx_308:word32] l0041593D
l0041593D:
	branch Mem371[Mem371[ebp - 20<i32>:word32]:byte] != widen(edx_150, '.') l004159FF
l00415952:
	word32 eax_381 = Mem371[ebp - 16<i32>:word32]
	Mem385[esi_144:word32] = Mem371[esi_144:word32] + 1<32>
	word32 ecx_386 = Mem385[esi_144:word32]
	Mem387[ebp - 20<i32>:word32] = ecx_386
	branch ecx_386 == Mem387[eax_381:word32] l004159B8
l00415960:
	byte al_393 = widen(Mem387[ebp - 24<i32>:word32], '*')
	eax_381 = Mem392[ebp - 16<i32>:word32]
	branch Mem392[Mem392[ebp - 20<i32>:word32]:byte] != al_393 l004159B8
l00415975:
	word32 esi_399 = Mem392[esi_144:word32]
	word32 eax_400 = Mem392[eax_381:word32]
	word32 esi_401 = esi_399 + 1<32>
	word32 edx_402 = Mem392[ebp - 24<i32>:word32]
	branch esi_399 + 1<32> == eax_400 l004159AE
l00415981:
	word32 edi_405 = Mem392[edx_402 + 12<i32>:word32]
l00415984:
	branch (SLICE(CONVERT(Mem392[edi_405 + CONVERT(Mem392[esi_401:byte], byte, word32) * 2<32>:word16], word16, int32) >>u 2<32>, byte, 0) & 1<8>) == 0<8> l00415998
l00415993:
	esi_401 = esi_401 + 1<32>
	branch esi_401 != eax_400 l00415984
l00415998:
	edi = Mem392[ebp - 48<i32>:word32]
	branch esi_401 == eax_400 l004159AE
l0041599F:
	branch Mem431[esi_401:byte] != widen(edx_402, '$') l004159AE
l004159AD:
	esi_401 = esi_401 + 1<32>
l004159AE:
	word32 eax_443 = Mem442[ebp - 32<i32>:word32]
	Mem445[eax_443:word32] = esi_401
	esi_144 = eax_443
	eax_381 = Mem445[ebp - 16<i32>:word32]
l004159B8:
	word32 ecx_450 = Mem449[esi_144:word32]
	branch ecx_450 == Mem449[eax_381:word32] l004159F1
l004159BE:
	word32 edx_455 = Mem449[ebp - 24<i32>:word32]
	branch (SLICE(CONVERT(Mem449[Mem449[edx_455 + 12<i32>:word32] + CONVERT(Mem449[ecx_450:byte], byte, word32) * 2<32>:word16], word16, int32) >>u 2<32>, byte, 0) & 1<8>) == 0<8> l004159F1
l004159F1:
	Mem471[ebx + 64<i32>:word32] = 0<32>
	Mem472[ebx + 68<i32>:word32] = 0<32>
l004159D2:
	word32 eax_485 = fn00416CD0(ebp - 20<i32>, esi_144, Mem480[ebp - 16<i32>:word32], ebx + 64<i32>, edx_455)
	Mem494[ebp - 26<i32>:byte] = 1<8>
	Mem496[esi_144:word32] = Mem494[eax_485:word32]
l004159FF:
	word32 ecx_500 = Mem499[ebp - 16<i32>:word32]
	word32 eax_503 = Mem499[esi_144:word32]
	Mem504[ebp - 20<i32>:word32] = eax_503
	branch eax_503 == Mem504[ecx_500:word32] l00415A5E
l00415A0B:
	word32 edi_507 = Mem504[ebp - 24<i32>:word32]
	word32 ebx_508 = eax_503
l00415A10:
	branch Mem511[ebx_508:byte] == widen(edi_507, 'l') l00415A49
l00415A1E:
	branch Mem523[Mem511[esi_144:word32]:byte] == widen(edi_507, 'L') l00415A46
l00415A46:
	esi_144 = Mem523[ebp - 32<i32>:word32]
l00415A2E:
	word32 esi_534 = Mem533[Mem523[ebp - 32<i32>:word32]:word32]
	byte al_535 = widen(edi_507, 'h')
	esi_144 = Mem533[ebp - 32<i32>:word32]
	branch Mem533[esi_534:byte] != al_535 l00415A55
l00415A44:
l00415A49:
	word32 ebx_542 = Mem541[esi_144:word32]
	word32 eax_544 = Mem541[ebp - 16<i32>:word32]
	Mem546[esi_144:word32] = ebx_542 + 1<32>
	ebx_508 = ebx_542 + 1<32>
	branch ebx_542 + 1<32> != Mem546[eax_544:word32] l00415A10
l00415A55:
	edi = Mem550[ebp - 48<i32>:word32]
	ebx = Mem550[ebp - 44<i32>:word32]
	ecx_500 = Mem550[ebp - 16<i32>:word32]
l00415A5E:
	word32 eax_557 = Mem556[esi_144:word32]
	Mem559[ebp - 44<i32>:word32] = eax_557
	eax_24_8_2647 = SLICE(eax_557, word24, 8) (alias)
	branch eax_557 <u Mem559[ecx_500:word32] l00415A78
l00415A78:
	branch Mem559[ebp - 25<i32>:byte] == 0<8> l00415AA6
l00415A7E:
	branch Mem572[Mem572[ebp - 44<i32>:word32]:byte] != widen(Mem559[ebp - 24<i32>:word32], '|') l00415AA6
l00415AA6:
	word32 ecx_650
	word32 ecx_582 = Mem579[ebp - 24<i32>:word32]
	Mem587[ebp - 44<i32>:byte] = Mem585[Mem579[esi_144:word32]:byte]
	word32 eax_593 = CONVERT(narrow(ecx_582, Mem587[ebp + 0x2C<32>:charconst ], '\0'), const char, int32)
	branch eax_593 >u 0xFFFFFF88<32> l00415C0F
l00415ACA:
	word32 eax_615
	word32 eax_620
	eax_24_8_2647 = SLICE(CONVERT(Mem590[eax_593 + 0x415D91<32>:byte], byte, word32), word24, 8) (alias)
	switch (eax_593 + 0xFFFFFFBD<32>) { l00415BCC l00415C0F l00415AFA l00415C0F l00415BB6 l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415BDF l00415B6C l00415C0F l00415C0F l00415C0F l00415AD8 l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415C0F l00415BCC l00415B1D l00415AFE l00415B0D l00415BBF l00415C0F l00415B1D l00415C0F l00415C0F l00415C0F l00415C0F l00415C04 l00415AEB l00415ADC l00415C0F l00415C0F l00415BDF l00415B99 l00415B1D l00415C0F l00415C0F l00415ADC }
l00415B99:
	byte al_602 = widen(Mem590[ebp - 24<i32>:word32], ' ')
	Mem608[ebx + 112<i32>:word32] = Mem601[ebx + 112<i32>:word32] | 8<32>
	Mem611[ebx + 72<i32>:byte] = al_602
	Mem612[ebx:word32] = 0xFFFFFFFE<32>
l00415AEB:
	eax_615 = Mem590[ebx + 76<i32>:word32] & 0xFFFFF5FF<32> | 0x400<32>
l00415C04:
	Mem618[ebx:word32] = 0xFFFFFFFD<32>
l00415BBF:
	eax_620 = Mem590[ebx + 76<i32>:word32] & 0xFFFFC3FF<32>
l00415B0D:
	Mem628[ebx + 76<i32>:word32] = Mem590[ebx + 76<i32>:word32] & 0xFFFFEFFF<32> | 0x2000<32>
l00415B1D:
	eax_620 = Mem630[ebx + 76<i32>:word32] & 0xFFFFF3FF<32>
l00415B25:
	eax_615 = eax_620 | 0x200<32>
l00415AD8:
	Mem640[ebx + 76<i32>:word32] = Mem590[ebx + 76<i32>:word32] | 4<32>
l00415ADC:
	eax_615 = Mem644[ebx + 76<i32>:word32] & 0xFFFFF9FF<32> | 0x800<32>
l00415B6C:
	ecx_650 = Mem590[ebp - 16<i32>:word32]
	Mem652[esi_144:word32] = Mem590[esi_144:word32] + 1<32>
	word32 eax_653 = Mem652[esi_144:word32]
	eax_24_8_2647 = SLICE(eax_653, word24, 8) (alias)
	branch eax_653 <u Mem652[ecx_650:word32] l00415B88
l00415B88:
	Mem657[ebx + 72<i32>:byte] = Mem652[eax_653:byte]
l00415B77:
	eax_1393 = eax_653 - edi + Mem652[ebp + 16<i32>:word32]
	eax_24_8_2647 = SLICE(eax_1393, word24, 8) (alias)
	branch (Mem652[ebp + 20<i32>:byte] & 1<8>) != 0<8> l00415D0A
l00415B86:
l00415B8D:
	Mem682[ebx + 112<i32>:word32] = Mem680[ebx + 112<i32>:word32] | 8<32>
	Mem685[ebx:word32] = 0xFFFFFFFE<32>
l00415BDF:
	branch Mem590[ebp - 26<i32>:byte] == 0<8> l00415BF1
l00415BE5:
	Mem692[ebx + 104<i32>:word32] = Mem590[ebx + 64<i32>:word32]
	word32 eax_693 = Mem692[ebx + 68<i32>:word32]
	Mem694[ebx + 108<i32>:word32] = eax_693
	eax_24_8_2647 = SLICE(eax_693, word24, 8) (alias)
l00415BF1:
	Mem696[ebx + 64<i32>:word32] = 6<32>
	Mem697[ebx + 68<i32>:word32] = 0<32>
l00415BB6:
	Mem699[ebx + 76<i32>:word32] = Mem590[ebx + 76<i32>:word32] | 4<32>
l00415AFA:
	Mem703[ebx + 76<i32>:word32] = Mem590[ebx + 76<i32>:word32] | 4<32>
l00415AFE:
	eax_615 = Mem707[ebx + 76<i32>:word32] & 0xFFFFD3FF<32> | 0x1200<32>
l00415B2A:
	Mem716[ebx + 76<i32>:word32] = eax_615
	eax_24_8_2647 = SLICE(eax_615, word24, 8) (alias)
l00415C0F:
	word32 eax_723 = Mem590[esi_144:word32] - edi + Mem590[ebp + 16<i32>:word32]
	eax_24_8_2647 = SLICE(eax_723, word24, 8) (alias)
	branch (Mem590[ebp + 20<i32>:byte] & 1<8>) == 0<8> l00415B2D
l00415C20:
	word32 eax_734 = fn00403F80(ebp - 68<i32>, eax_723, Mem590[ebp - 36<i32>:word32])
	Mem738[ebp - 4<i32>:word32] = 8<32>
	word32 ebp_914
	word32 edx_918
	word32 edi_2918
	word32 ebx_2916
	word32 esi_2917
	word32 ecx_2915
	fn00411520(eax_734, es, ds, out ecx_2915, out edx_918, out ebx_2916, out ebp_914, out esi_2917, out edi_2918)
l00415C3A:
	word32 eax_933 = fn00403F80(ebp_914 - 68<i32>, Mem928[ebp_914 + 16<i32>:word32], edx_918)
	Mem937[ebp_914 - 4<i32>:word32] = 0<32>
	word32 esi_2921
	word32 edi_2922
	word32 ebx_2920
	word32 edx_2919
	fn00411520(eax_933, es, ds, out ecx_1093, out edx_2919, out ebx_2920, out ebp, out esi_2921, out edi_2922)
l00415BCC:
	Mem953[ebx + 104<i32>:word32] = 1<32>
	Mem954[ebx + 108<i32>:word32] = 0<32>
l00415B2D:
	ecx_650 = Mem963[ebp - 16<i32>:word32]
l00415B30:
	word32 ebx_977 = Mem976[esi_144:word32]
	Mem982[esi_144:word32] = ebx_977 + 1<32>
	branch Mem976[ebp - 25<i32>:byte] == 0<8> l00415A92
l00415B3F:
	branch ebx_977 + 1<32> == Mem982[ecx_650:word32] l00415B56
l00415B43:
	branch Mem1001[ebx_977 + 1<32>:byte] == widen(Mem982[ebp - 24<i32>:word32], '|') l00415A90
l00415B56:
	eax_1023 = Mem1007[esi_144:word32] - edi + Mem1007[ebp + 16<i32>:word32]
	eax_24_8_2647 = SLICE(eax_1023, word24, 8) (alias)
	branch (Mem1007[ebp + 20<i32>:byte] & 1<8>) != 0<8> l00415CF0
l00415B67:
l00415A90:
	Mem1030[esi_144:word32] = Mem1028[esi_144:word32] + 1<32>
l00415A67:
	eax_1033 = eax_557 - edi + Mem559[ebp + 16<i32>:word32]
	eax_24_8_2647 = SLICE(eax_1033, word24, 8) (alias)
	branch (Mem559[ebp + 20<i32>:byte] & 1<8>) != 0<8> l00415CD6
l00415A76:
l00415929:
	eax_1038 = eax_154 - edi + Mem365[ebp + 16<i32>:word32]
	eax_24_8_2647 = SLICE(eax_1038, word24, 8) (alias)
	branch (Mem365[ebp + 20<i32>:byte] & 1<8>) != 0<8> l00415CBC
l00415938:
l00415861:
	eax_1047 = eax_1042 - edi + Mem1046[ebp + 16<i32>:word32]
	eax_24_8_2647 = SLICE(eax_1047, word24, 8) (alias)
	branch (Mem1046[ebp + 20<i32>:byte] & 1<8>) != 0<8> l00415CA2
l00415870:
l00415A92:
	Mem1071[fs:0x00000000<p32>:word32] = Mem1054[ebp - 12<i32>:word32]
	word32 ebp_1085 = Mem1071[ebp:word32]
	ebxOut = dwArg0C
	ebpOut = ebp_1085
	esiOut = dwArg08
	esOut = es
	dsOut = ds
	return SEQ(eax_24_8_2647, 1<8>)
l00415757:
	eax_1088 = eax_46 - edi + Mem98[ebp + 16<i32>:word32]
	eax_24_8_2643 = SLICE(eax_1088, word24, 8) (alias)
	branch (Mem98[ebp + 20<i32>:byte] & 1<8>) != 0<8> l00415C6E
l00415766:
l004156AA:
	ecx_1093 = ecx_17 - edi + Mem18[ebp + 16<i32>:word32]
	branch (Mem18[ebp + 20<i32>:byte] & 1<8>) != 0<8> l00415C54
l00415C54:
	word32 eax_1107 = fn00403F80(ebp - 68<i32>, ecx_1093, Mem1098[ebp - 36<i32>:word32])
	Mem1111[ebp - 4<i32>:word32] = 1<32>
	word32 ebx_2882
	word32 edx_2881
	word32 esi_2883
	word32 edi_2884
	word32 ecx_2880
	eax_1088 = fn00411520(eax_1107, es, ds, out ecx_2880, out edx_2881, out ebx_2882, out ebp, out esi_2883, out edi_2884)
l00415C6E:
	word32 eax_1142 = fn00403F80(ebp - 68<i32>, eax_1088, Mem1133[ebp - 36<i32>:word32])
	Mem1146[ebp - 4<i32>:word32] = 2<32>
	word32 edi_2889
	word32 edx_2886
	word32 ebx_2887
	word32 esi_2888
	word32 ecx_2885
	eax_1153 = fn00411520(eax_1142, es, ds, out ecx_2885, out edx_2886, out ebx_2887, out ebp, out esi_2888, out edi_2889)
l00415C88:
	word32 eax_1177 = fn00403F80(ebp - 68<i32>, eax_1153, Mem1168[ebp - 36<i32>:word32])
	Mem1181[ebp - 4<i32>:word32] = 3<32>
	word32 ebx_2892
	word32 esi_2893
	word32 edi_2894
	word32 ecx_2890
	word32 edx_2891
	eax_1047 = fn00411520(eax_1177, es, ds, out ecx_2890, out edx_2891, out ebx_2892, out ebp, out esi_2893, out edi_2894)
l00415CA2:
	word32 eax_1212 = fn00403F80(ebp - 68<i32>, eax_1047, Mem1203[ebp - 36<i32>:word32])
	Mem1216[ebp - 4<i32>:word32] = 4<32>
	word32 ebx_2897
	word32 esi_2898
	word32 edi_2899
	word32 edx_2896
	word32 ecx_2895
	eax_1038 = fn00411520(eax_1212, es, ds, out ecx_2895, out edx_2896, out ebx_2897, out ebp, out esi_2898, out edi_2899)
l00415CBC:
	word32 eax_1252 = fn00403F80(ebp - 68<i32>, eax_1038, Mem1243[ebp - 36<i32>:word32])
	Mem1256[ebp - 4<i32>:word32] = 5<32>
	word32 esi_2903
	word32 ecx_2900
	word32 edi_2904
	word32 edx_2901
	word32 ebx_2902
	eax_1033 = fn00411520(eax_1252, es, ds, out ecx_2900, out edx_2901, out ebx_2902, out ebp, out esi_2903, out edi_2904)
l00415CD6:
	word32 eax_1287 = fn00403F80(ebp - 68<i32>, eax_1033, Mem1278[ebp - 36<i32>:word32])
	Mem1291[ebp - 4<i32>:word32] = 6<32>
	word32 esi_2908
	word32 edx_2906
	word32 ebx_2907
	word32 edi_2909
	word32 ecx_2905
	eax_1023 = fn00411520(eax_1287, es, ds, out ecx_2905, out edx_2906, out ebx_2907, out ebp, out esi_2908, out edi_2909)
l00415CF0:
	word32 eax_1322 = fn00403F80(ebp - 68<i32>, eax_1023, Mem1313[ebp - 36<i32>:word32])
	Mem1326[ebp - 4<i32>:word32] = 9<32>
	word32 esi_2913
	word32 edx_2911
	word32 ebx_2912
	word32 ecx_2910
	word32 edi_2914
	eax_1393 = fn00411520(eax_1322, es, ds, out ecx_2910, out edx_2911, out ebx_2912, out ebp, out esi_2913, out edi_2914)
l00415D0A:
	word32 eax_1417 = fn00403F80(ebp - 68<i32>, eax_1393, Mem1408[ebp - 36<i32>:word32])
	Mem1421[ebp - 4<i32>:word32] = 7<32>
	word32 ebp_1429
	word32 ebx_1430
	word32 ecx_1431
	word32 edi_1432
	word32 edx_1433
	word32 esi_1434
	fn00411520(eax_1417, es, ds, out ecx_1431, out edx_1433, out ebx_1430, out ebp_1429, out esi_1434, out edi_1432)
	byte al_1447 = SLICE(dwArg00, byte, 0)
	Mem1449[ecx_1431 + 0x59<32>:byte] = Mem1421[ecx_1431 + 0x59<32>:byte] + al_1447
	Mem1452[ebp_1429 + 88<i32>:byte] = Mem1449[ebp_1429 + 88<i32>:byte] + al_1447
	byte dh_1454 = SLICE(edx_1433, byte, 8)
	Mem1456[0x1A004158<p32>:byte] = Mem1452[0x1A004158<p32>:byte] + dh_1454
	Mem1462[ebx_1430:byte] = Mem1456[ebx_1430:byte] + SLICE(ebx_1430, byte, 8)
	Mem1468[dwArg08:byte] = Mem1462[dwArg08:byte] + SLICE(dwArg08, byte, 8)
	Mem1474[esi_1434:byte] = Mem1468[esi_1434:byte] + SLICE(dwArg0C, byte, 8)
	Mem1479[ebp_1429 + 88<i32>:byte] = Mem1474[ebp_1429 + 88<i32>:byte] + dh_1454
	byte al_1481 = SLICE(dwArg10, byte, 0)
	Mem1483[dwArg10:byte] = Mem1479[dwArg10:byte] + al_1481
	byte cl_1484 = SLICE(ecx_1431, byte, 0) + 8<8>
	Mem1486[dwArg10:byte] = Mem1483[dwArg10:byte] | cl_1484
	Mem1489[dwArg10:word32] = Mem1486[dwArg10:word32] + (ecx_1431 + 8<32>)
	Mem1491[dwArg10:byte] = Mem1489[dwArg10:byte] | cl_1484
	byte cl_1493 = cl_1484 + Mem1491[dwArg10:byte]
	Mem1495[dwArg10:byte] = Mem1491[dwArg10:byte] | cl_1493
	word32 ecx_1499 = SEQ(SLICE(ecx_1431 + 8<32>, word24, 8), cl_1493) + Mem1495[dwArg10:word32]
	Mem1502[0x08080808<p32>:byte] = Mem1495[0x08080808<p32>:byte] | al_1481 + 8<8>
	byte cl_1506 = SLICE(ecx_1499, byte, 0)
	word32 eax_1505 = SEQ(SLICE(dwArg10, word24, 8), al_1481 + 8<8>)
	Mem1508[eax_1505:byte] = Mem1502[eax_1505:byte] | cl_1506
	Mem1511[eax_1505:byte] = Mem1508[eax_1505:byte] | cl_1506
	Mem1514[eax_1505:byte] = Mem1511[eax_1505:byte] | cl_1506
	Mem1517[eax_1505:byte] = Mem1514[eax_1505:byte] | cl_1506
	Mem1522[eax_1505:byte] = Mem1520[eax_1505:byte] | cl_1506
	Mem1525[eax_1505:byte] = Mem1522[eax_1505:byte] | cl_1506
	Mem1528[eax_1505:byte] = Mem1525[eax_1505:byte] | cl_1506
	Mem1531[eax_1505:byte] = Mem1528[eax_1505:byte] | cl_1506
	Mem1534[eax_1505:byte] = Mem1531[eax_1505:byte] | cl_1506
	Mem1537[eax_1505:byte] = Mem1534[eax_1505:byte] | cl_1506
	Mem1540[eax_1505:byte] = Mem1537[eax_1505:byte] | cl_1506
	Mem1543[eax_1505:byte] = Mem1540[eax_1505:byte] | cl_1506
	Mem1546[eax_1505:byte] = Mem1543[eax_1505:byte] | cl_1506
	Mem1549[eax_1505:byte] = Mem1546[eax_1505:byte] | cl_1506
	Mem1552[eax_1505:byte] = Mem1549[eax_1505:byte] | cl_1506
	Mem1555[eax_1505:byte] = Mem1552[eax_1505:byte] | cl_1506
	Mem1558[eax_1505:byte] = Mem1555[eax_1505:byte] | cl_1506
	Mem1561[eax_1505:byte] = Mem1558[eax_1505:byte] | cl_1506
	Mem1564[eax_1505:byte] = Mem1561[eax_1505:byte] | cl_1506
	Mem1567[eax_1505:byte] = Mem1564[eax_1505:byte] | cl_1506
	Mem1570[edi_1432:byte] = Mem1567[edi_1432:byte] | al_1481 + 8<8>
	Mem1573[eax_1505:byte] = Mem1570[eax_1505:byte] | cl_1506
	Mem1576[eax_1505:byte] = Mem1573[eax_1505:byte] | cl_1506
	Mem1579[eax_1505:byte] = Mem1576[eax_1505:byte] | cl_1506
	Mem1582[eax_1505:byte] = Mem1579[eax_1505:byte] | cl_1506
	byte cl_1584 = cl_1506 + Mem1582[eax_1505:byte]
	Mem1586[eax_1505:byte] = Mem1582[eax_1505:byte] | cl_1584
	byte cl_1588 = cl_1584 + Mem1586[edi_1432:byte]
	Mem1606[esi_1434 + 0xDF00415B<32>:byte] = Mem1586[esi_1434 + 0xDF00415B<32>:byte] + SLICE(dwArg18, byte, 8)
	word32 ecx_1596 = SEQ(SLICE(ecx_1499, word24, 8), cl_1588)
	Mem1612[dwArg1C + 65<i32> + dwArg1C * 2<32>:byte] = Mem1606[dwArg1C + 65<i32> + dwArg1C * 2<32>:byte] + SLICE(ecx_1596 + 3<32>, byte, 8)
	byte bl_1613 = SLICE(dwArg1C, byte, 0)
	Mem1619[0xFE00415B<p32>:byte] = Mem1612[0xFE00415B<p32>:byte] + bl_1613
	Mem1625[0xBF00415B<p32>:byte] = Mem1619[0xBF00415B<p32>:byte] + (cl_1588 + 5<8>)
	byte al_1614 = al_1481 + 8<8> + bl_1613
	Mem1630[fp + 0x2C<32> + dwArg28 * 2<32>:byte] = Mem1625[fp + 0x2C<32> + dwArg28 * 2<32>:byte] + al_1614
	byte bl_1634 = SLICE(dwArg28, byte, 0) + SLICE(ecx_1596 + 7<32>, byte, 8)
	Mem1643[ecx_1596 + 0xF004164<32>:byte] = Mem1630[ecx_1596 + 0xF004164<32>:byte] + bl_1634
	word32 eax_1648 = SEQ(SLICE(dwArg10, word16, 16), SLICE(dwArg10, byte, 8) + cl_1588 + bl_1634, al_1614)
	Mem1650[eax_1648:byte] = Mem1643[eax_1648:byte] + al_1614
	Mem1652[dwArg34 + 2<i32>:word16] = cs
	Mem1654[esi_1434:word32] = Mem1652[esi_1434:word32] + (ecx_1596 + 0xA<32>)
	byte cl_1656 = cl_1588 + 0xA<8> + Mem1654[esi_1434:byte]
	Mem1658[dwArg34:word16] = cs
	Mem1660[dwArg34 - 2<i32>:word16] = cs
	Mem1662[dwArg34 - 4<i32>:word16] = cs
	Mem1664[dwArg34 - 6<i32>:word16] = cs
	Mem1666[dwArg34 - 8<i32>:word16] = cs
	Mem1668[dwArg34 - 10<i32>:word16] = cs
	Mem1670[dwArg34 - 12<i32>:word16] = cs
	Mem1672[dwArg34 - 14<i32>:word16] = cs
	Mem1674[dwArg34 - 16<i32>:word16] = cs
	Mem1676[dwArg34 - 18<i32>:word16] = cs
	word24 ecx_24_8_1677 = SLICE(ecx_1596 + 0xA<32>, word24, 8)
	word32 ecx_1678 = SEQ(ecx_24_8_1677, cl_1656)
	word32 eax_1679 = eax_1648 + Mem1676[esi_1434 + ecx_1678:word32]
	Mem1681[dwArg34 - 20<i32>:word16] = cs
	Mem1683[dwArg34 - 22<i32>:word16] = cs
	Mem1686[dwArg34 - 24<i32>:word16] = cs
	Mem1688[dwArg34 - 26<i32>:word16] = cs
	Mem1690[dwArg34 - 28<i32>:word16] = cs
	Mem1692[dwArg34 - 30<i32>:word16] = cs
	Mem1694[dwArg34 - 32<i32>:word16] = cs
	Mem1696[dwArg34 - 34<i32>:word16] = cs
	Mem1699[esi_1434:byte] = Mem1696[esi_1434:byte] + (SLICE(eax_1679, byte, 0) + 0xE<8>)
	selector es_1700 = Mem1699[dwArg34 - 34<i32>:selector]
	Mem1703[ecx_1678:byte] = Mem1699[ecx_1678:byte] | cl_1656
	Mem1706[dwArg34 - 34<i32>:word16] = cs
	Mem1708[dwArg34 - 36<i32>:word16] = es_1700
	Mem1710[dwArg34 - 38<i32>:word16] = cs
	Mem1712[dwArg34 - 40<i32>:word16] = cs
	Mem1714[dwArg34 - 42<i32>:word16] = cs
	Mem1716[dwArg34 - 44<i32>:word16] = cs
	word32 ebx_1718 = SEQ(SLICE(dwArg28, word24, 8), bl_1634)
	byte cl_1719 = cl_1656 | Mem1716[ebx_1718:byte]
	Mem1722[dwArg34 - 46<i32>:word16] = cs
	word32 ecx_1724 = SEQ(ecx_24_8_1677, cl_1719) + Mem1722[0x0C0E0E06<p32>:word32]
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem1726[dwArg34 - 50<i32>:word32] = ebp_1429
	Mem1729[dwArg34 - 54<i32>:word32] = 0xFFFFFFFF<32>
	Mem1731[dwArg34 - 58<i32>:word32] = 0x42EDB8<32>
	Mem1734[dwArg34 - 62<i32>:word32] = Mem1731[fs:0<32>:word32]
	Mem1737[dwArg34 - 0x62<32>:word32] = ebx_1718
	Mem1739[dwArg34 - 0x66<32>:word32] = esi_1434
	Mem1741[dwArg34 - 0x6A<32>:word32] = edi_1432
	Mem1745[dwArg34 - 0x6E<32>:word32] = Mem1741[0x0043A008<p32>:word32] ^ dwArg34 - 50<i32>
	Mem1747[fs:0<32>:word32] = dwArg34 - 62<i32>
	Mem1748[dwArg34 - 74<i32>:word32] = dwArg30
	branch Mem1748[ecx_1724 + 40<i32>:byte] == 0<8> l00415E48
l00415E41_thunk_fn00415E48:
	word32 ebp_1753
	word32 ebx_1754
	word32 esi_1758
	word32 edi_2923
	word32 eax_1752 = fn00415E48(dwArg34 - 50<i32>, ecx_1724, es_1700, es, out ebx_1754, out ebp_1753, out esi_1758, out edi_2923)
	ebxOut = ebx_1754
	ebpOut = ebp_1753
	esiOut = esi_1758
	esOut = es_1700
	dsOut = es
	return eax_1752
l00415E41_thunk_fn00415E43:
	word32 ebp_1768
	word32 ebx_1769
	word32 esi_1773
	word32 edi_2924
	word32 eax_1767 = fn00415E43(ecx_1724, dwArg34 - 50<i32>, es_1700, es, out ebx_1769, out ebp_1768, out esi_1773, out edi_2924)
	ebxOut = ebx_1769
	ebpOut = ebp_1768
	esiOut = esi_1773
	esOut = es_1700
	dsOut = es
	return eax_1767
l004156B9:
l0041567B:
	Mem1788[fs:0x00000000<p32>:word32] = Mem1785[ebp - 12<i32>:word32]
	word32 ebp_1798 = Mem1788[ebp:word32]
	ebxOut = dwArg0C
	ebpOut = ebp_1798
	esiOut = dwArg08
	esOut = es
	dsOut = ds
	return SEQ(eax_24_8_2643, 0<8>)
fn0041568F_exit:


word32 fn00415E10(word32 ecx, selector es, selector ds, ptr32 & ebxOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404080
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebx edi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00415E10_entry:
	ptr32 fp
	selector fs
l00415E10:
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	branch Mem33[ecx + 40<i32>:byte] == 0<8> l00415E41_thunk_fn00415E48
l00415E41_thunk_fn00415E48:
	word32 ebx_45
	word32 edi_47
	word32 ebp_99
	word32 esi_100
	word32 eax_43 = fn00415E48(fp - 4<i32>, ecx, es, ds, out ebx_45, out ebp_99, out esi_100, out edi_47)
	ebxOut = ebx_45
	ediOut = edi_47
	return eax_43
l00415E41_thunk_fn00415E43:
	word32 ebx_60
	word32 edi_62
	word32 ebp_101
	word32 esi_102
	word32 eax_58 = fn00415E43(ecx, fp - 4<i32>, es, ds, out ebx_60, out ebp_101, out esi_102, out edi_62)
	ebxOut = ebx_60
	ediOut = edi_62
	return eax_58
fn00415E10_exit:


word32 fn00415E43(word32 ecx, word32 ebp, selector es, selector ds, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041568F
//      fn00415E10
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx edi esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00415E43_entry:
l00415E43:
	word32 esi_9
	fn00416BB0(ecx, out esi_9)
l00415E43_thunk_fn00415E48:
	word32 ebp_22
	word32 ebx_23
	word32 edi_25
	word32 esi_27
	word32 eax_21 = fn00415E48(ebp, esi_9, es, ds, out ebx_23, out ebp_22, out esi_27, out edi_25)
	ebxOut = ebx_23
	ebpOut = ebp_22
	esiOut = esi_27
	ediOut = edi_25
	return eax_21
fn00415E43_exit:


word32 fn00415E48(word32 ebp, word32 esi, selector es, selector ds, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041568F
//      fn00415E10
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx edi esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00415E48_entry:
	selector fs
	word32 dwArg04
	word32 dwArg08
	word32 dwArg0C
l00415E48:
	word32 edi_190 = Mem0[esi + 32<i32>:word32]
	word32 ecx_7 = Mem0[esi + 36<i32>:word32]
	branch edi_190 < ecx_7 l00415E61
l00415E61:
	word32 ebx_104 = Mem0[esi:word32]
	word32 ecx_13 = Mem0[esi + 4<i32>:word32] - ebx_104
	Mem16[ebp - 16<i32>:word32] = 0<32>
	word32 edx_18 = SLICE(ecx_13 *s64 0x88888889<32>, word32, 32) + ecx_13
	branch (edx_18 >> 6<32> >>u 0x1F<32>) + (edx_18 >> 6<32>) == 0<32> l00415EF6
l00415E84:
	Mem29[ebp - 20<i32>:word32] = 0<32>
	word32 eax_115 = 0<32>
	word32 ecx_109 = 0<32>
l00415E90:
	edi_190 = Mem31[esi + 32<i32>:word32]
	word32 edx_35 = eax_115 + ebx_104
	branch Mem31[edx_35:word32] != edi_190 l00415ECA
l00415E9A:
	branch Mem31[esi + 0x90<32>:byte] != 0<8> l00415EAB
l00415EA8_1:
l00415EAB:
	ebp = fn00417600(edx_35, es, ds, edx_35 + 4<i32>, esi + 72<i32>, out esi)
	ebx_104 = Mem60[esi:word32]
	edi_190 = Mem60[esi + 32<i32>:word32]
	eax_115 = Mem60[ebp - 20<i32>:word32]
	ecx_109 = Mem60[ebp - 16<i32>:word32]
l00415ECA:
	Mem99[ebp - 20<i32>:word32] = eax_115 + 0x78<32>
	Mem101[ebp - 16<i32>:word32] = ecx_109 + 1<32>
	word32 ecx_105 = Mem101[esi + 4<i32>:word32] - ebx_104
	word32 edx_108 = SLICE(ecx_105 *s64 0x88888889<32>, word32, 32) + ecx_105
	ecx_109 = Mem101[ebp - 16<i32>:word32]
	eax_115 = Mem101[ebp - 20<i32>:word32]
	branch ecx_109 <u ((edx_108 >> 6<32>) >>u 0x1F<32>) + (edx_108 >> 6<32>) l00415E90
l00415E52:
	branch (Mem0[esi + 68<i32>:byte] & 4<8>) != 0<8> l00415F3C
l00415F3C:
	word32 eax_125 = fn00404040(ebp - 44<i32>, edi_190, ecx_7)
	Mem129[ebp - 4<i32>:word32] = 0<32>
	word32 edx_141
	word32 ecx_139 = fn004175B0(eax_125, esi, edi_190, es, ds, out edx_141)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem160[ecx_139:word32] = 0x00431384<p32>
	Mem162[ecx_139 + 4<i32>:word64] = 0<64>
	_std_exception_copy(edx_141 + 4<i32>, ecx_139 + 4<i32>)
	Mem172[ecx_139:word32] = 0x004324E8<p32>
	Mem176[ecx_139 + 12<i32>:word32] = Mem172[edx_141 + 12<i32>:word32]
	Mem178[ecx_139 + 16<i32>:word32] = Mem176[edx_141 + 16<i32>:word32]
	Mem180[ecx_139 + 24<i32>:word32] = 0<32>
	Mem181[ecx_139 + 28<i32>:word32] = 0<32>
	Mem182[ecx_139 + 32<i32>:word32] = 0<32>
	Mem183[ecx_139 + 36<i32>:word32] = 0xFFFFFFFF<32>
	Mem184[ecx_139:word32] = 0x00432480<p32>
	Mem185[ecx_139 + 20<i32>:word32] = 0x00432420<p32>
	ebxOut = ebx_138
	ebpOut = ebp_137
	esiOut = esi_142
	ediOut = edi_140
	return ecx_139
l00415E5C:
l00415EF6:
	word32 edi_192 = edi_190 + 1<32>
	Mem196[esi + 32<i32>:word32] = edi_192
	branch Mem194[esi + 24<i32>:word32] == 0<32> l00415F28
l00415F00:
	word32 ebx_198 = Mem196[esi + 36<i32>:word32]
	branch edi_192 >= ebx_198 l00415F28
l00415F07:
	branch (Mem202[Mem202[esi + 12<i32>:word32] + (edi_192 >>u 5<32>) * 4<32>:word32] & 1<32> << (SLICE(edi_192, byte, 0) & 0x1F<8>)) == 0<32> l00415F28
l00415F20:
	edi_192 = edi_192 + 1<32>
	Mem216[esi + 32<i32>:word32] = edi_192
	branch edi_192 < ebx_198 l00415F07
l00415F28:
	Mem231[fs:0x00000000<p32>:word32] = Mem225[ebp - 12<i32>:word32]
	word32 ebp_244 = Mem231[ebp:word32]
	ebxOut = dwArg0C
	ebpOut = ebp_244
	esiOut = dwArg08
	ediOut = dwArg04
	return esi
fn00415E48_exit:


word32 fn00415F60(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00414540
// MayUse:  ecx:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: edi esi esp
fn00415F60_entry:
l00415F60:
	Mem18[ecx:word32] = 0x00431384<p32>
	Mem20[ecx + 4<i32>:word64] = 0<64>
	_std_exception_copy(edx + 4<i32>, ecx + 4<i32>)
	Mem30[ecx:word32] = 0x004324E8<p32>
	Mem34[ecx + 12<i32>:word32] = Mem30[edx + 12<i32>:word32]
	Mem36[ecx + 16<i32>:word32] = Mem34[edx + 16<i32>:word32]
	Mem38[ecx + 24<i32>:word32] = 0<32>
	Mem39[ecx + 28<i32>:word32] = 0<32>
	Mem40[ecx + 32<i32>:word32] = 0<32>
	Mem41[ecx + 36<i32>:word32] = 0xFFFFFFFF<32>
	Mem42[ecx:word32] = 0x00432480<p32>
	Mem43[ecx + 20<i32>:word32] = 0x00432420<p32>
	return ecx
fn00415F60_exit:


word32 fn00415FD0(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00414540
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebx
// Trashed: SCZDOP eax ebx ecx edx Top xmm0
// Preserved: ebp edi esi esp
fn00415FD0_entry:
	ptr32 fp
	selector fs
l00415FD0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 16<i32>
	Mem37[ecx + 40<i32>:word32] = 0x00432380<p32>
	Mem38[ecx + 48<i32>:word32] = 0x0043248C<p32>
	word32 edi_46
	word32 esi_47 = fn00414AF0(ecx, edx, out edi_46)
	word32 eax_56 = Mem54[edi_46 + 40<i32>:word32]
	Mem57[edi_46:word32] = 0x00432428<p32>
	Mem58[edi_46 + 20<i32>:word32] = 0x004324AC<p32>
	Mem60[Mem58[eax_56 + 4<i32>:word32] + 40<i32> + edi_46:word32] = 0x0043249C<p32>
	word32 edx_62 = Mem60[Mem60[edi_46 + 40<i32>:word32] + 4<i32>:word32]
	Mem64[edx_62 + 36<i32> + edi_46:word32] = edx_62 - 8<i32>
	word32 ebx_78 = fn00403D50(edi_46 + 20<i32>, esi_47 + 20<i32> & 0<32> - (esi_47 != 0<32>), es, ds)
	Mem91[fs:0x00000000<p32>:word32] = eax_13
	return ebx_78
fn00415FD0_exit:


word32 fn00416080(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412170
//      fn00416DA0
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00416080_entry:
l00416080:
	word32 esi_17 = dwArg08
	branch dwArg08 == dwArg0C l004160CF
l00416099:
	word32 ebx_25 = Mem21[ecx:word32]
	word32 edi_26 = Mem21[ecx + 4<i32>:word32]
	ebx_117 = ebx_25
l004160A1:
	word32 ebx_117
	branch ebx_117 == edi_26 l004160CC
l004160A5:
	word32 eax_33 = esi_17
	word32 ecx_34 = ebx_117
	branch esi_17 == dwArg0C l004160C3
l004160AD:
l004160B0:
	branch ecx_34 == edi_26 l004160DD
l004160B4:
	branch Mem27[eax_33:byte] != Mem27[ecx_34:byte] l004160C0
l004160BA:
	eax_33 = eax_33 + 1<32>
	ecx_34 = ecx_34 + 1<32>
	branch eax_33 != dwArg0C l004160B0
l004160C0:
	ebx_117 = ebx_25
l004160C3:
	branch ecx_34 == edi_26 l004160DD
l004160DD:
	Mem80[dwArg04:word32] = esi_17
	Mem86[dwArg04 + 4<i32>:word32] = eax_33
	return
l004160C7:
	esi_17 = esi_17 + 1<32>
	branch esi_17 != dwArg0C l004160A1
l004160CC:
l004160CF:
	Mem110[dwArg04:word32] = dwArg0C
	Mem111[dwArg04 + 4<i32>:word32] = dwArg0C
	return
fn00416080_exit:


word32 fn004160F0(word32 ecx, word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412310
//      fn004170C0
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004160F0_entry:
l004160F0:
	word32 esi_17 = dwArg08
	branch dwArg08 == dwArg0C l0041613F
l00416109:
	word32 eax_25 = Mem21[ecx:word32]
	word32 edi_26 = Mem21[ecx + 4<i32>:word32]
l00416111:
	word32 eax_28 = eax_25
	branch eax_25 == edi_26 l0041613C
l00416115:
	word32 ecx_33 = esi_17
	branch esi_17 == dwArg0C l00416130
l0041611B:
l00416120:
	branch eax_28 == edi_26 l0041614F
l00416124:
	branch Mem27[ecx_33:byte] != Mem27[eax_28:byte] l00416130
l0041612A:
	ecx_33 = ecx_33 + 1<32>
	eax_28 = eax_28 + 1<32>
	branch ecx_33 != dwArg0C l00416120
l00416130:
	branch eax_28 == edi_26 l0041614F
l0041614F:
	Mem73[dwArg04:word32] = esi_17
	Mem78[dwArg04 + 4<i32>:word32] = ecx_33
	return
l00416134:
	esi_17 = esi_17 + 1<32>
	branch esi_17 != dwArg0C l00416111
l0041613C:
l0041613F:
	Mem101[dwArg04:word32] = dwArg0C
	Mem103[dwArg04 + 4<i32>:word32] = dwArg0C
	return
fn004160F0_exit:


word32 fn00416170(word32 ecx, word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg0C, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
//      fn00415200
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +000C:[0..31]
// LiveOut: ebp ebx edi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: cs ds es fs gs ss
fn00416170_entry:
	ptr32 fp
	selector fs
	word32 edi
	word32 dwLoc48
l00416170:
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 eax_36 = Mem35[ecx + 4<i32>:word32]
	word32 ecx_38 = eax_36 - Mem35[ecx:word32]
	word32 ecx_47 = Mem45[ecx + 8<i32>:word32] - Mem45[ecx:word32]
	word32 edx_44 = SLICE(ecx_38 *s64 0x88888889<32>, word32, 32) + ecx_38
	word32 edx_56 = SLICE(ecx_47 *s64 0x88888889<32>, word32, 32) + ecx_47
	word32 ebp_312 = fp - 4<i32>
	word32 esp_28 = fp - 0x40<32>
	word32 esi_34 = ecx
	word32 edi_344 = dwArg04
	word32 eax_51 = (edx_44 >> 6<32> >>u 0x1F<32>) + (edx_44 >> 6<32>)
	word32 ecx_60 = (edx_56 >> 6<32> >>u 0x1F<32>) + (edx_56 >> 6<32>)
	branch dwArg04 <=u ecx_60 l0041645F
l0041645F:
	branch dwArg04 <=u eax_51 l0041648E
l0041648E:
	branch dwArg04 == eax_51 l004164BF
l00416490:
	word32 eax_72 = Mem52[ecx:word32] + dwArg04 * 0x78<32>
	word32 esi_74 = eax_72
	branch eax_72 == eax_36 l004164B6
l004164A8:
	word32 esi_82
	word32 edx_905
	fn004148B0(esi_74, out edx_905, out ebp_312, out esi_82)
	esi_74 = esi_82 + 0x78<32>
	branch esi_82 + 0x78<32> != eax_36 l004164A8
l004164B6:
	Mem98[Mem73[ebp_312 - 28<i32>:word32] + 4<i32>:word32] = Mem73[ebp_312 - 44<i32>:word32]
l004164BF:
	Mem104[fs:0x00000000<p32>:word32] = Mem100[ebp_312 - 12<i32>:word32]
	ebpOut = Mem104[ebp_312:word32]
	ediOut = edi
	return ebx
l00416466:
	word32 edi_122 = dwArg04 - eax_51
	word32 ebp_135
	word32 esi_141
	word32 ebx_903
	word32 edi_904
	Mem148[esi_141 + 4<i32>:word32] = fn00414FE0(eax_51, ebx, fp - 4<i32>, ecx, edi_122, es, ds, eax_36, edi_122, dwArg0C, out ebx_903, out ebp_135, out esi_141, out edi_904)
	Mem150[fs:0x00000000<p32>:word32] = Mem148[ebp_135 - 12<i32>:word32]
	ebpOut = Mem150[ebp_135:word32]
	ediOut = edi_122
	return eax_27
l004161E6:
	branch dwArg04 >u 0x2222222<32> l004164D3
l004164D3:
	word32 ebp_164
	word32 edi_166
	word32 esi_902
	word32 edx_901
	fn00403730(ecx_60, fp - 4<i32>, ecx, dwArg04, out edx_901, out ebp_164, out esi_902, out edi_166)
	word32 eax_175 = Mem52[ebp_164 - 36<i32>:word32]
	fn00411180(eax_175, eax_175)
	word32 edi_199
	word32 esi_200
	word32 ebp_197
	word32 ebx_198 = fn004111B0(edi_166, Mem190[ebp_164 - 24<i32>:word32], Mem179[ebp_164 - 20<i32>:word32], out ebp_197, out esi_200, out edi_199)
	CxxThrowException(0<32>, 0<32>)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem217[esp_210 - 4<i32>:word32] = esi_200
	word32 esi_218 = Mem217[ecx_212:word32]
	Mem220[esp_210 - 8<i32>:word32] = edi_199
	branch esi_218 == Mem220[ecx_212 + 4<i32>:word32] l0041651E
l0041650B:
l00416510:
	word32 edi_233
	word32 esi_234
	word32 edx_909
	word32 ecx_908
	fn004014C0(esi_218, out ecx_908, out edx_909, out ebx_198, out ebp_197, out esi_234, out edi_233)
	esi_218 = esi_234 + 0x3C<32>
	branch esi_234 + 0x3C<32> != edi_233 l00416510
l0041651E:
	word32 edi_246 = Mem220[esp_210 - 8<i32>:word32]
	ebpOut = ebp_197
	ediOut = edi_246
	return ebx_198
l004161F2:
	word32 eax_256
	branch ecx_60 <=u 0x2222222<32> - (ecx_60 >>u 1<32>) l00416208
l00416208:
	eax_256 = ecx_60 + (ecx_60 >>u 1<32>)
	branch eax_256 >=u dwArg04 l00416210
l0041620D_1:
	eax_256 = dwArg04
l00416210:
l00416201:
	eax_256 = dwArg04
l00416213:
	word32 ecx_323
	word32 ecx_268 = eax_256 * 0xF<32>
	word32 ecx_269 = ecx_268 << 3<32>
	branch eax_256 <=u 0x2222222<32> l0041622C
l0041622C:
	branch ecx_268 << 3<32> <u 0x1000<32> l0041625D
l00416227:
	ecx_269 = 0xFFFFFFFF<32>
l00416234:
	word32 eax_280 = ecx_269 + 35<i32>
	branch eax_280 >u ecx_269 l0041623F
l0041623C_1:
	eax_280 = 0xFFFFFFFF<32>
l0041623F:
	word32 eax_311 = fn00427511(ebx, ecx, dwArg04, dwLoc48, eax_280, eax_27, out ecx_269, out ebp_312)
	esp_28 = fp - 0x40<32>
	branch eax_311 == 0<32> l00416257
l0041624C:
	ecx_323 = eax_311 + 35<i32> & 0xFFFFFFE0<32>
	Mem326[ecx_323 - 4<i32>:word32] = eax_311
l00416276:
	Mem329[ebp_312 - 24<i32>:word32] = ecx_323
	Mem330[ebp_312 - 32<i32>:word32] = ecx_323
l0041627C:
	word32 eax_382
	word32 edx_333 = Mem332[ebp_312 - 36<i32>:word32]
	Mem337[ebp_312 - 4<i32>:word32] = 0<32>
	word32 esp_340 = esp_28 - 4<i32>
	Mem341[esp_340:word32] = Mem337[ebp_312 + 16<i32>:word32]
	word32 ecx_343 = ecx_323 + edx_333 * 0x78<32>
	Mem348[ebp_312 - 36<i32>:word32] = ecx_343
	Mem350[esp_340 - 4<i32>:word32] = edi_344 - edx_333
	Mem352[esp_340 - 8<i32>:word32] = ecx_343
	word32 esi_369
	fn00414FE0(edx_333, ebx, ebp_312, esi_34, edi_344, es, ds, Mem352[esp_340 - 8<i32>:word32], Mem352[esp_340 - 4<i32>:word32], Mem352[esp_340:word32], out ebx, out ebp_312, out esi_369, out edi_344)
	word32 eax_376 = Mem352[esi_369 + 4<i32>:word32]
	word32 esi_377 = Mem352[esi_369:word32]
	Mem378[ebp_312 - 20<i32>:word32] = eax_376
	Mem379[ebp_312 - 24<i32>:word32] = esi_377
	esp_28 = esp_340 - 8<i32>
	branch esi_377 == eax_376 l004163BC
l004163BC:
	eax_382 = Mem379[ebp_312 - 28<i32>:word32]
l004162B7:
	word32 eax_383 = Mem379[ebp_312 - 32<i32>:word32]
	word32 edx_386 = Mem379[ebp_312 - 20<i32>:word32]
	word32 ecx_387 = Mem379[ebp_312 - 24<i32>:word32] - eax_383
	Mem389[ebp_312 - 24<i32>:word32] = ecx_387
	word32 esi_384 = esi_377 + 0x18<32>
	word32 edi_390 = eax_383 + 20<i32>
l004162D0:
	Mem395[edi_390 - 20<i32>:word32] = Mem392[esi_384 - 24<i32>:word32]
	Mem396[edi_390:word32] = 0<32>
	Mem397[edi_390 + 4<i32>:word32] = 0<32>
	Mem399[edi_390 - 16<i32>:word128] = Mem397[esi_384 - 20<i32>:word128]
	Mem402[edi_390:word64] = Mem399[esi_384 - 4<i32>:word64]
	Mem404[ecx_387 + edi_390:word32] = 0<32>
	Mem405[esi_384:word32] = 0xF<32>
	Mem406[esi_384 - 20<i32>:byte] = 0<8>
	Mem407[edi_390 + 24<i32>:word32] = 0<32>
	Mem408[edi_390 + 28<i32>:word32] = 0<32>
	Mem410[edi_390 + 8<i32>:word128] = Mem408[esi_384 + 4<i32>:word128]
	Mem413[edi_390 + 24<i32>:word64] = Mem410[esi_384 + 20<i32>:word64]
	Mem414[esi_384 + 20<i32>:word32] = 0<32>
	Mem415[esi_384 + 24<i32>:word32] = 0xF<32>
	Mem416[esi_384 + 4<i32>:byte] = 0<8>
	Mem418[edi_390 + 36<i32>:word32] = Mem416[esi_384 + 32<i32>:word32]
	Mem420[edi_390 + 40<i32>:word32] = Mem418[esi_384 + 36<i32>:word32]
	Mem422[edi_390 + 44<i32>:word32] = Mem420[esi_384 + 40<i32>:word32]
	Mem424[edi_390 + 48<i32>:word32] = Mem422[esi_384 + 44<i32>:word32]
	Mem427[edi_390 + 52<i32>:byte] = Mem424[esi_384 + 48<i32>:byte]
	Mem429[edi_390 + 56<i32>:word32] = Mem427[esi_384 + 52<i32>:word32]
	Mem431[edi_390 + 60<i32>:word32] = Mem429[esi_384 + 56<i32>:word32]
	Mem433[edi_390 + 64<i32>:word32] = Mem431[esi_384 + 60<i32>:word32]
	Mem434[edi_390 + 68<i32>:byte] = 0<8>
	branch Mem434[esi_384 + 64<i32>:byte] == 0<8> l0041638F
l00416372:
	Mem438[ebp_312 - 4<i32>:byte] = 1<8>
	word32 ecx_439 = Mem438[esi_384 + 72<i32>:word32]
	Mem440[edi_390 + 76<i32>:word32] = ecx_439
	word32 eax_441 = Mem440[ecx_439:word32]
	call Mem440[eax_441 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_441,ecx:ecx_439
		defs: esp:esp_451
	ecx_387 = Mem440[ebp_312 - 24<i32>:word32]
	edx_386 = Mem440[ebp_312 - 20<i32>:word32]
	Mem459[ebp_312 - 4<i32>:byte] = 0<8>
	Mem460[edi_390 + 68<i32>:byte] = 1<8>
l0041638F:
	Mem465[edi_390 + 84<i32>:word32] = Mem462[esi_384 + 80<i32>:word32]
	Mem467[edi_390 + 88<i32>:word32] = Mem465[esi_384 + 84<i32>:word32]
	Mem470[edi_390 + 92<i32>:word32] = Mem467[esi_384 + 88<i32>:word32]
	esi_384 = esi_384 + 0x78<32>
	edi_390 = edi_390 + 0x78<32>
	branch esi_384 - 24<i32> != edx_386 l004162D0
l004163B2:
	eax_382 = Mem470[ebp_312 - 28<i32>:word32]
	edi_344 = Mem470[ebp_312 - 40<i32>:word32]
	esi_377 = Mem470[eax_382:word32]
l004163BF:
	branch esi_377 == 0<32> l0041642E
l004163C3:
	word32 ecx_487 = Mem486[eax_382 + 4<i32>:word32]
	Mem489[ebp_312 - 40<i32>:word32] = ecx_487
	branch esi_377 == ecx_487 l004163E4
l004163CD:
l004163D0:
	word32 esi_497
	word32 edx_907
	fn004148B0(esi_377, out edx_907, out ebp_312, out esi_497)
	esi_377 = esi_497 + 0x78<32>
	branch esi_497 + 0x78<32> != Mem489[ebp_312 - 40<i32>:word32] l004163D0
l004163DF:
	eax_382 = Mem489[ebp_312 - 28<i32>:word32]
	esi_377 = Mem489[eax_382:word32]
l004163E4:
	word32 ecx_515 = Mem489[eax_382 + 8<i32>:word32] - esi_377
	word32 edx_518 = SLICE(ecx_515 *s64 0x88888889<32>, word32, 32) + ecx_515
	word32 eax_522 = (edx_518 >> 6<32> >>u 0x1F<32>) + (edx_518 >> 6<32>)
	ecx_269 = eax_522 * 0x78<32>
	branch eax_522 * 0x78<32> <u 0x1000<32> l00416424
l0041640E:
	word32 edx_529 = Mem489[esi_377 - 4<i32>:word32]
	ecx_269 = eax_522 * 0x78<32> + 0x23<32>
	esi_34 = esi_377 - edx_529
	branch esi_34 >u 0x23<32> l00416257
l00416257:
	_invalid_parameter_noinfo_noreturn()
l0041625D:
	branch ecx_269 == 0<32> l00416274
l00416274:
	ecx_323 = 0<32>
l00416261:
	word32 esp_549 = esp_28 - 4<i32>
	Mem550[esp_549:word32] = ecx_269
	word32 ecx_906
	word32 eax_569 = fn00427511(ebx, esi_34, edi_344, Mem550[esp_549 + -4<i32>:word32], Mem550[esp_549:word32], Mem550[esp_549 + 4<i32>:word32], out ecx_906, out ebp_312)
	Mem578[ebp_312 - 32<i32>:word32] = eax_569
	Mem580[ebp_312 - 24<i32>:word32] = eax_569
	esp_28 = esp_549 + 4<32>
	ecx_323 = eax_569
l00416422:
	esi_377 = edx_529
l00416424:
	word32 esp_583 = esp_28 - 4<i32>
	Mem585[esp_583:word32] = ecx_269
	Mem588[esp_583 - 4<i32>:word32] = esi_377
	fn0042763F(Mem588[esp_583 - 4<i32>:word32])
l0041642E:
	word32 ecx_596 = Mem595[ebp_312 - 32<i32>:word32]
	word32 edx_600 = Mem595[ebp_312 - 28<i32>:word32]
	Mem603[edx_600:word32] = ecx_596
	Mem605[edx_600 + 4<i32>:word32] = ecx_596 + edi_344 * 0x78<32>
	Mem609[edx_600 + 8<i32>:word32] = Mem605[ebp_312 - 44<i32>:word32] + ecx_596
	Mem613[fs:0x00000000<p32>:word32] = Mem609[ebp_312 - 12<i32>:word32]
	word32 esp_616 = esp_28 + 4<i32>
	word32 edi_617 = Mem613[esp_616:word32]
	word32 ebx_621 = Mem613[esp_616 + 8<i32>:word32]
	ebpOut = Mem613[ebp_312:word32]
	ediOut = edi_617
	return ebx_621
fn00416170_exit:


word32 fn00416530(word32 ecx, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00415200
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved: DP
fn00416530_entry:
	ptr32 fp
	word32 dwLoc2C
l00416530:
	word32 edi_165 = Mem25[ecx + 4<i32>:word32]
	word32 esi_142 = Mem25[ecx:word32]
	word32 ecx_29 = edi_165 - esi_142
	word32 ecx_35 = Mem25[ecx + 8<i32>:word32] - esi_142
	word32 edx_32 = SLICE(ecx_29 *s64 0x88888889<32>, word32, 32) + ecx_29
	word32 edx_43 = SLICE(ecx_35 *s64 0x88888889<32>, word32, 32) + ecx_35
	word32 ebp_103 = fp - 4<i32>
	word32 ebx_126 = ecx
	word32 esp_138 = fp - 0x24<32>
	word32 eax_38 = (edx_32 >> 6<32> >>u 0x1F<32>) + (edx_32 >> 6<32>)
	word32 ecx_163 = dwArg04
	word32 edx_149 = edx_43 >> 6<32>
	word32 eax_48 = (edx_43 >> 6<32> >>u 0x1F<32>) + (edx_43 >> 6<32>)
	branch dwArg04 <=u eax_48 l004166AC
l004166AC:
	word32 eax_164 = eax_38
	branch dwArg04 <=u eax_38 l004166F5
l004166F5:
	word32 eax_115 = esi_142 + dwArg04 * 0x78<32>
	branch esi_142 == eax_115 l0041672A
l00416706:
l00416710:
	word32 esp_67 = esp_138 - 4<i32>
	Mem68[esp_67:word32] = Mem64[ebp_103 - 12<i32>:word32]
	word32 esi_75
	word32 ebx_78
	word32 edi_715
	fn00418390(esi_142, Mem68[esp_67:word32], out ebx_78, out ebp_103, out esi_75, out edi_715)
	word32 esp_79 = <invalid>
	esp_138 = esp_79 + 4<32>
	esi_142 = esi_75 + 0x78<32>
	branch esi_75 + 0x78<32> != ebx_78 l00416710
l00416721:
	ebx_126 = Mem68[ebp_103 - 16<i32>:word32]
	eax_115 = Mem68[ebp_103 - 4<i32>:word32]
	edi_165 = Mem68[ebx_126 + 4<i32>:word32]
l0041672A:
	word32 esi_109 = eax_115
	branch eax_115 == edi_165 l00416741
l00416730:
	word32 esi_102
	word32 edx_716
	fn004148B0(esi_109, out edx_716, out ebp_103, out esi_102)
	esi_109 = esi_102 + 0x78<32>
	branch esi_102 + 0x78<32> != edi_165 l00416730
l0041673E:
	eax_115 = Mem114[ebp_103 - 4<i32>:word32]
l00416741:
	Mem128[ebx_126 + 4<i32>:word32] = eax_115
	return Mem128[ebp_103:word32]
l004166B3:
	branch esi_142 == edi_165 l004166DB
l004166B7:
	word32 ebx_137 = dwArg08
l004166C0:
	word32 esp_139 = esp_138 - 4<i32>
	Mem141[esp_139:word32] = ebx_137
	word32 esp_152 = <invalid>
	word32 edi_147
	word32 esi_148
	edx_149 = fn00418390(esi_142, Mem141[esp_139:word32], out ebx_137, out ebp_103, out esi_148, out edi_147)
	esp_138 = esp_152 + 4<32>
	esi_142 = esi_148 + 0x78<32>
	branch esi_148 + 0x78<32> != edi_147 l004166C0
l004166CF:
	ebx_126 = Mem141[ebp_103 - 16<i32>:word32]
	ecx_163 = Mem141[ebp_103 - 4<i32>:word32]
	eax_164 = Mem141[ebp_103 - 8<i32>:word32]
	edi_165 = Mem141[ebx_126 + 4<i32>:word32]
l004166DB:
	word32 esp_170 = esp_138 - 4<i32>
	Mem171[esp_170:word32] = Mem167[ebp_103 - 12<i32>:word32]
	Mem177[esp_170 - 4<i32>:word32] = ecx_163 - eax_164
	Mem180[esp_170 - 8<i32>:word32] = edi_165
	word32 ebp_203
	word32 ebx_206
	word32 edi_709
	word32 esi_708
	Mem220[ebx_206 + 4<i32>:word32] = fn00414FE0(edx_149, ebx_126, ebp_103, esi_142, edi_165, es, ds, Mem180[esp_170 - 8<i32>:word32], Mem180[esp_170 - 4<i32>:word32], Mem180[esp_170:word32], out ebx_206, out ebp_203, out esi_708, out edi_709)
	return Mem220[ebp_203:word32]
l0041658F:
	branch dwArg04 >u 0x2222222<32> l0041674D
l0041659B:
	word32 edx_232 = eax_48
	branch eax_48 <=u 0x2222222<32> - (eax_48 >>u 1<32>) l004165B5
l004165B5:
	branch (eax_48 >>u 1<32>) + eax_48 >=u dwArg04 l004165BF
l004165BC_1:
l004165BF:
l004165B0:
l004165C2:
	word32 eax_469
	branch esi_142 == 0<32> l00416610
l004165C6:
	branch esi_142 == edi_165 l004165E3
l004165CA:
l004165D0:
	word32 esi_258
	word32 edx_710
	fn004148B0(esi_142, out edx_710, out ebp_103, out esi_258)
	esi_142 = esi_258 + 0x78<32>
	branch esi_258 + 0x78<32> != edi_165 l004165D0
l004165DE:
	esi_142 = Mem273[ecx:word32]
	edx_232 = Mem273[ebp_103 - 20<i32>:word32]
l004165E3:
	branch edx_232 * 0x78<32> <u 0x1000<32> l00416606
l004165F4:
	word32 ecx_287 = Mem273[esi_142 - 4<i32>:word32]
	word32 esi_289 = esi_142 - ecx_287
	esi_142 = esi_289 + 0xFFFFFFFC<32>
	branch esi_289 >u 0x23<32> l0041666D
l00416604:
	esi_142 = ecx_287
l00416606:
	dwLoc2C = esi_142
	ecx_163 = fn0042763F(esi_142)
l00416610:
	word32 eax_313 = Mem312[ebp_103 - 8<i32>:word32]
	Mem317[ecx:word32] = 0<32>
	Mem318[ecx + 4<i32>:word32] = 0<32>
	Mem319[ecx + 8<i32>:word32] = 0<32>
	branch eax_313 == 0<32> l00416690
l0041662B:
	branch eax_313 >u 0x2222222<32> l0041674D
l0041674D:
	word32 ebp_705
	word32 edx_704
	word32 edi_707
	word32 esi_706
	word32 ecx_344 = fn00403730(ecx_163, ebp_103, esi_142, edi_165, out edx_704, out ebp_705, out esi_706, out edi_707)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	__align_stack<word32>(fp - 0x1C<32>)
	word32 esi_368 = Mem366[ecx_344 + 12<i32>:word32]
	branch esi_368 == 0<32> l004167CD
l00416773_thunk_fn00416775:
	word32 esi_719
	word32 edi_720
	word32 ebp_408
	fn00416775(esi_368, ecx_344, es, ds, out ebp_408, out esi_719, out edi_720)
	return ebp_408
l00416773_thunk_fn00416775:
	word32 edi_718
	word32 esi_717
	word32 ebp_421
	fn00416775(esi_368, ecx_344, es, ds, out ebp_421, out esi_717, out edi_718)
	return ebp_421
l00416636:
	esi_142 = eax_313 * 0x78<32>
	branch eax_313 * 0x78<32> <u 0x1000<32> l00416673
l00416648:
	word32 eax_439 = eax_313 * 0x78<32> + 35<i32>
	branch eax_439 >u eax_313 * 0x78<32> l00416653
l00416650_1:
	eax_439 = 0xFFFFFFFF<32>
l00416653:
	word32 ecx_713
	word32 eax_452 = fn00427511(ecx, eax_313 * 0x78<32>, edi_165, dwLoc2C, eax_439, edi, out ecx_713, out ebp_103)
	branch eax_452 == 0<32> l0041666D
l0041666D:
	_invalid_parameter_noinfo_noreturn()
l00416673:
	branch esi_142 == 0<32> l00416682
l00416682:
	eax_469 = 0<32>
l00416677:
	word32 ecx_714
	eax_469 = fn00427511(ecx, esi_142, edi_165, dwLoc2C, esi_142, edi, out ecx_714, out ebp_103)
l00416662:
	eax_469 = eax_452 + 35<i32> & 0xFFFFFFE0<32>
	Mem495[eax_469 - 4<i32>:word32] = eax_452
l00416684:
	Mem498[ecx:word32] = eax_469
	Mem499[ecx + 4<i32>:word32] = eax_469
	Mem504[ecx + 8<i32>:word32] = Mem499[ecx:word32] + esi_142
l00416690:
	word32 esi_711
	word32 edi_712
	word32 ebp_561
	word32 ebx_564
	Mem578[ebx_564 + 4<i32>:word32] = fn00414FE0(edx_232, ecx, ebp_103, esi_142, edi_165, es, ds, Mem519[ecx:word32], Mem514[ebp_103 - 4<i32>:word32], Mem509[ebp_103 - 12<i32>:word32], out ebx_564, out ebp_561, out esi_711, out edi_712)
	return Mem578[ebp_561:word32]
fn00416530_exit:


byte fn00416760(word32 ecx, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00415200
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00416760_entry:
	ptr32 fp
	word32 ebp
	word32 ebx
	word32 esi
	word32 edi
l00416760:
	__align_stack<word32>(fp - 4<i32>)
	word32 esi_20 = Mem17[ecx + 12<i32>:word32]
	branch esi_20 == 0<32> l004167CD_in_fn00416760
l004167CD_in_fn00416760:
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return SLICE(ebx, byte, 0)
l00416773_thunk_fn00416775:
	word32 ebp_39
	word32 edi_42
	word32 esi_44
	word32 ebx_40 = CONVERT(fn00416775(esi_20, ecx, es, ds, out ebp_39, out esi_44, out edi_42), byte, uint32)
	ebpOut = ebp_39
	esiOut = esi_44
	ediOut = edi_42
	return SLICE(ebx_40, byte, 0)
fn00416760_exit:


byte fn00416775(word32 esi, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416530
//      fn00416760
// MayUse:  cs:[0..15] ds:[0..15] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00416775_entry:
	bool S
	struct <anonymous> tArg08
	struct <anonymous> tArg10
	struct <anonymous> tArg18
	word32 dwArg00
l00416775:
	word32 ebx_19
	word32 ecx_6 = Mem0[edi:word32]
	branch S l00416793
l00416779:
	branch esi == 0<32> l00416793
l00416793:
	ebx_19 = ecx_6 + (esi >>u 5<32>) * 4<32>
l0041677F:
	ebx_19 = ecx_6 - ((~esi >>u 5<32>) * 4<32> + 4<32>)
l0041679B:
	Mem33[&tArg10:word32] = ecx_6
	Mem37[&tArg10 + 4<i32>:word32] = 0<32>
	word32 dwLoc08_110 = &tArg18
	word32 edi_46
	word32 esi_47
	word32 eax_42 = fn00416950(&tArg10, dwLoc08_110, 0<32>, out esi_47, out edi_46)
	word32 ebp_86 = fn004169B0(edi_46, ebx_19, esi_47, edi_46, es, ds, &tArg08, Mem60[eax_42:word32], Mem56[eax_42 + 4<i32>:word32], ebx_19, esi_47)
l004167CD:
	ebpOut = Mem66[ebp_86:word32]
	esiOut = 0<32>
	ediOut = dwLoc08_110
	return SLICE(dwArg00, byte, 0)
fn00416775_exit:


word32 fn004167E0(word32 ecx, word32 esi, word32 edi, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00413B30
//      fn00417F50
//      fn00428320
// MayUse:  ecx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: ebp edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn004167E0_entry:
	word32 ebp
	word32 dwLoc28
l004167E0:
	word32 edx_10 = dwArg08
	word32 esi_26 = Mem25[ecx + 16<i32>:word32]
	branch esi_26 <u dwArg04 l00416940
l00416940:
	word32 ebp_31
	word32 edi_34
	word32 esi_36
	word32 edx_443
	word32 ebx_444
	word32 ecx_33 = fn004113B0(dwArg0C, dwLoc28, edi, esi, out edx_443, out ebx_444, out ebp_31, out esi_36, out edi_34)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 esp_37 = <invalid>
	Mem45[esp_37 + 8<32>:word32] = ebp_31
	word32 edx_47 = Mem45[ecx_33 + 4<i32>:word32]
	Mem49[esp_37 + 4<32>:word32] = esi_36
	word32 esi_50 = Mem49[ecx_33:word32]
	word32 ecx_51 = Mem49[esp_37 + 0x14<32>:word32]
	Mem53[esp_37:word32] = edi_34
	word32 edi_54 = Mem53[esp_37 + 0x10<32>:word32]
	branch ecx_51 >= 0<32> l00416991
l00416962_thunk_fn00416964:
	word32 ebp_59
	word32 edx_61
	word32 esi_62
	word32 edi_448
	fn00416964(ecx_51, edx_47, esi_50, edi_54, out edx_61, out ebp_59, out esi_62, out edi_448)
	ebpOut = ebp_59
	esiOut = esi_62
	return edx_61
l00416962_thunk_fn00416964:
	word32 ebp_70
	word32 edx_72
	word32 esi_73
	word32 edi_447
	fn00416964(ecx_51, edx_47, esi_50, edi_54, out edx_72, out ebp_70, out esi_73, out edi_447)
	ebpOut = ebp_70
	esiOut = esi_73
	return edx_72
l00416808:
	word32 eax_81 = esi_26 - dwArg04
	branch eax_81 >=u dwArg08 l00416812
l0041680F_1:
	edx_10 = eax_81
l00416812:
	branch edx_10 != dwArg10 l0041683E
l0041683E:
	word32 eax_94 = esi_26 - edx_10 - dwArg04
	word24 nLoc13_333 = SLICE(eax_94 + 1<32>, word24, 8)
	word32 eax_98 = dwArg10 - edx_10
	branch dwArg10 >=u edx_10 l00416890
l00416890:
	word32 dwLoc14_334
	branch eax_98 >u Mem99[ecx + 20<i32>:word32] - esi_26 l00416920
l00416920:
	word32 ebp_128
	word32 ebx_445
	word32 edi_446
	word32 edx_132 = fn004173F0(ecx, ecx, eax_98, out ebx_445, out ebp_128, out edi_446)
	word32 esp_134 = <invalid>
	word32 esi_141 = Mem125[esp_134 + 4<i32>:word32]
	ebpOut = Mem125[ebp_128:word32]
	esiOut = esi_141
	dwLoc14_334 = SEQ(nLoc13_333, 0<8>) (alias)
	return edx_132
l0041689E:
	Mem151[ecx + 16<i32>:word32] = eax_98 + esi_26
	word32 dwLoc10_337 = ecx
	branch Mem149[ecx + 20<i32>:word32] <u 0x10<32> l004168B4
l004168AF:
	dwLoc10_337 = Mem151[ecx:word32]
l004168B4:
	word32 esi_173
	word32 eax_158 = dwArg04 + dwLoc10_337
	word32 edx_161 = edx_10 + eax_158
	branch dwArg10 + dwArg0C <=u eax_158 l004168DE
l004168C7:
	branch dwArg0C >u dwLoc10_337 + esi_26 l004168DE
l004168DE:
	esi_173 = dwArg10
l004168D0:
	branch edx_161 >u dwArg0C l004168D8
l004168D8:
	esi_173 = edx_161 - dwArg0C
l004168D4:
	esi_173 = 0<32>
l004168E0:
	memmove(eax_98 + edx_161, edx_161, dwLoc14_334)
	memmove(eax_158, dwArg0C, esi_173)
	memcpy(eax_158 + esi_173, dwArg0C + esi_173 + eax_98, dwArg10 - esi_173)
	ebpOut = ebp
	esiOut = esi
	return edx_161
l00416854:
	Mem242[ecx + 16<i32>:word32] = eax_98 + esi_26
	word32 edx_240 = ecx
	branch Mem99[ecx + 20<i32>:word32] <u 0x10<32> l00416863
l00416861:
	edx_240 = Mem242[ecx:word32]
l00416863:
	word32 esi_253 = dwArg04 + edx_240
	memmove(esi_253, dwArg0C, dwArg10)
	memmove(dwArg10 + esi_253, edx_10 + esi_253, eax_94 + 1<32>)
	ebpOut = ebp
	esiOut = esi
	return edx_240
l00416819:
	word32 edx_284 = ecx
	branch Mem87[ecx + 20<i32>:word32] <u 0x10<32> l00416823
l00416821:
	edx_284 = Mem87[ecx:word32]
l00416823:
	memmove(dwArg04 + edx_284, dwArg0C, dwArg10)
	ebpOut = ebp
	esiOut = esi
	return edx_284
fn004167E0_exit:


word32 fn00416950(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416530
// MayUse:  ecx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax edi esi
// Trashed: SCZO eax ebp ecx edi edx esi Top
// Preserved: esp
fn00416950_entry:
	word32 esi
	word32 edi
l00416950:
	word32 edx_9 = Mem6[ecx + 4<i32>:word32]
	word32 esi_13 = Mem12[ecx:word32]
	branch dwArg08 >= 0<32> l00416991_in_fn00416950
l00416991_in_fn00416950:
	word32 edx_22 = edx_9 + dwArg08
	Mem28[dwArg04 + 4<i32>:word32] = edx_22 & 0x1F<32>
	Mem31[dwArg04:word32] = esi_13 + (edx_22 >>u 5<32>) * 4<32>
	esiOut = esi
	ediOut = edi
	return dwArg04
l00416962_thunk_fn00416964:
	word32 edi_40
	word32 esi_42
	word32 edx_71
	word32 ebp_72
	word32 eax_38 = fn00416964(dwArg08, edx_9, esi_13, dwArg04, out edx_71, out ebp_72, out esi_42, out edi_40)
	esiOut = esi_42
	ediOut = edi_40
	return eax_38
fn00416950_exit:


word32 fn00416964(word32 ecx, word32 edx, word32 esi, word32 edi, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004167E0
//      fn00416950
// MayUse:  ecx:[0..31] edi:[0..31] edx:[0..31] esi:[0..31]
// LiveOut: eax ebp edi edx esi
// Trashed: SCZO eax ebp ecx edi edx esi esp Top
// Preserved:
fn00416964_entry:
l00416964:
	branch edx >=u -ecx l00416991
l00416991:
	word32 edx_10 = edx + ecx
	Mem17[edi + 4<i32>:word32] = edx_10 & 0x1F<32>
	Mem21[edi:word32] = esi + (edx_10 >>u 5<32>) * 4<32>
	return
l0041696C:
	word32 edx_28 = edx + ecx
	Mem39[edi:word32] = esi + (0xFFFFFFFC<32> - ((~edx_28 >>u 5<32>) << 2<32>))
	Mem41[edi + 4<i32>:word32] = edx_28 & 0x1F<32>
	return
fn00416964_exit:


word32 fn004169B0(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416530
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: ebp
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: DP esp
fn004169B0_entry:
	ptr32 fp
	word32 ebp
l004169B0:
	word32 edi_25 = Mem24[ecx:word32]
	word32 eax_10 = Mem6[0x0043A008<p32>:word32] ^ fp - 4<i32>
	word32 esi_130 = 0<32>
	word32 edx_119 = edi_25
	word32 eax_29 = Mem27[ecx + 12<i32>:word32]
	branch eax_29 == 0<32> l00416A1F
l004169E9:
	word32 esi_42 = (dwArg08 - edi_25 >> 2<32> << 5<32>) + dwArg0C
	branch esi_42 >= 0<32> l00416A11
l004169F9:
	branch esi_42 == 0<32> l00416A11
l00416A11:
	edx_119 = edi_25 + (esi_42 >>u 5<32>) * 4<32>
l004169FF:
	edx_119 = edi_25 - ((~esi_42 >>u 5<32>) * 4<32> + 4<32>)
l00416A19:
	esi_130 = esi_42 & 0x1F<32>
l00416A1F:
	word32 ecx_115 = 0<32>
	word32 ebx_102 = edi_25
	branch eax_29 == 0<32> l00416A62
l00416A2C:
	word32 ecx_89 = (dwArg10 - edi_25 >> 2<32> << 5<32>) + dwArg14
	branch ecx_89 >= 0<32> l00416A54
l00416A3C:
	branch ecx_89 == 0<32> l00416A54
l00416A54:
	ebx_102 = edi_25 + (ecx_89 >>u 5<32>) * 4<32>
l00416A42:
	ebx_102 = edi_25 - ((~ecx_89 >>u 5<32>) * 4<32> + 4<32>)
l00416A5C:
	ecx_115 = ecx_89 & 0x1F<32>
l00416A62:
	word32 edi_133 = (edx_119 - edi_25 >> 2<32> << 5<32>) + esi_130
	branch edx_119 != ebx_102 l00416A7E
l00416A76:
	branch esi_130 == ecx_115 l00416B4D
l00416B4D:
l00416A7E:
	word32 edi_161
	branch eax_29 >= 0<32> l00416A9C
l00416A82:
	branch eax_29 == 0<32> l00416A9C
l00416A9C:
	edi_161 = edi_25 + (eax_29 >>u 5<32>) * 4<32>
l00416A89:
	edi_161 = edi_25 - ((~eax_29 >>u 5<32>) * 4<32> + 4<32>)
l00416AA5:
l00416AB5:
	byte cl_398 = SLICE(ecx_115, byte, 0)
	branch ebx_102 != edi_161 l00416ABD
l00416AB9:
	branch ecx_115 == (eax_29 & 0x1F<32>) l00416AF1
l00416AF1:
	word32 ecx_188 = Mem185[ecx:word32]
	word32 edx_194 = (edx_119 - ecx_188 >> 2<32> << 5<32>) + esi_130
	branch edx_194 >u 0x7FFFFFFF<32> l00416B94
l00416B94:
	word32 ecx_199 = fn00416BA0(ecx_188)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l00416B9F_thunk_fn00416BA0:
	fn00416BA0(ecx_199)
	return fp - 4<i32>
l00416B0F:
	word32 ebx_217 = Mem185[ecx + 4<i32>:word32]
	word32 esi_220 = edx_194 + 31<i32> >>u 5<32>
	branch esi_220 >=u ebx_217 - ecx_188 >> 2<32> l00416B32
l00416B32:
l00416B23:
	word32 eax_226 = ecx_188 + esi_220 * 4<32>
	branch eax_226 == ebx_217 l00416B35
l00416B2D:
	Mem230[ecx + 4<i32>:word32] = eax_226
l00416B35:
	Mem233[ecx + 12<i32>:word32] = edx_194
	edx_119 = edx_194 & 0x1F<32>
	branch (edx_194 & 0x1F<32>) <=u 0<32> l00416B50
l00416B3D:
	word32 edx_244 = 1<32> << (SLICE(edx_194, byte, 0) & 0x1F<8>)
	word32 eax_239 = Mem233[ecx:word32]
	Mem248[eax_239 - 4<i32> + esi_220 * 4<32>:word32] = Mem233[eax_239 - 4<i32> + esi_220 * 4<32>:word32] & edx_244 - 1<32>
	edx_119 = edx_244 - 1<32>
l00416B50:
	word32 ecx_269
	word32 ecx_253 = Mem252[ecx:word32]
	branch edi_133 >= 0<32> l00416B6E
l00416B56:
	branch edi_133 == 0<32> l00416B6E
l00416B6E:
	ecx_269 = ecx_253 + (edi_133 >>u 5<32>) * 4<32>
l00416B5C:
	ecx_269 = ecx_253 - ((~edi_133 >>u 5<32>) * 4<32> + 4<32>)
l00416B76:
	Mem285[dwArg04:word32] = ecx_269
	Mem287[dwArg04 + 4<i32>:word32] = edi_133 & 0x1F<32>
	word32 eax_748
	word32 ecx_749
	fn00427500(eax_10 ^ fp - 4<i32>, edx_119, ebx, fp - 4<i32>, esi, edi, es, ds, ebx, out eax_748, out ecx_749)
	return ebp
fn004169B0_exit:
l00416ABD:
	word32 eax_407
	word32 eax_404 = Mem185[edx_119:word32]
	branch (Mem185[ebx_102:word32] & 1<32> << cl_398) == 0<32> l00416ACD
l00416ACD:
	__btr<word32>(eax_404, esi_130, out eax_407)
l00416AC8:
	__bts<word32>(eax_404, esi_130, out eax_407)
l00416AD0:
	Mem413[edx_119:word32] = eax_407
	branch esi_130 >=u 0x1F<32> l00416ADA
l00416ADA:
	esi_130 = 0<32>
	edx_119 = edx_119 + 4<32>
l00416AD7:
	esi_130 = esi_130 + 1<32>
l00416ADF:
	branch ecx_115 >=u 0x1F<32> l00416AEA
l00416AEA:
	ecx_115 = 0<32>
	ebx_102 = ebx_102 + 4<32>
l00416AE7:
	ecx_115 = ecx_115 + 1<32>


word32 fn00416BA0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004169B0
// MayUse:  ecx:[0..31]
// LiveOut: ecx
// Trashed: SCZO eax ebx ecx edx esi esp Top
// Preserved:
fn00416BA0_entry:
l00416BA0:
	_Xlength_error(0x432150<32>)
	int3()
	int3()
	int3()
	int3()
	int3()
l00416BAF_thunk_fn00416BB0:
	word32 esi_17
	return fn00416BB0(ecx, out esi_17)
fn00416BA0_exit:


word32 fn00416BB0(word32 ecx, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004154B0
//      fn00416BA0
// MayUse:  ecx:[0..31]
// LiveOut: ecx esi
// Trashed: SCZO eax ebx ecx edx esi Top
// Preserved: ebp edi esp
fn00416BB0_entry:
	ptr32 fp
l00416BB0:
	word32 eax_20 = Mem19[ecx + 24<i32>:word32]
	word32 esp_163 = fp - 0x1C<32>
	word32 ebx_101 = eax_20
	branch eax_20 == 0<32> l00416BE4
l00416BC4:
	branch Mem19[ecx + 36<i32>:word32] == eax_20 l00416BE4
l00416BC9:
	wassert(0x432168<32>, 0x431F90<32>, 0x87<32>)
	ebx_101 = Mem32[ecx + 24<i32>:word32]
	esp_163 = esp_33 + 0xC<32>
l00416BE4:
	word32 edi_108 = Mem43[ecx:word32]
	word32 ecx_115 = Mem47[ecx + 4<i32>:word32] - edi_108
	word32 edx_53 = SLICE(ecx_115 *s64 0x88888889<32>, word32, 32) + ecx_115
	word32 dwLoc0C_190 = 0<32>
	branch (edx_53 >> 6<32> >>u 0x1F<32>) + (edx_53 >> 6<32>) == 0<32> l00416C7F
l00416C05:
	word32 edx_105 = 0<32>
	word32 dwLoc08_191 = 0<32>
l00416C10:
	ebx_101 = Mem65[ecx + 24<i32>:word32]
	branch ebx_101 == 0<32> l00416C3A
l00416C17:
	word32 ecx_72 = Mem65[edx_105 + edi_108:word32]
	branch ecx_72 < 0<32> l00416C3A
l00416C1E:
	edx_105 = dwLoc08_191
	branch (Mem65[Mem65[ecx + 12<i32>:word32] + (ecx_72 >>u 5<32>) * 4<32>:word32] & 1<32> << (SLICE(ecx_72, byte, 0) & 0x1F<8>)) != 0<32> l00416C54
l00416C38:
	edi_108 = Mem65[ecx:word32]
l00416C3A:
	word32 eax_92 = edi_108 + 4<i32> + edx_105
	Mem93[eax_92 + 16<i32>:word32] = 0<32>
	branch Mem93[eax_92 + 20<i32>:word32] <u 0x10<32> l00416C4E
l00416C4C:
	eax_92 = Mem93[eax_92:word32]
l00416C4E:
	Mem98[eax_92:byte] = 0<8>
	ebx_101 = Mem98[ecx + 24<i32>:word32]
l00416C54:
	edi_108 = Mem103[ecx:word32]
	ecx_115 = Mem103[ecx + 4<i32>:word32] - edi_108
	word32 v18_113 = dwLoc0C_190 + 1<32>
	word32 edx_107 = edx_105 + 0x78<32>
	word32 edx_119 = SLICE(ecx_115 *s64 0x88888889<32>, word32, 32) + ecx_115
	dwLoc0C_190 = v18_113
	dwLoc08_191 = edx_107
	edx_105 = edx_107
	branch v18_113 <u ((edx_119 >> 6<32>) >>u 0x1F<32>) + (edx_119 >> 6<32>) l00416C10
l00416C7F:
	Mem128[ecx + 32<i32>:word32] = 0<32>
	Mem129[ecx + 40<i32>:byte] = 0<8>
	branch ebx_101 == 0<32> l00416CB8
l00416C8E:
	word32 ebx_136 = Mem129[ecx + 36<i32>:word32]
	branch ebx_136 <= 0<32> l00416CB8
l00416C95:
	word32 edi_139 = 0<32>
l00416C97:
	ecx_115 = edi_139 >>u 5<32>
	branch (Mem143[Mem143[ecx + 12<i32>:word32] + ecx_115 * 4<32>:word32] & 1<32> << (SLICE(edi_139, byte, 0) & 0x1F<8>)) == 0<32> l00416CB8
l00416CB0:
	edi_139 = edi_139 + 1<32>
	Mem157[ecx + 32<i32>:word32] = edi_139
	branch edi_139 < ebx_136 l00416C97
l00416CB8:
	esiOut = Mem169[esp_163 + 4<i32>:word32]
	return ecx_115
fn00416BB0_exit:


word32 fn00416CD0(word32 ecx, word32 edx, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004154B0
// MayUse:  ecx:[0..31] edx:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00416CD0_entry:
l00416CD0:
	Mem20[dwArg08:word32] = 0<32>
	Mem21[dwArg08 + 4<i32>:word32] = 0<32>
	word32 eax_23 = Mem21[edx:word32]
	Mem24[ecx:word32] = eax_23
	branch eax_23 == Mem24[dwArg04:word32] l00416D6D
l00416D6D:
	return
l00416CF8:
l00416D00:
	byte dl_39 = Mem38[eax_23:byte]
	branch (SLICE(CONVERT(Mem38[Mem38[dwArg0C + 12<i32>:word32] + CONVERT(dl_39, byte, word32) * 2<32>:word16], word16, int32) >>u 2<32>, byte, 0) & 1<8>) == 0<8> l00416D64
l00416D16:
	byte al_58 = narrow(dwArg0C, dl_39, '\0')
	word32 edi_61 = Mem57[dwArg08:word32]
	word32 eax_68 = Mem57[dwArg08 + 4<i32>:word32]
	ui64 eax_edi_109 = SEQ(eax_68, edi_61) + SEQ(__shld<word32>(eax_68, edi_61, 2<8>), edi_61 << 2<32>)
	word32 edi_72 = SLICE(eax_edi_109, word32, 0)
	ui64 edx_ebx_112 = CONVERT(CONVERT(al_58, byte, int32) - 0x30<32>, word32, int64) + SEQ(__shld<word32>(SLICE(eax_edi_109, word32, 32), edi_72, 1<8>), edi_72 * 2<32>)
	Mem82[dwArg08:word32] = SLICE(edx_ebx_112, word32, 0)
	Mem87[dwArg08 + 4<i32>:word32] = SLICE(edx_ebx_112, word32, 32)
	word32 eax_88 = Mem87[ecx:word32]
	Mem90[ecx:word32] = eax_88 + 1<32>
	eax_23 = eax_88 + 1<32>
	branch eax_88 + 1<32> != Mem90[dwArg04:word32] l00416D00
l00416D64:
	return
fn00416CD0_exit:


word32 fn00416DA0(selector es, selector ds, word32 dwArg18, word32 dwArg1C, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412170
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut: ebp ebx edi edx esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00416DA0_entry:
	ptr32 fp
	selector fs
	word32 dwLoc78
l00416DA0:
	__align_stack<word32>(fp - 0xC<32>)
	word32 eax_28 = Mem25[0x0043A008<p32>:word32] ^ fp - 0xC<32>
	Mem41[fs:0<32>:word32] = fp - 0x18<32>
	word32 ecx_789
	word32 ebp_109
	word32 eax_58 = fn00427511(fp - 4<i32>, dwArg18, dwArg1C, dwLoc78, 8<32>, eax_28, out ecx_789, out ebp_109)
	Mem65[ebp_109 - 40<i32>:word32] = eax_58
	Mem68[eax_58:word32] = 0<32>
	Mem69[eax_58 + 4<i32>:word32] = 0<32>
	Mem71[Mem69[ebp_109 - 40<i32>:word32]:word32] = ebp_109 - 40<i32>
	word32 edx_72 = Mem71[ebp_109 - 52<i32>:word32]
	Mem74[ebp_109 - 4<i32>:word32] = 0<32>
	Mem75[ebp_109 - 48<i32>:word32] = edx_72
	word32 eax_76 = Mem75[edx_72 + 20<i32>:word32]
	Mem77[ebp_109 - 60<i32>:word32] = eax_76
	word32 ebx_112 = fp - 4<i32>
	word32 esi_217 = dwArg18
	word32 edi_113 = dwArg1C
	word32 esp_216 = fp - 0x70<32>
	word32 ecx_105 = edx_72
	branch eax_76 <u 0x10<32> l00416E5F
l00416E5A:
	ecx_105 = Mem77[edx_72:word32]
	Mem81[ebp_109 - 48<i32>:word32] = ecx_105
l00416E5F:
	Mem87[ebp_109 - 56<i32>:word32] = edx_72
	word32 eax_102 = edx_72
	branch Mem83[edx_72 + 20<i32>:word32] <u 0x10<32> l00416E6F
l00416E6A:
	eax_102 = Mem87[edx_72:word32]
	Mem90[ebp_109 - 56<i32>:word32] = eax_102
l00416E6F:
	word32 eax_224
	word32 esi_223
	branch dwArg18 != dwArg1C l00416EE6
l00416EE6:
	word32 esp_98 = esp_216 - 4<i32>
	Mem100[esp_98:word32] = esi_217
	Mem103[esp_98 - 4<i32>:word32] = eax_102
	Mem106[esp_98 - 8<i32>:word32] = ecx_105
	Mem108[esp_98 - 12<i32>:word32] = ecx_105
	word32 ebp_125
	word32 edi_126
	word32 ebx_790
	word32 esi_791
	word32 eax_120 = fn00417E50(ebp_109 - 60<i32>, ebp_109 - 40<i32>, ebx_112, esi_217, edi_113, es, ds, Mem108[esp_98 - 8<i32>:word32], Mem108[esp_98 - 4<i32>:word32], Mem108[esp_98:word32], out ebx_790, out ebp_125, out esi_791, out edi_126)
	word32 edx_136 = Mem108[ebp_125 - 24<i32>:word32] + Mem108[ebp_125 - 28<i32>:word32]
	Mem137[ebp_125 - 56<i32>:word32] = edi_126
	word32 esp_127 = <invalid>
	word32 eax_138 = Mem137[eax_120:word32]
	Mem140[esp_127 + 0xC<32>:word32] = 0<32>
	Mem142[esp_127 + 8<32>:word32] = 0<32>
	Mem144[ebp_125 - 48<i32>:word32] = eax_138
	word32 eax_145 = Mem144[ebp_125 - 40<i32>:word32]
	Mem147[esp_127 - 4<32>:word32] = 0<32>
	Mem148[esp_127:word32] = 0<32>
	branch eax_145 == 0<32> l00416F2D
l00416F23:
	word32 eax_152 = Mem148[eax_145:word32]
	branch eax_152 == 0<32> l00416F2D
l00416F29:
	Mem157[esp_127 - 4<32>:word32] = Mem148[eax_152:word32]
l00416F2D:
	Mem162[esp_127 + 4<32>:word32] = edx_136
	Mem165[esp_127 - 8<32>:word32] = ebp_125 - 84<i32>
	word32 edi_176
	ebx_112 = fn00418F20(ebp_125 - 40<i32>, es, ds, Mem165[esp_127 + 4<32>:word32], Mem165[esp_127 + 8<32>:word32], Mem165[esp_127 + 0xC<32>:word32], out ebp_109, out edi_176)
	word32 eax_186 = Mem165[ebp_109 - 52<i32>:word32]
	word32 esp_180 = <invalid>
	word32 ecx_187 = eax_186
	branch Mem165[eax_186 + 20<i32>:word32] <u 0x10<32> l00416F49
l00416F47:
	ecx_187 = Mem165[eax_186:word32]
l00416F49:
	Mem201[esp_180 + 0x14<32>:word32] = Mem165[eax_186 + 16<i32>:word32] + ecx_187
	Mem204[esp_180 + 0x10<32>:word32] = edi_176
	Mem208[esp_180 + 0xC<32>:word32] = ebp_109 - 72<i32>
	word32 edx_792
	word32 eax_209 = fn00416080(ebx_112 + 8<i32>, Mem208[esp_180 + 0xC<32>:word32], Mem208[esp_180 + 0x10<32>:word32], Mem208[esp_180 + 0x14<32>:word32], out edx_792)
	esp_216 = esp_180 + 0x18<32>
	esi_217 = Mem208[eax_209:word32]
	edi_113 = Mem208[eax_209 + 4<i32>:word32]
	branch esi_217 != edi_113 l00416EE0
l00416EE0:
	eax_102 = Mem208[ebp_109 - 56<i32>:word32]
	ecx_105 = Mem208[ebp_109 - 48<i32>:word32]
l00416F69:
	esi_223 = Mem208[ebp_109 - 52<i32>:word32]
	eax_224 = Mem208[esi_223 + 20<i32>:word32]
l00416E73:
	eax_224 = Mem226[ebp_109 - 60<i32>:word32]
	esi_223 = edx_72
l00416E78:
	word32 ecx_231 = esi_223
	branch eax_224 <u 0x10<32> l00416E81
l00416E7F:
	ecx_231 = Mem235[esi_223:word32]
l00416E81:
	word32 edx_365
	word32 esp_375
	word32 edi_240 = esi_223 + 16<i32>
	word32 eax_242 = Mem235[esi_223 + 16<i32>:word32] + ecx_231
	Mem246[ebp_109 - 52<i32>:word32] = edi_240
	word32 esp_251 = esp_216 - 4<i32>
	Mem252[esp_251:word32] = eax_242
	Mem255[esp_251 - 4<i32>:word32] = Mem252[ebp_109 - 56<i32>:word32]
	Mem259[esp_251 - 8<i32>:word32] = Mem255[ebp_109 - 48<i32>:word32]
	Mem261[esp_251 - 12<i32>:word32] = ecx_231
	word32 edi_308
	word32 esi_306
	word32 ebp_307
	word32 ebx_305
	word32 eax_302 = fn00417E50(ebp_109 - 64<i32>, ebp_109 - 40<i32>, ebx_112, esi_223, edi_240, es, ds, Mem261[esp_251 - 8<i32>:word32], Mem261[esp_251 - 4<i32>:word32], Mem261[esp_251:word32], out ebx_305, out ebp_307, out esi_306, out edi_308)
	word32 esp_309 = <invalid>
	word32 edx_316 = Mem261[ebp_307 - 24<i32>:word32]
	word32 eax_318 = Mem261[eax_302:word32]
	branch edx_316 != 0<32> l00416FA9
l00416FA9:
	word32 eax_325 = Mem261[ebp_307 - 28<i32>:word32] + edx_316
	Mem327[esp_309 + 4<32>:word32] = 0<32>
	Mem328[esp_309 + 8<32>:word32] = 0<32>
	Mem329[esp_309 + 0xC<32>:word32] = eax_325
	Mem331[esp_309 + 4<32>:word32] = Mem329[ebp_307 - 40<i32>:word32]
	word32 eax_333 = Mem331[ebp_307 - 28<i32>:word32]
	Mem334[esp_309 - 8<32>:word32] = 0<32>
	Mem335[esp_309 - 4<32>:word32] = 0<32>
	Mem336[esp_309:word32] = eax_333
	Mem338[esp_309 - 8<32>:word32] = Mem336[ebp_307 - 40<i32>:word32]
	word32 ecx_339 = esi_306
	branch Mem338[esi_306 + 20<i32>:word32] <u 0x10<32> l00416FEF
l00416FED:
	ecx_339 = Mem338[esi_306:word32]
l00416FEF:
	Mem353[esp_309 - 0xC<32>:word32] = Mem338[edi_308:word32] + ecx_339
	word32 esp_367 = <invalid>
	edx_365 = fn00417F50(esi_306, es, ds, Mem353[esp_309 - 8<32>:word32], Mem353[esp_309:word32], Mem353[esp_309 + 4<32>:word32], Mem353[esp_309 + 0xC<32>:word32], out ebx_305, out ebp_307)
	esp_375 = esp_367 + 0x1C<32>
l00416EAF:
	word32 ecx_378 = esi_306
	branch Mem261[esi_306 + 20<i32>:word32] <u 0x10<32> l00416EB9
l00416EB7:
	ecx_378 = Mem261[esi_306:word32]
l00416EB9:
	word32 edx_383 = Mem261[edi_308:word32]
	Mem389[ebp_307 - 48<i32>:word32] = esi_306
	word32 ecx_385 = ecx_378 + edx_383
	branch Mem261[esi_306 + 20<i32>:word32] <u 0x10<32> l00416ECB
l00416EC6:
	Mem392[ebp_307 - 48<i32>:word32] = Mem389[esi_306:word32]
l00416ECB:
	word32 edi_398 = eax_318 - Mem397[ebp_307 - 48<i32>:word32]
	branch edx_383 <u edi_398 l004170B8
l004170B8:
	word32 edx_793
	word32 ebp_795
	word32 esi_796
	word32 edi_797
	word32 ebx_794
	fn004113B0(ecx_385, Mem397[esp_309 + 0xC<32>:word32], Mem397[esp_309 + 0x10<32>:word32], Mem397[esp_309 + 0x14<32>:word32], out edx_793, out ebx_794, out ebp_795, out esi_796, out edi_797)
	int3()
	int3()
	int3()
	word32 esp_414 = <invalid>
l004170BF_thunk_fn004170C0:
	word32 ebp_432
	word32 ebx_433
	word32 edi_435
	word32 edx_436 = fn004170C0(es, ds, Mem397[esp_414 + 0x24<32>:word32], Mem397[esp_414 + 0x28<32>:word32], out ebx_433, out ebp_432, out edi_435)
	ebxOut = ebx_433
	ebpOut = ebp_432
	ediOut = edi_435
	return edx_436
l00416ED8:
l00416F74:
	word32 ecx_446 = ecx_385 - eax_318
	word32 eax_448 = edx_383 - edi_398
	branch eax_448 >=u ecx_446 l00416F7F
l00416F7C_1:
	ecx_446 = eax_448
l00416F7F:
	Mem458[ebp_307 - 60<i32>:word32] = ecx_446
	branch Mem397[esi_306 + 20<i32>:word32] <u 0x10<32> l00416F8A
l00416F88:
	esi_306 = Mem458[esi_306:word32]
l00416F8A:
	word32 eax_463 = Mem458[ebp_307 - 60<i32>:word32]
	word32 edx_471 = edx_383 - eax_463
	Mem473[Mem458[ebp_307 - 52<i32>:word32]:word32] = edx_471
	word32 edx_474 = edx_471 - edi_398
	Mem479[esp_309 + 0xC<32>:word32] = edx_474 + 1<32>
	word32 ecx_467 = esi_306 + edi_398
	Mem481[esp_309 + 8<32>:word32] = eax_463 + ecx_467
	Mem483[esp_309 + 4<32>:word32] = ecx_467
	memmove(Mem483[esp_309 + 4<32>:(ptr32 void)], Mem483[esp_309 + 8<32>:(ptr32 void)], Mem483[esp_309 + 0xC<32>:size_t])
	edx_365 = edx_474 + 1<32>
	esp_375 = esp_309 + 0x10<32>
l00416FFE:
	word32 ecx_489 = Mem488[ebp_307 - 24<i32>:word32]
	branch ecx_489 == 0<32> l00417025
l00417005:
	word32 eax_493 = Mem488[ebp_307 - 28<i32>:word32]
l00417010:
	ecx_489 = ecx_489 - 1<32>
	edx_365 = 0<32>
	branch ecx_489 != 0<32> l0041701B
l00417018_1:
	eax_493 = 0<32>
l0041701B:
	branch ecx_489 != 0<32> l00417010
l0041701F:
	Mem508[ebp_307 - 28<i32>:word32] = eax_493
	Mem509[ebp_307 - 24<i32>:word32] = ecx_489
l00417025:
	word32 esi_512 = Mem511[ebp_307 - 32<i32>:word32]
	word32 ecx_513 = Mem511[ebp_307 - 36<i32>:word32]
	branch esi_512 == 0<32> l0041704E
l0041702F:
l00417030:
	word32 eax_520 = Mem519[ecx_513 - 4<i32> + esi_512 * 4<32>:word32]
	esi_512 = esi_512 - 1<32>
	branch eax_520 == 0<32> l00417047
l00417039:
	word32 esp_526 = esp_375 - 4<i32>
	Mem527[esp_526:word32] = 0x10<32>
	Mem529[esp_526 - 4<i32>:word32] = eax_520
	fn0042763F(Mem529[esp_526 - 4<i32>:word32])
	ecx_513 = Mem529[ebp_307 - 36<i32>:word32]
l00417047:
	branch esi_512 != 0<32> l00417030
l0041704B:
	esi_512 = Mem540[ebp_307 - 32<i32>:word32]
l0041704E:
	branch ecx_513 == 0<32> l0041707F
l00417052:
	word32 esi_548 = esi_512 << 2<32>
	branch esi_548 <u 0x1000<32> l00417075
l0041705F:
	ecx_513 = Mem552[ecx_513 - 4<i32>:word32]
	esi_548 = esi_548 + 0x23<32>
	branch ecx_513 - ecx_513 <=u 0x23<32> l00417075
l0041706F:
	_invalid_parameter_noinfo_noreturn()
l00417075:
	word32 esp_566 = esp_375 - 4<i32>
	Mem568[esp_566:word32] = esi_548
	Mem571[esp_566 - 4<i32>:word32] = ecx_513
	fn0042763F(Mem571[esp_566 - 4<i32>:word32])
l0041707F:
	word32 esp_576 = esp_375 - 4<i32>
	Mem577[esp_576:word32] = 8<32>
	Mem583[esp_576 - 4<i32>:word32] = Mem577[ebp_307 - 40<i32>:word32]
	Mem584[ebp_307 - 32<i32>:word32] = 0<32>
	Mem585[ebp_307 - 36<i32>:word32] = 0<32>
	fn0042763F(Mem585[esp_576 - 4<i32>:word32])
	Mem600[fs:0x00000000<p32>:word32] = Mem585[ebp_307 - 12<i32>:word32]
	word32 edi_603 = Mem600[esp_576 + 8<32>:word32]
	word32 eax_798
	word32 ecx_799
	fn00427500(Mem600[ebp_307 - 20<i32>:word32] ^ ebp_307, edx_365, ebx_305, ebp_307, Mem600[esp_576 + 0xC<32>:word32], edi_603, es, ds, Mem600[esp_576 + 0xC<32>:word32], out eax_798, out ecx_799)
	word32 ebp_696 = Mem600[ebp_307:word32]
	ebxOut = Mem600[ebx_305:word32]
	ebpOut = ebp_696
	ediOut = edi_603
	return edx_365
fn00416DA0_exit:


word32 fn004170C0(selector es, selector ds, word32 dwArg18, word32 dwArg1C, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412310
//      fn00416DA0
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0018:[0..31] Stack +001C:[0..31]
// LiveOut: ebp ebx edi edx esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn004170C0_entry:
	ptr32 fp
	selector fs
	word32 dwLoc78
l004170C0:
	__align_stack<word32>(fp - 0xC<32>)
	word32 eax_28 = Mem25[0x0043A008<p32>:word32] ^ fp - 0xC<32>
	Mem41[fs:0<32>:word32] = fp - 0x18<32>
	word32 ecx_803
	word32 ebp_116
	word32 eax_60 = fn00427511(fp - 4<i32>, dwArg1C, dwArg18, dwLoc78, 8<32>, eax_28, out ecx_803, out ebp_116)
	Mem67[ebp_116 - 40<i32>:word32] = eax_60
	Mem70[eax_60:word32] = 0<32>
	Mem71[eax_60 + 4<i32>:word32] = 0<32>
	Mem73[Mem71[ebp_116 - 40<i32>:word32]:word32] = ebp_116 - 40<i32>
	word32 edx_74 = Mem73[ebp_116 - 52<i32>:word32]
	Mem76[ebp_116 - 4<i32>:word32] = 0<32>
	Mem77[ebp_116 - 60<i32>:word32] = edx_74
	word32 eax_78 = Mem77[edx_74 + 20<i32>:word32]
	Mem79[ebp_116 - 48<i32>:word32] = eax_78
	word32 ebx_119 = fp - 4<i32>
	word32 edi_106 = dwArg18
	word32 esi_120 = dwArg1C
	word32 esp_104 = fp - 0x70<32>
	word32 ecx_112 = edx_74
	branch eax_78 <u 0x10<32> l00417185
l00417180:
	ecx_112 = Mem79[edx_74:word32]
	Mem83[ebp_116 - 60<i32>:word32] = ecx_112
l00417185:
	Mem89[ebp_116 - 56<i32>:word32] = edx_74
	word32 eax_109 = edx_74
	branch Mem85[edx_74 + 20<i32>:word32] <u 0x10<32> l00417195
l00417190:
	eax_109 = Mem89[edx_74:word32]
	Mem92[ebp_116 - 56<i32>:word32] = eax_109
l00417195:
	word32 eax_101
	word32 esi_103
	branch dwArg18 == dwArg1C l00417240
l00417240:
	eax_101 = Mem100[ebp_116 - 48<i32>:word32]
	esi_103 = edx_74
l0041719D:
l004171A0:
	word32 esp_105 = esp_104 - 4<i32>
	Mem107[esp_105:word32] = edi_106
	Mem110[esp_105 - 4<i32>:word32] = eax_109
	Mem113[esp_105 - 8<i32>:word32] = ecx_112
	Mem115[esp_105 - 12<i32>:word32] = ecx_112
	word32 esi_131
	word32 ebp_132
	word32 ebx_805
	word32 edi_806
	word32 eax_127 = fn00417E50(ebp_116 - 48<i32>, ebp_116 - 40<i32>, ebx_119, esi_120, edi_106, es, ds, Mem115[esp_105 - 8<i32>:word32], Mem115[esp_105 - 4<i32>:word32], Mem115[esp_105:word32], out ebx_805, out ebp_132, out esi_131, out edi_806)
	word32 edx_143 = Mem115[ebp_132 - 24<i32>:word32] + Mem115[ebp_132 - 28<i32>:word32]
	Mem144[ebp_132 - 56<i32>:word32] = esi_131
	word32 esp_134 = <invalid>
	word32 eax_145 = Mem144[eax_127:word32]
	Mem148[esp_134 + 0xC<32>:word32] = Mem144[ebp_132 - 44<i32>:word32]
	Mem149[ebp_132 - 60<i32>:word32] = eax_145
	Mem152[esp_134 + 8<32>:word32] = Mem149[ebp_132 - 64<i32>:word32]
	word32 eax_153 = Mem152[ebp_132 - 40<i32>:word32]
	Mem156[esp_134 - 4<32>:word32] = 0<32>
	Mem157[esp_134:word32] = 0<32>
	branch eax_153 == 0<32> l004171E9
l004171DF:
	word32 eax_161 = Mem157[eax_153:word32]
	branch eax_161 == 0<32> l004171E9
l004171E5:
	Mem166[esp_134 - 4<32>:word32] = Mem157[eax_161:word32]
l004171E9:
	Mem171[esp_134 + 4<32>:word32] = edx_143
	Mem174[esp_134 - 8<32>:word32] = ebp_132 - 84<i32>
	word32 esi_187
	ebx_119 = fn004191F0(ebp_132 - 40<i32>, es, ds, Mem174[esp_134 + 4<32>:word32], Mem174[esp_134 + 8<32>:word32], Mem174[esp_134 + 0xC<32>:word32], out ebp_116, out esi_187)
	word32 eax_195 = Mem174[ebp_116 - 52<i32>:word32]
	word32 esp_189 = <invalid>
	word32 ecx_196 = eax_195
	branch Mem174[eax_195 + 20<i32>:word32] <u 0x10<32> l00417205
l00417203:
	ecx_196 = Mem174[eax_195:word32]
l00417205:
	Mem210[esp_189 + 0x14<32>:word32] = Mem174[eax_195 + 16<i32>:word32] + ecx_196
	Mem213[esp_189 + 0x10<32>:word32] = esi_187
	Mem217[esp_189 + 0xC<32>:word32] = ebp_116 - 72<i32>
	word32 edx_804
	word32 eax_218 = fn004160F0(ebx_119 + 8<i32>, Mem217[esp_189 + 0xC<32>:word32], Mem217[esp_189 + 0x10<32>:word32], Mem217[esp_189 + 0x14<32>:word32], out edx_804)
	esp_104 = esp_189 + 0x18<32>
	edi_106 = Mem217[eax_218:word32]
	esi_120 = Mem217[eax_218 + 4<i32>:word32]
	branch edi_106 == esi_120 l00417238
l00417238:
	esi_103 = Mem217[ebp_116 - 52<i32>:word32]
	eax_101 = Mem217[esi_103 + 20<i32>:word32]
l00417245:
	word32 ecx_233 = esi_103
	branch eax_101 <u 0x10<32> l0041724E
l0041724C:
	ecx_233 = Mem237[esi_103:word32]
l0041724E:
	word32 edx_367
	word32 esp_377
	word32 edi_242 = esi_103 + 16<i32>
	word32 eax_244 = Mem237[esi_103 + 16<i32>:word32] + ecx_233
	Mem248[ebp_116 - 48<i32>:word32] = edi_242
	word32 esp_253 = esp_104 - 4<i32>
	Mem254[esp_253:word32] = eax_244
	Mem257[esp_253 - 4<i32>:word32] = Mem254[ebp_116 - 56<i32>:word32]
	Mem261[esp_253 - 8<i32>:word32] = Mem257[ebp_116 - 60<i32>:word32]
	Mem263[esp_253 - 12<i32>:word32] = ecx_233
	word32 edi_310
	word32 esi_308
	word32 ebp_309
	word32 ebx_307
	word32 eax_304 = fn00417E50(ebp_116 - 64<i32>, ebp_116 - 40<i32>, ebx_119, esi_103, edi_242, es, ds, Mem263[esp_253 - 8<i32>:word32], Mem263[esp_253 - 4<i32>:word32], Mem263[esp_253:word32], out ebx_307, out ebp_309, out esi_308, out edi_310)
	word32 esp_311 = <invalid>
	word32 edx_318 = Mem263[ebp_309 - 24<i32>:word32]
	word32 eax_320 = Mem263[eax_304:word32]
	branch edx_318 != 0<32> l004172DC
l004172DC:
	word32 eax_327 = Mem263[ebp_309 - 28<i32>:word32] + edx_318
	Mem329[esp_311 + 4<32>:word32] = 0<32>
	Mem330[esp_311 + 8<32>:word32] = 0<32>
	Mem331[esp_311 + 0xC<32>:word32] = eax_327
	Mem333[esp_311 + 4<32>:word32] = Mem331[ebp_309 - 40<i32>:word32]
	word32 eax_335 = Mem333[ebp_309 - 28<i32>:word32]
	Mem336[esp_311 - 8<32>:word32] = 0<32>
	Mem337[esp_311 - 4<32>:word32] = 0<32>
	Mem338[esp_311:word32] = eax_335
	Mem340[esp_311 - 8<32>:word32] = Mem338[ebp_309 - 40<i32>:word32]
	word32 ecx_341 = esi_308
	branch Mem340[esi_308 + 20<i32>:word32] <u 0x10<32> l00417322
l00417320:
	ecx_341 = Mem340[esi_308:word32]
l00417322:
	Mem355[esp_311 - 0xC<32>:word32] = Mem340[edi_310:word32] + ecx_341
	word32 esp_369 = <invalid>
	edx_367 = fn00417F50(esi_308, es, ds, Mem355[esp_311 - 8<32>:word32], Mem355[esp_311:word32], Mem355[esp_311 + 4<32>:word32], Mem355[esp_311 + 0xC<32>:word32], out ebx_307, out ebp_309)
	esp_377 = esp_369 + 0x1C<32>
l00417278:
	word32 ecx_379 = Mem263[esi_308 + 20<i32>:word32]
	Mem380[ebp_309 - 44<i32>:word32] = esi_308
	branch ecx_379 <u 0x10<32> l00417288
l00417283:
	Mem384[ebp_309 - 44<i32>:word32] = Mem380[esi_308:word32]
l00417288:
	word32 edx_387 = Mem386[edi_310:word32]
	word32 edi_390 = Mem386[ebp_309 - 44<i32>:word32] + edx_387
	Mem392[ebp_309 - 44<i32>:word32] = esi_308
	branch ecx_379 <u 0x10<32> l0041729C
l00417297:
	Mem397[ebp_309 - 44<i32>:word32] = Mem392[esi_308:word32]
l0041729C:
	word32 ecx_403 = eax_320 - Mem402[ebp_309 - 44<i32>:word32]
	Mem404[ebp_309 - 44<i32>:word32] = ecx_403
	branch edx_387 <u ecx_403 l004173E8
l004173E8:
	word32 edi_416
	word32 edx_807
	word32 ebx_808
	word32 ebp_809
	word32 esi_810
	word32 ecx_415 = fn004113B0(ecx_403, Mem404[esp_311 + 0xC<32>:word32], Mem404[esp_311 + 0x10<32>:word32], Mem404[esp_311 + 0x14<32>:word32], out edx_807, out ebx_808, out ebp_809, out esi_810, out edi_416)
	int3()
	int3()
	int3()
	word32 esp_419 = <invalid>
l004173EF_thunk_fn004173F0:
	word32 ebp_427
	word32 ebx_428
	word32 edi_430
	word32 edx_431 = fn004173F0(ecx_415, edi_416, Mem404[esp_419 + 0x10<32>:word32], out ebx_428, out ebp_427, out edi_430)
	ebxOut = ebx_428
	ebpOut = ebp_427
	ediOut = edi_430
	return edx_431
l004172AC:
	word32 edi_439 = edi_390 - eax_320
	word32 eax_441 = edx_387 - ecx_403
	branch eax_441 >=u edi_439 l004172B7
l004172B4_1:
	edi_439 = eax_441
l004172B7:
	branch Mem404[esi_308 + 20<i32>:word32] <u 0x10<32> l004172BF
l004172BD:
	esi_308 = Mem404[esi_308:word32]
l004172BF:
	word32 edx_459 = edx_387 - edi_439
	Mem464[Mem404[ebp_309 - 48<i32>:word32]:word32] = edx_459
	word32 edx_465 = edx_459 - Mem464[ebp_309 - 44<i32>:word32]
	Mem471[esp_311 + 0xC<32>:word32] = edx_465 + 1<32>
	word32 ecx_463 = ecx_403 + esi_308
	Mem473[esp_311 + 8<32>:word32] = ecx_463 + edi_439
	Mem475[esp_311 + 4<32>:word32] = ecx_463
	memmove(Mem475[esp_311 + 4<32>:(ptr32 void)], Mem475[esp_311 + 8<32>:(ptr32 void)], Mem475[esp_311 + 0xC<32>:size_t])
	edx_367 = edx_465 + 1<32>
	esp_377 = esp_311 + 0x10<32>
l00417331:
	word32 ecx_481 = Mem480[ebp_309 - 24<i32>:word32]
	branch ecx_481 == 0<32> l00417355
l00417338:
	word32 eax_485 = Mem480[ebp_309 - 28<i32>:word32]
l00417340:
	ecx_481 = ecx_481 - 1<32>
	edx_367 = 0<32>
	branch ecx_481 != 0<32> l0041734B
l00417348_1:
	eax_485 = 0<32>
l0041734B:
	branch ecx_481 != 0<32> l00417340
l0041734F:
	Mem500[ebp_309 - 28<i32>:word32] = eax_485
	Mem501[ebp_309 - 24<i32>:word32] = ecx_481
l00417355:
	word32 esi_504 = Mem503[ebp_309 - 32<i32>:word32]
	word32 ecx_505 = Mem503[ebp_309 - 36<i32>:word32]
	branch esi_504 == 0<32> l0041737E
l0041735F:
l00417360:
	word32 eax_512 = Mem511[ecx_505 - 4<i32> + esi_504 * 4<32>:word32]
	esi_504 = esi_504 - 1<32>
	branch eax_512 == 0<32> l00417377
l00417369:
	word32 esp_518 = esp_377 - 4<i32>
	Mem519[esp_518:word32] = 0x10<32>
	Mem521[esp_518 - 4<i32>:word32] = eax_512
	fn0042763F(Mem521[esp_518 - 4<i32>:word32])
	ecx_505 = Mem521[ebp_309 - 36<i32>:word32]
l00417377:
	branch esi_504 != 0<32> l00417360
l0041737B:
	esi_504 = Mem532[ebp_309 - 32<i32>:word32]
l0041737E:
	branch ecx_505 == 0<32> l004173AF
l00417382:
	word32 esi_540 = esi_504 << 2<32>
	branch esi_540 <u 0x1000<32> l004173A5
l0041738F:
	ecx_505 = Mem544[ecx_505 - 4<i32>:word32]
	esi_540 = esi_540 + 0x23<32>
	branch ecx_505 - ecx_505 <=u 0x23<32> l004173A5
l0041739F:
	_invalid_parameter_noinfo_noreturn()
l004173A5:
	word32 esp_558 = esp_377 - 4<i32>
	Mem560[esp_558:word32] = esi_540
	Mem563[esp_558 - 4<i32>:word32] = ecx_505
	fn0042763F(Mem563[esp_558 - 4<i32>:word32])
l004173AF:
	word32 esp_568 = esp_377 - 4<i32>
	Mem569[esp_568:word32] = 8<32>
	Mem575[esp_568 - 4<i32>:word32] = Mem569[ebp_309 - 40<i32>:word32]
	Mem576[ebp_309 - 32<i32>:word32] = 0<32>
	Mem577[ebp_309 - 36<i32>:word32] = 0<32>
	fn0042763F(Mem577[esp_568 - 4<i32>:word32])
	Mem592[fs:0x00000000<p32>:word32] = Mem577[ebp_309 - 12<i32>:word32]
	word32 edi_595 = Mem592[esp_568 + 8<32>:word32]
	word32 eax_811
	word32 ecx_812
	fn00427500(Mem592[ebp_309 - 20<i32>:word32] ^ ebp_309, edx_367, ebx_307, ebp_309, Mem592[esp_568 + 0xC<32>:word32], edi_595, es, ds, Mem592[esp_568 + 0xC<32>:word32], out eax_811, out ecx_812)
	word32 ebp_698 = Mem592[ebp_309:word32]
	ebxOut = Mem592[ebx_307:word32]
	ebpOut = ebp_698
	ediOut = edi_595
	return edx_367
fn004170C0_exit:
l00417221:
	ecx_112 = Mem217[ebp_116 - 60<i32>:word32]
	Mem704[ebp_116 - 64<i32>:word32] = Mem217[ebx_119 + 20<i32>:word32]
	Mem706[ebp_116 - 44<i32>:word32] = Mem704[ebx_119 + 24<i32>:word32]
	eax_109 = Mem706[ebp_116 - 56<i32>:word32]


word32 fn004173F0(word32 ecx, word32 edi, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004167E0
//      fn004170C0
// MayUse:  ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ebx edi edx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004173F0_entry:
	ptr32 fp
	word32 ebx
	word32 dwLoc2C
l004173F0:
	word32 edx_121 = Mem20[ecx + 16<i32>:word32]
	word32 ebp_115 = fp - 4<i32>
	branch 0x7FFFFFFF<32> - edx_121 <u dwArg04 l0041756E
l0041756E:
	word32 ecx_32
	fn00403860(0x7FFFFFFF<32>, out ecx_32)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 esp_33 = <invalid>
	Mem39[esp_33 - 4<i32>:word32] = dwArg04
	word32 esi_40 = Mem39[ecx_32:word32]
	Mem42[esp_33 - 8<i32>:word32] = edi
	word32 edi_43 = Mem42[ecx_32 + 4<i32>:word32]
	branch esi_40 == edi_43 l0041759E
l0041758B:
l00417590:
	word32 esi_51
	fn004148B0(esi_40, out edx_121, out ebp_115, out esi_51)
	esi_40 = esi_51 + 0x78<32>
	branch esi_51 + 0x78<32> != edi_43 l00417590
l0041759E:
	word32 edi_66 = Mem42[esp_33 - 8<i32>:word32]
	ebxOut = ecx
	ebpOut = ebp_115
	ediOut = edi_66
	return edx_121
l0041741B:
	word32 eax_71 = edx_121 + dwArg04
	word32 edi_105 = Mem27[ecx + 20<i32>:word32]
	word32 esi_173 = eax_71 | 0xF<32>
	branch (eax_71 | 0xF<32>) <=u 0x7FFFFFFF<32> l00417434
l00417434:
	branch edi_105 <=u 0x7FFFFFFF<32> - (edi_105 >>u 1<32>) l00417445
l00417445:
	word32 eax_83 = (edi_105 >>u 1<32>) + edi_105
	branch (eax_71 | 0xF<32>) >=u eax_83 l0041744C
l00417449_1:
	esi_173 = eax_83
l0041743E:
	esi_173 = 0x7FFFFFFF<32>
l00417430:
	esi_173 = 0x7FFFFFFF<32>
l0041744C:
	word32 edx_127
	word32 esp_170
	word32 eax_92 = esi_173 + 1<32>
	word32 ecx_99 = -CONVERT(CONVERT(eax_92 <u 0<32>, bool, int8), byte, uint32) | eax_92
	branch ecx_99 <u 0x1000<32> l0041748C
l0041748C:
	branch ecx_99 == 0<32> l004174A0
l004174A0:
	edi_105 = 0<32>
l00417490:
	word32 ecx_384
	word32 eax_114 = fn00427511(ecx, esi_173, edi_105, dwLoc2C, ecx_99, edi, out ecx_384, out ebp_115)
	edx_121 = Mem110[ebp_115 - 4<i32>:word32]
	edi_105 = eax_114
l00417462:
	word32 eax_125 = ecx_99 + 35<i32>
	edx_127 = 0xFFFFFFFF<32>
	branch ecx_99 + 35<i32> >u ecx_99 l0041746D
l0041746A_1:
	eax_125 = 0xFFFFFFFF<32>
l0041746D:
	word32 ecx_383
	word32 eax_139 = fn00427511(ecx, esi_173, edi_105, dwLoc2C, eax_125, edi, out ecx_383, out ebp_115)
	branch eax_139 == 0<32> l00417531
l0041747E:
	edx_121 = Mem134[ebp_115 - 4<i32>:word32]
	edi_105 = eax_139 + 35<i32> & 0xFFFFFFE0<32>
	Mem155[edi_105 - 4<i32>:word32] = eax_139
l004174A2:
	Mem162[ecx + 16<i32>:word32] = Mem158[ebp_115 - 8<i32>:word32]
	word32 eax_163 = Mem162[ebp_115 + 16<i32>:word32]
	edx_127 = edx_121 - eax_163 - Mem162[ebp_115 + 20<i32>:word32]
	Mem168[ecx + 20<i32>:word32] = esi_173
	esi_173 = edi_105 + eax_163
	Mem175[ebp_115 - 20<i32>:word32] = esi_173
	Mem176[ebp_115 - 4<i32>:word32] = edx_127 + 1<i32>
	Mem180[ebp_115 - 8<i32>:word32] = Mem176[ebp_115 + 28<i32>:word32] + esi_173
	esp_170 = fp - 0x28<32>
	branch Mem176[ebp_115 - 12<i32>:word32] <u 0x10<32> l00417537
l004174CE:
	word32 esi_182 = Mem180[ecx:word32]
	memcpy(edi_105, esi_182, eax_163)
	memcpy(Mem193[ebp_115 - 20<i32>:word32], Mem190[ebp_115 - 16<i32>:word32], Mem186[ebp_115 + 28<i32>:word32])
	memcpy(Mem205[ebp_115 - 8<i32>:word32], Mem196[ebp_115 + 16<i32>:word32] + esi_182 + Mem201[ebp_115 + 20<i32>:word32], Mem196[ebp_115 - 4<i32>:word32])
	branch Mem208[ebp_115 - 12<i32>:word32] <u 0xFFF<32> l0041751A
l00417508:
	edx_127 = Mem208[esi_182 - 4<i32>:word32]
	esi_173 = esi_182 - edx_127
	branch esi_173 >u 0x23<32> l00417531
l00417531:
	_invalid_parameter_noinfo_noreturn()
	esp_170 = fp - 0x24<32>
l00417537:
	word32 esp_223 = esp_170 - 4<i32>
	Mem226[esp_223:word32] = ecx
	Mem230[esp_223 - 4<i32>:word32] = edi_105
	memcpy(Mem230[esp_223 - 4<i32>:(ptr32 void)], Mem230[esp_223:(ptr32 void)], Mem230[esp_223 + 4<i32>:size_t])
	Mem236[esp_223 - 8<i32>:word32] = Mem230[ebp_115 + 28<i32>:word32]
	Mem239[esp_223 - 12<i32>:word32] = Mem236[ebp_115 - 16<i32>:word32]
	Mem243[esp_223 - 16<i32>:word32] = esi_173
	memcpy(Mem243[esp_223 - 16<i32>:(ptr32 void)], Mem243[esp_223 - 12<i32>:(ptr32 void)], Mem243[esp_223 - 8<i32>:size_t])
	word32 ecx_245 = Mem243[ebp_115 + 16<i32>:word32]
	Mem248[esp_223 - 20<i32>:word32] = Mem243[ebp_115 - 4<i32>:word32]
	Mem252[esp_223 - 24<i32>:word32] = ecx_245 + ecx + Mem248[ebp_115 + 20<i32>:word32]
	Mem255[esp_223 - 28<i32>:word32] = Mem252[ebp_115 - 8<i32>:word32]
	memcpy(Mem255[esp_223 - 28<i32>:(ptr32 void)], Mem255[esp_223 - 24<i32>:(ptr32 void)], Mem255[esp_223 - 20<i32>:size_t])
	Mem259[ecx:word32] = edi_105
	word32 edi_261 = Mem259[esp_223 + 8<32>:word32]
	word32 ebp_267 = Mem259[ebp_115:word32]
	ebxOut = Mem259[esp_223 + 0x10<32>:word32]
	ebpOut = ebp_267
	ediOut = edi_261
	return edx_127
l00417518:
	esi_182 = edx_127
l0041751A:
	fn0042763F(esi_182)
	Mem282[ecx:word32] = edi_105
	word32 ebp_291 = Mem282[ebp_115:word32]
	ebxOut = ebx
	ebpOut = ebp_291
	ediOut = edi
	return edx_127
fn004173F0_exit:


word32 fn004175B0(word32 ecx, word32 esi, word32 edi, selector es, selector ds, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004154B0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ecx edx
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn004175B0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc6C
	struct <anonymous> tLoc38
l004175B0:
	Mem24[fs:0<32>:word32] = fp - 16<i32>
	word32 ebx_45 = fn00418B80(&tLoc6C, fn00418B10(&tLoc38, ecx), es, ds)
	CxxThrowException(&tLoc6C, 0x437CD4<32>)
	int3()
	int3()
	Mem67[esp_60 - 4<i32>:word32] = fp - 4<i32>
	Mem70[esp_60 - 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem72[esp_60 - 12<i32>:word32] = 0x42EF09<32>
	Mem75[esp_60 - 16<i32>:word32] = Mem72[fs:0<32>:word32]
	word32 eax_78 = Mem75[0x0043A008<p32>:word32] ^ esp_60 - 4<i32>
	Mem79[esp_60 - 24<i32>:word32] = eax_78
	Mem81[esp_60 - 0x10C<32>:word32] = ebx_45
	Mem84[esp_60 - 0x110<32>:word32] = esi
	Mem87[esp_60 - 0x114<32>:word32] = edi
	Mem89[esp_60 - 0x118<32>:word32] = eax_78
	Mem91[fs:0<32>:word32] = esp_60 - 16<i32>
	Mem93[esp_60 - 0xEC<32>:word32] = edx_62
	Mem94[esp_60 - 0xE8<32>:word32] = ecx_63
	word32 eax_95 = Mem94[esp_60 + 12<i32>:word32]
	word32 edi_96 = Mem94[esp_60 + 8<i32>:word32]
	word32 ebx_97 = Mem94[esp_60 + 4<i32>:word32]
	Mem99[esp_60 - 0x11C<32>:word32] = 0x60<32>
	Mem100[esp_60 - 0xF4<32>:word32] = eax_95
	Mem103[esp_60 - 0x120<32>:word32] = 0<32>
	Mem105[esp_60 - 0x124<32>:word32] = esp_60 - 120<i32>
	Mem106[esp_60 - 0x100<32>:word32] = edi_96
	Mem107[esp_60 - 0xE0<32>:word32] = 0<32>
	memset(Mem107[esp_60 - 0x124<32>:(ptr32 void)], Mem107[esp_60 - 0x120<32>:int32], Mem107[esp_60 - 0x11C<32>:size_t])
	Mem111[esp_60 - 112<i32>:word32] = 0x004324B0<p32>
	basic_ios(esp_60 - 96<i32>)
	Mem114[esp_60 - 8<i32>:word32] = 0<32>
	Mem118[esp_60 - 0x11C<32>:word32] = Mem114[esp_60 - 0x100<32>:word32]
	Mem119[esp_60 - 0xE0<32>:word32] = 1<32>
	Mem121[esp_60 - 0x120<32>:word32] = edi_96
	Mem122[esp_60 - 120<i32>:word32] = edi_96
	word32 ebp_124 = fn00419630(esp_60 - 116<i32>, ebx_97, edi_96)
	fn004029A0()
	Mem144[ebp_124 - 4<i32>:word32] = 1<32>
	basic_ostream(ebp_124 - 108<i32>, Mem144[ebp_124 - 116<i32>:word32], false)
	Mem153[ebp_124 - 108<i32> + Mem148[Mem148[ebp_124 - 108<i32>:word32] + 4<i32>:word32]:word32] = 0x004323A4<p32>
	word32 ecx_155 = Mem153[Mem153[ebp_124 - 108<i32>:word32] + 4<i32>:word32]
	Mem157[ebp_124 - 112<i32> + ecx_155:word32] = ecx_155 - 16<i32>
	word32 eax_158 = Mem157[ebp_124 - 0xF0<32>:word32]
	Mem159[ebp_124 - 4<i32>:word32] = 2<32>
	branch eax_158 == 0<32> l00417731
l004176ED_thunk_fn00417731:
	word32 edx_168
	word32 ebp_227
	word32 esi_228
	word32 ecx_166 = fn00417731(eax_158, ebx_97, ebp_124, edx_62, es, ds, out edx_168, out ebp_227, out esi_228)
	edxOut = edx_168
	return ecx_166
l004176ED_thunk_fn004176EF:
	word32 edx_183
	word32 ebp_229
	word32 esi_230
	word32 ecx_181 = fn004176EF(ebx_97, ebp_124, edx_62, es, ds, out edx_183, out ebp_229, out esi_230)
	edxOut = edx_183
	return ecx_181
fn004175B0_exit:


word32 fn00417600(word32 edx, selector es, selector ds, word32 dwArg04, word32 dwArg08, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004154B0
// MayUse:  cs:[0..15] ds:[0..15] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebp esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00417600_entry:
	ptr32 fp
	selector fs
	word32 dwLoc78
	struct <anonymous> tLoc74
	word32 dwLoc60
l00417600:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	memset(&dwLoc78, 0<32>, 0x60<32>)
	basic_ios(&dwLoc60)
	Mem65[&dwLoc78:word32] = dwArg08
	word32 ebp_67 = fn00419630(&tLoc74, dwArg04, dwArg08)
	fn004029A0()
	Mem87[ebp_67 - 4<i32>:word32] = 1<32>
	basic_ostream(ebp_67 - 108<i32>, Mem87[ebp_67 - 116<i32>:word32], false)
	Mem96[ebp_67 - 108<i32> + Mem91[Mem91[ebp_67 - 108<i32>:word32] + 4<i32>:word32]:word32] = 0x004323A4<p32>
	word32 ecx_98 = Mem96[Mem96[ebp_67 - 108<i32>:word32] + 4<i32>:word32]
	Mem100[ebp_67 - 112<i32> + ecx_98:word32] = ecx_98 - 16<i32>
	word32 eax_101 = Mem100[ebp_67 - 0xF0<32>:word32]
	Mem102[ebp_67 - 4<i32>:word32] = 2<32>
	branch eax_101 == 0<32> l004176ED_thunk_fn00417731
l004176ED_thunk_fn00417731:
	word32 ebp_112
	word32 esi_117
	word32 edx_192
	fn00417731(eax_101, dwArg04, ebp_67, edx, es, ds, out edx_192, out ebp_112, out esi_117)
	esiOut = esi_117
	return ebp_112
l004176ED_thunk_fn004176EF:
	word32 ebp_127
	word32 esi_132
	word32 edx_193
	fn004176EF(dwArg04, ebp_67, edx, es, ds, out edx_193, out ebp_127, out esi_132)
	esiOut = esi_132
	return ebp_127
fn00417600_exit:


word32 fn004176EF(word32 ebx, word32 ebp, word32 esi, selector es, selector ds, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004175B0
//      fn00417600
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ecx edx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn004176EF_entry:
l004176EF:
	imbue(ebp - 108<i32> + Mem10[Mem10[ebp - 108<i32>:word32] + 4<i32>:word32], ebp - 0x104<32>)
	Mem17[ebp - 4<i32>:byte] = 3<8>
	word32 ecx_18 = Mem17[ebp - 0x100<32>:word32]
	branch ecx_18 == 0<32> l00417727
l00417716:
	word32 eax_22 = Mem17[ecx_18:word32]
	word32 esp_23
	word32 eax_25
	call Mem17[eax_22 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_22
		defs: eax:eax_25,esp:esp_23
	branch eax_25 == 0<32> l00417727
l0041771F:
	word32 edx_32 = Mem17[eax_25:word32]
	Mem35[esp_23 - 4<i32>:word32] = 1<32>
	call Mem35[edx_32:word32] (retsize: 4;)
		uses: eax:eax_25,ecx:eax_25,edx:edx_32
l00417727:
	word32 eax_44 = Mem43[ebp - 0xF0<32>:word32]
	Mem45[ebp - 4<i32>:byte] = 2<8>
l0041772D_thunk_fn00417731:
	word32 ebp_63
	word32 edx_67
	word32 esi_68
	word32 ecx_65 = fn00417731(eax_44, ebx, ebp, esi, es, ds, out edx_67, out ebp_63, out esi_68)
	edxOut = edx_67
	ebpOut = ebp_63
	esiOut = esi_68
	return ecx_65
fn004176EF_exit:


word32 fn00417731(word32 eax, word32 ebx, word32 ebp, word32 esi, selector es, selector ds, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004175B0
//      fn00417600
// MayUse:  cs:[0..15] ds:[0..15] eax:[0..31] ebp:[0..31] ebx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ecx edx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00417731_entry:
	selector fs
l00417731:
	word32 edi_20
	word32 esi_22 = fn00418A20(esi + 56<i32>, Mem6[Mem6[ebp - 108<i32>:word32] + 4<i32>:word32] + (ebp - 108<i32>), eax, out edi_20)
	word32 eax_28 = Mem16[ebp - 0xE4<32>:word32]
	word32 eax_33 = Mem32[eax_28 + 4<i32>:word32]
	word32 esp_36
	call eax_33 (retsize: 4;)
		uses: eax:eax_33,ecx:ebp - 108<i32>,Stack +0004:ebp - 108<i32>,Stack +0008:Mem16[eax_28:word32]
		defs: esp:esp_36
	word32 ecx_44 = Mem35[Mem35[ebp - 108<i32>:word32] + 4<i32>:word32]
	word32 eax_45 = Mem35[ebp - 88<i32> + ecx_44:word32]
	word32 edx_46 = Mem35[ebp - 76<i32> + ecx_44:word32]
	word32 ecx_47 = Mem35[ebp - 72<i32> + ecx_44:word32]
	Mem48[ebp - 0xE0<32>:word32] = eax_45
	Mem50[ebp - 0xF8<32>:word32] = edx_46
	Mem51[ebp - 0xF4<32>:word32] = ecx_47
	branch (SLICE(eax_45 >>u 8<32>, byte, 0) & 1<8>) == 0<8> l00417792
l00417785:
	Mem58[ebp - 0xD5<32>:byte] = 1<8>
	branch (edx_46 | ecx_47) != 0<32> l00417799
l00417792:
	Mem64[ebp - 0xD5<32>:byte] = 0<8>
l00417799:
	Mem69[ebx + 16<i32>:word32] = 0<32>
	Mem72[ebp - 0xEC<32>:word32] = ebx + 16<i32>
	word32 eax_73 = ebx
	branch Mem69[ebx + 20<i32>:word32] <u 0x10<32> l004177B2
l004177B0:
	eax_73 = Mem72[ebx:word32]
l004177B2:
	word32 edx_1096
	word32 esp_1104
	word32 ebp_1092
	word32 edi_1095
	Mem80[eax_73:byte] = 0<8>
	branch Mem72[ebp - 0xD5<32>:byte] != 0<8> l004178DA
l004178DA:
	word32 eax_82 = Mem80[ebp - 0xE4<32>:word32]
	Mem89[esp_36 + 4<32>:word32] = Mem80[eax_82:word32]
	word32 eax_90 = Mem89[eax_82 + 8<i32>:word32]
	Mem92[esp_36:word32] = ebp - 108<i32>
	word32 esp_103
	call eax_90 (retsize: 4;)
		uses: eax:eax_90,ecx:ebp - 108<i32>
		defs: esp:esp_103
	word32 eax_112 = Mem92[edi_20 + 16<i32>:word32]
	Mem114[ebp - 0xD5<32>:byte] = 0<8>
	word32 ecx_115 = Mem114[eax_112:word32]
	word32 eax_116 = Mem114[edi_20 + 32<i32>:word32]
	Mem117[ebp - 0xDC<32>:word32] = ecx_115
	word32 eax_119 = Mem117[eax_116:word32] - ecx_115
	Mem122[ebp - 0xE0<32>:word32] = eax_119
	branch (Mem117[esi_22 + 112<i32>:byte] & 2<8>) == 0<8> l00417958
l00417913:
	branch eax_119 == 0<32> l00417951
l00417917:
	word32 eax_127 = Mem122[ebp - 108<i32>:word32]
	Mem130[esp_103 + 4<32>:word32] = 0x2B<32>
	branch Mem130[Mem130[ebp - 0xDC<32>:word32]:byte] == widen((ebp - 108<i32>) + Mem130[eax_127 + 4<i32>:word32], Mem130[esp_103 + 4<32>:charconst ]) l00417958
l00417934:
	word32 eax_138 = Mem130[ebp - 108<i32>:word32]
	Mem141[esp_103 + 4<32>:word32] = 0x2D<32>
	branch Mem141[Mem141[ebp - 0xDC<32>:word32]:byte] == widen((ebp - 108<i32>) + Mem141[eax_138 + 4<i32>:word32], Mem141[esp_103 + 4<32>:charconst ]) l00417958
l00417951:
	Mem150[ebp - 0xD5<32>:byte] = 1<8>
l00417958:
	word32 eax_153 = Mem152[ebp - 0xF8<32>:word32]
	word32 edx_154 = Mem152[ebp - 0xE0<32>:word32]
	branch edx_154 != eax_153 l00417996
l00417968:
	word32 ecx_157 = Mem152[ebp - 0xF4<32>:word32]
	branch ecx_157 > Mem152[esi_22 + 108<i32>:word32] l00417996
l00417973:
	branch ecx_157 < Mem152[esi_22 + 108<i32>:word32] l0041797A
l00417975:
	branch eax_153 >u Mem152[esi_22 + 104<i32>:word32] l00417996
l0041797A:
	branch Mem152[ebp - 0xD5<32>:byte] != 0<8> l00417996
l00417996:
	Mem176[esp_103 + 4<32>:word32] = edx_154
	Mem180[esp_103:word32] = Mem176[ebp - 0xDC<32>:word32]
	word32 ebp_195
	word32 edi_198
	word32 edx_1398
	word32 esi_1399
	word32 ecx_1397
	word32 ebx_196
	fn00402A70(ebx, edi_20, Mem180[esp_103:word32], Mem180[esp_103 + 4<i32>:word32], Mem180[esp_103 + 20<i32>:word32], out ecx_1397, out edx_1398, out ebx_196, out ebp_195, out esi_1399, out edi_198)
	word32 esp_202 = <invalid>
	word32 esi_211 = fn00418980(edi_198)
	Mem218[esp_202 + 4<32>:word32] = 0x60<32>
	Mem221[esp_202:word32] = 0<32>
	Mem223[esp_202 - 4<i32>:word32] = ebp_195 - 0xD4<32>
	memset(Mem223[esp_202 - 4<i32>:(ptr32 void)], Mem223[esp_202:int32], Mem223[esp_202 + 4<i32>:size_t])
	Mem227[ebp_195 - 0xCC<32>:word32] = 0x004324B0<p32>
	basic_ios(ebp_195 - 0xBC<32>)
	Mem230[ebp_195 - 4<i32>:byte] = 4<8>
	Mem234[esp_202 + 4<32>:word32] = Mem230[ebp_195 - 0x100<32>:word32]
	Mem235[ebp_195 - 0xDC<32>:word32] = 3<32>
	Mem237[esp_202:word32] = edi_198
	Mem238[ebp_195 - 0xD4<32>:word32] = edi_198
	word32 ebp_240 = fn00419630(ebp_195 - 0xD0<32>, ebx_196, edi_198)
	word32 esp_242 = <invalid>
	Mem249[esp_242 + 4<32>:word32] = edi_198
	Mem252[esp_242:word32] = edi_198
	Mem254[esp_242 - 4<i32>:word32] = ebp_240 - 0xD4<32>
	fn004029A0()
	Mem257[esp_242 + 4<32>:word32] = 0<32>
	Mem259[esp_242:word32] = 0<32>
	Mem260[ebp_240 - 4<i32>:word32] = 5<32>
	Mem264[esp_242 - 4<i32>:word32] = Mem260[ebp_240 - 0xD4<32>:word32]
	basic_ostream(ebp_240 - 0xCC<32>, Mem264[esp_242 - 4<i32>:(ptr32 basic_streambuf)], Mem264[esp_242:bool])
	Mem269[ebp_240 - 0xCC<32> + Mem264[Mem264[ebp_240 - 0xCC<32>:word32] + 4<i32>:word32]:word32] = 0x004323A4<p32>
	word32 edx_271 = Mem269[Mem269[ebp_240 - 0xCC<32>:word32] + 4<i32>:word32]
	Mem273[ebp_240 - 0xD0<32> + edx_271:word32] = edx_271 - 16<i32>
	Mem277[esp_242:word32] = Mem273[ebp_240 - 0xF0<32>:word32]
	Mem278[ebp_240 - 4<i32>:byte] = 6<8>
	Mem285[esp_242 - 4<i32>:word32] = Mem278[Mem278[ebp_240 - 0xCC<32>:word32] + 4<i32>:word32] + (ebp_240 - 0xCC<32>)
	word32 edi_288
	fn00418A20(esi_211 + 56<i32>, Mem285[esp_242 - 4<i32>:word32], Mem285[esp_242:word32], out edi_288)
	word32 esi_296 = Mem285[ebp_240 - 0xE4<32>:word32]
	Mem300[esp_242:word32] = Mem285[esi_296:word32]
	Mem302[esp_242 - 4<i32>:word32] = ebp_240 - 0xCC<32>
	word32 eax_303 = Mem302[esi_296 + 4<i32>:word32]
	word32 esp_308
	word32 edx_311
	call eax_303 (retsize: 4;)
		uses: eax:eax_303
		defs: edx:edx_311,esp:esp_308
	word32 eax_317 = Mem302[Mem302[ebp_240 - 0xCC<32>:word32] + 4<i32>:word32]
	Mem318[ebp_240 - 0xAC<32> + eax_317:word32] = 0<32>
	Mem319[ebp_240 - 0xA8<32> + eax_317:word32] = 0<32>
	word24 edx_24_8_323 = SLICE(edx_311, word24, 8)
	branch Mem302[ebp_240 - 0xD5<32>:byte] == 0<8> l00417AC0
l00417AB3:
	word32 ecx_1400
	word32 edx_1401
	fn00411570(ebp_240 - 0xCC<32>, SEQ(edx_24_8_323, 0x20<8>), out ecx_1400, out edx_1401, out ebx_196, out esi_296, out edi_288)
l00417AC0:
	Mem340[esp_308 + 4<32>:word32] = Mem319[esi_296:word32]
	Mem344[esp_308:word32] = ebp_240 - 0xCC<32>
	word32 eax_345 = Mem344[esi_296 + 8<i32>:word32]
	word32 esp_349
	call eax_345 (retsize: 4;)
		uses: eax:eax_345
		defs: esp:esp_349
	word32 edx_360 = Mem344[Mem344[edi_288 + 16<i32>:word32]:word32]
	word32 esi_358 = Mem344[Mem344[edi_288 + 32<i32>:word32]:word32]
	Mem364[ebp_240 - 0xF0<32>:word32] = edx_360
	word24 edx_24_8_374 = SLICE(edx_360, word24, 8)
	word32 eax_365 = Mem364[ebp_240 - 0xE8<32>:word32]
	branch esi_358 - edx_360 != 0<32> l00417B23
l00417AED:
	Mem369[ebp_240 - 0xF0<32>:word32] = edx_360
	branch (Mem364[eax_365 + 112<i32>:byte] & 2<8>) == 0<8> l00417B23
l00417AF9:
	Mem372[ebp_240 - 0xD5<32>:byte] = 1<8>
	word32 ecx_1402
	word32 esi_1404
	word32 edx_1403
	fn00411570(ebp_240 - 0xCC<32>, SEQ(edx_24_8_374, 0x20<8>), out ecx_1402, out edx_1403, out ebx_196, out esi_1404, out edi_288)
	edx_360 = Mem372[Mem372[edi_288 + 16<i32>:word32]:word32]
	word32 eax_388 = Mem372[edi_288 + 32<i32>:word32]
	Mem389[ebp_240 - 0xF0<32>:word32] = edx_360
	esi_358 = Mem389[eax_388:word32]
	eax_365 = Mem389[ebp_240 - 0xE8<32>:word32]
l00417B23:
	word32 eax_394 = Mem393[eax_365 + 104<i32>:word32]
	word32 esi_397 = esi_358 - edx_360
	branch esi_397 <u eax_394 l00417B2D
l00417B2A_1:
	esi_397 = eax_394
l00417B2D:
	Mem404[ebp_240 - 0xE4<32>:word32] = esi_397
	branch Mem404[ebp_240 - 0xF8<32>:word32] >u esi_397 l00417B49
l00417B49:
	word32 eax_414 = CONVERT(CONVERT(Mem404[ebp_240 - 0xD5<32>:byte] != 0<8>, bool, int8), int8, uint32)
	Mem415[ebp_240 - 0xE8<32>:word32] = eax_414
	word32 ecx_408 = esi_397
	word32 eax_416 = eax_414 + Mem415[ebp_240 - 0xE0<32>:word32]
	branch esi_397 <u eax_416 l00417B67
l00417B64_1:
	ecx_408 = eax_416
l00417B67:
	word32 eax_422 = CONVERT(Mem415[ebp_240 - 0xD5<32>:byte], byte, word32)
	Mem425[ebp_240 - 0xE0<32>:word32] = ecx_408
	Mem426[ebp_240 - 0xDC<32>:word32] = eax_422
	word32 edi_423 = eax_422
	branch eax_422 >=u ecx_408 l00417BAF
l00417B80:
	word32 esi_429 = Mem426[ebp_240 - 0xE8<32>:word32]
l00417B86:
	word32 ecx_433 = ebx_196
	branch Mem426[ebx_196 + 20<i32>:word32] <u 0x10<32> l00417B90
l00417B8E:
	ecx_433 = Mem426[ebx_196:word32]
l00417B90:
	branch Mem426[edi_423 + edx_360:byte] != Mem426[(ecx_433 - esi_429) + edi_423:byte] l00417BA3
l00417B9A:
	edi_423 = edi_423 + 1<32>
	branch edi_423 <u Mem426[ebp_240 - 0xE0<32>:word32] l00417B86
l00417BA3:
	esi_397 = Mem426[ebp_240 - 0xE4<32>:word32]
	eax_422 = Mem426[ebp_240 - 0xDC<32>:word32]
l00417BAF:
	branch edi_423 <u esi_397 l00417BB6
l00417BB3_1:
	edi_423 = eax_422
l00417BB6:
	Mem482[esp_349 + 4<32>:word32] = edi_423
	Mem489[esp_349:word32] = edx_360
	word32 esi_505
	word32 edx_1409
	word32 ecx_1408
	word32 edi_503
	word32 ebx_501
	fn00402A70(ebx_196, edi_423, Mem489[esp_349:word32], Mem489[esp_349 + 4<i32>:word32], Mem489[esp_349 + 20<i32>:word32], out ecx_1408, out edx_1409, out ebx_501, out ebp_1092, out esi_505, out edi_503)
	ui64 eax_ecx_1344 = Mem489[ebp_1092 - 248<i32>:ui64] - CONVERT(esi_505, word32, uint64)
	word32 ecx_515 = SLICE(eax_ecx_1344, word32, 0)
	Mem517[ebp_1092 - 0xE8<32>:word32] = ecx_515
	word32 eax_519 = SLICE(eax_ecx_1344, word32, 32)
	Mem520[ebp_1092 - 0xF4<32>:word32] = eax_519
	word32 esp_507 = <invalid>
	word32 esp_512 = esp_507 + 8<32>
	branch eax_519 > 0<32> l00417C02
l00417BDE:
	branch eax_519 < 0<32> l00417BE4
l00417BE0:
	branch ecx_515 != 0<32> l00417C02
l00417BE4:
	wassert(0x432248<32>, 0x4321F0<32>, 0x107<32>)
	ecx_515 = Mem533[ebp_1092 - 0xE8<32>:word32]
	esp_512 = esp_548 + 0xC<32>
l00417C02:
	word32 esp_594
	word32 esi_593
	Mem562[ebp_1092 - 0xE0<32>:byte] = Mem558[ebp_1092 - 0x8C<32> + Mem558[Mem558[ebp_1092 - 0xCC<32>:word32] + 4<i32>:word32]:byte]
	word32 edx_564 = Mem562[Mem562[ebp_1092 - 0xEC<32>:word32]:word32]
	branch ecx_515 >u Mem562[ebx_501 + 20<i32>:word32] - edx_564 l00417C65
l00417C65:
	word32 esp_573 = esp_512 - 4<i32>
	Mem574[esp_573:word32] = Mem562[ebp_1092 - 0xE0<32>:word32]
	Mem575[ebp_1092 - 0xDC<32>:byte] = 0<8>
	Mem577[esp_573 - 4<i32>:word32] = ecx_515
	Mem580[esp_573 - 8<i32>:word32] = Mem577[ebp_1092 - 0xDC<32>:word32]
	Mem582[esp_573 - 12<i32>:word32] = ecx_515
	fn00413120(ebx_501, ebp_1092, edi_503, out ebx_501, out ebp_1092, out esi_593, out edi_503)
	esp_594 = <invalid>
l00417C29:
	Mem602[Mem562[ebp_1092 - 0xEC<32>:word32]:word32] = ecx_515 + edx_564
	word32 eax_603 = ebx_501
	branch Mem562[ebx_501 + 20<i32>:word32] <u 0x10<32> l00417C3E
l00417C3C:
	eax_603 = Mem602[ebx_501:word32]
l00417C3E:
	word32 eax_611 = CONVERT(Mem602[ebp_1092 - 0xE0<32>:byte], byte, int32)
	word32 esp_613 = esp_512 - 4<i32>
	Mem615[esp_613:word32] = ecx_515
	Mem617[esp_613 - 4<i32>:word32] = eax_611
	word32 esi_608 = eax_603 + edx_564
	Mem619[esp_613 - 8<i32>:word32] = esi_608
	memset(Mem619[esp_613 - 8<i32>:(ptr32 void)], Mem619[esp_613 - 4<i32>:int32], Mem619[esp_613:size_t])
	Mem624[Mem619[ebp_1092 - 0xE8<32>:word32] + esi_608:byte] = 0<8>
	esp_594 = esp_613 + 4<32>
	esi_593 = Mem624[ebp_1092 - 0xE4<32>:word32]
l00417C81:
	word32 esi_666
	word32 edi_635 = Mem627[ebp_1092 - 0xEC<32>:word32]
	Mem636[ebp_1092 - 0xE0<32>:word32] = Mem627[ebp_1092 - 0xF0<32>:word32] + edi_503
	word32 ecx_634 = esi_593 - edi_503
	word32 eax_639 = Mem636[ebx_501 + 20<i32>:word32]
	Mem640[ebp_1092 - 0xDC<32>:word32] = ecx_634
	edx_1096 = Mem640[edi_635:word32]
	branch ecx_634 >u eax_639 - edx_1096 l00417CDC
l00417CDC:
	word32 esp_646 = esp_594 - 4<i32>
	Mem647[esp_646:word32] = ecx_634
	Mem650[esp_646 - 4<i32>:word32] = Mem647[ebp_1092 - 0xE0<32>:word32]
	Mem651[ebp_1092 - 0xEC<32>:byte] = 0<8>
	Mem654[esp_646 - 8<i32>:word32] = Mem651[ebp_1092 - 0xEC<32>:word32]
	Mem656[esp_646 - 12<i32>:word32] = ecx_634
	word32 ebx_1410
	fn00413280(ebx_501, ebp_1092, edi_635, out edx_1096, out ebx_1410, out ebp_1092, out esi_666, out edi_635)
	esp_1104 = <invalid>
l00417CAA:
	Mem674[edi_635:word32] = edx_1096 + ecx_634
	branch Mem640[ebx_501 + 20<i32>:word32] <u 0x10<32> l00417CB7
l00417CB5:
	ebx_501 = Mem674[ebx_501:word32]
l00417CB7:
	word32 esp_678 = esp_594 - 4<i32>
	Mem680[esp_678:word32] = ecx_634
	Mem684[esp_678 - 4<i32>:word32] = Mem680[ebp_1092 - 0xE0<32>:word32]
	word32 esi_687 = ebx_501 + edx_1096
	Mem689[esp_678 - 8<i32>:word32] = esi_687
	memmove(Mem689[esp_678 - 8<i32>:(ptr32 void)], Mem689[esp_678 - 4<i32>:(ptr32 void)], Mem689[esp_678:size_t])
	Mem694[Mem689[ebp_1092 - 0xDC<32>:word32] + esi_687:byte] = 0<8>
	esp_1104 = esp_678 + 4<32>
	esi_666 = Mem694[ebp_1092 - 0xE4<32>:word32]
l00417CF8:
	ui64 ecx_eax_1386
	word32 ecx_698 = Mem697[ebp_1092 - 0xF4<32>:word32]
	branch ecx_698 > 0<32> l00417D27
l00417D27:
	ecx_eax_1386 = SEQ(ecx_698, Mem697[ebp_1092 - 0xE8<32>:word32]) (alias)
l00417D02:
	branch ecx_698 < 0<32> l00417D0E
l00417D04:
	ecx_eax_1386 = SEQ(ecx_698, Mem697[ebp_1092 - 0xE8<32>:word32]) (alias)
	branch Test(UGE,false) l00417D2D
l00417D0E:
	Mem709[ebp_1092 - 0x104<32>:word64] = __movlp<real64[2],real64[1]>(0<128>)
	ecx_eax_1386 = Mem709[ebp_1092 - 260<i32>:ui64] (alias)
l00417D2D:
	ui64 eax_esi_1346 = CONVERT(esi_666, word32, uint64) + ecx_eax_1386
	word32 ebx_714 = Mem713[ebp_1092 - 0xF8<32>:word32]
	word32 eax_724 = SLICE(eax_esi_1346, word32, 32)
	branch SLICE(eax_esi_1346, word32, 0) != ebx_714 l00417D44
l00417D40:
	branch eax_724 == 0<32> l00417D60
l00417D60:
l00417D44:
	wassert(0x432250<32>, 0x4321F0<32>, 0x10B<32>)
	esp_1104 = esp_758 + 0xC<32>
l00417D66:
	branch Mem772[edi_635:word32] == ebx_714 l00417D7E
l00417D6A:
	wassert(0x4322F0<32>, 0x4321F0<32>, 0x10C<32>)
	esp_1104 = esp_788 + 0xC<32>
l00417D7E:
	edi_1095 = Mem797[ebp_1092 - 0xFC<32>:word32]
l00417B3B:
	Mem800[esp_349 + 4<32>:word32] = esi_397
	Mem802[esp_349:word32] = edx_360
	word32 ecx_1405
	word32 ebx_1406
	word32 esi_1407
	fn00402A70(ebx_196, edi_288, Mem802[esp_349:word32], Mem802[esp_349 + 4<i32>:word32], Mem802[esp_349 + 20<i32>:word32], out ecx_1405, out edx_1096, out ebx_1406, out ebp_1092, out esi_1407, out edi_1095)
	word32 esp_814 = <invalid>
	esp_1104 = esp_814 + 8<32>
l00417D84:
	~basic_ostream(ebp_1092 - 0xC4<32>)
	Mem822[ebp_1092 - 4<i32>:byte] = 7<8>
	word32 esi_823 = Mem822[ebp_1092 - 0xD0<32>:word32]
	branch esi_823 == 0<32> l00417DCB
l00417D9E:
	__lock()
	Mem832[esi_823 + 4<i32>:word32] = __xadd<word32>(Mem822[esi_823 + 4<i32>:word32], 0xFFFFFFFF<32>)
	branch true l00417DCB
l00417DAF:
	word32 eax_836 = Mem832[esi_823:word32]
	call Mem832[eax_836 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_836,ecx:esi_823
		defs: esp:esp_844
	__lock()
	Mem852[esi_823 + 8<i32>:word32] = __xadd<word32>(Mem832[esi_823 + 8<i32>:word32], 0xFFFFFFFF<32>)
	edx_1096 = 0xFFFFFFFF<32>
	branch true l00417DCB
l00417DC4:
	word32 eax_856 = Mem852[esi_823:word32]
	call Mem852[eax_856 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_856,ecx:esi_823
		defs: edx:edx_861,esp:esp_858
l00417DCB:
	Mem866[ebp_1092 - 4<i32>:byte] = 2<8>
	~basic_ios(ebp_1092 - 0xBC<32>)
l00417983:
	Mem868[esp_103 + 4<32>:word32] = edx_154
	Mem871[esp_103:word32] = Mem868[ebp - 0xDC<32>:word32]
	word32 ecx_1394
	word32 ebx_1395
	word32 esi_1396
	fn00402A70(ebx, edi_20, Mem871[esp_103:word32], Mem871[esp_103 + 4<i32>:word32], Mem871[esp_103 + 20<i32>:word32], out ecx_1394, out edx_1096, out ebx_1395, out ebp_1092, out esi_1396, out edi_1095)
	word32 esp_881 = <invalid>
	esp_1104 = esp_881 + 8<32>
l004177C2:
	branch ecx_47 < 0<32> l004177E2
l004177C6:
	branch ecx_47 > 0<32> l004177CC
l004177C8:
	branch edx_46 == 0<32> l004177E2
l004177CC:
	word32 eax_902 = Mem80[Mem80[ebp - 108<i32>:word32] + 4<i32>:word32]
	Mem903[ebp - 76<i32> + eax_902:word32] = 0<32>
	Mem904[ebp - 72<i32> + eax_902:word32] = 0<32>
l004177E2:
	word32 eax_907 = Mem906[ebp - 0xE4<32>:word32]
	Mem913[esp_36 + 4<32>:word32] = Mem906[eax_907:word32]
	word32 eax_914 = Mem913[eax_907 + 8<i32>:word32]
	Mem916[esp_36:word32] = ebp - 108<i32>
	word32 esp_925
	call eax_914 (retsize: 4;)
		uses: eax:eax_914,ecx:ebp - 108<i32>
		defs: esp:esp_925
	word32 eax_933 = Mem916[edi_20 + 16<i32>:word32]
	Mem937[ebp - 0xE4<32>:byte] = 0<8>
	word32 ecx_938 = Mem937[eax_933:word32]
	Mem939[ebp - 0xEC<32>:word32] = ecx_938
	branch (Mem916[esi_22 + 112<i32>:byte] & 2<8>) == 0<8> l00417864
l0041780E:
	branch Mem939[Mem939[edi_20 + 32<i32>:word32]:word32] - ecx_938 == 0<32> l0041784B
l00417817:
	word32 eax_946 = Mem939[ebp - 108<i32>:word32]
	Mem949[esp_925 + 4<32>:word32] = 0x2B<32>
	byte al_952 = widen(ebp - 108<i32> + Mem949[eax_946 + 4<i32>:word32], Mem949[esp_925 + 4<32>:charconst ])
	word32 esi_954 = Mem949[ebp - 0xEC<32>:word32]
	branch Mem949[esi_954:byte] == al_952 l00417864
l00417834:
	word32 eax_957 = Mem949[ebp - 108<i32>:word32]
	Mem960[esp_925 + 4<32>:word32] = 0x2D<32>
	branch Mem960[esi_954:byte] == widen((ebp - 108<i32>) + Mem960[eax_957 + 4<i32>:word32], Mem960[esp_925 + 4<32>:charconst ]) l00417864
l0041784B:
	word32 eax_969 = Mem968[ebp - 108<i32>:word32]
	Mem973[esp_925 + 4<32>:word32] = 0x20<32>
	Mem979[ebp - 0xE4<32>:byte] = widen(ebp - 108<i32> + Mem973[eax_969 + 4<i32>:word32], Mem973[esp_925 + 4<32>:charconst ])
l00417864:
	word32 edx_986 = Mem982[ebp - 0xE8<32>:word32]
	word32 esi_1001 = Mem982[Mem982[edi_20 + 32<i32>:word32]:word32] - Mem982[Mem982[edi_20 + 16<i32>:word32]:word32]
	word32 ecx_997 = Mem982[edx_986 + 104<i32>:word32] - CONVERT(CONVERT(Mem982[ebp - 0xE4<32>:byte] != 0<8>, bool, int8), int8, uint32)
	word32 eax_998 = Mem982[ebp - 108<i32>:word32]
	branch esi_1001 <u ecx_997 l0041788C
l00417889_1:
	esi_1001 = ecx_997
l0041788C:
	word32 ecx_1004 = Mem982[ebp - 0xF4<32>:word32]
	Mem1008[ebp - 0xFC<32>:byte] = Mem982[ebp - 44<i32> + Mem982[eax_998 + 4<i32>:word32]:byte]
	Mem1021[esp_925 + 4<32>:word32] = CONVERT(SLICE(Mem1008[edx_986 + 112<i32>:word32] >>u 2<32>, byte, 0) & 1<8>, byte, word32)
	Mem1024[esp_925:word32] = Mem1021[ebp - 0xE4<32>:word32]
	Mem1027[esp_925 - 4<i32>:word32] = Mem1024[ebp - 0xE0<32>:word32]
	Mem1030[esp_925 - 8<i32>:word32] = Mem1027[ebp - 0xFC<32>:word32]
	Mem1032[esp_925 - 12<i32>:word32] = ecx_1004
	Mem1035[esp_925 - 16<i32>:word32] = Mem1032[ebp - 0xF8<32>:word32]
	Mem1042[esp_925 - 20<i32>:word32] = esi_1001
	word32 esp_1098 = <invalid>
	edx_1096 = fn00418C30(ebx, es, ds, Mem1042[esp_925 - 20<i32>:word32], Mem1042[esp_925 - 16<i32>:word64], Mem1042[esp_925:byte], out ebp_1092, out edi_1095)
	esp_1104 = esp_1098 + 0x1C<32>
l00417DDB:
	fn00418980(edi_1095)
	~basic_ostream(ebp_1092 - 100<i32>)
	Mem1120[ebp_1092 - 4<i32>:word32] = 8<32>
	word32 esi_1121 = Mem1120[ebp_1092 - 112<i32>:word32]
	branch esi_1121 == 0<32> l00417E24
l00417DF9:
	__lock()
	Mem1130[esi_1121 + 4<i32>:word32] = __xadd<word32>(Mem1120[esi_1121 + 4<i32>:word32], 0xFFFFFFFF<32>)
	branch true l00417E24
l00417E0A:
	word32 eax_1134 = Mem1130[esi_1121:word32]
	call Mem1130[eax_1134 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_1134,ecx:esi_1121
		defs: edx:edx_1283,esp:esp_1280
	__lock()
	Mem1287[esi_1121 + 8<i32>:word32] = __xadd<word32>(Mem1130[esi_1121 + 8<i32>:word32], 0xFFFFFFFF<32>)
	branch true l00417E24
l00417E1D:
	word32 eax_1291 = Mem1287[esi_1121:word32]
	call Mem1287[eax_1291 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_1291,ecx:esi_1121
		defs: edx:edx_1296,esp:esp_1293
l00417E24:
	~basic_ios(ebp_1092 - 92<i32>)
	Mem1304[fs:0x00000000<p32>:word32] = Mem1301[ebp_1092 - 12<i32>:word32]
	word32 esp_1307 = esp_1104 + 4<i32>
	word32 esi_1310 = Mem1304[esp_1307 + 4<i32>:word32]
	word32 eax_1393
	word32 ecx_1333
	fn00427500(Mem1304[ebp_1092 - 20<i32>:word32] ^ ebp_1092, edx_1096, Mem1304[esp_1307 + 8<i32>:word32], ebp_1092, esi_1310, Mem1304[esp_1307:word32], es, ds, Mem1304[esp_1307 + 8<i32>:word32], out eax_1393, out ecx_1333)
	word32 ebp_1341 = Mem1304[ebp_1092:word32]
	edxOut = edx_1096
	ebpOut = ebp_1341
	esiOut = esi_1310
	return ecx_1333
fn00417731_exit:


word32 fn00417E50(word32 ecx, word32 edx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416DA0
//      fn004170C0
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: eax ebp ebx edi esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn00417E50_entry:
	ptr32 fp
	word32 ebp
l00417E50:
	word32 ebp_124 = fp - 4<i32>
	word32 eax_10 = Mem6[0x0043A008<p32>:word32] ^ fp - 4<i32>
	word32 ebx_16 = edx
	word32 esi_120 = dwArg08
	word32 eax_24 = Mem22[edx + 16<i32>:word32]
	word32 esp_130 = fp - 0x1C<32>
	branch eax_24 == 0<32> l00417EB3
l00417E7D:
l00417E80:
	branch esi_120 == dwArg0C l00417EA9
l00417E84:
	word32 edx_346
	Mem49[esi_120:byte] = Mem47[fn00410CC0(edx, out edx_346):byte]
	word32 v15_50 = Mem49[edx + 16<i32>:word32] + 0xFFFFFFFF<32>
	Mem51[edx + 16<i32>:word32] = v15_50
	branch v15_50 != 0<32> l00417E9E
l00417E9E:
	Mem55[edx + 12<i32>:word32] = Mem51[edx + 12<i32>:word32] + 1<32>
l00417E95:
	Mem57[edx + 12<i32>:word32] = 0<32>
l00417EA1:
	eax_24 = Mem59[edx + 16<i32>:word32]
	esi_120 = esi_120 + 1<32>
	branch eax_24 != 0<32> l00417E80
l00417EA9:
	word32 edx_104 = ecx
	branch eax_24 != 0<32> l00417EF9
l00417EF9:
	branch esi_120 == dwArg10 l00417F2A
l00417EFD:
	word32 edi_80 = dwArg10
l00417F00:
	Mem84[esp_130 - 4<i32>:word32] = esi_120
	word32 esi_95
	ebx_16 = fn0040F210(ebx_16, edi_80, out ebp_124, out esi_95, out edi_80)
	Mem110[esi_95:byte] = Mem84[fn00410CC0(ebx_16, out edx_104):byte]
	word32 v16_111 = Mem110[ebx_16 + 16<i32>:word32] + 0xFFFFFFFF<32>
	Mem112[ebx_16 + 16<i32>:word32] = v16_111
	esp_130 = <invalid>
	branch v16_111 != 0<32> l00417F22
l00417F22:
	Mem116[ebx_16 + 12<i32>:word32] = Mem112[ebx_16 + 12<i32>:word32] + 1<32>
l00417F19:
	Mem118[ebx_16 + 12<i32>:word32] = 0<32>
l00417F25:
	esi_120 = esi_95 + 1<32>
	branch esi_95 + 1<32> != edi_80 l00417F00
l00417F2A:
	word32 edi_135 = Mem126[esp_130:word32]
	Mem138[Mem126[ebp_124 - 12<i32>:word32]:word32] = esi_120
	word32 esp_136 = esp_130 + 4<i32>
	word32 esi_140 = Mem138[esp_136:word32]
	word32 ebx_145 = Mem138[esp_136 + 4<i32>:word32]
	word32 ecx_349
	word32 eax_190
	fn00427500(Mem138[ebp_124 - 4<i32>:word32] ^ ebp_124, edx_104, ebx_145, ebp_124, esi_140, edi_135, es, ds, Mem138[esp_136 + 4<i32>:word32], out eax_190, out ecx_349)
	word32 ebp_199 = Mem138[ebp_124:word32]
	ebxOut = ebx_145
	ebpOut = ebp_199
	esiOut = esi_140
	ediOut = edi_135
	return eax_190
l00417EB3:
	branch esi_120 != dwArg0C l00417ECC
l00417ECC:
	word32 ecx_208 = dwArg10 - dwArg0C
	memmove(esi_120, dwArg0C, ecx_208)
	Mem227[ecx:word32] = ecx_208 + esi_120
	word32 ecx_347
	word32 eax_242
	fn00427500(eax_10 ^ fp - 4<i32>, ecx, ebx, fp - 4<i32>, esi, edi, es, ds, ebx, out eax_242, out ecx_347)
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return eax_242
l00417EB7:
	Mem258[ecx:word32] = dwArg10
	word32 ecx_348
	word32 eax_266
	fn00427500(eax_10 ^ fp - 4<i32>, ecx, ebx, fp - 4<i32>, esi, edi, es, ds, ebx, out eax_266, out ecx_348)
	ebxOut = ebx
	ebpOut = ebp
	esiOut = esi
	ediOut = edi
	return eax_266
fn00417E50_exit:


word32 fn00417F50(word32 ecx, selector es, selector ds, word32 dwArg08, word32 dwArg10, word32 dwArg14, word32 dwArg1C, ptr32 & ebxOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416DA0
//      fn004170C0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0008:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +001C:[0..31]
// LiveOut: ebp ebx edx esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00417F50_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc30
l00417F50:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 eax_36 = 0<32>
	branch dwArg14 == 0<32> l00417F8E
l00417F86:
	word32 ecx_40 = Mem32[dwArg14:word32]
	branch ecx_40 == 0<32> l00417F8E
l00417F8C:
	eax_36 = Mem32[ecx_40:word32]
l00417F8E:
	word32 ecx_48 = 0<32>
	branch dwArg08 == 0<32> l00417F9F
l00417F97:
	word32 edx_52 = Mem32[dwArg08:word32]
	branch edx_52 == 0<32> l00417F9F
l00417F9D:
	ecx_48 = Mem32[edx_52:word32]
l00417F9F:
	word32 edx_57 = 0<32>
	branch eax_36 == 0<32> l00417FAD
l00417FA5:
	word32 eax_64 = Mem32[eax_36:word32]
	branch eax_64 == 0<32> l00417FAD
l00417FAB:
	edx_57 = Mem32[eax_64:word32]
l00417FAD:
	word32 eax_69 = 0<32>
	branch ecx_48 == 0<32> l00417FBB
l00417FB3:
	word32 ecx_76 = Mem32[ecx_48:word32]
	branch ecx_76 == 0<32> l00417FBB
l00417FB9:
	eax_69 = Mem32[ecx_76:word32]
l00417FBB:
	branch eax_69 != 0<32> l00417FC7
l00417FC7:
l00417FC2:
l00417FCC:
	branch edx_57 != 0<32> l00417FDB
l00417FDB:
l00417FD6:
l00417FE0:
	Mem113[&tLoc30 + 16<i32>:word32] = 0<32>
	Mem123[&tLoc30 + 20<i32>:word32] = 0xF<32>
	Mem124[&tLoc30:byte] = 0<8>
	word32 ebp_175
	word32 esi_178
	word32 ebx_390
	word32 edi_391
	fn00414E40(&tLoc30, ecx, es, ds, dwArg1C - dwArg10, out ebx_390, out ebp_175, out esi_178, out edi_391)
	word32 esp_180 = <invalid>
	Mem188[esp_180:word32] = Mem124[ebp_175 - 56<i32>:word32]
	Mem191[esp_180 - 4<i32>:word32] = esi_178
	Mem194[esp_180 - 8<i32>:word32] = Mem191[ebp_175 - 48<i32>:word32]
	Mem197[esp_180 - 12<i32>:word32] = Mem194[ebp_175 - 56<i32>:word32]
	Mem200[esp_180 - 16<i32>:word32] = Mem197[ebp_175 - 52<i32>:word32]
	word32 edi_204
	word32 esi_205
	word32 ebp_206
	word32 ebx_202 = fn004197A0(ebp_175 - 44<i32>, Mem200[esp_180 - 12<i32>:word32], out ebp_206, out esi_205, out edi_204)
	Mem214[ebp_206 - 4<i32>:word32] = 0<32>
	word32 esp_208 = <invalid>
	word32 eax_215 = edi_204
	branch Mem214[edi_204 + 20<i32>:word32] <u 0x10<32> l00418028
l00418026:
	eax_215 = Mem214[edi_204:word32]
l00418028:
	Mem224[esp_208 + 0x10<32>:word32] = Mem214[ebp_206 - 28<i32>:word32]
	word32 ebx_227 = ebx_202 - eax_215
	word32 eax_231 = ebp_206 - 44<i32>
	branch Mem224[ebp_206 - 24<i32>:word32] <u 0x10<32> l0041803A
l00418036_1:
	eax_231 = Mem224[ebp_206 - 44<i32>:word32]
l0041803A:
	Mem237[esp_208 + 0xC<32>:word32] = eax_231
	Mem239[esp_208 + 8<32>:word32] = 0<32>
	Mem242[esp_208 + 4<32>:word32] = ebx_227
	word32 esi_392
	word32 ebp_250
	fn004167E0(edi_204, esi_205, edi_204, Mem242[esp_208 + 4<32>:word32], Mem242[esp_208 + 8<32>:word32], Mem242[esp_208 + 0xC<32>:word32], Mem242[esp_208 + 0x10<32>:word32], out ebp_250, out esi_392)
	word32 esp_257 = <invalid>
	word32 edx_263 = Mem242[ebp_250 - 24<i32>:word32]
	branch edx_263 <u 0x10<32> l00418079
l0041804B:
	word32 ecx_266 = Mem242[ebp_250 - 44<i32>:word32]
	edx_263 = edx_263 + 1<32>
	branch edx_263 <u 0xFFF<32> l0041806F
l00418059:
	ecx_266 = Mem242[ecx_266 - 4<i32>:word32]
	edx_263 = edx_263 + 0x24<32>
	branch ecx_266 - ecx_266 <=u 0x23<32> l0041806F
l00418069:
	_invalid_parameter_noinfo_noreturn()
l0041806F:
	Mem280[esp_257 + 4<32>:word32] = edx_263
	Mem283[esp_257:word32] = ecx_266
	fn0042763F(Mem283[esp_257:word32])
l00418079:
	Mem293[fs:0x00000000<p32>:word32] = Mem289[ebp_250 - 12<i32>:word32]
	word32 ebx_301 = Mem293[esp_257 + 0x14<32>:word32]
	word32 ecx_394
	word32 eax_393
	fn00427500(Mem293[ebp_250 - 20<i32>:word32] ^ ebp_250, edx_263, ebx_301, ebp_250, Mem293[esp_257 + 0x10<32>:word32], Mem293[esp_257 + 0xC<32>:word32], es, ds, Mem293[esp_257 + 0x14<32>:word32], out eax_393, out ecx_394)
	word32 ebp_337 = Mem293[ebp_250:word32]
	ebxOut = ebx_301
	ebpOut = ebp_337
	return edx_263
fn00417F50_exit:


word32 fn004180A0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00419880
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: esi
// Trashed: SCZO eax ecx esi Top
// Preserved: ebp esp
fn004180A0_entry:
	ptr32 fp
	selector fs
l004180A0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem24[fs:0<32>:word32] = fp - 16<i32>
	word32 eax_27 = Mem24[ecx + 40<i32>:word32]
	Mem28[ecx:word32] = 0x004323BC<p32>
	Mem29[ecx + 20<i32>:word32] = 0x00431874<p32>
	Mem31[Mem29[eax_27 + 4<i32>:word32] + 40<i32> + ecx:word32] = 0x004324CC<p32>
	word32 ecx_33 = Mem31[Mem31[ecx + 40<i32>:word32] + 4<i32>:word32]
	Mem35[ecx_33 + 36<i32> + ecx:word32] = ecx_33 - 8<i32>
	Mem36[ecx:word32] = 0x00431868<p32>
	Mem37[ecx + 20<i32>:word32] = 0x00431834<p32>
	word32 ecx_39 = Mem38[ecx + 24<i32>:word32]
	branch ecx_39 == 0<32> l0041811A
l00418108:
	word32 eax_44 = Mem38[Mem38[ecx_39:word32] + 16<i32>:word32]
	word32 eax_46
	call eax_44 (retsize: 4;)
		uses: eax:eax_44,ecx:ecx_39
		defs: eax:eax_46
	branch SLICE(eax_46, byte, 0) == 0<8> l0041811A
l00418113:
	Mem54[ecx + 24<i32>:word32] = 0<32>
l0041811A:
	Mem57[ecx:word32] = 0x00431384<p32>
	_std_exception_destroy(ecx + 4<i32>)
	Mem72[ecx + 48<i32>:word32] = 0x0043248C<p32>
	Mem74[fs:0x00000000<p32>:word32] = eax_13
	return Mem74[esp_65 + 8<32>:word32]
fn004180A0_exit:


word32 fn00418150(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004198D3
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: ebx edi
// Trashed: SCZO eax ebx ecx edi Top xmm0
// Preserved: ebp esi esp
fn00418150_entry:
	ptr32 fp
	selector fs
l00418150:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem25[fs:0<32>:word32] = fp - 16<i32>
	branch dwArg08 == 0<32> l004181A4
l00418188:
	Mem32[ecx + 40<i32>:word32] = 0x00432380<p32>
	Mem33[ecx + 48<i32>:word32] = 0x0043248C<p32>
l004181A4:
	word32 edi_48
	word32 esi_49
	word32 ebx_46 = fn004181F0(ecx, dwArg04, out esi_49, out edi_48)
	word32 eax_56 = Mem41[esi_49 + 40<i32>:word32]
	Mem57[esi_49:word32] = 0x004323BC<p32>
	Mem58[esi_49 + 20<i32>:word32] = 0x00431874<p32>
	Mem60[Mem58[eax_56 + 4<i32>:word32] + 40<i32> + esi_49:word32] = 0x004324CC<p32>
	Mem63[Mem60[Mem60[esi_49 + 40<i32>:word32] + 4<i32>:word32] + 36<i32> + esi_49:word32] = 0<32>
	Mem66[fs:0x00000000<p32>:word32] = eax_13
	ediOut = edi_48
	return ebx_46
fn00418150_exit:


word32 fn004181F0(word32 ecx, word32 dwArg04, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00418150
//      fn00418B80
//      fn004198D3
//      fn004198FB
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebx edi esi
// Trashed: SCZO eax ebx ecx edi esi Top xmm0
// Preserved: ebp esp
fn004181F0_entry:
	ptr32 fp
	selector fs
l004181F0:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	word32 eax_29 = Mem27[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem35[fs:0<32>:word32] = fp - 16<i32>
	Mem41[ecx:word32] = 0x00431384<p32>
	Mem45[ecx + 4<i32>:word64] = 0<64>
	_std_exception_copy(dwArg04 + 4<i32>, ecx + 4<i32>, eax_29, ecx, ecx, eax_13, 0x42EA68<32>, 0xFFFFFFFF<32>)
	Mem54[ecx:word32] = 0x00431844<p32>
	Mem57[ecx + 12<i32>:word32] = Mem54[dwArg04 + 12<i32>:word32]
	Mem59[ecx + 16<i32>:word32] = Mem57[dwArg04 + 16<i32>:word32]
	Mem62[ecx + 20<i32>:word32] = 0x00431834<p32>
	word32 ecx_63 = Mem62[dwArg04 + 24<i32>:word32]
	Mem65[ecx + 24<i32>:word32] = ecx_63
	word32 esp_55 = esp_49 + 8<32>
	branch ecx_63 == 0<32> l00418270
l0041826B:
	word32 eax_69 = Mem65[ecx_63:word32]
	call Mem65[eax_69 + 12<i32>:word32] (retsize: 4;)
		uses: eax:eax_69,ecx:ecx_63
		defs: esp:esp_70
l00418270:
	Mem79[ecx + 28<i32>:word32] = Mem65[dwArg04 + 28<i32>:word32]
	Mem81[ecx + 32<i32>:word32] = Mem79[dwArg04 + 32<i32>:word32]
	Mem83[ecx + 36<i32>:word32] = Mem81[dwArg04 + 36<i32>:word32]
	Mem86[ecx:word32] = 0x00431868<p32>
	Mem87[ecx + 20<i32>:word32] = 0x00432408<p32>
	Mem91[fs:0x00000000<p32>:word32] = eax_13
	word32 esp_94 = esp_55 + 4<i32>
	word32 edi_95 = Mem91[esp_94:word32]
	word32 ebx_99 = Mem91[esp_94 + 8<i32>:word32]
	esiOut = Mem91[esp_94 + 4<i32>:word32]
	ediOut = edi_95
	return ebx_99
fn004181F0_exit:


word32 fn00418390(word32 ecx, word32 dwArg04, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416530
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ebx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00418390_entry:
	ptr32 fp
	selector fs
	word32 ebx
	word32 edx
l00418390:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem27[fs:0<32>:word32] = fp - 16<i32>
	Mem33[ecx:word32] = Mem27[dwArg04:word32]
	word32 ebp_129 = fp - 4<i32>
	word32 esp_105 = fp - 28<i32>
	word32 esi_109 = ecx
	word32 edi_106 = dwArg04
	branch ecx + 4<i32> == dwArg04 + 4<i32> l004183DA
l004183C7:
	word32 edx_38 = dwArg04 + 4<i32>
	branch Mem33[dwArg04 + 24<i32>:word32] <u 0x10<32> l004183D1
l004183CF:
	edx_38 = Mem33[dwArg04 + 4<i32>:word32]
l004183D1:
	word32 ecx_314
	fn00402A70(ecx + 4<i32>, dwArg04, edx_38, Mem33[dwArg04 + 20<i32>:word32], eax_13, out ecx_314, out edx, out ebx, out ebp_129, out esi_109, out edi_106)
	word32 esp_61 = <invalid>
	esp_105 = esp_61 + 8<32>
l004183DA:
	word32 eax_68 = edi_106 + 28<i32>
	word32 ecx_70 = esi_109 + 28<i32>
	branch ecx_70 == eax_68 l004183F7
l004183E4:
	word32 edx_75 = eax_68
	branch Mem73[eax_68 + 20<i32>:word32] <u 0x10<32> l004183EE
l004183EC:
	edx_75 = Mem73[eax_68:word32]
l004183EE:
	word32 esp_83 = esp_105 - 4<i32>
	Mem84[esp_83:word32] = Mem73[eax_68 + 16<i32>:word32]
	Mem87[esp_83 - 4<i32>:word32] = edx_75
	word32 ecx_315
	fn00402A70(ecx_70, edi_106, Mem87[esp_83 - 4<i32>:word32], Mem87[esp_83:word32], Mem87[esp_83 + 16<i32>:word32], out ecx_315, out edx, out ebx, out ebp_129, out esi_109, out edi_106)
	word32 esp_100 = <invalid>
	esp_105 = esp_100 + 8<32>
l004183F7:
	Mem110[esi_109 + 56<i32>:word32] = Mem107[edi_106 + 56<i32>:word32]
	Mem112[esi_109 + 60<i32>:word32] = Mem110[edi_106 + 60<i32>:word32]
	Mem114[esi_109 + 64<i32>:word32] = Mem112[edi_106 + 64<i32>:word32]
	Mem116[esi_109 + 68<i32>:word32] = Mem114[edi_106 + 68<i32>:word32]
	Mem118[esi_109 + 72<i32>:byte] = Mem116[edi_106 + 72<i32>:byte]
	Mem120[esi_109 + 76<i32>:word32] = Mem118[edi_106 + 76<i32>:word32]
	Mem122[esi_109 + 80<i32>:word32] = Mem120[edi_106 + 80<i32>:word32]
	Mem124[esi_109 + 84<i32>:word32] = Mem122[edi_106 + 84<i32>:word32]
	branch Mem124[esi_109 + 88<i32>:byte] == 0<8> l00418485
l00418485:
	branch Mem124[edi_106 + 88<i32>:byte] == 0<8> l004184A1
l0041848B:
	Mem131[ebp_129 - 4<i32>:word32] = 2<32>
	word32 ecx_132 = Mem131[edi_106 + 96<i32>:word32]
	Mem133[esi_109 + 96<i32>:word32] = ecx_132
	word32 eax_134 = Mem133[ecx_132:word32]
	call Mem133[eax_134 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_134,ecx:ecx_132,edx:edx_144
		defs: edx:edx_144,esp:esp_141
	Mem147[esi_109 + 88<i32>:byte] = 1<8>
l0041842D:
	branch Mem124[edi_106 + 88<i32>:byte] == 0<8> l00418460
l00418460:
	Mem150[ebp_129 - 4<i32>:word32] = 1<32>
	word32 ecx_151 = Mem150[esi_109 + 96<i32>:word32]
	branch ecx_151 == 0<32> l0041847F
l0041846E:
	word32 eax_155 = Mem150[ecx_151:word32]
	word32 eax_157
	call Mem150[eax_155 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_155,ecx:ecx_151,edx:edx_159
		defs: eax:eax_157,edx:edx_159,esp:esp_156
	branch eax_157 == 0<32> l0041847F
l00418477:
	word32 edx_165 = Mem150[eax_157:word32]
	Mem168[esp_105 - 4<i32>:word32] = 1<32>
	call Mem168[edx_165:word32] (retsize: 4;)
		uses: ecx:eax_157,edx:edx_165
		defs: edx:edx_172,esp:esp_169
l0041847F:
	Mem176[esi_109 + 88<i32>:byte] = 0<8>
l00418433:
	Mem177[ebp_129 - 4<i32>:word32] = 0<32>
	word32 ecx_178 = Mem177[esi_109 + 96<i32>:word32]
	branch ecx_178 == Mem177[edi_106 + 96<i32>:word32] l004184A1
l00418442:
	word32 eax_181 = Mem177[ecx_178:word32]
	word32 esp_182
	word32 eax_183
	word32 edx_185
	call Mem177[eax_181 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_181,ecx:ecx_178,edx:edx_185
		defs: eax:eax_183,edx:edx_185,esp:esp_182
	branch eax_183 == 0<32> l00418453
l0041844B:
	word32 edx_191 = Mem177[eax_183:word32]
	Mem194[esp_182 - 4<i32>:word32] = 1<32>
	call Mem194[edx_191:word32] (retsize: 4;)
		uses: ecx:eax_183,edx:edx_191
l00418453:
	word32 ecx_203 = Mem202[edi_106 + 96<i32>:word32]
	Mem205[esi_109 + 96<i32>:word32] = ecx_203
	word32 eax_206 = Mem205[ecx_203:word32]
	call Mem205[eax_206 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_206,ecx:ecx_203,edx:edx_214
		defs: edx:edx_214,esp:esp_211
l004184A1:
	Mem222[esi_109 + 104<i32>:word32] = Mem219[edi_106 + 104<i32>:word32]
	Mem224[esi_109 + 108<i32>:word32] = Mem222[edi_106 + 108<i32>:word32]
	Mem226[esi_109 + 112<i32>:word32] = Mem224[edi_106 + 112<i32>:word32]
	Mem233[fs:0x00000000<p32>:word32] = Mem226[ebp_129 - 12<i32>:word32]
	word32 esp_237 = esp_105 + 4<i32>
	word32 edi_238 = Mem233[esp_237:word32]
	word32 esi_240 = Mem233[esp_237 + 4<i32>:word32]
	word32 ebp_242 = Mem233[ebp_129:word32]
	ebxOut = ebx
	ebpOut = ebp_242
	esiOut = esi_240
	ediOut = edi_238
	return edx
fn00418390_exit:


void fn004184D0(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041986D
//      fn00419880
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esi esp
fn004184D0_entry:
l004184D0:
	word32 esi_16 = fn004180A0(ecx)
	branch (bArg04 & 1<8>) == 0<8> l004184EC
l004184E1:
	fn0042763F(esi_16)
l004184EC:
	return
fn004184D0_exit:


word32 fn00418780(word32 ecx, word32 esi, selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00412310
//      fn00413980
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00418780_entry:
	ptr32 fp
	selector fs
	word32 dwLoc44
l00418780:
	word32 eax_18 = Mem15[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	Mem38[ecx:word32] = 0<32>
	Mem39[ecx + 4<i32>:word32] = 0<32>
	Mem40[ecx + 8<i32>:word32] = 0<32>
	word32 ecx_125 = Mem40[dwArg04 + 4<i32>:word32] - Mem40[dwArg04:word32]
	word32 edx_45 = SLICE(ecx_125 *s64 0x2AAAAAAB<32>, word32, 32)
	word32 ebp_119 = fp - 4<i32>
	word32 esp_203 = fp - 0x3C<32>
	word32 edx_191 = edx_45 >> 2<32>
	word32 eax_49 = (edx_45 >> 2<32> >>u 0x1F<32>) + (edx_45 >> 2<32>)
	branch eax_49 == 0<32> l0041889E
l004187E6:
	branch eax_49 >u 0xAAAAAAA<32> l004188BE
l004188BE:
	word32 ebp_55
	word32 esi_59
	word32 edx_346
	word32 edi_347
	fn00403730(ecx_125, fp - 4<i32>, esi, dwArg04, out edx_346, out ebp_55, out esi_59, out edi_347)
	word32 ebp_69 = fn00402750(Mem44[ebp_55 - 40<i32>:word32], esi_59)
	CxxThrowException(0<32>, 0<32>)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l004188DF_thunk_fn004188E0:
	word32 ebp_91
	word32 edi_94
	word32 esi_95
	word32 ebx_92 = fn004188E0(ecx_86, ebp_69, out ebp_91, out esi_95, out edi_94)
	ebpOut = ebp_91
	esiOut = esi_95
	ediOut = edi_94
	return ebx_92
l004187F1:
	word32 eax_134
	branch eax_49 * 0x18<32> <u 0x1000<32> l0041882A
l004187FF:
	word32 eax_105 = eax_49 * 0x18<32> + 35<i32>
	branch eax_105 >u eax_49 * 0x18<32> l0041880A
l00418807_1:
	eax_105 = 0xFFFFFFFF<32>
l0041880A:
	word32 ecx_348
	word32 eax_118 = fn00427511(ecx, eax_49 * 0x18<32>, dwArg04, dwLoc44, eax_105, eax_18, out ecx_348, out ebp_119)
	ecx_125 = eax_118
	branch eax_118 == 0<32> l00418824
l00418824:
	_invalid_parameter_noinfo_noreturn()
l0041882A:
	branch eax_49 * 0x18<32> == 0<32> l00418839
l00418839:
	eax_134 = 0<32>
l0041882E:
	eax_134 = fn00427511(ecx, eax_49 * 0x18<32>, dwArg04, dwLoc44, eax_49 * 0x18<32>, eax_18, out ecx_125, out ebp_119)
l00418819:
	eax_134 = eax_118 + 35<i32> & 0xFFFFFFE0<32>
	Mem156[eax_134 - 4<i32>:word32] = eax_118
l0041883B:
	Mem159[ecx:word32] = eax_134
	Mem161[ecx + 4<i32>:word32] = eax_134
	word32 eax_164 = Mem161[ecx:word32] + eax_49 * 0x18<32>
	Mem168[ebp_119 - 4<i32>:word32] = 0<32>
	Mem169[ecx + 8<i32>:word32] = eax_164
	word32 esi_170 = Mem169[ecx:word32]
	word32 eax_172 = Mem169[dwArg04 + 4<i32>:word32]
	word32 edi_173 = Mem169[dwArg04:word32]
	Mem175[ebp_119 - 32<i32>:word64] = 0<64>
	Mem176[ebp_119 - 24<i32>:word32] = 0<32>
	Mem177[ebp_119 - 36<i32>:word32] = eax_172
	Mem178[ebp_119 - 32<i32>:word32] = esi_170
	Mem179[ebp_119 - 28<i32>:word32] = esi_170
	Mem180[ebp_119 - 24<i32>:word32] = ecx
	Mem181[ebp_119 - 4<i32>:byte] = 1<8>
	word32 esp_186 = fp - 0x3C<32>
l00418874:
	branch edi_173 == eax_172 l0041888E
l0041888E:
	word32 esp_187 = esp_186 - 4<i32>
	Mem189[esp_187:word32] = ecx_125
	word32 esi_197
	word32 edi_349
	ebp_119 = fn00403510(esi_170, esi_170, esi_170, out esi_197, out edi_349)
	Mem206[ecx + 4<i32>:word32] = esi_197
	edx_191 = esi_170
	esp_203 = esp_187 + 4<32>
l0041889E:
	Mem214[fs:0x00000000<p32>:word32] = Mem210[ebp_119 - 12<i32>:word32]
	word32 esp_217 = esp_203 + 4<i32>
	word32 edi_218 = Mem214[esp_217:word32]
	word32 esi_220 = Mem214[esp_217 + 4<i32>:word32]
	word32 ebx_222 = Mem214[esp_217 + 8<i32>:word32]
	word32 eax_344
	word32 ecx_345
	fn00427500(Mem214[ebp_119 - 20<i32>:word32] ^ ebp_119, edx_191, ebx_222, ebp_119, esi_220, edi_218, es, ds, Mem214[esp_217 + 8<i32>:word32], out eax_344, out ecx_345)
	ebpOut = Mem214[ebp_119:word32]
	esiOut = esi_220
	ediOut = edi_218
	return ebx_222
fn00418780_exit:
l00418878:
	word32 esp_255 = esp_186 - 4<i32>
	Mem256[esp_255:word32] = edi_173
	word32 esp_261 = <invalid>
	word32 ebp_260
	word32 edx_350
	ecx_125 = fn004028D0(esi_170, edi_173, Mem256[esp_255:word32], out edx_350, out ebp_260)
	eax_172 = Mem256[ebp_260 - 36<i32>:word32]
	esi_170 = esi_170 + 0x18<32>
	Mem271[ebp_260 - 28<i32>:word32] = esi_170
	esp_186 = esp_261 + 4<32>
	edi_173 = edi_173 + 0x18<32>


word32 fn004188E0(word32 ecx, word32 ebp, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00418780
//      fn004198DB
// MayUse:  ebp:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi esi esp Top
// Preserved:
fn004188E0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc04
l004188E0:
	Mem36[&tLoc04:word32] = ebp
	Mem60[fs:0<32>:word32] = fp - 16<i32>
	~basic_ostream(ecx - 8<i32>)
	word32 esi_66 = Mem65[ecx - 20<i32>:word32]
	branch esi_66 == 0<32> l0041891F_thunk_fn0041894D
l0041891F_thunk_fn0041894D:
	word32 ebp_71
	word32 edi_74
	word32 esi_75
	word32 ebx_72 = fn0041894D(ecx, &tLoc04, ecx - 24<i32>, out ebp_71, out esi_75, out edi_74)
	ebpOut = ebp_71
	esiOut = esi_75
	ediOut = edi_74
	return ebx_72
l0041891F_thunk_fn00418921:
	word32 ebp_82
	word32 edi_85
	word32 esi_86
	word32 ebx_83 = fn00418921(ecx, &tLoc04, esi_66, ecx - 24<i32>, out ebp_82, out esi_86, out edi_85)
	ebpOut = ebp_82
	esiOut = esi_86
	ediOut = edi_85
	return ebx_83
fn004188E0_exit:


word32 fn00418921(word32 ebx, word32 ebp, word32 esi, word32 edi, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00418780
//      fn004188E0
// MayUse:  ebp:[0..31] ebx:[0..31] edi:[0..31] esi:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi esi Top
// Preserved: esp
fn00418921_entry:
l00418921:
	__lock()
	Mem9[esi + 4<i32>:word32] = __xadd<word32>(Mem0[esi + 4<i32>:word32], 0xFFFFFFFF<32>)
	branch true l0041894D
l0041892E_thunk_fn0041894D:
	word32 ebp_18
	word32 edi_21
	word32 esi_22
	word32 ebx_19 = fn0041894D(ebx, ebp, edi, out ebp_18, out esi_22, out edi_21)
	ebpOut = ebp_18
	esiOut = esi_22
	ediOut = edi_21
	return ebx_19
l00418930:
	word32 eax_28 = Mem9[esi:word32]
	call Mem9[eax_28 + 4<i32>:word32] (retsize: 4;)
		uses: eax:eax_28,ecx:esi
	__lock()
	Mem37[esi + 8<i32>:word32] = __xadd<word32>(Mem9[esi + 8<i32>:word32], 0xFFFFFFFF<32>)
	branch true l0041894D
l00418944_thunk_fn0041894D:
	word32 ebp_42
	word32 edi_45
	word32 esi_46
	word32 ebx_43 = fn0041894D(ebx, ebp, edi, out ebp_42, out esi_46, out edi_45)
	ebpOut = ebp_42
	esiOut = esi_46
	ediOut = edi_45
	return ebx_43
l00418946:
	word32 eax_52 = Mem37[esi:word32]
	call Mem37[eax_52 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_52,ecx:esi
l0041894A_thunk_fn0041894D:
	word32 ebp_60
	word32 edi_63
	word32 esi_64
	word32 ebx_61 = fn0041894D(ebx, ebp, edi, out ebp_60, out esi_64, out edi_63)
	ebpOut = ebp_60
	esiOut = esi_64
	ediOut = edi_63
	return ebx_61
fn00418921_exit:


word32 fn0041894D(word32 ebx, word32 ebp, word32 edi, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00418780
//      fn004188E0
// MayUse:  ebp:[0..31] ebx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi esi
// Trashed: SCZO eax ebp ebx ecx edi esi esp Top
// Preserved:
fn0041894D_entry:
	selector fs
	word32 dwArg04
	word32 dwArg08
	word32 dwArg0C
l0041894D:
	~basic_ios(ebx)
	branch (Mem0[ebp + 8<i32>:byte] & 1<8>) == 0<8> l00418966
l0041895B:
	fn0042763F(edi)
l00418966:
	Mem26[fs:0x00000000<p32>:word32] = Mem22[ebp - 12<i32>:word32]
	ebpOut = Mem26[ebp:word32]
	esiOut = dwArg08
	ediOut = dwArg04
	return dwArg0C
fn0041894D_exit:


word32 fn00418980(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004175B0
// MayUse:  ecx:[0..31]
// LiveOut: esi
// Trashed: SCZO eax ecx esi Top xmm0
// Preserved: ebp esp
fn00418980_entry:
	ptr32 fp
l00418980:
	word32 esp_39 = fp - 0x24<32>
	word32 ecx_15 = Mem11[Mem11[ecx + 32<i32>:word32]:word32]
	branch ecx_15 == 0<32> l004189CE
l00418992:
	branch ecx_15 == Mem11[Mem11[ecx + 16<i32>:word32]:word32] l004189CE
l00418999:
	word32 eax_38 = Mem37[ecx:word32]
	call Mem37[eax_38 + 44<i32>:word32] (retsize: 4;)
		uses: eax:eax_38,ecx:ecx,Stack +0004:fp - 28<i32>,Stack +0008:0<32>,Stack +000C:0<32>,Stack +0010:0<32>,Stack +0014:0<32>,Stack +0018:0<64>,Stack +0020:2<32>
		defs: esp:esp_39
l004189CE:
	word32 ecx_47 = Mem45[Mem45[ecx + 28<i32>:word32]:word32]
	branch ecx_47 == 0<32> l00418A13
l004189D7:
	branch ecx_47 == Mem45[Mem45[ecx + 12<i32>:word32]:word32] l00418A13
l004189DE:
	word32 esp_55 = esp_39 - 4<i32>
	Mem56[esp_55:word32] = 1<32>
	Mem64[esp_55 - 0x1C<32>:word32] = fp - 28<i32>
	Mem65[esp_55 - 0x18<32>:word32] = 0<32>
	Mem67[esp_55 - 0x14<32>:word32] = 0<32>
	Mem68[esp_55 - 0x10<32>:word32] = 0<32>
	Mem69[esp_55 - 0xC<32>:word32] = 0<32>
	Mem71[esp_55 - 8<32>:word64] = 0<64>
	word32 eax_72 = Mem71[ecx:word32]
	call Mem71[eax_72 + 44<i32>:word32] (retsize: 4;)
		uses: eax:eax_72,ecx:ecx
		defs: esp:esp_74
l00418A13:
	return Mem80[esp_39:word32]
fn00418980_exit:


word32 fn00418A20(word32 ecx, word32 dwArg04, word32 dwArg08, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004175B0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: edi esi
// Trashed: SCZO eax ecx edi edx esi Top
// Preserved: ebp esp
fn00418A20_entry:
	ptr32 fp
	selector fs
	word32 dwLoc20
	word32 dwLoc18
	word32 dwLoc1C
	word32 dwLoc14
l00418A20:
	word32 ecx_47
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem28[fs:0<32>:word32] = fp - 16<i32>
	word32 esp_132 = fp - 0x2C<32>
	branch Mem28[ecx + 32<i32>:byte] == 0<8> l00418A6E
l00418A6E:
	branch dwArg08 == 0<32> l00418AA8
l00418A75:
	imbue(dwArg04, &dwLoc20)
	ecx_47 = dwLoc1C
l00418A52:
	imbue(dwArg04, &dwLoc18)
	ecx_47 = dwLoc14
l00418A8C:
	esp_132 = fp - 0x30<32>
	branch ecx_47 == 0<32> l00418AA1
l00418A90:
	word32 eax_64 = Mem63[ecx_47:word32]
	word32 eax_72
	call Mem63[eax_64 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_64,ecx:ecx_59,Stack +0014:dwLoc20,Stack +0018:dwLoc1C,Stack +001C:dwLoc18,Stack +0020:dwLoc14,Stack +0038:dwArg04,Stack +003C:dwArg08
		defs: eax:eax_72,esp:esp_71
	branch eax_72 == 0<32> l00418AA1
l00418A99:
	word32 edx_80 = Mem63[eax_72:word32]
	Mem83[esp_132 - 4<i32>:word32] = 1<32>
	call Mem83[edx_80:word32] (retsize: 4;)
		uses: ecx:eax_72,edx:edx_80
		defs: esp:esp_84
l00418AA1:
l00418AA8:
	word32 ecx_95 = Mem94[ecx:word32]
	word32 edx_97 = Mem94[ecx + 4<i32>:word32]
	branch (ecx_95 & edx_97) == 0xFFFFFFFF<32> l00418ABC
l00418AB6:
	Mem103[dwArg04 + 32<i32>:word32] = ecx_95
	Mem104[dwArg04 + 36<i32>:word32] = edx_97
l00418ABC:
	word32 ecx_107 = Mem106[ecx + 8<i32>:word32]
	word32 edx_109 = Mem106[ecx + 12<i32>:word32]
	branch (ecx_107 & edx_109) == 0xFFFFFFFF<32> l00418AD1
l00418ACB:
	Mem114[dwArg04 + 24<i32>:word32] = ecx_107
	Mem115[dwArg04 + 28<i32>:word32] = edx_109
l00418AD1:
	byte al_118 = Mem117[ecx + 16<i32>:byte]
	branch al_118 == 0<8> l00418ADB
l00418AD8:
	Mem123[dwArg04 + 64<i32>:byte] = al_118
l00418ADB:
	word32 eax_126 = CONVERT(Mem125[ecx + 20<i32>:word16], word16, word32)
	word32 esp_134 = esp_132 - 4<i32>
	Mem135[esp_134:word32] = 0<32>
	Mem136[dwArg04 + 20<i32>:word32] = eax_126
	Mem139[esp_134 - 4<i32>:word32] = Mem136[ecx + 24<i32>:word32]
	clear(dwArg04, Mem139[esp_134 - 4<i32>:int32], Mem139[esp_134:bool])
	Mem143[esp_134:word32] = Mem139[ecx + 28<i32>:word32]
	exceptions(dwArg04, Mem143[esp_134:int32])
	Mem156[fs:0x00000000<p32>:word32] = eax_13
	word32 esi_161 = Mem156[esp_134 + 0xC<32>:word32]
	ediOut = Mem156[esp_134 + 8<32>:word32]
	return esi_161
fn00418A20_exit:


word32 fn00418B10(word32 ecx, word32 edx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004175B0
// MayUse:  ecx:[0..31] edx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: edi esi esp
fn00418B10_entry:
l00418B10:
	Mem18[ecx:word32] = 0x00431384<p32>
	Mem20[ecx + 4<i32>:word64] = 0<64>
	_std_exception_copy(edx + 4<i32>, ecx + 4<i32>)
	Mem30[ecx:word32] = 0x00431844<p32>
	Mem34[ecx + 12<i32>:word32] = Mem30[edx + 12<i32>:word32]
	Mem36[ecx + 16<i32>:word32] = Mem34[edx + 16<i32>:word32]
	Mem38[ecx + 24<i32>:word32] = 0<32>
	Mem39[ecx + 28<i32>:word32] = 0<32>
	Mem40[ecx + 32<i32>:word32] = 0<32>
	Mem41[ecx + 36<i32>:word32] = 0xFFFFFFFF<32>
	Mem42[ecx:word32] = 0x00431868<p32>
	Mem43[ecx + 20<i32>:word32] = 0x00432408<p32>
	return ecx
fn00418B10_exit:


word32 fn00418B80(word32 ecx, word32 edx, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004175B0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebx
// Trashed: SCZDOP eax ebx ecx edx Top xmm0
// Preserved: ebp edi esi esp
fn00418B80_entry:
	ptr32 fp
	selector fs
l00418B80:
	word32 eax_13 = Mem11[fs:0<32>:word32]
	Mem30[fs:0<32>:word32] = fp - 16<i32>
	Mem37[ecx + 40<i32>:word32] = 0x00432380<p32>
	Mem38[ecx + 48<i32>:word32] = 0x0043248C<p32>
	word32 edi_46
	word32 esi_47
	fn004181F0(ecx, edx, out esi_47, out edi_46)
	word32 eax_56 = Mem54[edi_46 + 40<i32>:word32]
	Mem57[edi_46:word32] = 0x004323BC<p32>
	Mem58[edi_46 + 20<i32>:word32] = 0x00431874<p32>
	Mem60[Mem58[eax_56 + 4<i32>:word32] + 40<i32> + edi_46:word32] = 0x004324CC<p32>
	word32 edx_62 = Mem60[Mem60[edi_46 + 40<i32>:word32] + 4<i32>:word32]
	Mem64[edx_62 + 36<i32> + edi_46:word32] = edx_62 - 8<i32>
	word32 ebx_78 = fn00403D50(edi_46 + 20<i32>, esi_47 + 20<i32> & 0<32> - (esi_47 != 0<32>), es, ds)
	Mem91[fs:0x00000000<p32>:word32] = eax_13
	return ebx_78
fn00418B80_exit:


word32 fn00418C30(word32 ecx, selector es, selector ds, word32 dwArg04, word64 qwArg08, byte bArg18, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004175B0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0008:[0..63] Stack +0018:[0..7]
// LiveOut: ebp edi edx esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00418C30_entry:
	word32 dwArg0C = SLICE(qwArg08, word32, 32)
	word32 dwArg08 = SLICE(qwArg08, word32, 0)
l00418C30:
	Mem24[ecx + 16<i32>:word32] = 0<32>
	word32 eax_23 = ecx
	branch Mem24[ecx + 20<i32>:word32] <u 0x10<32> l00418C51
l00418C4F:
	eax_23 = Mem24[ecx:word32]
l00418C51:
	word32 ebp_104
	word32 esp_114
	word32 edx_102
	Mem32[eax_23:byte] = 0<8>
	branch dwArg0C < 0<32> l00418E50
l00418C62:
	branch dwArg0C > 0<32> l00418C6F
l00418C67:
	branch dwArg08 == 0<32> l00418E50
l00418C6F:
	branch dwArg08 <=u dwArg04 l00418E50
l00418E50:
	word32 ecx_58 = CONVERT(CONVERT(bArg18 != 0<8>, bool, int8), int8, uint32) + dwArg04
	word32 ebx_105
	word32 esi_107
	word32 edi_106
	edx_102 = fn00414E40(ecx, ecx, es, ds, -CONVERT(CONVERT(ecx_58 <u 0<32>, bool, int8), byte, uint32) | ecx_58, out ebx_105, out ebp_104, out esi_107, out edi_106)
	word32 esp_109 = <invalid>
	word32 ecx_115 = Mem76[ebp_104 + 28<i32>:word32]
	esp_114 = esp_109 + 4<32>
	byte cl_116 = SLICE(ecx_115, byte, 0)
	branch cl_116 == 0<8> l00418EBF
l00418E72:
	word32 esi_120 = Mem76[edi_106 + 20<i32>:word32]
	edx_102 = Mem76[edi_106 + 16<i32>:word32]
	branch esi_120 - edx_102 <u 1<32> l00418EA9
l00418EA9:
	Mem127[esp_109:word32] = ecx_115
	Mem129[esp_109 - 4<i32>:word32] = 1<32>
	Mem130[ebp_104 + 16<i32>:byte] = 0<8>
	Mem134[esp_109 - 8<i32>:word32] = Mem130[ebp_104 + 16<i32>:word32]
	Mem136[esp_109 - 12<i32>:word32] = 1<32>
	word32 esi_759
	edx_102 = fn00413120(edi_106, ebp_104, edi_106, out ebx_105, out ebp_104, out esi_759, out edi_106)
	esp_114 = <invalid>
l00418E81:
	word32 esi_153
	Mem150[edi_106 + 16<i32>:word32] = edx_102 + 1<i32>
	branch esi_120 <u 0x10<32> l00418E90
l00418E90:
	esi_153 = edi_106
l00418E8C:
	esi_153 = Mem150[edi_106:word32]
l00418E92:
	word32 ecx_156 = CONVERT(cl_116, byte, int32)
	Mem168[esi_153 + edx_102:byte] = SLICE(ecx_156, byte, 0) << 8<8> | SLICE(ecx_156, byte, 0)
	Mem169[esi_153 + 1<i32> + edx_102:byte] = 0<8>
l00418EBC:
	esi_107 = Mem172[ebp_104 - 8<i32>:word32]
l00418EBF:
	branch ebx_105 == 0<32> l00418F0A
l00418EC3:
	word32 edx_184 = Mem183[edi_106 + 20<i32>:word32]
	word32 ecx_186 = Mem183[edi_106 + 16<i32>:word32]
	branch ebx_105 >u edx_184 - ecx_186 l00418EF9
l00418EF9:
	word32 esp_193 = esp_114 - 4<i32>
	Mem194[esp_193:word32] = ebx_105
	Mem197[esp_193 - 4<i32>:word32] = esi_107
	Mem199[ebp_104 + 16<i32>:byte] = 0<8>
	Mem203[esp_193 - 8<i32>:word32] = Mem199[ebp_104 + 16<i32>:word32]
	Mem205[esp_193 - 12<i32>:word32] = ebx_105
	word32 ebx_760
	word32 edi_762
	word32 esi_761
	fn00413280(edi_106, ebp_104, edi_106, out edx_102, out ebx_760, out ebp_104, out esi_761, out edi_762)
	esp_114 = <invalid>
l00418ED1:
	Mem222[edi_106 + 16<i32>:word32] = ecx_186 + ebx_105
	branch edx_184 <u 0x10<32> l00418EDE
l00418EDC:
	edi_106 = Mem222[edi_106:word32]
l00418EDE:
	word32 esp_227 = esp_114 - 4<i32>
	Mem229[esp_227:word32] = ebx_105
	Mem233[esp_227 - 4<i32>:word32] = Mem229[ebp_104 - 8<i32>:word32]
	word32 esi_236 = edi_106 + ecx_186
	Mem238[esp_227 - 8<i32>:word32] = esi_236
	memmove(Mem238[esp_227 - 8<i32>:(ptr32 void)], Mem238[esp_227 - 4<i32>:(ptr32 void)], Mem238[esp_227:size_t])
	Mem242[esi_236 + ebx_105:byte] = 0<8>
	word32 edi_243 = Mem242[esp_227 + 4<32>:word32]
	ebpOut = Mem242[ebp_104:word32]
	ediOut = edi_243
	return edx_184
l00418C77:
	branch bArg18 == 0<8> l00418C8B
l00418C8B:
l00418C7D:
l00418C9C:
	word32 ecx_312
	word32 eax_314
	word32 esp_300 = <invalid>
	word32 esi_298
	word32 ebx_296
	word32 edi_297
	edx_102 = fn00414E40(ecx, ecx, es, ds, dwArg08, out ebx_296, out ebp_104, out esi_298, out edi_297)
	esp_114 = esp_300 + 4<32>
	branch Mem285[ebp_104 + 32<i32>:byte] == 0<8> l00418CDA
l00418CDA:
	branch (Mem285[ebp_104 + 24<i32>:byte] & 0x40<8>) == 0<8> l00418CEB
l00418CEB:
	ecx_312 = Mem285[ebp_104 + 16<i32>:word32]
	Mem313[ebp_104 - 24<i32>:word32] = Mem285[ebp_104 - 16<i32>:word32]
	eax_314 = Mem313[ebp_104 - 20<i32>:word32]
l00418CE0:
	edx_102 = Mem285[ebp_104 + 16<i32>:word32]
	Mem316[ebp_104 - 16<i32>:word32] = esi_298
	Mem317[ebp_104 - 24<i32>:word32] = edx_102
l00418CC1:
	Mem319[esp_300:word32] = 0<32>
	Mem321[esp_300 - 4<i32>:word32] = 2<32>
	Mem324[esp_300 - 8<i32>:word32] = Mem321[ebp_104 + 16<i32>:word32]
	Mem326[esp_300 - 12<i32>:word32] = esi_298
	ui64 edx_eax_756 = fn0042D550(Mem326[esp_300 - 12<i32>:word32], Mem326[esp_300 - 8<i32>:word32], Mem326[esp_300 - 4<i32>:word32], Mem326[esp_300:word32])
	ui64 ecx_esi_646 = SEQ(Mem326[ebp_104 + 16<i32>:word32], esi_298) - edx_eax_756
	edx_102 = SLICE(edx_eax_756, word32, 32) (alias)
	Mem338[ebp_104 - 24<i32>:word32] = edx_102
	eax_314 = SLICE(edx_eax_756, word32, 0) (alias)
	esi_298 = SLICE(ecx_esi_646, word32, 0) (alias)
	ecx_312 = SLICE(ecx_esi_646, word32, 32) (alias)
l00418CF7:
	Mem344[ebp_104 - 16<i32>:word32] = eax_314
	Mem351[ebp_104 - 12<i32>:word32] = esi_298
	esp_114 = esp_300 + 4<32>
	branch (esi_298 | ecx_312) == 0<32> l00418D53
l00418D03:
	edx_102 = Mem351[edi_297 + 20<i32>:word32]
	word32 ecx_356 = Mem351[edi_297 + 16<i32>:word32]
	branch esi_298 >u edx_102 - ecx_356 l00418D3F
l00418D3F:
	Mem364[esp_300:word32] = Mem351[ebp_104 + 20<i32>:word32]
	Mem366[esp_300 - 4<i32>:word32] = esi_298
	Mem367[ebp_104 + 16<i32>:byte] = 0<8>
	Mem370[esp_300 - 8<i32>:word32] = Mem367[ebp_104 + 16<i32>:word32]
	Mem372[esp_300 - 12<i32>:word32] = esi_298
	word32 esi_763
	edx_102 = fn00413120(edi_297, ebp_104, edi_297, out ebx_296, out ebp_104, out esi_763, out edi_297)
	esp_114 = <invalid>
l00418D11:
	Mem387[edi_297 + 16<i32>:word32] = ecx_356 + esi_298
	word32 eax_388 = edi_297
	branch edx_102 <u 0x10<32> l00418D20
l00418D1E:
	eax_388 = Mem387[edi_297:word32]
l00418D20:
	Mem397[esp_300:word32] = Mem387[ebp_104 - 12<i32>:word32]
	Mem405[esp_300 - 4<i32>:word32] = CONVERT(Mem397[ebp_104 + 0x14<32>:byte], byte, int32)
	word32 esi_400 = eax_388 + ecx_356
	Mem407[esp_300 - 8<i32>:word32] = esi_400
	memset(Mem407[esp_300 - 8<i32>:(ptr32 void)], Mem407[esp_300 - 4<i32>:int32], Mem407[esp_300:size_t])
	Mem412[esi_400 + Mem407[ebp_104 - 12<i32>:word32]:byte] = 0<8>
	esp_114 = esp_300 + 4<32>
l00418D53:
	word32 ecx_415 = Mem414[ebp_104 + 28<i32>:word32]
	byte cl_416 = SLICE(ecx_415, byte, 0)
	branch cl_416 == 0<8> l00418DA4
l00418D5A:
	word32 esi_422 = Mem414[edi_297 + 20<i32>:word32]
	edx_102 = Mem414[edi_297 + 16<i32>:word32]
	branch esi_422 - edx_102 <u 1<32> l00418D91
l00418D91:
	word32 esp_429 = esp_114 - 4<i32>
	Mem430[esp_429:word32] = ecx_415
	Mem432[esp_429 - 4<i32>:word32] = 1<32>
	Mem433[ebp_104 + 16<i32>:byte] = 0<8>
	Mem437[esp_429 - 8<i32>:word32] = Mem433[ebp_104 + 16<i32>:word32]
	Mem439[esp_429 - 12<i32>:word32] = 1<32>
	word32 esi_764
	edx_102 = fn00413120(edi_297, ebp_104, edi_297, out ebx_296, out ebp_104, out esi_764, out edi_297)
	esp_114 = <invalid>
l00418D69:
	word32 esi_458
	Mem455[edi_297 + 16<i32>:word32] = edx_102 + 1<i32>
	branch esi_422 <u 0x10<32> l00418D78
l00418D78:
	esi_458 = edi_297
l00418D74:
	esi_458 = Mem455[edi_297:word32]
l00418D7A:
	word32 ecx_461 = CONVERT(cl_416, byte, int32)
	Mem473[esi_458 + edx_102:byte] = SLICE(ecx_461, byte, 0) << 8<8> | SLICE(ecx_461, byte, 0)
	Mem474[esi_458 + 1<i32> + edx_102:byte] = 0<8>
l00418DA4:
	branch ebx_296 == 0<32> l00418DEE
l00418DA8:
	edx_102 = Mem485[edi_297 + 20<i32>:word32]
	word32 ecx_488 = Mem485[edi_297 + 16<i32>:word32]
	branch ebx_296 >u edx_102 - ecx_488 l00418DDB
l00418DDB:
	word32 esp_494 = esp_114 - 4<i32>
	Mem495[esp_494:word32] = ebx_296
	Mem500[esp_494 - 4<i32>:word32] = Mem495[ebp_104 - 8<i32>:word32]
	Mem501[ebp_104 + 16<i32>:byte] = 0<8>
	Mem505[esp_494 - 8<i32>:word32] = Mem501[ebp_104 + 16<i32>:word32]
	Mem507[esp_494 - 12<i32>:word32] = ebx_296
	word32 ebx_765
	word32 esi_766
	fn00413280(edi_297, ebp_104, edi_297, out edx_102, out ebx_765, out ebp_104, out esi_766, out edi_297)
	esp_114 = <invalid>
l00418DB6:
	Mem523[edi_297 + 16<i32>:word32] = ecx_488 + ebx_296
	word32 eax_524 = edi_297
	branch edx_102 <u 0x10<32> l00418DC5
l00418DC3:
	eax_524 = Mem523[edi_297:word32]
l00418DC5:
	word32 esp_529 = esp_114 - 4<i32>
	Mem531[esp_529:word32] = ebx_296
	Mem535[esp_529 - 4<i32>:word32] = Mem531[ebp_104 - 8<i32>:word32]
	word32 esi_538 = eax_524 + ecx_488
	Mem540[esp_529 - 8<i32>:word32] = esi_538
	memmove(Mem540[esp_529 - 8<i32>:(ptr32 void)], Mem540[esp_529 - 4<i32>:(ptr32 void)], Mem540[esp_529:size_t])
	Mem544[esi_538 + ebx_296:byte] = 0<8>
	esp_114 = esp_529 + 4<32>
l00418DEE:
	word32 ebx_547 = Mem546[ebp_104 - 16<i32>:word32]
	branch (ebx_547 | Mem546[ebp_104 - 24<i32>:word32]) == 0<32> l00418F0A
l00418F0A:
	word32 edi_556 = Mem555[esp_114:word32]
	ebpOut = Mem555[ebp_104:word32]
	ediOut = edi_556
	return edx_102
l00418DFC:
	word32 edx_567 = Mem546[edi_297 + 20<i32>:word32]
	word32 ecx_569 = Mem546[edi_297 + 16<i32>:word32]
	branch ebx_547 >u edx_567 - ecx_569 l00418E36
l00418E36:
	word32 esp_574 = esp_114 - 4<i32>
	Mem575[esp_574:word32] = Mem546[ebp_104 + 20<i32>:word32]
	Mem576[ebp_104 + 16<i32>:byte] = 0<8>
	Mem579[esp_574 - 4<i32>:word32] = ebx_547
	Mem582[esp_574 - 8<i32>:word32] = Mem579[ebp_104 + 16<i32>:word32]
	Mem584[esp_574 - 12<i32>:word32] = ebx_547
	word32 esi_768
	word32 edi_769
	word32 ebx_767
	word32 ebp_588
	word32 edx_592 = fn00413120(edi_297, ebp_104, edi_297, out ebx_767, out ebp_588, out esi_768, out edi_769)
	word32 esp_594 = <invalid>
	word32 edi_599 = Mem584[esp_594:word32]
	ebpOut = Mem584[ebp_588:word32]
	ediOut = edi_599
	return edx_592
l00418E0A:
	Mem608[edi_297 + 16<i32>:word32] = ecx_569 + ebx_547
	branch edx_567 <u 0x10<32> l00418E17
l00418E15:
	edi_297 = Mem608[edi_297:word32]
l00418E17:
	byte al_622 = Mem608[ebp_104 + 0x14<32>:byte]
	word32 esp_619 = esp_114 - 4<i32>
	Mem621[esp_619:word32] = ebx_547
	Mem625[esp_619 - 4<i32>:word32] = CONVERT(al_622, byte, int32)
	word32 esi_617 = edi_297 + ecx_569
	Mem627[esp_619 - 8<i32>:word32] = esi_617
	memset(Mem627[esp_619 - 8<i32>:(ptr32 void)], Mem627[esp_619 - 4<i32>:int32], Mem627[esp_619:size_t])
	Mem631[esi_617 + ebx_547:byte] = 0<8>
	word32 edi_632 = Mem631[esp_619 + 4<32>:word32]
	ebpOut = Mem631[ebp_104:word32]
	ediOut = edi_632
	return edx_567
fn00418C30_exit:


word32 fn00418F20(word32 ecx, selector es, selector ds, word32 dwArg10, word32 dwArg14, word32 dwArg18, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00416DA0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut: ebp ebx edi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved: DP
fn00418F20_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc30
l00418F20:
	word32 ebx_124
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_196 = fp - 4<i32>
	word32 esp_190 = fp - 0x44<32>
	word32 edi_199 = ecx
	word32 edx_36 = dwArg10 - Mem32[ecx + 12<i32>:word32]
	word32 esi_207 = dwArg14
	word32 ebx_197 = dwArg18
	word32 ecx_40 = Mem32[ecx + 16<i32>:word32]
	branch dwArg14 == dwArg18 l0041918B
l0041918B:
	ebx_124 = edx_36
l00418F73:
	branch edx_36 >u ecx_40 >>u 1<32> l004190A8
l004190A8:
l004190B0:
	branch esi_207 == ebx_197 l004190E8
l004190E8:
	word32 esp_61 = esp_190 - 0xC<32>
	word32 eax_62 = Mem58[edi_199 + 12<i32>:word32] + Mem58[edi_199 + 16<i32>:word32]
	Mem65[esp_61:word32] = 0<32>
	Mem66[esp_61 + 8<i32>:word32] = eax_62
	Mem67[esp_61 + 4<i32>:word32] = 0<32>
	Mem69[esp_61:word32] = Mem67[edi_199:word32]
	word32 eax_70 = 0<32>
	word32 edx_71 = Mem69[edi_199:word32]
	word32 esi_73 = Mem69[edi_199 + 12<i32>:word32]
	branch edx_71 == 0<32> l0041911F
l00419117:
	word32 edx_77 = Mem69[edx_71:word32]
	branch edx_77 == 0<32> l0041911F
l0041911D:
	eax_70 = Mem69[edx_77:word32]
l0041911F:
	word32 edx_87 = Mem69[ebp_196 - 24<i32>:word32] + esi_73
	Mem89[esp_61 - 0xC<32>:word32] = 0<32>
	Mem90[esp_61 - 8<32>:word32] = 0<32>
	branch eax_70 == 0<32> l0041913F
l00419135:
	word32 eax_95 = Mem90[eax_70:word32]
	branch eax_95 == 0<32> l0041913F
l0041913B:
	Mem100[esp_61 - 0xC<32>:word32] = Mem90[eax_95:word32]
l0041913F:
	Mem103[esp_61 - 4<32>:word32] = edx_87
	word32 edx_109 = Mem103[edi_199:word32]
	word32 eax_110 = 0<32>
	word32 esi_111 = Mem103[edi_199 + 12<i32>:word32]
	branch edx_109 == 0<32> l0041915A
l00419152:
	word32 edx_116 = Mem103[edx_109:word32]
	branch edx_116 == 0<32> l0041915A
l00419158:
	eax_110 = Mem103[edx_116:word32]
l0041915A:
	ebx_124 = Mem103[ebp_196 - 28<i32>:word32]
	Mem126[esp_61 - 0x18<32>:word32] = 0<32>
	Mem127[esp_61 - 0x14<32>:word32] = 0<32>
	word32 edx_129 = esi_111 + ebx_124
	branch eax_110 == 0<32> l0041917B
l00419171:
	word32 eax_134 = Mem127[eax_110:word32]
	branch eax_134 == 0<32> l0041917B
l00419177:
	Mem139[esp_61 - 0x18<32>:word32] = Mem127[eax_134:word32]
l0041917B:
	Mem142[esp_61 - 0x10<32>:word32] = edx_129
	fn00419550(ebp_196 - 44<i32>, ebx_124, esi_111, edi_199, es, ds, Mem142[esp_61 - 0x18<32>:word32], Mem142[esp_61 - 0x10<32>:word32], Mem142[esp_61 - 0xC<32>:word32], Mem142[esp_61 - 4<32>:word32], Mem142[esp_61:word32], Mem142[esp_61 + 8<32>:word32])
	esp_190 = esp_61 + 0xC<32>
l004190B4:
	Mem193[esp_190 - 4<i32>:word32] = esi_207
	word32 esi_201
	ebx_197 = fn0040F210(edi_199, edi_199, out ebp_196, out esi_201, out edi_199)
	esp_190 = <invalid>
	esi_207 = esi_201 + 1<32>
l00418F7F:
l00418F86:
	branch esi_207 == dwArg18 l00418FC1
l00418FC1:
	word32 ecx_217 = 0<32>
	word32 esi_219 = Mem215[ecx + 16<i32>:word32] - ecx_40
	word32 eax_220 = Mem215[ecx:word32]
	word32 ebx_221 = Mem215[ecx + 12<i32>:word32]
	branch eax_220 == 0<32> l00418FDA
l00418FD2:
	word32 edx_225 = Mem215[eax_220:word32]
	branch edx_225 == 0<32> l00418FDA
l00418FD8:
	ecx_217 = Mem215[edx_225:word32]
l00418FDA:
	word32 edx_230 = 0<32>
	branch ecx_217 == 0<32> l00418FE8
l00418FE0:
	word32 ecx_236 = Mem215[ecx_217:word32]
	branch ecx_236 == 0<32> l00418FE8
l00418FE6:
	edx_230 = Mem215[ecx_236:word32]
l00418FE8:
	word32 ecx_246
	branch edx_230 != 0<32> l00418FF0
l00418FF0:
	ecx_246 = Mem215[edx_230:word32]
l00418FEC:
	ecx_246 = 0<32>
l00418FF2:
	branch eax_220 == 0<32> l00418FF8
l00418FF6:
	eax_220 = Mem215[eax_220:word32]
l00418FF8:
	fn004196C0(eax_220, ebx_221, ecx_246, ebx_221 + esi_219)
	word32 edx_294 = Mem282[ecx:word32]
	word32 ebx_296 = Mem282[ecx + 12<i32>:word32]
	word32 eax_297 = 0<32>
	branch edx_294 == 0<32> l0041901C
l00419014:
	word32 edx_302 = Mem282[edx_294:word32]
	branch edx_302 == 0<32> l0041901C
l0041901A:
	eax_297 = Mem282[edx_302:word32]
l0041901C:
	word32 dwLoc50_553 = 0<32>
	word32 edx_317 = ebx_296 + esi_219 + edx_36
	branch eax_297 == 0<32> l0041903D
l00419033:
	word32 eax_323 = Mem318[eax_297:word32]
	branch eax_323 == 0<32> l0041903D
l00419039:
	dwLoc50_553 = Mem318[eax_323:word32]
l0041903D:
	word32 edx_337 = Mem331[ecx:word32]
	word32 eax_338 = 0<32>
	word32 ebx_339 = Mem331[ecx + 12<i32>:word32]
	branch edx_337 == 0<32> l00419058
l00419050:
	word32 edx_344 = Mem331[edx_337:word32]
	branch edx_344 == 0<32> l00419058
l00419056:
	eax_338 = Mem331[edx_344:word32]
l00419058:
	word32 dwLoc5C_563 = 0<32>
	word32 edx_354 = ebx_339 + esi_219
	branch eax_338 == 0<32> l00419076
l0041906C:
	word32 eax_360 = Mem355[eax_338:word32]
	branch eax_360 == 0<32> l00419076
l00419072:
	dwLoc5C_563 = Mem355[eax_360:word32]
l00419076:
	fn00419550(&tLoc30, ebx_339, esi_219, ecx, es, ds, Mem379[ecx:word32], Mem368[ecx + 12<i32>:word32], dwLoc5C_563, edx_354, dwLoc50_553, edx_317)
	ebx_124 = edx_36
	esp_190 = fp - 0x44<32>
l0041918D:
	word32 ecx_456 = Mem455[edi_199:word32]
	word32 eax_457 = 0<32>
	word32 edx_458 = Mem455[edi_199 + 12<i32>:word32]
	branch ecx_456 == 0<32> l004191A0
l00419198:
	word32 ecx_462 = Mem455[ecx_456:word32]
	branch ecx_462 == 0<32> l004191A0
l0041919E:
	eax_457 = Mem455[ecx_462:word32]
l004191A0:
	word32 ebx_474 = Mem455[ebp_196 - 32<i32>:word32]
	Mem475[ebx_474:word32] = 0<32>
	Mem476[ebx_474 + 4<i32>:word32] = 0<32>
	word32 edx_470 = edx_458 + ebx_124
	branch eax_457 == 0<32> l004191C0
l004191B6:
	word32 ecx_481 = Mem476[eax_457:word32]
	branch ecx_481 == 0<32> l004191C0
l004191BC:
	Mem486[ebx_474:word32] = Mem476[ecx_481:word32]
l004191C0:
	Mem489[ebx_474 + 8<i32>:word32] = edx_470
	Mem496[fs:0x00000000<p32>:word32] = Mem489[ebp_196 - 12<i32>:word32]
	word32 esp_501 = esp_190 + 4<i32>
	word32 edi_502 = Mem496[esp_501:word32]
	word32 ebx_506 = Mem496[esp_501 + 8<i32>:word32]
	ebpOut = Mem496[ebp_196:word32]
	ediOut = edi_502
	return ebx_506
fn00418F20_exit:
l00418F8A:
	fn004194C0(ecx, ecx)
	esi_207 = esi_207 + 1<32>


word32 fn004191F0(word32 ecx, selector es, selector ds, word32 dwArg10, word32 dwArg14, word32 dwArg18, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004170C0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31]
// LiveOut: ebp ebx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved: DP
fn004191F0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc30
l004191F0:
	word32 ebx_124
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_196 = fp - 4<i32>
	word32 esp_190 = fp - 0x44<32>
	word32 edi_199 = ecx
	word32 edx_36 = dwArg10 - Mem32[ecx + 12<i32>:word32]
	word32 esi_207 = dwArg14
	word32 ebx_197 = dwArg18
	word32 ecx_40 = Mem32[ecx + 16<i32>:word32]
	branch dwArg14 == dwArg18 l0041945B
l0041945B:
	ebx_124 = edx_36
l00419243:
	branch edx_36 >u ecx_40 >>u 1<32> l00419378
l00419378:
l00419380:
	branch esi_207 == ebx_197 l004193B8
l004193B8:
	word32 esp_61 = esp_190 - 0xC<32>
	word32 eax_62 = Mem58[edi_199 + 16<i32>:word32] + Mem58[edi_199 + 12<i32>:word32]
	Mem65[esp_61:word32] = 0<32>
	Mem66[esp_61 + 8<i32>:word32] = eax_62
	Mem67[esp_61 + 4<i32>:word32] = 0<32>
	Mem69[esp_61:word32] = Mem67[edi_199:word32]
	word32 eax_70 = 0<32>
	word32 edx_71 = Mem69[edi_199:word32]
	word32 esi_73 = Mem69[edi_199 + 12<i32>:word32]
	branch edx_71 == 0<32> l004193EF
l004193E7:
	word32 edx_77 = Mem69[edx_71:word32]
	branch edx_77 == 0<32> l004193EF
l004193ED:
	eax_70 = Mem69[edx_77:word32]
l004193EF:
	word32 edx_87 = Mem69[ebp_196 - 24<i32>:word32] + esi_73
	Mem89[esp_61 - 0xC<32>:word32] = 0<32>
	Mem90[esp_61 - 8<32>:word32] = 0<32>
	branch eax_70 == 0<32> l0041940F
l00419405:
	word32 eax_95 = Mem90[eax_70:word32]
	branch eax_95 == 0<32> l0041940F
l0041940B:
	Mem100[esp_61 - 0xC<32>:word32] = Mem90[eax_95:word32]
l0041940F:
	Mem103[esp_61 - 4<32>:word32] = edx_87
	word32 edx_109 = Mem103[edi_199:word32]
	word32 eax_110 = 0<32>
	word32 esi_111 = Mem103[edi_199 + 12<i32>:word32]
	branch edx_109 == 0<32> l0041942A
l00419422:
	word32 edx_116 = Mem103[edx_109:word32]
	branch edx_116 == 0<32> l0041942A
l00419428:
	eax_110 = Mem103[edx_116:word32]
l0041942A:
	ebx_124 = Mem103[ebp_196 - 28<i32>:word32]
	Mem126[esp_61 - 0x18<32>:word32] = 0<32>
	Mem127[esp_61 - 0x14<32>:word32] = 0<32>
	word32 edx_129 = esi_111 + ebx_124
	branch eax_110 == 0<32> l0041944B
l00419441:
	word32 eax_134 = Mem127[eax_110:word32]
	branch eax_134 == 0<32> l0041944B
l00419447:
	Mem139[esp_61 - 0x18<32>:word32] = Mem127[eax_134:word32]
l0041944B:
	Mem142[esp_61 - 0x10<32>:word32] = edx_129
	fn00419550(ebp_196 - 44<i32>, ebx_124, esi_111, edi_199, es, ds, Mem142[esp_61 - 0x18<32>:word32], Mem142[esp_61 - 0x10<32>:word32], Mem142[esp_61 - 0xC<32>:word32], Mem142[esp_61 - 4<32>:word32], Mem142[esp_61:word32], Mem142[esp_61 + 8<32>:word32])
	esp_190 = esp_61 + 0xC<32>
l00419384:
	Mem193[esp_190 - 4<i32>:word32] = esi_207
	word32 esi_201
	ebx_197 = fn0040F210(edi_199, edi_199, out ebp_196, out esi_201, out edi_199)
	esp_190 = <invalid>
	esi_207 = esi_201 + 1<32>
l0041924F:
l00419256:
	branch esi_207 == dwArg18 l00419291
l00419291:
	word32 ecx_217 = 0<32>
	word32 esi_219 = Mem215[ecx + 16<i32>:word32] - ecx_40
	word32 eax_220 = Mem215[ecx:word32]
	word32 ebx_221 = Mem215[ecx + 12<i32>:word32]
	branch eax_220 == 0<32> l004192AA
l004192A2:
	word32 edx_225 = Mem215[eax_220:word32]
	branch edx_225 == 0<32> l004192AA
l004192A8:
	ecx_217 = Mem215[edx_225:word32]
l004192AA:
	word32 edx_230 = 0<32>
	branch ecx_217 == 0<32> l004192B8
l004192B0:
	word32 ecx_236 = Mem215[ecx_217:word32]
	branch ecx_236 == 0<32> l004192B8
l004192B6:
	edx_230 = Mem215[ecx_236:word32]
l004192B8:
	word32 ecx_246
	branch edx_230 != 0<32> l004192C0
l004192C0:
	ecx_246 = Mem215[edx_230:word32]
l004192BC:
	ecx_246 = 0<32>
l004192C2:
	branch eax_220 == 0<32> l004192C8
l004192C6:
	eax_220 = Mem215[eax_220:word32]
l004192C8:
	fn004196C0(eax_220, ebx_221, ecx_246, ebx_221 + esi_219)
	word32 edx_294 = Mem282[ecx:word32]
	word32 ebx_296 = Mem282[ecx + 12<i32>:word32]
	word32 eax_297 = 0<32>
	branch edx_294 == 0<32> l004192EC
l004192E4:
	word32 edx_302 = Mem282[edx_294:word32]
	branch edx_302 == 0<32> l004192EC
l004192EA:
	eax_297 = Mem282[edx_302:word32]
l004192EC:
	word32 dwLoc50_553 = 0<32>
	word32 edx_317 = ebx_296 + esi_219 + edx_36
	branch eax_297 == 0<32> l0041930D
l00419303:
	word32 eax_323 = Mem318[eax_297:word32]
	branch eax_323 == 0<32> l0041930D
l00419309:
	dwLoc50_553 = Mem318[eax_323:word32]
l0041930D:
	word32 edx_337 = Mem331[ecx:word32]
	word32 eax_338 = 0<32>
	word32 ebx_339 = Mem331[ecx + 12<i32>:word32]
	branch edx_337 == 0<32> l00419328
l00419320:
	word32 edx_344 = Mem331[edx_337:word32]
	branch edx_344 == 0<32> l00419328
l00419326:
	eax_338 = Mem331[edx_344:word32]
l00419328:
	word32 dwLoc5C_563 = 0<32>
	word32 edx_354 = ebx_339 + esi_219
	branch eax_338 == 0<32> l00419346
l0041933C:
	word32 eax_360 = Mem355[eax_338:word32]
	branch eax_360 == 0<32> l00419346
l00419342:
	dwLoc5C_563 = Mem355[eax_360:word32]
l00419346:
	fn00419550(&tLoc30, ebx_339, esi_219, ecx, es, ds, Mem379[ecx:word32], Mem368[ecx + 12<i32>:word32], dwLoc5C_563, edx_354, dwLoc50_553, edx_317)
	ebx_124 = edx_36
	esp_190 = fp - 0x44<32>
l0041945D:
	word32 ecx_456 = Mem455[edi_199:word32]
	word32 eax_457 = 0<32>
	word32 edx_458 = Mem455[edi_199 + 12<i32>:word32]
	branch ecx_456 == 0<32> l00419470
l00419468:
	word32 ecx_462 = Mem455[ecx_456:word32]
	branch ecx_462 == 0<32> l00419470
l0041946E:
	eax_457 = Mem455[ecx_462:word32]
l00419470:
	word32 ebx_474 = Mem455[ebp_196 - 32<i32>:word32]
	Mem475[ebx_474:word32] = 0<32>
	Mem476[ebx_474 + 4<i32>:word32] = 0<32>
	word32 edx_470 = edx_458 + ebx_124
	branch eax_457 == 0<32> l00419490
l00419486:
	word32 ecx_481 = Mem476[eax_457:word32]
	branch ecx_481 == 0<32> l00419490
l0041948C:
	Mem486[ebx_474:word32] = Mem476[ecx_481:word32]
l00419490:
	Mem489[ebx_474 + 8<i32>:word32] = edx_470
	Mem496[fs:0x00000000<p32>:word32] = Mem489[ebp_196 - 12<i32>:word32]
	word32 esp_501 = esp_190 + 4<i32>
	word32 esi_504 = Mem496[esp_501 + 4<i32>:word32]
	word32 ebx_506 = Mem496[esp_501 + 8<i32>:word32]
	ebpOut = Mem496[ebp_196:word32]
	esiOut = esi_504
	return ebx_506
fn004191F0_exit:
l0041925A:
	fn004194C0(ecx, ecx)
	esi_207 = esi_207 + 1<32>


void fn004194C0(word32 ecx, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00418F20
//      fn004191F0
// MayUse:  ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004194C0_entry:
	ptr32 fp
	word32 dwLoc18
l004194C0:
	word32 ecx_19 = Mem18[ecx + 12<i32>:word32]
	word32 ebp_101 = fp - 4<i32>
	word32 esi_15 = ecx
	branch (SLICE(ecx_19, byte, 0) & 0xF<8>) != 0<8> l004194E9
l004194D0:
	branch Mem18[ecx + 8<i32>:word32] >u Mem18[ecx + 16<i32>:word32] + 0x10<32> >>u 4<32> l004194E9
l004194DE:
	word32 edi_150
	fn00411200(ecx, edi, out ebp_101, out esi_15, out edi_150)
	ecx_19 = Mem30[esi_15 + 12<i32>:word32]
l004194E9:
	word32 edi_53 = (Mem48[esi_15 + 8<i32>:word32] << 4<32>) - 1<32> & ecx_19
	Mem54[esi_15 + 12<i32>:word32] = edi_53
	word32 ecx_55 = Mem54[esi_15 + 8<i32>:word32]
	branch edi_53 != 0<32> l00419502
l004194FF_1:
	edi_53 = ecx_55 << 4<32>
l00419502:
	word32 edi_65 = edi_53 - 1<32>
	word32 ecx_68 = ecx_55 - 1<32> & edi_65 >>u 4<32>
	word32 ecx_72 = Mem54[esi_15 + 4<i32>:word32]
	branch Mem54[ecx_72 + ecx_68 * 4<32>:word32] != 0<32> l0041952E
l0041951B:
	word32 ecx_151
	Mem91[ecx_68 * 4<32> + Mem78[esi_15 + 4<i32>:word32]:word32] = fn00427511(ecx_68 * 4<32>, esi_15, edi_65, dwLoc18, 0x10<32>, edi, out ecx_151, out ebp_101)
	ecx_72 = Mem91[esi_15 + 4<i32>:word32]
l0041952E:
	Mem106[(edi_65 & 0xF<32>) + Mem95[ecx_68 * 4<32> + ecx_72:word32]:byte] = Mem95[Mem95[ebp_101 + 8<i32>:word32]:byte]
	Mem108[esi_15 + 12<i32>:word32] = edi_65
	Mem110[esi_15 + 16<i32>:word32] = Mem108[esi_15 + 16<i32>:word32] + 1<32>
	return
fn004194C0_exit:


void fn00419550(word32 ecx, word32 ebx, word32 esi, word32 edi, selector es, selector ds, word32 dwArg04, word32 dwArg0C, word32 dwArg10, word32 dwArg18, word32 dwArg1C, word32 dwArg24)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00418F20
//      fn004191F0
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0024:[0..31]
// LiveOut:
// Trashed: SCZDOP eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn00419550_entry:
	ptr32 fp
l00419550:
	word32 ecx_27
	word32 eax_10 = Mem6[0x0043A008<p32>:word32] ^ fp - 4<i32>
	branch dwArg1C != 0<32> l00419570
l00419570:
	ecx_27 = Mem23[dwArg1C:word32]
l0041956C:
	ecx_27 = 0<32>
l00419572:
	word32 dwLoc18_248
	word32 edi_124 = dwArg24
	branch dwArg10 != 0<32> l00419584
l00419584:
	dwLoc18_248 = Mem36[dwArg10:word32]
l0041957F:
	dwLoc18_248 = dwArg10
l00419589:
	word32 edx_115
	branch dwArg04 != 0<32> l0041959A
l0041959A:
	edx_115 = Mem46[dwArg04:word32]
l00419596:
	edx_115 = 0<32>
l0041959C:
	branch dwArg0C == dwArg18 l004195E4
l004195A7:
	branch dwArg18 != dwArg24 l004195B2
l004195B2:
	fn004196C0(edx_115, dwArg0C, dwLoc18_248, dwArg18)
	fn004196C0(dwLoc18_248, dwArg18, ecx_27, dwArg24)
	edx_115 = fn004196C0(edx_115, dwArg0C, ecx_27, dwArg24)
	edi_124 = dwArg24 + (dwArg0C - dwArg18)
l004195AE:
	edi_124 = dwArg0C
l004195E4:
	Mem134[ecx:word32] = 0<32>
	Mem135[ecx + 4<i32>:word32] = 0<32>
	branch dwArg04 == 0<32> l00419618
l00419618:
l004195F8:
	word32 ecx_142 = Mem135[dwArg04:word32]
	branch ecx_142 == 0<32> l0041961A
l0041961A:
	Mem152[ecx + 8<i32>:word32] = edi_124
	word32 ecx_327
	word32 eax_326
	fn00427500(eax_10 ^ fp - 4<i32>, edx_115, ebx, fp - 4<i32>, esi, edi, es, ds, ebx, out eax_326, out ecx_327)
	return
l00419600:
	Mem214[ecx:word32] = Mem135[ecx_142:word32]
	Mem215[ecx + 8<i32>:word32] = edi_124
	word32 ecx_329
	word32 eax_328
	fn00427500(eax_10 ^ fp - 4<i32>, edx_115, ebx, fp - 4<i32>, esi, edi, es, ds, ebx, out eax_328, out ecx_329)
	return
fn00419550_exit:


word32 fn00419630(word32 ecx, word32 ebx, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn004175B0
//      fn00417600
// MayUse:  ebx:[0..31] ecx:[0..31] edi:[0..31] fs:[0..15]
// LiveOut: ebp esp
// Trashed: SCZO eax ebp ecx esp Top
// Preserved: ebx edi esi
fn00419630_entry:
	ptr32 fp
	selector fs
	word32 dwLoc30
l00419630:
	word32 eax_27 = Mem25[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	Mem39[ecx:word32] = 0<32>
	word32 ebp_42
	word32 ecx_86
	word32 eax_41 = fn00427511(ebx, ecx, edi, dwLoc30, 0x14<32>, eax_27, out ecx_86, out ebp_42)
	Mem50[eax_41 + 16<i32>:word32] = 0<32>
	word32 ecx_51 = Mem50[ebp_42 + 8<i32>:word32]
	Mem52[eax_41 + 4<i32>:word32] = 1<32>
	Mem53[eax_41 + 8<i32>:word32] = 1<32>
	Mem54[eax_41:word32] = 0x0043181C<p32>
	Mem55[eax_41 + 12<i32>:word32] = ecx_51
	Mem56[ecx:word32] = eax_41
	Mem59[fs:0x00000000<p32>:word32] = Mem56[ebp_42 - 12<i32>:word32]
	return Mem59[ebp_42:word32]
fn00419630_exit:


word32 fn004196C0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00418F20
//      fn004191F0
//      fn00419550
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: edx
// Trashed: SCZO eax ecx edx Top
// Preserved: ebp ebx edi esi esp
fn004196C0_entry:
l004196C0:
	word32 ebx_14 = dwArg08
	word32 edi_21 = dwArg10
	branch dwArg08 == dwArg10 l00419724
l004196DF:
l004196E0:
	edi_21 = edi_21 - 1<32>
	branch ebx_14 == edi_21 l00419724
l004196E5:
	word32 edx_53 = (ebx_14 & 0xF<32>) + Mem32[Mem32[dwArg04 + 4<i32>:word32] + (Mem32[dwArg04 + 8<i32>:word32] - 1<32> & ebx_14 >>u 4<32>) * 4<32>:word32]
	word32 esi_43 = (edi_21 & 0xF<32>) + Mem32[Mem32[dwArg0C + 4<i32>:word32] + (edi_21 >>u 4<32> & Mem32[dwArg0C + 8<i32>:word32] - 1<32>) * 4<32>:word32]
	byte cl_55 = Mem32[edx_53:byte]
	Mem56[edx_53:byte] = Mem32[esi_43:byte]
	Mem58[esi_43:byte] = cl_55
	ebx_14 = ebx_14 + 1<32>
	branch ebx_14 != edi_21 l004196E0
l00419724:
	return dwArg0C
fn004196C0_exit:


void fn00419730()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: eax Top
// Preserved: esp
fn00419730_entry:
l00419730:
	return
fn00419730_exit:


void fn00419740(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esi esp
fn00419740_entry:
l00419740:
	branch _std_type_info_compare(dwArg04 + 4<32>, 0x43A5B4<32>) != 0<32> l00419767
l00419767:
	return
l0041975F:
	return
fn00419740_exit:


void fn00419770(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esi esp
fn00419770_entry:
l00419770:
	Mem15[ecx:word32] = 0x00431480<p32>
	branch (bArg04 & 1<8>) == 0<8> l0041978D
l00419782:
	fn0042763F(ecx)
l0041978D:
	return
fn00419770_exit:


word32 fn004197A0(word32 ecx, word32 dwArg08, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00417F50
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0008:[0..31]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top
// Preserved:
fn004197A0_entry:
	ptr32 fp
	selector fs
l004197A0:
	Mem33[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_41 = fp - 4<i32>
	word32 esp_30 = fp - 0x30<32>
	word32 edi_36 = ecx
	word32 eax_114 = dwArg08
l004197E0:
	branch eax_114 == Mem42[ebp_41 + 20<i32>:word32] l00419847
l00419847:
	Mem47[fs:0x00000000<p32>:word32] = Mem42[ebp_41 - 12<i32>:word32]
	word32 esp_50 = esp_30 + 4<i32>
	word32 edi_51 = Mem47[esp_50:word32]
	word32 esi_53 = Mem47[esp_50 + 4<i32>:word32]
	word32 ebx_55 = Mem47[esp_50 + 8<i32>:word32]
	ebpOut = Mem47[ebp_41:word32]
	esiOut = esi_53
	ediOut = edi_51
	return ebx_55
fn004197A0_exit:
l004197E5:
	word32 edx_59 = Mem42[ebp_41 + 8<i32>:word32]
	word32 esi_69 = Mem42[edi_36 + 20<i32>:word32]
	byte dl_70 = Mem42[(eax_114 & 0xF<32>) + Mem42[Mem42[edx_59 + 4<i32>:word32] + (Mem42[edx_59 + 8<i32>:word32] - 1<32> & eax_114 >>u 4<32>) * 4<32>:word32]:byte]
	word32 ecx_71 = Mem42[edi_36 + 16<i32>:word32]
	Mem72[ebp_41 - 20<i32>:byte] = dl_70
	branch ecx_71 >=u esi_69 l0041982C
l0041982C:
	word32 esp_76 = esp_30 - 4<i32>
	Mem77[esp_76:word32] = Mem72[ebp_41 - 20<i32>:word32]
	Mem78[ebp_41 - 24<i32>:byte] = 0<8>
	Mem81[esp_76 - 4<i32>:word32] = Mem78[ebp_41 - 24<i32>:word32]
	Mem83[esp_76 - 8<i32>:word32] = ecx_71
	word32 ebx_145
	word32 esi_146
	fn00412FE0(edi_36, ebp_41, edi_36, out ebx_145, out ebp_41, out esi_146, out edi_36)
	word32 eax_97 = Mem83[ebp_41 + 12<i32>:word32]
	Mem100[ebp_41 + 12<i32>:word32] = eax_97 + 1<32>
	esp_30 = <invalid>
	eax_114 = eax_97 + 1<32>
l0041980C:
	Mem102[edi_36 + 16<i32>:word32] = ecx_71 + 1<i32>
	word32 eax_103 = edi_36
	branch esi_69 <u 0x10<32> l0041981B
l00419819:
	eax_103 = Mem102[edi_36:word32]
l0041981B:
	Mem110[eax_103 + ecx_71:byte] = dl_70
	Mem111[eax_103 + 1<i32> + ecx_71:byte] = 0<8>
	word32 eax_113 = Mem111[ebp_41 + 12<i32>:word32]
	Mem116[ebp_41 + 12<i32>:word32] = eax_113 + 1<32>
	eax_114 = eax_113 + 1<32>


void fn0041986D(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn0041986D_entry:
l0041986D:
	word32 ecx_6 = ecx - Mem0[ecx - 4<i32>:word32]
l00419873_thunk_fn004184D0:
	fn004184D0(ecx_6 - 0x30<32>, bArg04)
	return
fn0041986D_exit:


void fn00419878(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00419878_entry:
l00419878:
l0041987B_thunk_fn00414C00:
	fn00414C00(ecx - 0x14<32>)
	return
fn00419878_exit:


void fn00419880(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: esp
fn00419880_entry:
l00419880:
l00419883_thunk_fn004184D0:
	fn004184D0(ecx - 0x14<32>, bArg04)
	return
fn00419880_exit:


void fn00419888(word32 ecx, word32 edi, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] edi:[0..31] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx edx Top xmm0
// Preserved: ebp ebx edi esi esp
fn00419888_entry:
	word32 dwLoc14
l00419888:
	word32 ecx_6 = ecx - Mem0[ecx - 4<i32>:word32]
l00410BE0:
	Mem26[Mem20[Mem20[ecx_6 - 104<i32>:word32] + 4<i32>:word32] - 104<i32> + ecx_6:word32] = 0x004324BC<p32>
	word32 edx_28 = Mem26[Mem26[ecx_6 - 104<i32>:word32] + 4<i32>:word32]
	Mem30[edx_28 - 108<i32> + ecx_6:word32] = edx_28 - 104<i32>
	Mem31[ecx_6 - 80<i32>:word32] = 0x00432440<p32>
	fn004110B0(ecx_6 - 80<i32>, dwLoc14, edi)
	~basic_streambuf(ecx_6 - 80<i32>)
	~basic_iostream(ecx_6 - 72<i32>)
	~basic_ios(ecx_6)
	branch (bArg04 & 1<8>) == 0<8> l00410C42
l00410C34:
	fn0042763F(ecx_6 - 104<i32>)
l00410C42:
	return
fn00419888_exit:


void fn004198AB(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ebp ecx esi esp Top
// Preserved:
fn004198AB_entry:
l004198AB:
	word32 ecx_6 = ecx - Mem0[ecx - 4<i32>:word32]
l00410B10:
	fn00404E50(ecx_6 - 112<i32>, edx, ebx, es, ds)
	branch (bArg04 & 1<8>) == 0<8> l00410B32
l00410B24:
	fn0042763F(ecx_6 - 112<i32>)
l00410B32:
	return
fn004198AB_exit:


void fn004198C3(word32 ecx, word32 edx, word32 ebx, selector es, selector ds, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx Top
// Preserved: ebp esi esp
fn004198C3_entry:
l004198C3:
	word32 ecx_6 = ecx - Mem0[ecx - 4<i32>:word32]
l00410AE0:
	fn00404F00(ecx_6 - 104<i32>, edx, ebx, es, ds)
	branch (bArg04 & 1<8>) == 0<8> l00410B02
l00410AF4:
	fn0042763F(ecx_6 - 104<i32>)
l00410B02:
	return
fn004198C3_exit:


void fn004198D3(word32 ecx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn004198D3_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc38
l004198D3:
	word32 ecx_6 = ecx - Mem0[ecx - 4<i32>:word32]
l00418600:
	word32 edi_24
	word32 ebx_22 = fn00418150(&tLoc38, ecx_6 - 48<i32>, 1<32>, out edi_24)
	CxxThrowException(&tLoc38, 0x437CD4<32>)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l00418630_in_fn004198D3:
	Mem43[esp_36 - 4<i32>:word32] = fp - 4<i32>
	Mem46[esp_36 - 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem48[esp_36 - 12<i32>:word32] = 0x42EFC3<32>
	Mem51[esp_36 - 16<i32>:word32] = Mem48[fs:0<32>:word32]
	Mem54[esp_36 - 0x1C<32>:word32] = ebx_22
	Mem57[esp_36 - 0x20<32>:word32] = esi
	Mem59[esp_36 - 0x24<32>:word32] = edi_24
	Mem65[esp_36 - 0x28<32>:word32] = Mem59[0x0043A008<p32>:word32] ^ esp_36 - 4<i32>
	Mem67[fs:0<32>:word32] = esp_36 - 16<i32>
	Mem70[esp_36 - 0x2C<32>:word32] = 0x34<32>
	Mem71[esp_36 - 20<i32>:word32] = 0<32>
	word32 ebp_73
	word32 ecx_167
	word32 eax_72 = fn00427511(ebx_22, esi, ecx_37, Mem71[esp_36 - 0x30<32>:word32], Mem71[esp_36 - 0x2C<32>:word32], Mem71[esp_36 - 0x28<32>:word32], out ecx_167, out ebp_73)
	Mem81[ebp_73 - 20<i32>:word32] = eax_72
	Mem82[ebp_73 - 4<i32>:word32] = 0<32>
	Mem85[eax_72 + 40<i32>:word32] = 0x00432380<p32>
	Mem86[eax_72 + 48<i32>:word32] = 0x0043248C<p32>
	Mem87[ebp_73 - 4<i32>:byte] = 1<8>
	Mem90[esp_36 - 0x2C<32>:word32] = ecx_37 + 0xFFFFFFD0<32>
	Mem91[ebp_73 - 16<i32>:word32] = 1<32>
	word32 edi_95
	word32 esi_168
	word32 ebx_93 = fn004181F0(eax_72, Mem91[esp_36 - 0x2C<32>:word32], out esi_168, out edi_95)
	Mem103[ebp_73 - 4<i32>:word32] = 2<32>
	word32 eax_105 = Mem103[ebx_93 + 40<i32>:word32]
	Mem107[ebx_93:word32] = 0x004323BC<p32>
	Mem110[ebx_93 + 20<i32>:word32] = 0x00431874<p32>
	Mem116[Mem110[eax_105 + 4<i32>:word32] + 40<i32> + ebx_93:word32] = 0x004324CC<p32>
	word32 esi_118 = Mem116[Mem116[ebx_93 + 40<i32>:word32] + 4<i32>:word32]
	Mem120[esi_118 + 36<i32> + ebx_93:word32] = esi_118 - 8<i32>
	fn00403D50(ebx_93 + 20<i32>, edi_95 + 20<i32> & 0<32> - (edi_95 != 0<32>), es, ds)
	Mem144[fs:0x00000000<p32>:word32] = Mem120[ebp_73 - 12<i32>:word32]
	return
fn004198D3_exit:


void fn004198DB(word32 ecx, word32 ebp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ebp:[0..31] ecx:[0..31] fs:[0..15]
// LiveOut:
// Trashed: SCZO eax ebp ebx ecx edi esi Top
// Preserved: esp
fn004198DB_entry:
l004198DB:
	word32 ecx_6 = ecx - Mem0[ecx - 4<i32>:word32]
l004198DE_thunk_fn004188E0:
	word32 ebp_21
	word32 esi_22
	word32 edi_23
	fn004188E0(ecx_6, ebp, out ebp_21, out esi_22, out edi_23)
	return
fn004198DB_exit:


void fn004198E3(word32 ecx, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ecx:[0..31] fs:[0..15] Stack +0004:[0..7]
// LiveOut:
// Trashed: SCZO eax ecx esi Top
// Preserved: esp
fn004198E3_entry:
l004198E3:
l004198E6_thunk_fn00413770:
	fn00413770(ecx - 0x14<32>, bArg04)
	return
fn004198E3_exit:


void fn004198FB(word32 ecx, word32 ebx, word32 esi, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut:
// Trashed: SCZDOP eax ebp ecx edx esp Top xmm0
// Preserved: ebx edi esi
fn004198FB_entry:
	ptr32 fp
	selector fs
	word32 dwLoc30
l004198FB:
	word32 ecx_6 = ecx - Mem0[ecx - 4<i32>:word32]
l00418630:
	word32 eax_31 = Mem29[0x0043A008<p32>:word32] ^ fp - 4<i32>
	Mem37[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_43
	word32 ecx_141
	word32 eax_42 = fn00427511(ebx, esi, ecx_6, dwLoc30, 0x34<32>, eax_31, out ecx_141, out ebp_43)
	Mem51[ebp_43 - 20<i32>:word32] = eax_42
	Mem52[ebp_43 - 4<i32>:word32] = 0<32>
	Mem55[eax_42 + 40<i32>:word32] = 0x00432380<p32>
	Mem56[eax_42 + 48<i32>:word32] = 0x0043248C<p32>
	Mem57[ebp_43 - 4<i32>:byte] = 1<8>
	Mem61[ebp_43 - 16<i32>:word32] = 1<32>
	word32 edi_65
	word32 esi_142
	word32 ebx_63 = fn004181F0(eax_42, ecx_6 + 0xFFFFFFD0<32>, out esi_142, out edi_65)
	Mem73[ebp_43 - 4<i32>:word32] = 2<32>
	word32 eax_75 = Mem73[ebx_63 + 40<i32>:word32]
	Mem77[ebx_63:word32] = 0x004323BC<p32>
	Mem80[ebx_63 + 20<i32>:word32] = 0x00431874<p32>
	Mem86[Mem80[eax_75 + 4<i32>:word32] + 40<i32> + ebx_63:word32] = 0x004324CC<p32>
	word32 esi_88 = Mem86[Mem86[ebx_63 + 40<i32>:word32] + 4<i32>:word32]
	Mem90[esi_88 + 36<i32> + ebx_63:word32] = esi_88 - 8<i32>
	fn00403D50(ebx_63 + 20<i32>, edi_65 + 20<i32> & 0<32> - (edi_65 != 0<32>), es, ds)
	Mem114[fs:0x00000000<p32>:word32] = Mem90[ebp_43 - 12<i32>:word32]
	return
fn004198FB_exit:


word32 fn00419910(selector es, selector ds, ptr32 & blOut, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      Win32CrtStartup
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx es esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn00419910_entry:
	ptr32 fp
	selector fs
	struct std::basic_istream tLoc026C
	struct std::basic_ostream tLoc01B4
	struct <anonymous> tLocD4
l00419910:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	memset(&tLoc026C, 0<32>, 0x258<32>)
	word32 edi_764
	fn0040FAE0(&tLoc026C, out edi_764)
	fn0040F940(&tLoc01B4)
	word32 ebp_76
	word32 edi_79
	word32 esi_81
	word32 ebx_127
	word32 edx_149 = fn00419F00(&tLocD4, out ebx_127, out ebp_76, out esi_81, out edi_79)
	Mem88[ebp_76 - 4<i32>:byte] = 4<8>
	word32 esp_82 = <invalid>
	Mem90[esp_82 - 4<i32>:word32] = 8<32>
	Mem91[ebp_76 - 72<i32>:word32] = 0<32>
	Mem92[ebp_76 - 68<i32>:word32] = 0<32>
	Mem93[ebp_76 - 64<i32>:word32] = 0<32>
	Mem94[ebp_76 - 60<i32>:word32] = 0<32>
	Mem95[ebp_76 - 56<i32>:word32] = 0<32>
	word32 ecx_765
	word32 ebp_136
	word32 eax_96 = fn00427511(ebx_127, esi_81, edi_79, Mem95[esp_82 + -8<i32>:word32], Mem95[esp_82 - 4<i32>:word32], Mem95[esp_82:word32], out ecx_765, out ebp_136)
	Mem103[ebp_136 - 72<i32>:word32] = eax_96
	Mem106[eax_96:word32] = 0<32>
	Mem107[eax_96 + 4<i32>:word32] = 0<32>
	Mem109[Mem107[ebp_136 - 72<i32>:word32]:word32] = ebp_136 - 72<i32>
	Mem110[ebp_136 - 48<i32>:word32] = 0xDEC0D000<32>
	Mem111[ebp_136 - 44<i32>:word32] = 0xDEC0D000<32>
	Mem112[ebp_136 - 40<i32>:word32] = 0xF0<32>
	Mem113[ebp_136 - 36<i32>:word32] = 0<32>
	Mem114[ebp_136 - 28<i32>:word32] = 0<32>
	Mem115[ebp_136 - 24<i32>:word32] = 0<32>
	Mem116[ebp_136 - 19<i32>:byte] = 0<8>
	word32 edi_117 = Mem116[ebp_136 + 8<i32>:word32]
	Mem118[ebp_136 - 4<i32>:word32] = 5<32>
	Mem119[0x0043B123<p32>:byte] = 0<8>
	Mem120[0x0043B122<p32>:byte] = 0<8>
	Mem121[0x0043B120<p32>:byte] = 0<8>
	Mem122[0x0043B124<p32>:byte] = 0<8>
	Mem123[0x0043B121<p32>:byte] = 1<8>
	word32 ecx_104 = ebp_136 - 72<i32>
	word32 esp_105 = esp_82
	branch edi_117 > 1<32> l00419B1A
l00419B1A:
	word32 esi_126 = 1<32>
l00419B20:
	word32 eax_130 = Mem129[ebx_127 + esi_126 * 4<32>:word32]
	branch Mem129[eax_130:byte] != 0x2D<8> l00419C05
l00419C05:
	word32 esp_134 = esp_105 - 4<i32>
	Mem135[esp_134:word32] = eax_130
	word32 esp_151 = <invalid>
	ecx_104 = fn00404080(ebp_136 - 0x268<32>, es, ds, Mem135[esp_134:word32], out edx_149, out ebx_127, out ebp_136, out esi_126, out edi_117, out es)
	esp_105 = esp_151 + 4<32>
l00419B2C:
	word32 eax_168 = CONVERT(Mem129[eax_130 + 1<i32>:byte], byte, int32)
	branch eax_168 >u 0x74<32> l00419C11
l00419B3C:
	switch (eax_168 + 0xFFFFFFD6<32>) { l00419B51 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419B4A l00419C11 l00419C11 l00419C11 l00419C11 l00419BAC l00419C11 l00419C11 l00419C11 l00419C11 l00419BFC l00419C11 l00419C11 l00419B58 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419C11 l00419B4A l00419C11 l00419C11 l00419C11 l00419C11 l00419BAC l00419C11 l00419C11 l00419C11 l00419C11 l00419BFC l00419C11 l00419C11 l00419B58 }
l00419BFC:
	Mem174[0x0043B121<p32>:byte] = 0<8>
l00419BAC:
	Mem177[0x0043B122<p32>:byte] = 1<8>
	branch Mem129[0x0043B190<p32>:word32] != 0<32> l00419C11
l00419BBC:
	word32 esp_180 = esp_105 - 4<i32>
	Mem183[esp_180:word32] = ecx_104
	Mem185[esp_180 - 4<i32>:word32] = 0x12<32>
	Mem187[esp_180 - 8<i32>:word32] = 0x432694<32>
	word32 eax_198 = fn00410F60(0x0043B144<p32>, edx_149, ebx_127, es, ds, Mem187[esp_180 - 8<i32>:word32], Mem187[esp_180 - 4<i32>:word32], out edx_149, out ebx_127, out ebp_136, out esi_126, out edi_117)
	word32 esp_205 = <invalid>
	word32 eax_216 = Mem187[0x0043B140<p32>:word32]
	Mem218[esp_205 + 8<32>:word32] = 0<32>
	word32 ecx_219 = Mem218[eax_216 + 4<i32>:word32]
	branch eax_198 != 0<32> l00419BEC
l00419BEC:
	Mem222[esp_205 + 4<32>:word32] = 0<32>
	clear(ecx_219 + 0x0043B140<p32>, Mem222[esp_205 + 4<32>:int32], Mem222[esp_205 + 8<32>:bool])
	ecx_104 = ecx_219 + 0x0043B140<p32>
	esp_105 = esp_205 + 0xC<32>
l00419BDC:
	Mem227[esp_205 + 4<32>:word32] = 2<32>
	setstate(ecx_219 + 0x0043B140<p32>, Mem227[esp_205 + 4<32>:int32], Mem227[esp_205 + 8<32>:bool])
	ecx_104 = ecx_219 + 0x0043B140<p32>
	esp_105 = esp_205 + 0xC<32>
l00419B4A:
	Mem231[0x0043B120<p32>:byte] = 1<8>
l00419B51:
	Mem232[0x0043B124<p32>:byte] = 1<8>
l00419B58:
	Mem235[0x0043B123<p32>:byte] = 1<8>
	branch Mem233[0x0043B248<p32>:word32] != 0<32> l00419C11
l00419B6C:
	word32 esp_240 = esp_105 - 4<i32>
	Mem244[esp_240:word32] = ecx_104
	Mem246[esp_240 - 4<i32>:word32] = 0x12<32>
	Mem248[esp_240 - 8<i32>:word32] = 0x432688<32>
	word32 eax_274 = fn00410F60(0x0043B1FC<p32>, edx_149, ebx_127, es, ds, Mem248[esp_240 - 8<i32>:word32], Mem248[esp_240 - 4<i32>:word32], out edx_149, out ebx_127, out ebp_136, out esi_126, out edi_117)
	word32 esp_281 = <invalid>
	word32 eax_292 = Mem248[0x0043B1F8<p32>:word32]
	Mem294[esp_281 + 8<32>:word32] = 0<32>
	word32 ecx_295 = Mem294[eax_292 + 4<i32>:word32]
	branch eax_274 != 0<32> l00419B9C
l00419B9C:
	Mem298[esp_281 + 4<32>:word32] = 0<32>
	clear(ecx_295 + 0x0043B1F8<p32>, Mem298[esp_281 + 4<32>:int32], Mem298[esp_281 + 8<32>:bool])
	ecx_104 = ecx_295 + 0x0043B1F8<p32>
	esp_105 = esp_281 + 0xC<32>
l00419B8C:
	Mem303[esp_281 + 4<32>:word32] = 2<32>
	setstate(ecx_295 + 0x0043B1F8<p32>, Mem303[esp_281 + 4<32>:int32], Mem303[esp_281 + 8<32>:bool])
	ecx_104 = ecx_295 + 0x0043B1F8<p32>
	esp_105 = esp_281 + 0xC<32>
l00419C11:
	esi_126 = esi_126 + 1<32>
	branch esi_126 < edi_117 l00419B20
l00419A67:
	Mem327[esp_82 - 4<i32>:word32] = 0x403150<32>
	word32 edx_766
	word32 edi_769
	word32 esi_768
	word32 ebx_767
	operator <<(fn00402EE0(&cout, 0x004324F0<p32>, out edx_766, out ebx_767, out esi_768, out edi_769), Mem327[esp_82 - 4<i32>:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	Mem346[esp_82 - 4<i32>:word32] = 0x403150<32>
	word32 edi_773
	word32 esi_772
	word32 edx_770
	word32 ebx_771
	operator <<(fn00402EE0(&cout, 0x00432508<p32>, out edx_770, out ebx_771, out esi_772, out edi_773), Mem346[esp_82 - 4<i32>:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	Mem365[esp_82 - 4<i32>:word32] = 0x403150<32>
	word32 esi_776
	word32 edi_777
	word32 edx_774
	word32 ebx_775
	operator <<(fn00402EE0(&cout, 0x00432520<p32>, out edx_774, out ebx_775, out esi_776, out edi_777), Mem365[esp_82 - 4<i32>:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	Mem384[esp_82 - 4<i32>:word32] = 0x403150<32>
	word32 edi_781
	word32 esi_780
	word32 edx_778
	word32 ebx_779
	operator <<(fn00402EE0(&cout, 0x00432550<p32>, out edx_778, out ebx_779, out esi_780, out edi_781), Mem384[esp_82 - 4<i32>:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	Mem403[esp_82 - 4<i32>:word32] = 0x403150<32>
	word32 esi_784
	word32 edi_785
	word32 edx_782
	word32 ebx_783
	operator <<(fn00402EE0(&cout, 0x004325C0<p32>, out edx_782, out ebx_783, out esi_784, out edi_785), Mem403[esp_82 - 4<i32>:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	Mem422[esp_82 - 4<i32>:word32] = 0x403150<32>
	word32 esi_786
	operator <<(fn00402EE0(&cout, 0x00432630<p32>, out edx_149, out ebx_127, out esi_786, out edi_117), Mem422[esp_82 - 4<i32>:(ptr32 (fn (ptr32 basic_ostream) ((ptr32 (struct "std::basic_ostream")), (ptr32 basic_ostream))))])
	esp_105 = esp_82
l00419C1A:
	branch Mem437[0x0043B190<p32>:word32] == 0<32> l00419C48
l00419C23:
	word32 eax_471 = fn00410EF0(0x0043B144<p32>, edx_149, ebx_127, es, ds)
	branch eax_471 != 0<32> l00419C48
l00419C31:
	word32 esp_483 = esp_105 - 4<i32>
	Mem484[esp_483:word32] = eax_471
	word32 eax_485 = Mem484[0x0043B140<p32>:word32]
	Mem487[esp_483 - 4<i32>:word32] = 2<32>
	setstate(Mem487[eax_485 + 4<i32>:word32] + 0x0043B140<p32>, Mem487[esp_483 - 4<i32>:int32], Mem487[esp_483:bool])
l00419C48:
	branch Mem492[0x0043B248<p32>:word32] == 0<32> l00419C76
l00419C51:
	word32 eax_504 = fn00410EF0(0x0043B1FC<p32>, edx_149, ebx_127, es, ds)
	branch eax_504 != 0<32> l00419C76
l00419C5F:
	word32 esp_514 = esp_105 - 4<i32>
	Mem515[esp_514:word32] = eax_504
	word32 eax_516 = Mem515[0x0043B1F8<p32>:word32]
	Mem518[esp_514 - 4<i32>:word32] = 2<32>
	setstate(Mem518[eax_516 + 4<i32>:word32] + 0x0043B1F8<p32>, Mem518[esp_514 - 4<i32>:int32], Mem518[esp_514:bool])
l00419C76:
	branch Mem523[0x0043B121<p32>:byte] == 0<8> l00419CA1
l00419C7F:
	word32 esi_789
	word32 edx_788
	fn00402EE0(&cout, 0x0043269C<p32>, out edx_788, out ebx_127, out esi_789, out edi_117)
	word32 esp_564 = esp_105 - 4<i32>
	Mem565[esp_564:word32] = 0xFFFFFFFF<32>
	Mem567[esp_564 - 4<i32>:word32] = 0<32>
	Mem569[esp_564 - 8<i32>:word32] = 1<32>
	ignore(&cin, Mem569[esp_564 - 8<i32>:int64], Mem569[esp_564:int32])
l00419CA1:
	word32 ebp_601
	word32 edx_605 = fn00419D40(ebp_136 - 0x268<32>, ebx_127, edi_117, es, ds, out ebp_601)
	Mem615[fs:0x00000000<p32>:word32] = Mem613[ebp_601 - 12<i32>:word32]
	word32 esp_618 = esp_105 + 4<i32>
	word32 ecx_787
	word32 eax_629
	fn00427500(Mem615[ebp_601 - 16<i32>:word32] ^ ebp_601, edx_605, Mem615[esp_618 + 8<i32>:word32], ebp_601, Mem615[esp_618 + 4<i32>:word32], Mem615[esp_618:word32], es, ds, Mem615[esp_618 + 8<i32>:word32], out eax_629, out ecx_787)
	word32 ebp_638 = Mem615[ebp_601:word32]
	blOut = <invalid>
	ebpOut = ebp_638
	return eax_629
fn00419910_exit:


word32 fn00419D40(word32 ecx, word32 ebx, word32 edi, selector es, selector ds, ptr32 & ebpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00419910
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp edx
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn00419D40_entry:
l00419D40:
	word32 esi_13 = ecx
	word32 ecx_17 = Mem6[ecx + 0x230<32>:word32]
	branch ecx_17 == 0<32> l00419D8D
l00419D4D:
l00419D50:
	word32 ebp_411
	fn00402260(Mem14[Mem14[esi_13 + 0x224<32>:word32] + (ecx_17 + (Mem14[esi_13 + 0x22C<32>:word32] - 1<32>) & Mem14[esi_13 + 0x228<32>:word32] - 1<32>) * 4<32>:word32], ebx, edi, out ebx, out ebp_411, out esi_13, out edi)
	word32 v10_41 = Mem14[esi_13 + 0x230<32>:word32] + 0xFFFFFFFF<32>
	Mem42[esi_13 + 0x230<32>:word32] = v10_41
	branch v10_41 != 0<32> l00419D83
l00419D79:
	Mem45[esi_13 + 0x22C<32>:word32] = 0<32>
l00419D83:
	ecx_17 = Mem47[esi_13 + 0x230<32>:word32]
	branch ecx_17 != 0<32> l00419D50
l00419D8D:
	word32 edi_61 = Mem59[esi_13 + 0x228<32>:word32]
	branch edi_61 == 0<32> l00419DC0
l00419D98:
l00419DA0:
	edi_61 = edi_61 - 1<32>
	word32 eax_70 = Mem66[Mem66[esi_13 + 0x224<32>:word32] + edi_61 * 4<32>:word32]
	branch eax_70 == 0<32> l00419DBC
l00419DAE:
	fn0042763F(eax_70)
l00419DBC:
	branch edi_61 != 0<32> l00419DA0
l00419DC0:
	word32 ecx_103
	word32 eax_108 = Mem88[esi_13 + 0x224<32>:word32]
	branch eax_108 == 0<32> l00419DFC
l00419DCB:
	word32 ecx_98 = Mem88[esi_13 + 0x228<32>:word32]
	branch ecx_98 << 2<32> <u 0x1000<32> l00419DF2
l00419DDC:
	word32 edx_102 = Mem88[eax_108 - 4<i32>:word32]
	ecx_103 = (ecx_98 << 2<32>) + 0x23<32>
	branch eax_108 - edx_102 >u 0x23<32> l00419EEE
l00419DF0:
	eax_108 = edx_102
l00419DF2:
	fn0042763F(eax_108)
l00419DFC:
	Mem121[esi_13 + 0x228<32>:word32] = 0<32>
	Mem122[esi_13 + 0x224<32>:word32] = 0<32>
	fn0042763F(Mem125[esi_13 + 0x220<32>:word32])
	Mem132[esi_13 + 0x220<32>:word32] = 0<32>
	word32 ebp_153
	word32 ebx_154
	word32 esi_157
	word32 edi_407
	word32 edx_159 = fn00403610(esi_13 + 0x198<32>, ebx, edi, out ebx_154, out ebp_153, out esi_157, out edi_407)
	word32 ecx_164 = Mem132[esi_157 + 0x194<32>:word32]
	branch ecx_164 <u 0x10<32> l00419E6F
l00419E40:
	word32 eax_167 = Mem132[esi_157 + 0x180<32>:word32]
	branch ecx_164 <u 0xFFF<32> l00419E65
l00419E4F:
	edx_159 = Mem132[eax_167 - 4<i32>:word32]
	ecx_103 = ecx_164 + 0x24<32>
	branch eax_167 - edx_159 >u 0x23<32> l00419EEE
l00419E63:
	eax_167 = edx_159
l00419E65:
	fn0042763F(eax_167)
l00419E6F:
	Mem190[esi_157 + 0x190<32>:word32] = 0<32>
	Mem191[esi_157 + 0x194<32>:word32] = 0xF<32>
	Mem192[esi_157 + 0x180<32>:byte] = 0<8>
	word32 ecx_193 = Mem192[esi_157 + 0x17C<32>:word32]
	branch ecx_193 <u 0x10<32> l00419EC0
l00419E95:
	word32 eax_196 = Mem192[esi_157 + 0x168<32>:word32]
	branch ecx_193 <u 0xFFF<32> l00419EB6
l00419EA4:
	edx_159 = Mem192[eax_196 - 4<i32>:word32]
	ecx_103 = ecx_193 + 0x24<32>
	branch eax_196 - edx_159 >u 0x23<32> l00419EEE
l00419EEE:
	_invalid_parameter_noinfo_noreturn()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
l00419EFF_thunk_fn00419F00:
	word32 ebp_211
	word32 ebx_408
	word32 edi_410
	word32 esi_409
	word32 edx_215 = fn00419F00(ecx_103, out ebx_408, out ebp_211, out esi_409, out edi_410)
	ebpOut = ebp_211
	return edx_215
l00419EB4:
	eax_196 = edx_159
l00419EB6:
	fn0042763F(eax_196)
l00419EC0:
	Mem237[esi_157 + 0x178<32>:word32] = 0<32>
	Mem239[esi_157 + 0x17C<32>:word32] = 0xF<32>
	Mem240[esi_157 + 0x168<32>:byte] = 0<8>
	fn00404F00(esi_157 + 0xB8<32>, edx_159, ebx_154, es, ds)
l00419EE9_thunk_fn00404E50:
	fn00404E50(esi_157, edx_159, ebx_154, es, ds)
	ebpOut = ebp_153
	return edx_159
fn00419D40_exit:


word32 fn00419F00(word32 ecx, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407B80
//      fn00419910
//      fn00419D40
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: ebp ebx edi edx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn00419F00_entry:
	ptr32 fp
	selector fs
l00419F00:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	Mem37[ecx + 16<i32>:word32] = 0<32>
	Mem38[ecx + 20<i32>:word32] = 0xF<32>
	Mem41[ecx:byte] = 0<8>
	word32 ebp_43
	word32 edi_46
	word32 ecx_196
	word32 edx_197
	word32 ebx_198
	word32 esi_199
	fn00402A70(ecx, ecx, 0x4317A9<32>, 0<32>, ecx, out ecx_196, out edx_197, out ebx_198, out ebp_43, out esi_199, out edi_46)
	Mem57[ebp_43 - 4<i32>:word32] = 0<32>
	word32 esp_50 = <invalid>
	Mem59[esp_50 + 4<32>:word32] = 0<32>
	Mem60[edi_46 + 40<i32>:word32] = 0<32>
	Mem61[edi_46 + 44<i32>:word32] = 0xF<32>
	Mem63[esp_50:word32] = 0x4317A9<32>
	Mem64[edi_46 + 24<i32>:byte] = 0<8>
	word32 ebp_66
	word32 edi_69
	word32 ecx_200
	word32 edx_201
	word32 ebx_202
	word32 esi_203
	fn00402A70(edi_46 + 24<i32>, edi_46, Mem64[esp_50:word32], Mem64[esp_50 + 4<i32>:word32], Mem64[esp_50 + 20<i32>:word32], out ecx_200, out edx_201, out ebx_202, out ebp_66, out esi_203, out edi_69)
	Mem80[ebp_66 - 4<i32>:byte] = 1<8>
	word32 esp_73 = <invalid>
	Mem82[esp_73 + 4<32>:word32] = 0<32>
	Mem83[edi_69 + 64<i32>:word32] = 0<32>
	Mem84[edi_69 + 68<i32>:word32] = 0xF<32>
	Mem86[esp_73:word32] = 0x4317A9<32>
	Mem87[edi_69 + 48<i32>:byte] = 0<8>
	word32 ebp_89
	word32 edi_92
	word32 ecx_204
	word32 edx_205
	word32 ebx_206
	word32 esi_207
	fn00402A70(edi_69 + 48<i32>, edi_69, Mem87[esp_73:word32], Mem87[esp_73 + 4<i32>:word32], Mem87[esp_73 + 20<i32>:word32], out ecx_204, out edx_205, out ebx_206, out ebp_89, out esi_207, out edi_92)
	Mem103[ebp_89 - 4<i32>:byte] = 2<8>
	word32 esp_96 = <invalid>
	Mem105[esp_96 + 4<32>:word32] = 0<32>
	Mem106[edi_92 + 88<i32>:word32] = 0<32>
	Mem107[edi_92 + 92<i32>:word32] = 0xF<32>
	Mem109[esp_96:word32] = 0x4317A9<32>
	Mem110[edi_92 + 72<i32>:byte] = 0<8>
	word32 ebp_112
	word32 edi_115
	word32 ecx_208
	word32 edx_209
	word32 ebx_210
	word32 esi_211
	fn00402A70(edi_92 + 72<i32>, edi_92, Mem110[esp_96:word32], Mem110[esp_96 + 4<i32>:word32], Mem110[esp_96 + 20<i32>:word32], out ecx_208, out edx_209, out ebx_210, out ebp_112, out esi_211, out edi_115)
	Mem125[ebp_112 - 4<i32>:word32] = 3<32>
	Mem127[edi_115 + 104<i32>:byte] = 1<8>
	word32 esp_119 = <invalid>
	Mem129[esp_119 + 4<32>:word32] = 0<32>
	Mem130[edi_115 + 0x80<32>:word32] = 0<32>
	Mem131[edi_115 + 0x84<32>:word32] = 0xF<32>
	Mem133[esp_119:word32] = 0x4317A9<32>
	Mem134[edi_115 + 112<i32>:byte] = 0<8>
	word32 ebp_136
	word32 edi_139
	word32 ecx_212
	word32 edx_213
	word32 ebx_214
	word32 esi_215
	fn00402A70(edi_115 + 112<i32>, edi_115, Mem134[esp_119:word32], Mem134[esp_119 + 4<i32>:word32], Mem134[esp_119 + 20<i32>:word32], out ecx_212, out edx_213, out ebx_214, out ebp_136, out esi_215, out edi_139)
	word32 esp_143 = <invalid>
	Mem150[esp_143 + 4<32>:word32] = 0<32>
	Mem151[ebp_136 - 4<i32>:byte] = 4<8>
	Mem154[esp_143:word32] = 0x4317A9<32>
	Mem155[edi_139 + 104<i32>:byte] = 0<8>
	word32 ebp_157
	word32 ebx_158
	word32 edx_161
	word32 ecx_216
	word32 esi_217
	word32 edi_218
	fn00402A70(edi_139 + 112<i32>, edi_139, Mem155[esp_143:word32], Mem155[esp_143 + 4<i32>:word32], Mem155[esp_143 + 20<i32>:word32], out ecx_216, out edx_161, out ebx_158, out ebp_157, out esi_217, out edi_218)
	Mem172[fs:0x00000000<p32>:word32] = Mem155[ebp_157 - 12<i32>:word32]
	word32 esp_164 = <invalid>
	word32 edi_175 = Mem172[esp_164 + 0xC<32>:word32]
	word32 esi_177 = Mem172[esp_164 + 0x10<32>:word32]
	word32 ebp_179 = Mem172[ebp_157:word32]
	ebxOut = ebx_158
	ebpOut = ebp_179
	esiOut = esi_177
	ediOut = edi_175
	return edx_161
fn00419F00_exit:


word32 fn0041A020(word32 ecx, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407A70
// MayUse:  ecx:[0..31] fs:[0..15]
// LiveOut: ebx esi
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0041A020_entry:
	ptr32 fp
	selector fs
l0041A020:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	Mem37[ecx + 16<i32>:word32] = 0<32>
	Mem38[ecx + 20<i32>:word32] = 0xF<32>
	Mem41[ecx:byte] = 0<8>
	word32 ebp_43
	word32 edi_46
	word32 ecx_214
	word32 edx_215
	word32 ebx_216
	word32 esi_217
	fn00402A70(ecx, ecx, 0x4317A9<32>, 0<32>, ecx, out ecx_214, out edx_215, out ebx_216, out ebp_43, out esi_217, out edi_46)
	Mem57[ebp_43 - 4<i32>:word32] = 0<32>
	word32 esp_50 = <invalid>
	Mem59[esp_50 + 4<32>:word32] = 0<32>
	Mem60[edi_46 + 40<i32>:word32] = 0<32>
	Mem61[edi_46 + 44<i32>:word32] = 0xF<32>
	Mem63[esp_50:word32] = 0x4317A9<32>
	Mem64[edi_46 + 24<i32>:byte] = 0<8>
	word32 ebp_66
	word32 edi_69
	word32 ecx_218
	word32 edx_219
	word32 ebx_220
	word32 esi_221
	fn00402A70(edi_46 + 24<i32>, edi_46, Mem64[esp_50:word32], Mem64[esp_50 + 4<i32>:word32], Mem64[esp_50 + 20<i32>:word32], out ecx_218, out edx_219, out ebx_220, out ebp_66, out esi_221, out edi_69)
	Mem80[ebp_66 - 4<i32>:byte] = 1<8>
	word32 esp_73 = <invalid>
	Mem82[esp_73 + 4<32>:word32] = 0<32>
	Mem83[edi_69 + 64<i32>:word32] = 0<32>
	Mem84[edi_69 + 68<i32>:word32] = 0xF<32>
	Mem86[esp_73:word32] = 0x4317A9<32>
	Mem87[edi_69 + 48<i32>:byte] = 0<8>
	word32 ebp_89
	word32 edi_92
	word32 ecx_222
	word32 edx_223
	word32 ebx_224
	word32 esi_225
	fn00402A70(edi_69 + 48<i32>, edi_69, Mem87[esp_73:word32], Mem87[esp_73 + 4<i32>:word32], Mem87[esp_73 + 20<i32>:word32], out ecx_222, out edx_223, out ebx_224, out ebp_89, out esi_225, out edi_92)
	Mem103[ebp_89 - 4<i32>:byte] = 2<8>
	word32 esp_96 = <invalid>
	Mem105[esp_96 + 4<32>:word32] = 0<32>
	Mem106[edi_92 + 88<i32>:word32] = 0<32>
	Mem107[edi_92 + 92<i32>:word32] = 0xF<32>
	Mem109[esp_96:word32] = 0x4317A9<32>
	Mem110[edi_92 + 72<i32>:byte] = 0<8>
	word32 ebp_112
	word32 edi_115
	word32 ecx_226
	word32 edx_227
	word32 ebx_228
	word32 esi_229
	fn00402A70(edi_92 + 72<i32>, edi_92, Mem110[esp_96:word32], Mem110[esp_96 + 4<i32>:word32], Mem110[esp_96 + 20<i32>:word32], out ecx_226, out edx_227, out ebx_228, out ebp_112, out esi_229, out edi_115)
	Mem125[ebp_112 - 4<i32>:word32] = 3<32>
	Mem127[edi_115 + 104<i32>:byte] = 1<8>
	word32 esp_119 = <invalid>
	Mem129[esp_119 + 4<32>:word32] = 0<32>
	Mem130[edi_115 + 0x80<32>:word32] = 0<32>
	Mem131[edi_115 + 0x84<32>:word32] = 0xF<32>
	Mem133[esp_119:word32] = 0x4317A9<32>
	Mem134[edi_115 + 112<i32>:byte] = 0<8>
	word32 ebp_136
	word32 edi_139
	word32 ecx_230
	word32 edx_231
	word32 ebx_232
	word32 esi_233
	fn00402A70(edi_115 + 112<i32>, edi_115, Mem134[esp_119:word32], Mem134[esp_119 + 4<i32>:word32], Mem134[esp_119 + 20<i32>:word32], out ecx_230, out edx_231, out ebx_232, out ebp_136, out esi_233, out edi_139)
	word32 esp_143 = <invalid>
	Mem150[esp_143 + 4<32>:word32] = 0<32>
	Mem152[esp_143:word32] = 0x4317A9<32>
	Mem154[ebp_136 - 4<i32>:byte] = 4<8>
	word32 edi_159
	word32 ecx_234
	word32 edx_235
	word32 ebx_236
	word32 ebp_237
	word32 esi_238
	fn00402A70(edi_139 + 112<i32>, edi_139, Mem154[esp_143:word32], Mem154[esp_143 + 4<i32>:word32], Mem154[esp_143 + 20<i32>:word32], out ecx_234, out edx_235, out ebx_236, out ebp_237, out esi_238, out edi_159)
	word32 esp_163 = <invalid>
	Mem170[esp_163 + 4<32>:word32] = 0<32>
	Mem172[esp_163:word32] = 0x4317A9<32>
	Mem174[edi_159 + 104<i32>:byte] = 0<8>
	word32 ebp_176
	word32 ebx_177
	word32 edi_179
	word32 ecx_239
	word32 edx_240
	word32 esi_241
	fn00402A70(edi_159 + 112<i32>, edi_159, Mem174[esp_163:word32], Mem174[esp_163 + 4<i32>:word32], Mem174[esp_163 + 20<i32>:word32], out ecx_239, out edx_240, out ebx_177, out ebp_176, out esi_241, out edi_179)
	Mem190[edi_179 + 96<i32>:word32] = Mem174[ebp_176 + 8<i32>:word32]
	Mem193[fs:0x00000000<p32>:word32] = Mem190[ebp_176 - 12<i32>:word32]
	word32 esp_183 = <invalid>
	esiOut = Mem193[esp_183 + 0x10<32>:word32]
	return ebx_177
fn0041A020_exit:


word32 fn0041A150(word32 ecx, word32 ebx, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407AE0
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ebx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0041A150_entry:
	ptr32 fp
	selector fs
l0041A150:
	Mem34[fs:0<32>:word32] = fp - 16<i32>
	Mem42[ecx + 16<i32>:word32] = 0<32>
	Mem43[ecx + 20<i32>:word32] = 0xF<32>
	Mem46[ecx:byte] = 0<8>
	word32 ebp_48
	word32 edi_51
	word32 ebx_399
	word32 edx_398
	word32 esi_400
	word32 ecx_397
	fn00402A70(ecx, ecx, 0x4317A9<32>, 0<32>, ebx, out ecx_397, out edx_398, out ebx_399, out ebp_48, out esi_400, out edi_51)
	Mem62[ebp_48 - 4<i32>:byte] = 1<8>
	word32 esp_55 = <invalid>
	Mem64[esp_55 + 4<32>:word32] = 0<32>
	Mem65[edi_51 + 40<i32>:word32] = 0<32>
	Mem66[edi_51 + 44<i32>:word32] = 0xF<32>
	Mem68[esp_55:word32] = 0x4317A9<32>
	Mem69[edi_51 + 24<i32>:byte] = 0<8>
	word32 ebp_71
	word32 edi_74
	word32 ecx_401
	word32 edx_402
	word32 ebx_403
	word32 esi_404
	fn00402A70(edi_51 + 24<i32>, edi_51, Mem69[esp_55:word32], Mem69[esp_55 + 4<i32>:word32], Mem69[esp_55 + 20<i32>:word32], out ecx_401, out edx_402, out ebx_403, out ebp_71, out esi_404, out edi_74)
	Mem85[ebp_71 - 4<i32>:byte] = 2<8>
	word32 esp_78 = <invalid>
	Mem87[esp_78 + 4<32>:word32] = 0<32>
	Mem88[edi_74 + 64<i32>:word32] = 0<32>
	Mem89[edi_74 + 68<i32>:word32] = 0xF<32>
	Mem91[esp_78:word32] = 0x4317A9<32>
	Mem92[edi_74 + 48<i32>:byte] = 0<8>
	word32 ebp_94
	word32 edi_97
	word32 edx_406
	word32 esi_408
	word32 ecx_405
	word32 ebx_407
	fn00402A70(edi_74 + 48<i32>, edi_74, Mem92[esp_78:word32], Mem92[esp_78 + 4<i32>:word32], Mem92[esp_78 + 20<i32>:word32], out ecx_405, out edx_406, out ebx_407, out ebp_94, out esi_408, out edi_97)
	Mem108[ebp_94 - 4<i32>:byte] = 3<8>
	word32 esp_101 = <invalid>
	Mem110[esp_101 + 4<32>:word32] = 0<32>
	Mem111[edi_97 + 88<i32>:word32] = 0<32>
	Mem112[edi_97 + 92<i32>:word32] = 0xF<32>
	Mem114[esp_101:word32] = 0x4317A9<32>
	Mem115[edi_97 + 72<i32>:byte] = 0<8>
	word32 ebp_117
	word32 edi_120
	word32 ecx_409
	word32 ebx_411
	word32 esi_412
	word32 edx_410
	fn00402A70(edi_97 + 72<i32>, edi_97, Mem115[esp_101:word32], Mem115[esp_101 + 4<i32>:word32], Mem115[esp_101 + 20<i32>:word32], out ecx_409, out edx_410, out ebx_411, out ebp_117, out esi_412, out edi_120)
	Mem130[ebp_117 - 4<i32>:byte] = 4<8>
	Mem132[edi_120 + 104<i32>:byte] = 1<8>
	word32 esp_124 = <invalid>
	Mem134[esp_124 + 4<32>:word32] = 0<32>
	Mem135[edi_120 + 0x80<32>:word32] = 0<32>
	Mem136[edi_120 + 0x84<32>:word32] = 0xF<32>
	Mem138[esp_124:word32] = 0x4317A9<32>
	Mem139[edi_120 + 112<i32>:byte] = 0<8>
	word32 ebp_141
	word32 edi_144
	word32 esi_416
	word32 ecx_413
	word32 edx_414
	word32 ebx_415
	fn00402A70(edi_120 + 112<i32>, edi_120, Mem139[esp_124:word32], Mem139[esp_124 + 4<i32>:word32], Mem139[esp_124 + 20<i32>:word32], out ecx_413, out edx_414, out ebx_415, out ebp_141, out esi_416, out edi_144)
	word32 esp_148 = <invalid>
	Mem155[esp_148 + 4<32>:word32] = 0<32>
	Mem157[esp_148:word32] = 0x4317A9<32>
	Mem159[ebp_141 - 4<i32>:byte] = 5<8>
	word32 ebp_161
	word32 edi_164
	word32 edx_418
	word32 esi_420
	word32 ebx_419
	word32 ecx_417
	fn00402A70(edi_144 + 112<i32>, edi_144, Mem159[esp_148:word32], Mem159[esp_148 + 4<i32>:word32], Mem159[esp_148 + 20<i32>:word32], out ecx_417, out edx_418, out ebx_419, out ebp_161, out esi_420, out edi_164)
	word32 esp_168 = <invalid>
	Mem176[esp_168 + 4<32>:word32] = ebp_161 + 8<i32>
	word32 ebp_180
	word32 edx_421
	fn004028D0(ebp_161 - 48<i32>, edi_164, Mem176[esp_168 + 4<32>:word32], out edx_421, out ebp_180)
	Mem189[ebp_180 - 4<i32>:byte] = 6<8>
	Mem190[edi_164 + 104<i32>:byte] = 0<8>
	word32 esp_181 = <invalid>
	word32 eax_191 = _errno()
	word32 esi_193 = ebp_180 - 48<i32>
	branch Mem190[ebp_180 - 28<i32>:word32] <u 0x10<32> l0041A27F
l0041A27B_1:
	esi_193 = Mem190[ebp_180 - 48<i32>:word32]
l0041A27F:
	Mem200[esp_181:word32] = 0x10<32>
	Mem203[esp_181 - 4<i32>:word32] = ebp_180 - 20<i32>
	Mem206[esp_181 - 8<i32>:word32] = esi_193
	Mem208[eax_191:word32] = 0<32>
	word32 eax_209 = strtoul(Mem208[esp_181 - 8<i32>:(ptr32 charconst )], Mem208[esp_181 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem208[esp_181:int32])
	word32 esp_210 = esp_181 + 4<32>
	branch esi_193 != Mem208[ebp_180 - 20<i32>:word32] l0041A2A2
l0041A297:
	Mem215[esp_181:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem215[esp_181:(ptr32 charconst )])
	esp_210 = esp_181
l0041A2A2:
	branch Mem217[eax_191:word32] != 0x22<32> l0041A2B2
l0041A2A7:
	esp_210 = esp_210 - 4<i32>
	Mem222[esp_210:word32] = 0x4318C4<32>
	_Xout_of_range(Mem222[esp_210:(ptr32 charconst )])
l0041A2B2:
	word32 edx_226 = Mem225[ebp_180 - 28<i32>:word32]
	Mem232[edi_164 + 96<i32>:word32] = eax_209
	branch edx_226 <u 0x10<32> l0041A2EB
l0041A2BD:
	word32 ecx_235 = Mem232[ebp_180 - 48<i32>:word32]
	word32 edx_236 = edx_226 + 1<32>
	branch edx_226 <u 0xFFF<32> l0041A2E1
l0041A2CB:
	ecx_235 = Mem232[ecx_235 - 4<i32>:word32]
	edx_236 = edx_226 + 0x24<32>
	branch ecx_235 - ecx_235 <=u 0x23<32> l0041A2E1
l0041A2DB:
	_invalid_parameter_noinfo_noreturn()
l0041A2E1:
	word32 esp_248 = esp_210 - 4<i32>
	Mem250[esp_248:word32] = edx_236
	Mem253[esp_248 - 4<i32>:word32] = ecx_235
	fn0042763F(Mem253[esp_248 - 4<i32>:word32])
l0041A2EB:
	word32 edx_260 = Mem259[ebp_180 + 28<i32>:word32]
	branch edx_260 <u 0x10<32> l0041A321
l0041A2F3:
	word32 ecx_263 = Mem259[ebp_180 + 8<i32>:word32]
	edx_260 = edx_260 + 1<32>
	branch edx_260 <u 0xFFF<32> l0041A317
l0041A301:
	ecx_263 = Mem259[ecx_263 - 4<i32>:word32]
	edx_260 = edx_260 + 0x24<32>
	branch ecx_263 - ecx_263 <=u 0x23<32> l0041A317
l0041A311:
	_invalid_parameter_noinfo_noreturn()
l0041A317:
	word32 esp_276 = esp_210 - 4<i32>
	Mem278[esp_276:word32] = edx_260
	Mem281[esp_276 - 4<i32>:word32] = ecx_263
	fn0042763F(Mem281[esp_276 - 4<i32>:word32])
l0041A321:
	Mem301[fs:0x00000000<p32>:word32] = Mem292[ebp_180 - 12<i32>:word32]
	word32 esp_304 = esp_210 + 4<i32>
	word32 esi_307 = Mem301[esp_304 + 4<i32>:word32]
	word32 ebx_309 = Mem301[esp_304 + 8<i32>:word32]
	word32 ecx_423
	word32 eax_422
	fn00427500(Mem301[ebp_180 - 16<i32>:word32] ^ ebp_180, edx_260, ebx_309, ebp_180, esi_307, Mem301[esp_304:word32], es, ds, Mem301[esp_304 + 8<i32>:word32], out eax_422, out ecx_423)
	ebpOut = Mem301[ebp_180:word32]
	esiOut = esi_307
	return ebx_309
fn0041A150_exit:


word32 fn0041A350(selector es, selector ds, word32 dwArg04, word32 dwArg1C, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +001C:[0..31]
// LiveOut: edi esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0041A350_entry:
	ptr32 fp
	selector fs
	word32 dwLocD8
	word32 dwLocC8
	word32 dwLoc78
l0041A350:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	memset(&dwLocD8, 0<32>, 0xA8<32>)
	Mem49[&dwLocD8:word32] = 0x00432E38<p32>
	basic_ios(&dwLoc78)
	basic_istream(&dwLocD8, &dwLocC8, false)
	Mem67[&dwLocD8 + Mem64[Mem64[&dwLocD8:word32] + 4<i32>:word32]:word32] = 0x00432E44<p32>
	word32 ecx_69 = Mem67[Mem67[&dwLocD8:word32] + 4<i32>:word32]
	Mem71[fp - 0xDC<32> + ecx_69:word32] = ecx_69 - 96<i32>
	basic_streambuf(&dwLocC8)
	word32 edi_123 = dwArg04
	branch dwArg1C <u 0x10<32> l0041A44E
l0041A44A_1:
l0041A44E:
	Mem92[&dwLocC8:word32] = 0x00432440<p32>
	word32 esi_622
	word32 ebp_121
	fn00411400(&dwLocC8, fp - 4<i32>, dwArg04, out ebp_121, out esi_622)
	Mem107[ebp_121 - 24<i32>:word32] = 0<32>
	Mem108[ebp_121 - 20<i32>:word32] = 0xF<32>
	Mem109[ebp_121 - 40<i32>:byte] = 0<8>
	Mem110[ebp_121 - 4<i32>:byte] = 5<8>
	word32 esp_102 = <invalid>
	branch (Mem110[ebp_121 - 0xC8<32> + Mem110[Mem110[ebp_121 - 0xD4<32>:word32] + 4<i32>:word32]:byte] & 1<8>) != 0<8> l0041A58A
l0041A48B:
l0041A490:
	word32 esp_117 = esp_102 - 4<i32>
	Mem118[esp_117:word32] = 0<32>
	Mem120[esp_117 - 4<i32>:word32] = 0x4317A9<32>
	word32 ebx_630
	word32 ecx_628
	word32 edx_629
	word32 esi_131
	fn00402A70(ebp_121 - 40<i32>, edi_123, Mem120[esp_117 - 4<i32>:word32], Mem120[esp_117:word32], Mem120[esp_117 + 16<i32>:word32], out ecx_628, out edx_629, out ebx_630, out ebp_121, out esi_131, out edi_123)
	word32 esp_133 = <invalid>
	esp_102 = esp_133 + 8<32>
l0041A4A0:
	branch peek(ebp_121 - 0xD4<32>) == 0x20<32> l0041A4C2
l0041A4B1:
	branch peek(ebp_121 - 0xD4<32>) != 9<32> l0041A4D0
l0041A4D0:
	word32 esp_151 = esp_102 - 4<i32>
	Mem152[esp_151:word32] = ebp_121 - 44<i32>
	word32 ecx_153 = ebp_121 - 0xD4<32>
	get(ecx_153, Mem152[esp_151:(ptr32 charconst )])
	esp_102 = esp_151 + 4<32>
	branch (Mem152[ebp_121 - 0xC8<32> + Mem152[Mem152[ebp_121 - 0xD4<32>:word32] + 4<i32>:word32]:byte] & 1<8>) != 0<8> l0041A54C
l0041A4F3:
	word32 edx_161 = Mem152[ebp_121 - 44<i32>:word32]
	byte dl_162 = SLICE(edx_161, byte, 0)
	word32 eax_163 = CONVERT(dl_162, byte, int32)
	branch eax_163 >u 0x2C<32> l0041A50F
l0041A501:
	switch (eax_163 + 0xFFFFFFF7<32>) { l0041A54C l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A54C l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A50F l0041A54C l0041A54C l0041A50F l0041A50F l0041A54C }
l0041A50F:
	word32 eax_171 = Mem152[ebp_121 - 24<i32>:word32]
	esi_131 = Mem152[ebp_121 - 20<i32>:word32]
	branch eax_171 >=u esi_131 l0041A533
l0041A533:
	Mem178[esp_151:word32] = edx_161
	Mem179[ebp_121 - 0xDC<32>:byte] = 0<8>
	Mem182[esp_151 - 4<i32>:word32] = Mem179[ebp_121 - 0xDC<32>:word32]
	Mem185[esp_151 - 8<i32>:word32] = ecx_153
	word32 ebx_627
	fn00412FE0(ebp_121 - 40<i32>, ebp_121, edi_123, out ebx_627, out ebp_121, out esi_131, out edi_123)
	esp_102 = <invalid>
l0041A519:
	Mem205[ebp_121 - 24<i32>:word32] = eax_171 + 1<i32>
	word32 ecx_206 = ebp_121 - 40<i32>
	branch esi_131 <u 0x10<32> l0041A529
l0041A525_1:
	ecx_206 = Mem205[ebp_121 - 40<i32>:word32]
l0041A529:
	Mem212[ecx_206 + eax_171:byte] = dl_162
	Mem213[ecx_206 + 1<i32> + eax_171:byte] = 0<8>
l0041A54C:
	branch Mem152[ebp_121 - 24<i32>:word32] == 0<32> l0041A573
l0041A552:
	word32 eax_219 = Mem152[edi_123 + 4<i32>:word32]
	Mem223[esp_151:word32] = ebp_121 - 40<i32>
	branch Mem223[edi_123 + 8<i32>:word32] == eax_219 l0041A56B
l0041A56B:
	Mem227[esp_151 - 4<i32>:word32] = eax_219
	word32 esi_625
	ebp_121 = fn004032C0(edi_123, esi_131, out esi_625, out edi_123)
	esp_102 = <invalid>
l0041A55E:
	word32 edx_626
	fn004028D0(eax_219, edi_123, Mem223[esp_151:word32], out edx_626, out ebp_121)
	Mem260[edi_123 + 4<i32>:word32] = Mem223[edi_123 + 4<i32>:word32] + 0x18<32>
	word32 esp_251 = <invalid>
	esp_102 = esp_251 + 4<32>
l0041A573:
	branch (Mem263[ebp_121 - 0xC8<32> + Mem263[Mem263[ebp_121 - 0xD4<32>:word32] + 4<i32>:word32]:byte] & 1<8>) == 0<8> l0041A490
l0041A58A:
	word32 edx_276 = SLICE((Mem271[edi_123 + 4<i32>:word32] - Mem271[edi_123:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	word32 eax_280 = (edx_276 >> 2<32> >>u 0x1F<32>) + (edx_276 >> 2<32>)
l0041A5A0:
	Mem284[ebp_121 - 0xD5<32>:byte] = 0<8>
	word32 ebx_282 = 1<32>
	branch eax_280 <=u 1<32> l0041A5F7
l0041A5B0:
	word32 esi_288 = 0x18<32>
l0041A5B3:
	word32 esp_293 = esp_102 - 4<i32>
	Mem294[esp_293:word32] = Mem290[ebp_121 - 0xE0<32>:word32]
	Mem298[esp_293 - 4<i32>:word32] = Mem294[ebp_121 - 0xE4<32>:word32]
	Mem300[esp_293 - 8<i32>:word32] = ebp_121 - 0xD5<32>
	Mem307[esp_293 - 12<i32>:word32] = Mem300[edi_123:word32] + esi_288
	word32 esi_319
	word32 ebx_323 = fn0041A760(ebx_282, es, ds, Mem307[esp_293 - 12<i32>:word32], Mem307[esp_293 - 4<i32>:word32], out ebp_121, out esi_319, out edi_123)
	word32 esp_322 = <invalid>
	word32 edx_337 = SLICE((Mem307[edi_123 + 4<i32>:word32] - Mem307[edi_123:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	esp_102 = esp_322 + 0x10<32>
	ebx_282 = ebx_323 + 1<32>
	esi_288 = esi_319 + 0x18<32>
	eax_280 = (edx_337 >> 2<32> >>u 0x1F<32>) + (edx_337 >> 2<32>)
	branch ebx_323 + 1<32> <u eax_280 l0041A5B3
l0041A5EE:
	branch Mem307[ebp_121 - 0xD5<32>:byte] != 0<8> l0041A5A0
l0041A5F7:
	word32 edx_348 = Mem347[ebp_121 - 20<i32>:word32]
	branch edx_348 <u 0x10<32> l0041A62D
l0041A5FF:
	word32 ecx_351 = Mem347[ebp_121 - 40<i32>:word32]
	word32 edx_352 = edx_348 + 1<32>
	branch edx_348 <u 0xFFF<32> l0041A623
l0041A60D:
	ecx_351 = Mem347[ecx_351 - 4<i32>:word32]
	edx_352 = edx_348 + 0x24<32>
	branch ecx_351 - ecx_351 <=u 0x23<32> l0041A623
l0041A61D:
	_invalid_parameter_noinfo_noreturn()
l0041A623:
	word32 esp_367 = esp_102 - 4<i32>
	Mem369[esp_367:word32] = edx_352
	Mem372[esp_367 - 4<i32>:word32] = ecx_351
	fn0042763F(Mem372[esp_367 - 4<i32>:word32])
l0041A62D:
	Mem381[ebp_121 - 0xD4<32> + Mem378[Mem378[ebp_121 - 0xD4<32>:word32] + 4<i32>:word32]:word32] = 0x00432E44<p32>
	word32 ecx_383 = Mem381[Mem381[ebp_121 - 0xD4<32>:word32] + 4<i32>:word32]
	Mem385[ebp_121 - 0xD8<32> + ecx_383:word32] = ecx_383 - 96<i32>
	Mem387[ebp_121 - 0xC4<32>:word32] = 0x00432440<p32>
	fn004110B0(ebp_121 - 0xC4<32>, Mem387[esp_102 + -4<i32>:word32], Mem387[esp_102:word32])
	~basic_streambuf(ebp_121 - 0xC4<32>)
	~basic_istream(ebp_121 - 0xBC<32>)
	~basic_ios(ebp_121 - 116<i32>)
	word32 esp_393 = <invalid>
	word32 edx_402 = Mem387[ebp_121 + 32<i32>:word32]
	branch edx_402 <u 0x10<32> l0041A6C0
l0041A692:
	word32 ecx_405 = Mem387[ebp_121 + 12<i32>:word32]
	edx_402 = edx_402 + 1<32>
	branch edx_402 <u 0xFFF<32> l0041A6B6
l0041A6A0:
	ecx_405 = Mem387[ecx_405 - 4<i32>:word32]
	edx_402 = edx_402 + 0x24<32>
	branch ecx_405 - ecx_405 <=u 0x23<32> l0041A6B6
l0041A6B0:
	_invalid_parameter_noinfo_noreturn()
l0041A6B6:
	Mem419[esp_393 - 4<i32>:word32] = edx_402
	Mem422[esp_393 - 8<i32>:word32] = ecx_405
	fn0042763F(Mem422[esp_393 - 8<i32>:word32])
l0041A6C0:
	Mem438[fs:0x00000000<p32>:word32] = Mem428[ebp_121 - 12<i32>:word32]
	word32 edi_442 = Mem438[esp_393 + 4<i32>:word32]
	word32 esi_444 = Mem438[esp_393 + 8<i32>:word32]
	word32 ecx_624
	word32 eax_623
	fn00427500(Mem438[ebp_121 - 16<i32>:word32] ^ ebp_121, edx_402, Mem438[esp_393 + 12<i32>:word32], ebp_121, esi_444, edi_442, es, ds, Mem438[esp_393 + 12<i32>:word32], out eax_623, out ecx_624)
	ediOut = edi_442
	return esi_444
fn0041A350_exit:
l0041A4C2:
	get(ebp_121 - 0xD4<32>)


word32 fn0041A760(word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg0C, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041A350
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +000C:[0..31]
// LiveOut: ebp ebx edi esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0041A760_entry:
	ptr32 fp
	word32 ebp
	selector fs
l0041A760:
	word32 edx_1013
	word32 ecx_1001
	word32 edi_370
	Mem29[fs:0<32>:word32] = fp - 16<i32>
	word32 edi_46 = Mem44[dwArg04 + 16<i32>:word32]
	word32 ebp_1057 = fp - 4<i32>
	word32 esp_1064 = fp - 0x84<32>
	word32 edx_32 = dwArg0C
	word32 esi_1074 = dwArg04
	word32 edi_266 = edi_46 + 0xFFFFFFFE<32>
	branch edi_46 <= 0xFFFFFFFE<32> l0041A969
l0041A7DD:
l0041A7E0:
	word32 eax_54 = esi_1074
	branch Mem52[esi_1074 + 20<i32>:word32] <u 0x10<32> l0041A7EA
l0041A7E8:
	eax_54 = Mem52[esi_1074:word32]
l0041A7EA:
	branch Mem52[eax_54 + edi_266:byte] != 0x2B<8> l0041A95D
l0041A7F4:
	word32 eax_64 = Mem52[esi_1074 + 16<i32>:word32]
	Mem68[ebp_1057 - 24<i32>:word32] = 0<32>
	Mem69[ebp_1057 - 20<i32>:word32] = 0xF<32>
	Mem70[ebp_1057 - 40<i32>:byte] = 0<8>
	word32 ecx_65 = edi_266 + 1<i32>
	branch eax_64 <u ecx_65 l0041AE50
l0041AE50:
	word32 edx_1647
	word32 ebx_1648
	fn004113B0(ecx_65, Mem70[esp_1064 + -4<i32>:word32], Mem70[esp_1064:word32], Mem70[esp_1064 + 4<i32>:word32], out edx_1647, out ebx_1648, out ebp_1057, out esi_1074, out edi_370)
	word32 esp_84 = <invalid>
	esp_1064 = esp_84 + 0xC<32>
l0041A814:
	word32 eax_91 = eax_64 - ecx_65
	word32 edx_116 = 0xFFFFFFFF<32>
	branch eax_91 >=u 0xFFFFFFFF<32> l0041A81F
l0041A81C_1:
	edx_116 = eax_91
l0041A81F:
	word32 eax_101 = esi_1074
	branch Mem70[esi_1074 + 20<i32>:word32] <u 0x10<32> l0041A829
l0041A827:
	eax_101 = Mem70[esi_1074:word32]
l0041A829:
	word32 edx_180
	word32 esp_114 = esp_1064 - 4<i32>
	Mem117[esp_114:word32] = edx_116
	Mem119[esp_114 - 4<i32>:word32] = eax_101 + ecx_65
	word32 edx_1650
	word32 ecx_1649
	word32 edi_128
	fn00402A70(ebp_1057 - 40<i32>, edi_266, Mem119[esp_114 - 4<i32>:word32], Mem119[esp_114:word32], Mem119[esp_114 + 16<i32>:word32], out ecx_1649, out edx_1650, out ebx, out ebp_1057, out esi_1074, out edi_128)
	Mem138[ebp_1057 - 4<i32>:byte] = 1<8>
	word32 esp_132 = <invalid>
	esp_1064 = esp_132 + 8<32>
	word32 eax_139 = Mem138[ebp_1057 - 48<i32>:word32]
	branch Mem138[ebp_1057 - 44<i32>:word32] == eax_139 l0041A868
l0041A868:
	Mem144[esp_132 + 4<32>:word32] = ebp_1057 - 40<i32>
	Mem146[esp_132:word32] = eax_139
	ebx = fn004127A0(ebp_1057 - 52<i32>, esi_1074, edi_128, es, ds, out ebp_1057, out esi_1074, out edi_128)
	esp_1064 = esp_132
	edx_180 = Mem146[ebp_1057 - 20<i32>:word32]
l0041A841:
	word128 xmm0_181 = Mem138[ebp_1057 - 40<i32>:word128]
	Mem182[eax_139 + 16<i32>:word32] = 0<32>
	Mem184[ebp_1057 - 40<i32>:byte] = 0<8>
	Mem185[eax_139:word128] = xmm0_181
	Mem188[eax_139 + 16<i32>:word64] = Mem185[ebp_1057 - 24<i32>:word64]
	Mem190[ebp_1057 - 48<i32>:word32] = Mem188[ebp_1057 - 48<i32>:word32] + 0x18<32>
	edx_180 = 0xF<32>
l0041A878:
	Mem193[ebp_1057 - 4<i32>:byte] = 0<8>
	branch edx_180 <u 0x10<32> l0041A8AD
l0041A881:
	ecx_1001 = Mem193[ebp_1057 - 40<i32>:word32]
	edx_1013 = edx_180 + 1<32>
	branch edx_1013 <u 0x1000<32> l0041A8A3
l0041A88F:
	ecx_1001 = Mem193[ecx_1001 - 4<i32>:word32]
	edx_1013 = edx_1013 + 0x23<32>
	branch ecx_1001 - ecx_1001 >u 0x23<32> l0041AE0D
l0041A8A3:
	word32 esp_210 = esp_1064 - 4<i32>
	Mem212[esp_210:word32] = edx_1013
	Mem215[esp_210 - 4<i32>:word32] = ecx_1001
	fn0042763F(Mem215[esp_210 - 4<i32>:word32])
l0041A8AD:
	Mem230[ebp_1057 - 24<i32>:word32] = 0<32>
	word32 ecx_227 = edi_128
	word32 eax_231 = esi_1074
	branch Mem222[esi_1074 + 16<i32>:word32] >=u edi_128 l0041A8BF
l0041A8BB_1:
	ecx_227 = Mem230[esi_1074 + 16<i32>:word32]
l0041A8BF:
	Mem238[ebp_1057 - 20<i32>:word32] = 0xF<32>
	Mem239[ebp_1057 - 40<i32>:byte] = 0<8>
	branch Mem230[esi_1074 + 20<i32>:word32] <u 0x10<32> l0041A8D2
l0041A8D0:
	eax_231 = Mem239[esi_1074:word32]
l0041A8D2:
	word32 esp_245 = esp_1064 - 4<i32>
	Mem248[esp_245:word32] = ecx_227
	Mem252[esp_245 - 4<i32>:word32] = eax_231
	word32 edx_1652
	word32 ecx_1651
	fn00402A70(ebp_1057 - 40<i32>, edi_128, Mem252[esp_245 - 4<i32>:word32], Mem252[esp_245:word32], Mem252[esp_245 + 16<i32>:word32], out ecx_1651, out edx_1652, out ebx, out ebp_1057, out esi_1074, out edi_266)
	word32 esp_270 = <invalid>
	esp_1064 = esp_270 + 8<32>
	branch esi_1074 == ebp_1057 - 40<i32> l0041A929
l0041A929:
	word32 edx_279 = Mem252[ebp_1057 - 20<i32>:word32]
	branch edx_279 <u 0x10<32> l0041A95D
l0041A931:
	ecx_1001 = Mem252[ebp_1057 - 40<i32>:word32]
	edx_1013 = edx_279 + 1<32>
	branch edx_279 <u 0xFFF<32> l0041A953
l0041A93F:
	ecx_1001 = Mem252[ecx_1001 - 4<i32>:word32]
	edx_1013 = edx_279 + 0x24<32>
	branch ecx_1001 - ecx_1001 >u 0x23<32> l0041AE0D
l0041A953:
	Mem296[esp_270 + 4<32>:word32] = edx_1013
	Mem299[esp_270:word32] = ecx_1001
	fn0042763F(Mem299[esp_270:word32])
	esp_1064 = esp_270 + 8<32>
l0041A8E3:
	word32 ecx_303 = Mem252[esi_1074 + 20<i32>:word32]
	branch ecx_303 <u 0x10<32> l0041A916
l0041A8EB:
	word32 eax_306 = Mem252[esi_1074:word32]
	ecx_1001 = ecx_303 + 1<32>
	branch ecx_303 <u 0xFFF<32> l0041A90C
l0041A8F6:
	edx_1013 = Mem252[eax_306 - 4<i32>:word32]
	ecx_1001 = ecx_303 + 0x24<32>
	branch eax_306 - edx_1013 >u 0x23<32> l0041AE0D
l0041A90A:
	eax_306 = edx_1013
l0041A90C:
	Mem320[esp_270 + 4<32>:word32] = ecx_1001
	Mem323[esp_270:word32] = eax_306
	fn0042763F(Mem323[esp_270:word32])
l0041A916:
	Mem333[esi_1074:word128] = Mem329[ebp_1057 - 40<i32>:word128]
	Mem336[esi_1074 + 16<i32>:word64] = Mem333[ebp_1057 - 24<i32>:word64]
	esp_1064 = esp_270 + 8<32>
l0041A95D:
	edi_266 = edi_266 - 1<32>
	branch edi_266 > 0<32> l0041A7E0
l0041A966:
	edx_32 = Mem346[ebp_1057 - 56<i32>:word32]
l0041A969:
	word32 edx_356 = SLICE((Mem349[edx_32 + 4<i32>:word32] - Mem349[edx_32:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	Mem355[ebp_1057 - 60<i32>:word32] = 0<32>
	branch (edx_356 >> 3<32> >>u 0x1F<32>) + (edx_356 >> 3<32>) == 0<32> l0041AA95
l0041A98C:
	Mem363[ebp_1057 - 76<i32>:word32] = 0<32>
l0041A993:
	word32 esp_365 = esp_1064 - 4<i32>
	Mem366[esp_365:word32] = 1<32>
	Mem368[ebp_1057 - 4<i32>:byte] = 2<8>
	word32 eax_369 = _Init(Mem368[esp_365:(ptr32 (struct "std::locale"))], Mem368[esp_365 + 4<i32>:bool])
	Mem372[ebp_1057 - 112<i32>:word32] = eax_369
	Mem373[ebp_1057 - 4<i32>:byte] = 3<8>
	word32 ecx_374 = Mem373[ebp_1057 - 56<i32>:word32]
	word32 edx_380 = SLICE((Mem373[ecx_374 + 4<i32>:word32] - Mem373[ecx_374:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	edi_370 = eax_369
	esp_1064 = esp_365 + 4<32>
	branch (edx_380 >> 3<32> >>u 0x1F<32>) + (edx_380 >> 3<32>) <=u Mem373[ebp_1057 - 60<i32>:word32] l0041AE55
l0041A9CF:
	word32 edx_392 = Mem373[Mem373[ebp_1057 - 56<i32>:word32]:word32] + Mem373[ebp_1057 - 76<i32>:word32]
	Mem395[esp_365:word32] = ebp_1057 - 116<i32>
	word32 eax_402
	word32 edi_405
	fn00403180(esi_1074, edx_392, es, ds, Mem395[esp_365:word32], out eax_402, out ebx, out ebp_1057, out esi_1074, out edi_405)
	byte al_418 = SLICE(eax_402, byte, 0)
	Mem419[ebp_1057 - 65<i32>:byte] = al_418
	Mem420[ebp_1057 - 4<i32>:byte] = 4<8>
	word32 esp_409 = <invalid>
	esp_1064 = esp_409 + 4<32>
	branch edi_405 == 0<32> l0041AA0B
l0041A9F3:
	word32 eax_426 = Mem420[Mem420[edi_405:word32] + 8<i32>:word32]
	word32 eax_429
	call eax_426 (retsize: 4;)
		uses: eax:eax_426,ecx:edi_405
		defs: eax:eax_429,esp:esp_428
	branch eax_429 == 0<32> l0041AA08
l0041AA02:
	word32 eax_438 = Mem420[eax_429:word32]
	Mem440[esp_1064 - 4<i32>:word32] = 1<32>
	call Mem440[eax_438:word32] (retsize: 4;)
		uses: eax:eax_438
		defs: esp:esp_441
l0041AA08:
	al_418 = Mem448[ebp_1057 - 65<i32>:byte]
l0041AA0B:
	Mem451[ebp_1057 - 4<i32>:byte] = 0<8>
	branch al_418 != 0<8> l0041AA41
l0041AA41:
	Mem457[Mem451[ebp_1057 - 72<i32>:word32]:byte] = 1<8>
	word32 eax_458 = Mem457[ebp_1057 - 56<i32>:word32]
	edi_370 = Mem457[eax_458:word32]
	word32 edx_465 = SLICE((Mem457[eax_458 + 4<i32>:word32] - edi_370) *s64 0x2AAAAAAB<32>, word32, 32)
	word32 ecx_464 = Mem457[ebp_1057 - 60<i32>:word32]
	branch (edx_465 >> 3<32> >>u 0x1F<32>) + (edx_465 >> 3<32>) <=u ecx_464 l0041AE55
l0041AA6D:
	word32 eax_475 = ecx_464 * 0x30<32> + 0x18<32> + edi_370
	branch esi_1074 == eax_475 l0041ABC7
l0041AA80:
	word32 ecx_481 = eax_475
	branch Mem457[eax_475 + 20<i32>:word32] <u 0x10<32> l0041AA8A
l0041AA88:
	ecx_481 = Mem457[eax_475:word32]
l0041AA8A:
	word32 esp_490 = esp_1064 - 4<i32>
	Mem491[esp_490:word32] = Mem457[eax_475 + 16<i32>:word32]
	Mem494[esp_490 - 4<i32>:word32] = ecx_481
	word32 edi_1632
	word32 edx_1631
	word32 ecx_1630
	fn00402A70(esi_1074, edi_370, Mem494[esp_490 - 4<i32>:word32], Mem494[esp_490:word32], Mem494[esp_490 + 16<i32>:word32], out ecx_1630, out edx_1631, out ebx, out ebp_1057, out esi_1074, out edi_1632)
	word32 esp_509 = <invalid>
	esp_1064 = esp_509 + 8<32>
l0041AA13:
	word32 eax_515 = Mem451[ebp_1057 - 56<i32>:word32]
	word32 edi_516 = Mem451[ebp_1057 - 60<i32>:word32]
	Mem518[ebp_1057 - 76<i32>:word32] = Mem451[ebp_1057 - 76<i32>:word32] + 0x30<32>
	Mem520[ebp_1057 - 60<i32>:word32] = edi_516 + 1<32>
	word32 edx_525 = SLICE((Mem520[eax_515 + 4<i32>:word32] - Mem520[eax_515:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	branch edi_516 + 1<32> <u ((edx_525 >> 3<32>) >>u 0x1F<32>) + (edx_525 >> 3<32>) l0041A993
l0041AA3F:
l0041AA95:
	branch Mem533[Mem533[ebp_1057 - 72<i32>:word32]:byte] != 0<8> l0041ABC7
l0041AAA1:
	word32 eax_537 = Mem533[ebp_1057 - 80<i32>:word32]
	word32 edx_543 = SLICE((Mem533[eax_537 + 4<i32>:word32] - Mem533[eax_537:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	edi_370 = 0<32>
	branch (edx_543 >> 3<32> >>u 0x1F<32>) + (edx_543 >> 3<32>) == 0<32> l0041ABC7
l0041AAC2:
	Mem550[ebp_1057 - 76<i32>:word32] = 0<32>
l0041AAD0:
	word32 esp_552 = esp_1064 - 4<i32>
	Mem553[esp_552:word32] = 1<32>
	Mem555[ebp_1057 - 4<i32>:byte] = 5<8>
	Mem558[ebp_1057 - 60<i32>:word32] = _Init(Mem555[esp_552:(ptr32 (struct "std::locale"))], Mem555[esp_552 + 4<i32>:bool])
	word32 ecx_559 = Mem558[ebp_1057 - 80<i32>:word32]
	Mem560[ebp_1057 - 4<i32>:byte] = 6<8>
	word32 edx_566 = SLICE((Mem560[ecx_559 + 4<i32>:word32] - Mem560[ecx_559:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	esp_1064 = esp_552 + 4<32>
	branch (edx_566 >> 3<32> >>u 0x1F<32>) + (edx_566 >> 3<32>) <=u edi_370 l0041AE55
l0041AE55:
	word32 edx_1628
	word32 ecx_1627
	word32 ebx_1629
	fn004029E0(Mem577[esp_1064 + -4<i32>:word32], Mem577[esp_1064:word32], out ecx_1627, out edx_1628, out ebx_1629)
	word32 esp_578 = <invalid>
	esp_1064 = esp_578 + 8<32>
l0041AB09:
	word32 edx_594 = Mem560[Mem560[ebp_1057 - 80<i32>:word32]:word32] + Mem560[ebp_1057 - 76<i32>:word32]
	Mem597[esp_552:word32] = ebp_1057 - 64<i32>
	word32 eax_603
	fn00403180(esi_1074, edx_594, es, ds, Mem597[esp_552:word32], out eax_603, out ebx, out ebp_1057, out esi_1074, out edi_370)
	Mem620[ebp_1057 - 65<i32>:byte] = SLICE(eax_603, byte, 0)
	Mem621[ebp_1057 - 4<i32>:byte] = 7<8>
	word32 esp_610 = <invalid>
	esp_1064 = esp_610 + 4<32>
	word32 ecx_622 = Mem621[ebp_1057 - 60<i32>:word32]
	branch ecx_622 == 0<32> l0041AB43
l0041AB30:
	word32 eax_627 = Mem621[Mem621[ecx_622:word32] + 8<i32>:word32]
	word32 eax_630
	call eax_627 (retsize: 4;)
		uses: eax:eax_627
		defs: eax:eax_630,esp:esp_629
	branch eax_630 == 0<32> l0041AB43
l0041AB3D:
	word32 eax_639 = Mem621[eax_630:word32]
	Mem641[esp_1064 - 4<i32>:word32] = 1<32>
	call Mem641[eax_639:word32] (retsize: 4;)
		uses: eax:eax_639
		defs: esp:esp_642
l0041AB43:
	Mem651[ebp_1057 - 4<i32>:byte] = 0<8>
	branch Mem649[ebp_1057 - 65<i32>:byte] != 0<8> l0041AB75
l0041AB75:
	word32 ecx_654 = Mem651[ebp_1057 - 80<i32>:word32]
	Mem655[Mem651[ebp_1057 - 72<i32>:word32]:byte] = 1<8>
	word32 edx_661 = SLICE((Mem655[ecx_654 + 4<i32>:word32] - Mem655[ecx_654:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	branch (edx_661 >> 3<32> >>u 0x1F<32>) + (edx_661 >> 3<32>) <=u edi_370 l0041AE5A
l0041AE5A:
	word32 ebx_1634
	word32 ecx_677
	word32 edx_1633
	fn004029E0(Mem673[esp_1064 + -4<i32>:word32], Mem673[esp_1064:word32], out ecx_677, out edx_1633, out ebx_1634)
	int3()
	word32 esp_674 = <invalid>
	Mem688[esp_674 + 4<32>:word32] = ebp_1057
	Mem694[esp_674:word32] = esi_1074
	Mem697[esp_674 - 4<i32>:word32] = 0<32>
	Mem699[esp_674 - 8<i32>:word32] = 0x4317A9<32>
	Mem701[ecx_677 + 104<i32>:byte] = 0<8>
	word32 ebp_705
	word32 ebx_706
	word32 edi_708
	word32 esi_710
	word32 edx_1636
	word32 ecx_1635
	fn00402A70(ecx_677 + 112<i32>, edi_370, Mem701[esp_674 - 8<i32>:word32], Mem701[esp_674 - 4<i32>:word32], Mem701[esp_674 + 12<i32>:word32], out ecx_1635, out edx_1636, out ebx_706, out ebp_705, out esi_710, out edi_708)
	Mem719[esi_710 + 96<i32>:word32] = Mem701[ebp_705 + 8<i32>:word32]
	ebpOut = ebp
	esiOut = 0<32>
	ediOut = edi_708
	return ebx_706
l0041AB9E:
	word32 eax_729 = edi_370 * 0x30<32> + (Mem655[Mem655[ebp_1057 - 80<i32>:word32]:word32] + 0x18<32>)
	branch esi_1074 == eax_729 l0041ABC7
l0041ABB2:
	word32 ecx_733 = eax_729
	branch Mem655[eax_729 + 20<i32>:word32] <u 0x10<32> l0041ABBC
l0041ABBA:
	ecx_733 = Mem655[eax_729:word32]
l0041ABBC:
	word32 esp_740 = esp_1064 - 4<i32>
	Mem741[esp_740:word32] = Mem655[eax_729 + 16<i32>:word32]
	Mem744[esp_740 - 4<i32>:word32] = ecx_733
	word32 edx_1638
	word32 edi_1639
	word32 ecx_1637
	fn00402A70(esi_1074, edi_370, Mem744[esp_740 - 4<i32>:word32], Mem744[esp_740:word32], Mem744[esp_740 + 16<i32>:word32], out ecx_1637, out edx_1638, out ebx, out ebp_1057, out esi_1074, out edi_1639)
	word32 esp_757 = <invalid>
	esp_1064 = esp_757 + 8<32>
l0041AB4D:
	word32 eax_763 = Mem651[ebp_1057 - 80<i32>:word32]
	Mem766[ebp_1057 - 76<i32>:word32] = Mem651[ebp_1057 - 76<i32>:word32] + 0x30<32>
	word32 edx_771 = SLICE((Mem766[eax_763 + 4<i32>:word32] - Mem766[eax_763:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	edi_370 = edi_370 + 1<32>
	branch edi_370 + 1<32> <u ((edx_771 >> 3<32>) >>u 0x1F<32>) + (edx_771 >> 3<32>) l0041AAD0
l0041AB73:
l0041ABC7:
	ecx_1001 = Mem779[ebp_1057 - 48<i32>:word32] - Mem779[ebp_1057 - 52<i32>:word32]
	Mem785[ebp_1057 - 76<i32>:word32] = 0<32>
	word32 edx_786 = SLICE(ecx_1001 *s64 0x2AAAAAAB<32>, word32, 32)
	word32 edi_1048 = 0<32>
	edx_1013 = edx_786 >> 2<32>
	branch (edx_786 >> 2<32> >>u 0x1F<32>) + (edx_786 >> 2<32>) == 0<32> l0041ADC1
l0041ABE9:
l0041ABF0:
	branch edi_1048 != 0<32> l0041AC38
l0041ABF4:
	word32 eax_797 = _errno()
	Mem803[ebp_1057 - 72<i32>:word32] = eax_797
	word32 edi_801 = esi_1074
	branch Mem799[esi_1074 + 20<i32>:word32] <u 0x10<32> l0041AC07
l0041AC05:
	edi_801 = Mem803[esi_1074:word32]
l0041AC07:
	Mem807[eax_797:word32] = 0<32>
	word32 esp_812 = esp_1064 - 4<i32>
	Mem813[esp_812:word32] = 0<32>
	Mem815[esp_812 - 4<i32>:word32] = ebp_1057 - 60<i32>
	Mem818[esp_812 - 8<i32>:word32] = edi_801
	Mem821[ebp_1057 - 84<i32>:word32] = strtoul(Mem818[esp_812 - 8<i32>:(ptr32 charconst )], Mem818[esp_812 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem818[esp_812:int32])
	esp_1064 = esp_812 + 4<32>
	branch edi_801 == Mem821[ebp_1057 - 60<i32>:word32] l0041AE1E
l0041AC29:
	branch Mem821[Mem821[ebp_1057 - 72<i32>:word32]:word32] == 0x22<32> l0041AE13
l0041AC35:
	edi_1048 = Mem821[ebp_1057 - 76<i32>:word32]
l0041AC38:
	word32 edi_833 = Mem829[ebp_1057 - 52<i32>:word32] + edi_1048 * 0x18<32>
	word32 eax_834 = _errno()
	Mem836[ebp_1057 - 72<i32>:word32] = eax_834
	branch Mem829[edi_833 + 20<i32>:word32] <u 0x10<32> l0041AC52
l0041AC50:
	edi_833 = Mem836[edi_833:word32]
l0041AC52:
	Mem840[eax_834:word32] = 0<32>
	word32 esp_845 = esp_1064 - 4<i32>
	Mem846[esp_845:word32] = 0<32>
	Mem848[esp_845 - 4<i32>:word32] = ebp_1057 - 56<i32>
	Mem851[esp_845 - 8<i32>:word32] = edi_833
	word32 eax_852 = strtoul(Mem851[esp_845 - 8<i32>:(ptr32 charconst )], Mem851[esp_845 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem851[esp_845:int32])
	esp_1064 = esp_845 + 4<32>
	ecx_1001 = eax_852
	branch edi_833 == Mem851[ebp_1057 - 56<i32>:word32] l0041AE1E
l0041AC73:
	branch Mem851[Mem851[ebp_1057 - 72<i32>:word32]:word32] == 0x22<32> l0041AE13
l0041AC7F:
	word32 eax_862 = Mem851[ebp_1057 - 84<i32>:word32] + eax_852
	Mem864[ebp_1057 - 84<i32>:word32] = eax_862
	word32 edi_861 = ebp_1057 - 19<i32>
	word32 ecx_865 = eax_862
	branch eax_862 >= 0<32> l0041ACC3
l0041ACC3:
	Mem867[ebp_1057 - 72<i32>:word32] = eax_862
l0041ACC6:
	word32 edx_873 = SLICE(ecx_865 *u64 0xCCCCCCCD<32>, word32, 32)
	edi_861 = edi_861 - 1<32>
	Mem888[edi_861:byte] = Mem881[ebp_1057 + 0x48<32>:byte] - SLICE(edx_873 >>u 3<32>, byte, 0) * 0xA<8> + 0x30<8>
	Mem890[ebp_1057 - 72<i32>:word32] = edx_873 >>u 3<32>
	ecx_865 = edx_873 >>u 3<32>
	branch edx_873 >>u 3<32> != 0<32> l0041ACC6
l0041AC8E:
	word32 ecx_895 = -eax_862
	Mem897[ebp_1057 - 72<i32>:word32] = ecx_895
l0041AC93:
	word32 edx_903 = SLICE(ecx_895 *u64 0xCCCCCCCD<32>, word32, 32)
	edi_861 = edi_861 - 1<32>
	Mem918[edi_861:byte] = Mem911[ebp_1057 + 0x48<32>:byte] - SLICE(edx_903 >>u 3<32>, byte, 0) * 0xA<8> + 0x30<8>
	Mem920[ebp_1057 - 72<i32>:word32] = edx_903 >>u 3<32>
	ecx_895 = edx_903 >>u 3<32>
	branch edx_903 >>u 3<32> != 0<32> l0041AC93
l0041ACBD:
	Mem926[edi_861 - 1<32>:byte] = 0x2D<8>
	edi_861 = edi_861 - 1<32>
l0041ACF0:
	Mem929[ebp_1057 - 92<i32>:word32] = 0<32>
	Mem930[ebp_1057 - 108<i32>:byte] = 0<8>
	Mem932[ebp_1057 - 88<i32>:word32] = 0xF<32>
	word32 ecx_928 = ebp_1057 - 19<i32>
	word32 eax_931 = 0xF<32>
	branch edi_861 == ecx_928 l0041AD1B
l0041AD0A:
	Mem944[esp_845:word32] = ecx_928 - edi_861
	Mem946[esp_845 - 4<i32>:word32] = edi_861
	word32 ecx_1644
	word32 edi_1646
	word32 edx_1645
	fn00402A70(ebp_1057 - 108<i32>, edi_861, Mem946[esp_845 - 4<i32>:word32], Mem946[esp_845:word32], Mem946[esp_845 + 16<i32>:word32], out ecx_1644, out edx_1645, out ebx, out ebp_1057, out esi_1074, out edi_1646)
	word32 esp_962 = <invalid>
	esp_1064 = esp_962 + 8<32>
	eax_931 = Mem946[ebp_1057 - 88<i32>:word32]
l0041AD1B:
	branch esi_1074 == ebp_1057 - 108<i32> l0041AD68
l0041AD68:
	branch eax_931 <u 0x10<32> l0041AD9B
l0041AD6D:
	ecx_1001 = Mem983[ebp_1057 - 108<i32>:word32]
	edx_1013 = eax_931 + 1<i32>
	branch edx_1013 <u 0x1000<32> l0041AD91
l0041AD7D:
	ecx_1001 = Mem983[ecx_1001 - 4<i32>:word32]
	edx_1013 = edx_1013 + 0x23<32>
	branch ecx_1001 - ecx_1001 >u 0x23<32> l0041AE0D
l0041AD91:
	word32 esp_997 = esp_1064 - 4<i32>
	Mem999[esp_997:word32] = edx_1013
	Mem1002[esp_997 - 4<i32>:word32] = ecx_1001
	fn0042763F(Mem1002[esp_997 - 4<i32>:word32])
l0041AD22:
	word32 ecx_1006 = Mem983[esi_1074 + 20<i32>:word32]
	branch ecx_1006 <u 0x10<32> l0041AD55
l0041AD2A:
	word32 eax_1009 = Mem983[esi_1074:word32]
	ecx_1001 = ecx_1006 + 1<32>
	branch ecx_1006 <u 0xFFF<32> l0041AD4B
l0041AD35:
	edx_1013 = Mem983[eax_1009 - 4<i32>:word32]
	ecx_1001 = ecx_1006 + 0x24<32>
	branch eax_1009 - edx_1013 >u 0x23<32> l0041AE0D
l0041AD49:
	eax_1009 = edx_1013
l0041AD4B:
	word32 esp_1021 = esp_1064 - 4<i32>
	Mem1023[esp_1021:word32] = ecx_1001
	Mem1026[esp_1021 - 4<i32>:word32] = eax_1009
	fn0042763F(Mem1026[esp_1021 - 4<i32>:word32])
l0041AD55:
	Mem1036[esi_1074:word128] = Mem1032[ebp_1057 - 108<i32>:word128]
	Mem1039[esi_1074 + 16<i32>:word64] = Mem1036[ebp_1057 - 92<i32>:word64]
l0041AD9B:
	ecx_1001 = Mem1042[ebp_1057 - 48<i32>:word32] - Mem1042[ebp_1057 - 52<i32>:word32]
	word32 edi_1046 = Mem1042[ebp_1057 - 76<i32>:word32]
	Mem1052[ebp_1057 - 76<i32>:word32] = edi_1046 + 1<32>
	word32 edx_1049 = SLICE(ecx_1001 *s64 0x2AAAAAAB<32>, word32, 32)
	edi_1048 = edi_1046 + 1<32>
	edx_1013 = edx_1049 >> 2<32>
	branch edi_1046 + 1<32> <u ((edx_1049 >> 2<32>) >>u 0x1F<32>) + (edx_1049 >> 2<32>) l0041ABF0
l0041ADC1:
	word32 ecx_1059 = Mem1058[ebp_1057 - 52<i32>:word32]
	branch ecx_1059 == 0<32> l0041AE33
l0041ADC8:
	word32 edx_1063 = Mem1058[ebp_1057 - 48<i32>:word32]
	word32 esp_1072 = esp_1064 - 4<i32>
	Mem1073[esp_1072:word32] = ecx_1059
	word32 edi_1643
	word32 esi_1642
	ebp_1057 = fn00403510(ecx_1059, edx_1063, esi_1074, out esi_1642, out edi_1643)
	esi_1074 = Mem1073[ebp_1057 - 52<i32>:word32]
	word32 edx_1098 = SLICE((Mem1073[ebp_1057 - 44<i32>:word32] - esi_1074) *s64 0x2AAAAAAB<32>, word32, 32)
	word32 eax_1102 = (edx_1098 >> 2<32> >>u 0x1F<32>) + (edx_1098 >> 2<32>)
	esp_1064 = esp_1072 + 4<32>
	edx_1013 = edx_1098 >> 2<32>
	ecx_1001 = eax_1102 * 0x18<32>
	branch eax_1102 * 0x18<32> <u 0x1000<32> l0041AE29
l0041ADFD:
	esi_1074 = Mem1073[esi_1074 - 4<i32>:word32]
	ecx_1001 = eax_1102 * 0x18<32> + 0x23<32>
	branch esi_1074 - esi_1074 <=u 0x23<32> l0041AE29
l0041AE0D:
	_invalid_parameter_noinfo_noreturn()
l0041AE13:
	esp_1064 = esp_1064 - 4<i32>
	Mem1117[esp_1064:word32] = 0x4318C4<32>
	_Xout_of_range(Mem1117[esp_1064:(ptr32 charconst )])
l0041AE1E:
	esp_1064 = esp_1064 - 4<i32>
	Mem1120[esp_1064:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem1120[esp_1064:(ptr32 charconst )])
l0041AE29:
	word32 esp_1122 = esp_1064 - 4<i32>
	Mem1129[esp_1122:word32] = ecx_1001
	Mem1135[esp_1122 - 4<i32>:word32] = esi_1074
	fn0042763F(Mem1135[esp_1122 - 4<i32>:word32])
	esp_1064 = esp_1122 + 4<32>
l0041AE33:
	Mem1164[fs:0x00000000<p32>:word32] = Mem1144[ebp_1057 - 12<i32>:word32]
	word32 esp_1167 = esp_1064 + 4<i32>
	word32 edi_1168 = Mem1164[esp_1167:word32]
	word32 esi_1170 = Mem1164[esp_1167 + 4<i32>:word32]
	word32 ecx_1641
	word32 eax_1640
	fn00427500(Mem1164[ebp_1057 - 16<i32>:word32] ^ ebp_1057, edx_1013, ebx, ebp_1057, esi_1170, edi_1168, es, ds, Mem1164[esp_1167 + 4<i32>:word32], out eax_1640, out ecx_1641)
	ebpOut = Mem1164[ebp_1057:word32]
	esiOut = esi_1170
	ediOut = edi_1168
	return ebx
fn0041A760_exit:


word32 fn0041AE60(word32 ecx, word32 edi, word32 dwArg04, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040BE00
// MayUse:  ecx:[0..31] edi:[0..31] fs:[0..15] Stack +0004:[0..31]
// LiveOut: ebx edi
// Trashed: SCZO eax ebx ecx edi edx Top xmm0
// Preserved: ebp esi esp
fn0041AE60_entry:
l0041AE60:
	Mem18[ecx + 104<i32>:byte] = 0<8>
	word32 ebp_22
	word32 ebx_23
	word32 edi_25
	word32 esi_27
	word32 ecx_47
	word32 edx_48
	fn00402A70(ecx + 112<i32>, edi, 0x4317A9<32>, 0<32>, dwArg04, out ecx_47, out edx_48, out ebx_23, out ebp_22, out esi_27, out edi_25)
	Mem36[esi_27 + 96<i32>:word32] = Mem18[ebp_22 + 8<i32>:word32]
	ediOut = edi_25
	return ebx_23
fn0041AE60_exit:


void fn0041AE90(word32 ecx, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
// MayUse:  ecx:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: SCZO eax ecx edx Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: P ebp edi esi esp
fn0041AE90_entry:
l0041AE90:
	word32 eax_13 = Mem10[ecx + 108<i32>:word32]
	branch eax_13 >u 3<32> l0041AEAE
l0041AEAE:
	branch eax_13 >u 0xFFFFFFF9<32> l0041AEDC
l0041AEB6:
	word32 edi_25 = CONVERT(SLICE(dwArg04, word16, 0), word16, word32) + Mem22[ecx + 96<i32>:word32]
	Mem26[ecx + 96<i32>:word32] = edi_25
	branch dwArg04 >= 0<32> l0041AEDB
l0041AEC7:
	word32 ecx_160
	word32 edx_161
	Mem52[ecx + 96<i32>:word32] = fn0042D911(fn00427210(), out ecx_160, out edx_161) ^ edi_25
l0041AEDB:
l0041AEDC:
	return
l0041AE9E:
	Mem66[ecx + 96<i32>:word32] = Mem10[ecx + 96<i32>:word32] + (dwArg04 & 0x3FFFFFC<32>)
	return
fn0041AE90_exit:


word32 fn0041AEF0(word32 edi, selector es, selector ds, word32 dwArg58, word32 dwArg70, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00404FB0
//      fn0040BE00
// MayUse:  cs:[0..15] ds:[0..15] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0058:[0..31] Stack +0070:[0..31]
// LiveOut: ebp ebx edi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn0041AEF0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc70
	struct <anonymous> tArg04
l0041AEF0:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 ebp_58
	word32 edx_4898
	fn004028D0(&tLoc70, edi, &tArg04, out edx_4898, out ebp_58)
	word32 esp_59 = <invalid>
	Mem69[esp_59:word32] = ebp_58 - 28<i32>
	word32 edi_79
	word32 esi_81 = fn0041A350(es, ds, Mem69[esp_59:word32], Mem69[esp_59 + 24<i32>:word32], out edi_79)
	word32 esp_82 = <invalid>
	Mem92[esp_82 + 0x20<32>:word32] = 0<32>
	Mem94[esp_82 + 0x1C<32>:word32] = 0x4317A9<32>
	word32 edx_4900
	word32 ebx_4901
	word32 ecx_4899
	word32 edi_4902
	word32 esi_102
	word32 ebp_1092
	fn00402A70(esi_81 + 112<i32>, edi_79, Mem94[esp_82 + 0x1C<32>:word32], Mem94[esp_82 + 0x20<32>:word32], Mem94[esp_82 + 0x30<32>:word32], out ecx_4899, out edx_4900, out ebx_4901, out ebp_1092, out esi_102, out edi_4902)
	word32 edi_112 = Mem94[ebp_1092 - 28<i32>:word32]
	word32 ecx_1012 = Mem94[ebp_1092 - 24<i32>:word32] - edi_112
	Mem115[esi_102 + 100<i32>:word32] = 0<32>
	Mem119[esi_102 + 96<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_104 = <invalid>
	word32 edx_116 = SLICE(ecx_1012 *s64 0x2AAAAAAB<32>, word32, 32)
	word32 esp_109 = esp_104 + 8<32>
	branch (edx_116 >> 2<32> >>u 0x1F<32>) + (edx_116 >> 2<32>) == 0<32> l0041C0AC
l0041AFA7:
	branch Mem119[edi_112 + 16<i32>:word32] <=u 0<32> l0041C17D
l0041C17D:
	word32 ebx_128
	word32 edi_130
	word32 edx_131
	word32 esi_4904
	word32 ebp_4903
	word32 ecx_129 = fn004113B0(ecx_1012, Mem119[esp_104 + 4<32>:word32], Mem119[esp_104 + 8<32>:word32], Mem119[esp_104 + 0xC<32>:word32], out edx_131, out ebx_128, out ebp_4903, out esi_4904, out edi_130)
	word32 eax_140 = Mem119[0xD60041C0<p32>:word32]
	Mem146[ebx_128 + 0xDD0041B0<32>:byte] = Mem119[ebx_128 + 0xDD0041B0<32>:byte] + (SLICE(ecx_129, byte, 0) + 1<8>)
	Mem150[eax_140 + 0xB1ED0041<32> + eax_140 * 8<32>:byte] = Mem146[eax_140 + 0xB1ED0041<32> + eax_140 * 8<32>:byte] + SLICE(edx_131, byte, 0)
	Mem156[eax_140 - 75<i32>:byte] = Mem150[eax_140 - 75<i32>:byte] + SLICE(ebx_128, byte, 8)
	Mem160[edi_130 + 0xF30041BD<32>:byte] = Mem156[edi_130 + 0xF30041BD<32>:byte] + SLICE(eax_140, byte, 8)
	Mem165[edi_130 + 0x870041C2<32>:byte] = Mem160[edi_130 + 0x870041C2<32>:byte] + 0x41<8>
	word32 ecx_152 = SEQ(SLICE(ecx_129 + 1<32>, word24, 8), 0x41<8>)
	Mem167[ecx_152 + 3<32>:byte] = __rol<byte,byte>(Mem165[ecx_152 + 3<32>:byte], 0xAC<8>)
	Mem169[ecx_152 + 3<32>:byte] = __rol<byte,byte>(Mem167[ecx_152 + 3<32>:byte], 0<8>)
	Mem171[0xBB030041<32>:word32] = Mem169[0xBB030041<32>:word32] + eax_140
	Mem174[eax_140:byte] = Mem171[eax_140:byte] + SLICE(eax_140, byte, 0)
	word32 ecx_175 = ecx_152 + 3<32> + Mem174[(fp + 0x44<32>) + eax_140:word32]
	byte al_177 = SLICE(eax_140, byte, 0) + 0xC<8>
	Mem179[eax_140 + 0x7060C0C<32>:byte] = Mem174[eax_140 + 0x7060C0C<32>:byte] + al_177
	byte cl_180 = SLICE(ecx_175, byte, 0)
	Mem182[ecx_175 * 2<32>:byte] = Mem179[ecx_175 * 2<32>:byte] | cl_180
	word24 ecx_24_8_191 = SLICE(ecx_175, word24, 8)
	byte cl_184 = cl_180 | Mem182[ebx_128:byte]
	byte al_189 = al_177 | 0xC<8> | 0xC<8> | 0xC<8> | 0xC<8>
	word32 ecx_192 = SEQ(ecx_24_8_191, cl_184)
	Mem194[ecx_192:byte] = Mem182[ecx_192:byte] + (al_189 | 0xC<8>)
	word24 eax_24_8_195 = SLICE(eax_140 + 0x7060C0C<32>, word24, 8)
	byte al_197 = (al_189 | 0xC<8>) + Mem194[SEQ(eax_24_8_195, al_189 | 0xC<8>):byte]
	Mem199[ebx_128:byte] = Mem194[ebx_128:byte] + al_197
	word32 eax_201 = SEQ(eax_24_8_195, al_197 | 4<8>)
	Mem205[eax_201 + 0x7060C0C<32>:byte] = Mem199[eax_201 + 0x7060C0C<32>:byte] + ((al_197 | 4<8>) + 0xC<8>)
	Mem207[ecx_192 * 2<32>:byte] = Mem205[ecx_192 * 2<32>:byte] | cl_184
	word32 eax_230 = Mem228[0x0043A008<p32>:word32] ^ fp + 0x40<32>
	byte cl_209 = cl_184 | Mem207[ebx_128:byte]
	word32 eax_219 = Mem218[fs:0<32>:word32]
	Mem234[fs:0<32>:word32] = fp + 0x34<32>
	_Init(1<32>, SLICE(eax_230, bool, 0))
	word32 ecx_235 = SEQ(ecx_24_8_191, cl_209)
	word32 edx_247 = Mem246[ecx_235 + 100<i32>:word32]
	branch dwArg58 <u edx_247 l0041C39F
l0041C256_thunk_fn0041C39F:
	word32 ebp_255
	word32 ebx_256
	word32 edi_258
	word32 edx_4963
	word32 ecx_4962
	fn0041C39F(ecx_235, eax_230, edi_130 + 4<i32>, eax_219, out ecx_4962, out edx_4963, out ebx_256, out ebp_255, out edi_258)
	ebpOut = ebp_255
	ediOut = edi_258
	return ebx_256
l0041C256_thunk_fn0041C25C:
	word32 ebp_267
	word32 ebx_268
	word32 edi_270
	word32 ecx_4964
	word32 esi_4966
	word32 edx_4965
	fn0041C25C(dwArg58, edx_247, dwArg70, fp + 0x40<32>, ecx_235, es, ds, ebx_128, out ecx_4964, out edx_4965, out ebx_268, out ebp_267, out esi_4966, out edi_270)
	ebpOut = ebp_267
	ediOut = edi_270
	return ebx_268
l0041AFB1:
	branch Mem119[edi_112 + 20<i32>:word32] <u 0x10<32> l0041AFB9
l0041AFB7:
	edi_112 = Mem119[edi_112:word32]
l0041AFB9:
	word32 eax_286 = CONVERT(Mem119[edi_112:byte], byte, int32)
	branch eax_286 >u 0xFFFFFF88<32> l0041C0AC
l0041AFC8:
	word32 esp_1680
	word32 edi_628
	switch (eax_286 + 0xFFFFFFBF<32>) { l0041C0A1 l0041AFD6 l0041B08B l0041C0A1 l0041C0A1 l0041B1DD l0041C0AC l0041C094 l0041B1ED l0041C0AC l0041C0AC l0041B578 l0041B9A7 l0041C0A1 l0041C0A1 l0041BAF3 l0041C0AC l0041BB03 l0041BE97 l0041C087 l0041C0AC l0041C0AC l0041C094 l0041C0A1 l0041C0AC l0041C0AC l0041C0AC l0041C0AC l0041C0AC l0041C0AC l0041C0AC l0041C0AC l0041C0A1 l0041AFD6 l0041B08B l0041C0A1 l0041C0A1 l0041B1DD l0041C0AC l0041C094 l0041B1ED l0041C0AC l0041C0AC l0041B578 l0041B9A7 l0041C0A1 l0041C0A1 l0041BAF3 l0041C0AC l0041BB03 l0041BE97 l0041C087 l0041C0AC l0041C0AC l0041C094 l0041C0A1 }
l0041C087:
	Mem301[esp_104 + 4<32>:word32] = ebp_1092 - 28<i32>
	word32 esp_321 = <invalid>
	ecx_1012 = fn00426E70(es, ds, Mem301[esp_104 + 4<32>:word32], out ebp_1092, out esi_102)
	esp_109 = esp_321 + 4<32>
l0041BE97:
	Mem338[ebp_1092 - 4<i32>:byte] = 0x38<8>
	Mem342[esp_104 + 4<32>:word32] = 1<32>
	Mem346[ebp_1092 - 32<i32>:word32] = _Init(Mem342[esp_104 + 4<32>:(ptr32 (struct "std::locale"))], Mem342[esp_104 + 8<32>:bool])
	Mem348[esp_104 + 4<32>:word32] = 3<32>
	Mem350[esp_104:word32] = 0<32>
	Mem352[ebp_1092 - 4<i32>:byte] = 0x39<8>
	word32 ecx_353 = Mem352[ebp_1092 - 28<i32>:word32]
	Mem355[esp_104 - 4<i32>:word32] = ebp_1092 - 60<i32>
	word32 ebp_359
	word32 edx_4955
	word32 esi_4957
	word32 edi_4958
	word32 ebx_4956
	word32 eax_358 = fn0040F7F0(ecx_353, ebp_1092, esi_102, _Init, Mem355[esp_104 - 4<i32>:word32], Mem355[esp_104:word32], Mem355[esp_104 + 4<i32>:word32], out edx_4955, out ebx_4956, out ebp_359, out esi_4957, out edi_4958)
	Mem373[ebp_359 - 4<i32>:byte] = 0x3A<8>
	word32 esp_366 = <invalid>
	Mem375[esp_366:word32] = ebp_359 - 36<i32>
	word32 edi_386
	word32 esi_388
	word32 ecx_4959
	word32 edx_4960
	word32 ebx_4961
	byte al_401 = fn00411F00(eax_358, 0x004326F0<p32>, es, ds, Mem375[esp_366:word32], out ecx_4959, out edx_4960, out ebx_4961, out ebp_1092, out esi_388, out edi_386)
	Mem398[ebp_1092 - 4<i32>:byte] = 0x39<8>
	word32 esp_390 = <invalid>
	word32 edx_400 = Mem398[ebp_1092 - 40<i32>:word32]
	branch edx_400 <u 0x10<32> l0041BF12
l0041BEE4:
	word32 ecx_405 = Mem398[ebp_1092 - 60<i32>:word32]
	word32 edx_406 = edx_400 + 1<32>
	branch edx_400 <u 0xFFF<32> l0041BF08
l0041BEF2:
	ecx_405 = Mem398[ecx_405 - 4<i32>:word32]
	edx_406 = edx_400 + 0x24<32>
	branch ecx_405 - ecx_405 <=u 0x23<32> l0041BF08
l0041BF02:
	_invalid_parameter_noinfo_noreturn()
l0041BF08:
	Mem419[esp_390:word32] = edx_406
	Mem422[esp_390 - 4<i32>:word32] = ecx_405
	fn0042763F(Mem422[esp_390 - 4<i32>:word32])
l0041BF12:
	Mem429[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem430[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem431[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem432[ebp_1092 - 4<i32>:byte] = 1<8>
	word32 edx_4967
	fn00401470(ebp_1092 - 36<i32>, out edx_4967)
	esp_109 = esp_390 + 4<32>
	branch al_401 != 0<8> l0041C0A1
l0041BF38:
	Mem449[esp_390:word32] = 1<32>
	Mem450[ebp_1092 - 4<i32>:byte] = 0x3B<8>
	Mem454[ebp_1092 - 32<i32>:word32] = _Init(Mem450[esp_390:(ptr32 (struct "std::locale"))], Mem450[esp_390 + 4<i32>:bool])
	Mem456[esp_390:word32] = 2<32>
	Mem458[esp_390 - 4<i32>:word32] = 0<32>
	Mem460[ebp_1092 - 4<i32>:byte] = 0x3C<8>
	word32 ecx_461 = Mem460[ebp_1092 - 28<i32>:word32]
	Mem463[esp_390 - 8<i32>:word32] = ebp_1092 - 60<i32>
	word32 ebp_469
	word32 edx_4968
	word32 ebx_4969
	word32 edi_4971
	word32 esi_4970
	word32 eax_468 = fn0040F7F0(ecx_461, ebp_1092, esi_388, edi_386, Mem463[esp_390 - 8<i32>:word32], Mem463[esp_390 - 4<i32>:word32], Mem463[esp_390:word32], out edx_4968, out ebx_4969, out ebp_469, out esi_4970, out edi_4971)
	Mem483[ebp_469 - 4<i32>:byte] = 0x3D<8>
	word32 esp_476 = <invalid>
	Mem485[esp_476:word32] = ebp_469 - 36<i32>
	word32 edi_501
	word32 ebp_504
	word32 ebx_4974
	word32 edx_4973
	word32 esi_4975
	word32 ecx_4972
	byte al_516 = fn00411F00(eax_468, 0x004326F4<p32>, es, ds, Mem485[esp_476:word32], out ecx_4972, out edx_4973, out ebx_4974, out ebp_504, out esi_4975, out edi_501)
	Mem513[ebp_504 - 4<i32>:byte] = 0x3C<8>
	word32 esp_505 = <invalid>
	word32 edx_515 = Mem513[ebp_504 - 40<i32>:word32]
	branch edx_515 <u 0x10<32> l0041BFAD
l0041BF7F:
	word32 ecx_520 = Mem513[ebp_504 - 60<i32>:word32]
	word32 edx_521 = edx_515 + 1<32>
	branch edx_515 <u 0xFFF<32> l0041BFA3
l0041BF8D:
	ecx_520 = Mem513[ecx_520 - 4<i32>:word32]
	edx_521 = edx_515 + 0x24<32>
	branch ecx_520 - ecx_520 <=u 0x23<32> l0041BFA3
l0041BF9D:
	_invalid_parameter_noinfo_noreturn()
l0041BFA3:
	Mem534[esp_505:word32] = edx_521
	Mem537[esp_505 - 4<i32>:word32] = ecx_520
	fn0042763F(Mem537[esp_505 - 4<i32>:word32])
l0041BFAD:
	Mem544[ebp_504 - 44<i32>:word32] = 0<32>
	Mem545[ebp_504 - 40<i32>:word32] = 0xF<32>
	Mem546[ebp_504 - 60<i32>:byte] = 0<8>
	Mem547[ebp_504 - 4<i32>:byte] = 1<8>
	word32 edx_552
	word32 ecx_551 = fn00401470(ebp_504 - 36<i32>, out edx_552)
	branch al_516 == 0<8> l0041BFDF
l0041BFDF:
	Mem564[esp_505:word32] = 1<32>
	Mem565[ebp_504 - 4<i32>:byte] = 0x3E<8>
	word32 eax_578
	word32 edi_581
	word32 esi_583
	word32 ebp_584
	word32 esp_585
	call edi_501 (retsize: 4;)
		uses: ecx:ecx_551,edx:edx_552,Stack +0004:Mem565[esp_505:word32]
		defs: eax:eax_578,ebp:ebp_584,edi:edi_581,esi:esi_583,esp:esp_585
	Mem595[ebp_584 - 32<i32>:word32] = eax_578
	Mem597[esp_585:word32] = 6<32>
	Mem599[esp_585 - 4<i32>:word32] = 0<32>
	Mem601[ebp_584 - 4<i32>:byte] = 0x3F<8>
	word32 ecx_602 = Mem601[ebp_584 - 28<i32>:word32]
	Mem604[esp_585 - 8<i32>:word32] = ebp_584 - 60<i32>
	word32 ebp_606
	word32 ebx_4977
	word32 edx_4976
	word32 esi_4978
	word32 edi_4979
	word32 eax_605 = fn0040F7F0(ecx_602, ebp_584, esi_583, edi_581, Mem604[esp_585 - 8<i32>:word32], Mem604[esp_585 - 4<i32>:word32], Mem604[esp_585:word32], out edx_4976, out ebx_4977, out ebp_606, out esi_4978, out edi_4979)
	Mem620[ebp_606 - 4<i32>:byte] = 0x40<8>
	word32 esp_613 = <invalid>
	Mem622[esp_613:word32] = ebp_606 - 36<i32>
	word32 esi_630
	word32 ebp_631
	word32 ecx_4980
	word32 edx_4981
	word32 ebx_4982
	byte al_643 = fn00411F00(eax_605, 0x00431D70<p32>, es, ds, Mem622[esp_613:word32], out ecx_4980, out edx_4981, out ebx_4982, out ebp_631, out esi_630, out edi_628)
	Mem640[ebp_631 - 4<i32>:byte] = 0x3F<8>
	word32 esp_632 = <invalid>
	word32 edx_642 = Mem640[ebp_631 - 40<i32>:word32]
	branch edx_642 <u 0x10<32> l0041C054
l0041C026:
	word32 ecx_647 = Mem640[ebp_631 - 60<i32>:word32]
	word32 edx_648 = edx_642 + 1<32>
	branch edx_642 <u 0xFFF<32> l0041C04A
l0041C034:
	ecx_647 = Mem640[ecx_647 - 4<i32>:word32]
	edx_648 = edx_642 + 0x24<32>
	branch ecx_647 - ecx_647 <=u 0x23<32> l0041C04A
l0041C044:
	_invalid_parameter_noinfo_noreturn()
l0041C04A:
	Mem661[esp_632:word32] = edx_648
	Mem664[esp_632 - 4<i32>:word32] = ecx_647
	fn0042763F(Mem664[esp_632 - 4<i32>:word32])
l0041C054:
	Mem671[ebp_631 - 44<i32>:word32] = 0<32>
	Mem672[ebp_631 - 40<i32>:word32] = 0xF<32>
	Mem673[ebp_631 - 60<i32>:byte] = 0<8>
	Mem674[ebp_631 - 4<i32>:byte] = 1<8>
	word32 edx_4983
	fn00401470(ebp_631 - 36<i32>, out edx_4983)
	Mem690[esp_632:word32] = ebp_631 - 28<i32>
	branch al_643 == 0<8> l0041BE8D
l0041C080:
	ecx_1012 = fn0041C3B0(esi_630, es, ds, Mem690[esp_632:word32], out ebp_1092, out esi_102)
	esp_109 = <invalid>
l0041BFCF:
	Mem731[esp_505:word32] = ebp_504 - 28<i32>
	word32 esp_739 = <invalid>
	ecx_1012 = fn004204C0(es, ds, Mem731[esp_505:word32], out ebp_1092, out esi_102)
	esp_109 = esp_739 + 4<32>
l0041BB03:
	Mem756[ebp_1092 - 4<i32>:byte] = 0x2C<8>
	Mem760[esp_104 + 4<32>:word32] = 1<32>
	Mem764[ebp_1092 - 32<i32>:word32] = _Init(Mem760[esp_104 + 4<32>:(ptr32 (struct "std::locale"))], Mem760[esp_104 + 8<32>:bool])
	Mem766[esp_104 + 4<32>:word32] = 2<32>
	Mem768[esp_104:word32] = 0<32>
	Mem770[ebp_1092 - 4<i32>:byte] = 0x2D<8>
	word32 ecx_771 = Mem770[ebp_1092 - 28<i32>:word32]
	Mem773[esp_104 - 4<i32>:word32] = ebp_1092 - 60<i32>
	word32 ebp_777
	word32 ebx_4948
	word32 edx_4947
	word32 edi_4950
	word32 esi_4949
	word32 eax_776 = fn0040F7F0(ecx_771, ebp_1092, esi_102, _Init, Mem773[esp_104 - 4<i32>:word32], Mem773[esp_104:word32], Mem773[esp_104 + 4<i32>:word32], out edx_4947, out ebx_4948, out ebp_777, out esi_4949, out edi_4950)
	Mem791[ebp_777 - 4<i32>:byte] = 0x2E<8>
	word32 esp_784 = <invalid>
	Mem793[esp_784:word32] = ebp_777 - 36<i32>
	word32 ebp_807
	word32 ecx_4951
	word32 ebx_4953
	word32 esi_4954
	word32 edx_4952
	byte al_819 = fn00411F00(eax_776, 0x004326EC<p32>, es, ds, Mem793[esp_784:word32], out ecx_4951, out edx_4952, out ebx_4953, out ebp_807, out esi_4954, out edi_628)
	Mem816[ebp_807 - 4<i32>:byte] = 0x2D<8>
	word32 esp_808 = <invalid>
	word32 edx_818 = Mem816[ebp_807 - 40<i32>:word32]
	branch edx_818 <u 0x10<32> l0041BB7E
l0041BB50:
	word32 ecx_823 = Mem816[ebp_807 - 60<i32>:word32]
	word32 edx_824 = edx_818 + 1<32>
	branch edx_818 <u 0xFFF<32> l0041BB74
l0041BB5E:
	ecx_823 = Mem816[ecx_823 - 4<i32>:word32]
	edx_824 = edx_818 + 0x24<32>
	branch ecx_823 - ecx_823 <=u 0x23<32> l0041BB74
l0041BB6E:
	_invalid_parameter_noinfo_noreturn()
l0041BB74:
	Mem837[esp_808:word32] = edx_824
	Mem840[esp_808 - 4<i32>:word32] = ecx_823
	fn0042763F(Mem840[esp_808 - 4<i32>:word32])
l0041BB7E:
	Mem847[ebp_807 - 44<i32>:word32] = 0<32>
	Mem848[ebp_807 - 40<i32>:word32] = 0xF<32>
	Mem849[ebp_807 - 60<i32>:byte] = 0<8>
	Mem850[ebp_807 - 4<i32>:byte] = 1<8>
	word32 edx_855
	word32 ecx_854 = fn00401470(ebp_807 - 36<i32>, out edx_855)
	branch al_819 == 0<8> l0041BE87
l0041BE87:
	Mem871[esp_808:word32] = ebp_807 - 28<i32>
l0041BE8D:
	word32 esp_900 = <invalid>
	ecx_1012 = fn00425A20(edi_628, es, ds, out ebp_1092, out esi_102)
	esp_109 = esp_900 + 4<32>
l0041BBA4:
	Mem910[esp_808:word32] = 1<32>
	Mem911[ebp_807 - 4<i32>:byte] = 0x2F<8>
	word32 eax_912
	word32 edi_915
	word32 esi_917
	word32 ebp_918
	word32 esp_919
	call edi_628 (retsize: 4;)
		uses: ecx:ecx_854,edx:edx_855,Stack +0004:Mem911[esp_808:word32]
		defs: eax:eax_912,ebp:ebp_918,edi:edi_915,esi:esi_917,esp:esp_919
	Mem929[ebp_918 - 32<i32>:word32] = eax_912
	Mem931[esp_919:word32] = 6<32>
	Mem933[esp_919 - 4<i32>:word32] = 2<32>
	Mem935[ebp_918 - 4<i32>:byte] = 0x30<8>
	word32 ecx_936 = Mem935[ebp_918 - 28<i32>:word32]
	Mem938[esp_919 - 8<i32>:word32] = ebp_918 - 60<i32>
	word32 ebp_940
	word32 esi_4995
	word32 edi_4996
	word32 edx_4993
	word32 ebx_4994
	word32 eax_939 = fn0040F7F0(ecx_936, ebp_918, esi_917, edi_915, Mem938[esp_919 - 8<i32>:word32], Mem938[esp_919 - 4<i32>:word32], Mem938[esp_919:word32], out edx_4993, out ebx_4994, out ebp_940, out esi_4995, out edi_4996)
	Mem954[ebp_940 - 4<i32>:byte] = 0x31<8>
	word32 esp_947 = <invalid>
	Mem956[esp_947:word32] = ebp_940 - 36<i32>
	word32 edi_962
	word32 ecx_4997
	word32 edx_4998
	word32 ebx_4999
	byte al_977 = fn00411F00(eax_939, 0x004326C4<p32>, es, ds, Mem956[esp_947:word32], out ecx_4997, out edx_4998, out ebx_4999, out ebp_1092, out esi_102, out edi_962)
	Mem974[ebp_1092 - 4<i32>:byte] = 0x30<8>
	word32 esp_966 = <invalid>
	word32 edx_976 = Mem974[ebp_1092 - 40<i32>:word32]
	branch edx_976 <u 0x10<32> l0041BC19
l0041BBEB:
	word32 ecx_981 = Mem974[ebp_1092 - 60<i32>:word32]
	word32 edx_982 = edx_976 + 1<32>
	branch edx_976 <u 0xFFF<32> l0041BC0F
l0041BBF9:
	ecx_981 = Mem974[ecx_981 - 4<i32>:word32]
	edx_982 = edx_976 + 0x24<32>
	branch ecx_981 - ecx_981 <=u 0x23<32> l0041BC0F
l0041BC09:
	_invalid_parameter_noinfo_noreturn()
l0041BC0F:
	Mem995[esp_966:word32] = edx_982
	Mem998[esp_966 - 4<i32>:word32] = ecx_981
	fn0042763F(Mem998[esp_966 - 4<i32>:word32])
l0041BC19:
	Mem1005[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem1006[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem1007[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem1008[ebp_1092 - 4<i32>:byte] = 1<8>
	word32 edx_1013
	ecx_1012 = fn00401470(ebp_1092 - 36<i32>, out edx_1013)
	branch al_977 == 0<8> l0041BC99
l0041BC99:
	Mem1025[esp_966:word32] = 1<32>
	Mem1026[ebp_1092 - 4<i32>:byte] = 0x32<8>
	word32 eax_1039
	word32 edi_1042
	word32 esi_1044
	word32 ebp_1045
	word32 esp_1046
	call edi_962 (retsize: 4;)
		uses: ecx:ecx_1012,edx:edx_1013,Stack +0004:Mem1026[esp_966:word32]
		defs: eax:eax_1039,ebp:ebp_1045,edi:edi_1042,esi:esi_1044,esp:esp_1046
	Mem1056[ebp_1045 - 32<i32>:word32] = eax_1039
	Mem1058[esp_1046:word32] = 6<32>
	Mem1060[esp_1046 - 4<i32>:word32] = 2<32>
	Mem1062[ebp_1045 - 4<i32>:byte] = 0x33<8>
	word32 ecx_1063 = Mem1062[ebp_1045 - 28<i32>:word32]
	Mem1065[esp_1046 - 8<i32>:word32] = ebp_1045 - 60<i32>
	word32 ebp_1067
	word32 edi_5003
	word32 esi_5002
	word32 ebx_5001
	word32 edx_5000
	word32 eax_1066 = fn0040F7F0(ecx_1063, ebp_1045, esi_1044, edi_1042, Mem1065[esp_1046 - 8<i32>:word32], Mem1065[esp_1046 - 4<i32>:word32], Mem1065[esp_1046:word32], out edx_5000, out ebx_5001, out ebp_1067, out esi_5002, out edi_5003)
	Mem1081[ebp_1067 - 4<i32>:byte] = 0x34<8>
	word32 esp_1074 = <invalid>
	Mem1083[esp_1074:word32] = ebp_1067 - 36<i32>
	word32 edi_1089
	word32 ecx_5004
	word32 ebx_5006
	word32 edx_5005
	byte al_1104 = fn00411F00(eax_1066, 0x004326CC<p32>, es, ds, Mem1083[esp_1074:word32], out ecx_5004, out edx_5005, out ebx_5006, out ebp_1092, out esi_102, out edi_1089)
	Mem1101[ebp_1092 - 4<i32>:byte] = 0x33<8>
	word32 esp_1093 = <invalid>
	word32 edx_1103 = Mem1101[ebp_1092 - 40<i32>:word32]
	branch edx_1103 <u 0x10<32> l0041BD0E
l0041BCE0:
	word32 ecx_1108 = Mem1101[ebp_1092 - 60<i32>:word32]
	word32 edx_1109 = edx_1103 + 1<32>
	branch edx_1103 <u 0xFFF<32> l0041BD04
l0041BCEE:
	ecx_1108 = Mem1101[ecx_1108 - 4<i32>:word32]
	edx_1109 = edx_1103 + 0x24<32>
	branch ecx_1108 - ecx_1108 <=u 0x23<32> l0041BD04
l0041BCFE:
	_invalid_parameter_noinfo_noreturn()
l0041BD04:
	Mem1122[esp_1093:word32] = edx_1109
	Mem1125[esp_1093 - 4<i32>:word32] = ecx_1108
	fn0042763F(Mem1125[esp_1093 - 4<i32>:word32])
l0041BD0E:
	Mem1132[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem1133[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem1134[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem1135[ebp_1092 - 4<i32>:byte] = 1<8>
	word32 edx_1140
	ecx_1012 = fn00401470(ebp_1092 - 36<i32>, out edx_1140)
	branch al_1104 == 0<8> l0041BD8E
l0041BD8E:
	Mem1152[esp_1093:word32] = 1<32>
	Mem1153[ebp_1092 - 4<i32>:byte] = 0x35<8>
	word32 eax_1166
	word32 edi_1169
	word32 esi_1171
	word32 ebp_1172
	word32 esp_1173
	call edi_1089 (retsize: 4;)
		uses: ecx:ecx_1139,edx:edx_1140,Stack +0004:Mem1153[esp_1093:word32]
		defs: eax:eax_1166,ebp:ebp_1172,edi:edi_1169,esi:esi_1171,esp:esp_1173
	Mem1183[ebp_1172 - 32<i32>:word32] = eax_1166
	Mem1185[esp_1173:word32] = 4<32>
	Mem1187[esp_1173 - 4<i32>:word32] = 2<32>
	Mem1189[ebp_1172 - 4<i32>:byte] = 0x36<8>
	word32 ecx_1190 = Mem1189[ebp_1172 - 28<i32>:word32]
	Mem1192[esp_1173 - 8<i32>:word32] = ebp_1172 - 60<i32>
	word32 ebp_1194
	word32 esi_5009
	word32 ebx_5008
	word32 edx_5007
	word32 edi_5010
	word32 eax_1193 = fn0040F7F0(ecx_1190, ebp_1172, esi_1171, edi_1169, Mem1192[esp_1173 - 8<i32>:word32], Mem1192[esp_1173 - 4<i32>:word32], Mem1192[esp_1173:word32], out edx_5007, out ebx_5008, out ebp_1194, out esi_5009, out edi_5010)
	Mem1208[ebp_1194 - 4<i32>:byte] = 0x37<8>
	word32 esp_1201 = <invalid>
	Mem1210[esp_1201:word32] = ebp_1194 - 36<i32>
	word32 ebx_5013
	word32 edx_5012
	word32 ecx_5011
	word32 edi_5014
	byte al_1231 = fn00411F00(eax_1193, 0x004326D4<p32>, es, ds, Mem1210[esp_1201:word32], out ecx_5011, out edx_5012, out ebx_5013, out ebp_1092, out esi_102, out edi_5014)
	Mem1228[ebp_1092 - 4<i32>:byte] = 0x36<8>
	word32 esp_1220 = <invalid>
	word32 edx_1230 = Mem1228[ebp_1092 - 40<i32>:word32]
	branch edx_1230 <u 0x10<32> l0041BE03
l0041BDD5:
	word32 ecx_1235 = Mem1228[ebp_1092 - 60<i32>:word32]
	word32 edx_1236 = edx_1230 + 1<32>
	branch edx_1230 <u 0xFFF<32> l0041BDF9
l0041BDE3:
	ecx_1235 = Mem1228[ecx_1235 - 4<i32>:word32]
	edx_1236 = edx_1230 + 0x24<32>
	branch ecx_1235 - ecx_1235 <=u 0x23<32> l0041BDF9
l0041BDF3:
	_invalid_parameter_noinfo_noreturn()
l0041BDF9:
	Mem1249[esp_1220:word32] = edx_1236
	Mem1252[esp_1220 - 4<i32>:word32] = ecx_1235
	fn0042763F(Mem1252[esp_1220 - 4<i32>:word32])
l0041BE03:
	Mem1259[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem1260[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem1261[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem1262[ebp_1092 - 4<i32>:byte] = 1<8>
	esp_109 = esp_1220 + 4<32>
	word32 edx_5031
	ecx_1012 = fn00401470(ebp_1092 - 36<i32>, out edx_5031)
	branch al_1231 == 0<8> l0041C0AC
l0041BE29:
	word32 edi_1277 = Mem1262[ebp_1092 - 28<i32>:word32]
	word32 edi_1278 = edi_1277 + 0x18<32>
	word32 eax_1279 = _errno()
	branch Mem1262[edi_1277 + 0x2C<32>:word32] <u 0x10<32> l0041BE3F
l0041BE3D:
	edi_1278 = Mem1262[edi_1277 + 0x18<32>:word32]
l0041BE3F:
	Mem1287[esp_1220:word32] = 0<32>
	Mem1291[eax_1279:word32] = 0<32>
	Mem1293[esp_1220 - 4<i32>:word32] = ebp_1092 - 32<i32>
	Mem1296[esp_1220 - 8<i32>:word32] = edi_1278
	word32 eax_1297 = strtoul(Mem1296[esp_1220 - 8<i32>:(ptr32 charconst )], Mem1296[esp_1220 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem1296[esp_1220:int32])
	esp_109 = esp_1220 + 4<32>
	branch edi_1278 != Mem1296[ebp_1092 - 32<i32>:word32] l0041BE65
l0041BE5A:
	Mem1302[esp_1220:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem1302[esp_1220:(ptr32 charconst )])
	esp_109 = esp_1220
l0041BE65:
	branch Mem1304[eax_1279:word32] != 0x22<32> l0041BE75
l0041BE6A:
	esp_109 = esp_109 - 4<i32>
	Mem1309[esp_109:word32] = 0x4318C4<32>
	_Xout_of_range(Mem1309[esp_109:(ptr32 charconst )])
l0041BE75:
	Mem1320[esi_102 + 96<i32>:word32] = (eax_1297 & 0xFFFFFF<32>) + 0x22000000<32>
l0041BD30:
	word32 edi_1321 = Mem1135[ebp_1092 - 28<i32>:word32]
	word32 edi_1322 = edi_1321 + 0x18<32>
	word32 eax_1323 = _errno()
	branch Mem1135[edi_1321 + 0x2C<32>:word32] <u 0x10<32> l0041BD46
l0041BD44:
	edi_1322 = Mem1135[edi_1321 + 0x18<32>:word32]
l0041BD46:
	Mem1330[esp_1093:word32] = 0<32>
	Mem1334[eax_1323:word32] = 0<32>
	Mem1336[esp_1093 - 4<i32>:word32] = ebp_1092 - 32<i32>
	Mem1339[esp_1093 - 8<i32>:word32] = edi_1322
	word32 eax_1340 = strtoul(Mem1339[esp_1093 - 8<i32>:(ptr32 charconst )], Mem1339[esp_1093 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem1339[esp_1093:int32])
	esp_109 = esp_1093 + 4<32>
	branch edi_1322 != Mem1339[ebp_1092 - 32<i32>:word32] l0041BD6C
l0041BD61:
	Mem1345[esp_1093:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem1345[esp_1093:(ptr32 charconst )])
	esp_109 = esp_1093
l0041BD6C:
	branch Mem1347[eax_1323:word32] != 0x22<32> l0041BD7C
l0041BD71:
	esp_109 = esp_109 - 4<i32>
	Mem1352[esp_109:word32] = 0x4318C4<32>
	_Xout_of_range(Mem1352[esp_109:(ptr32 charconst )])
l0041BD7C:
	Mem1363[esi_102 + 96<i32>:word32] = (eax_1340 & 0xFFFFFF<32>) + 0x21000000<32>
l0041BC3B:
	word32 edi_1364 = Mem1008[ebp_1092 - 28<i32>:word32]
	word32 edi_1365 = edi_1364 + 0x18<32>
	word32 eax_1366 = _errno()
	branch Mem1008[edi_1364 + 0x2C<32>:word32] <u 0x10<32> l0041BC51
l0041BC4F:
	edi_1365 = Mem1008[edi_1364 + 0x18<32>:word32]
l0041BC51:
	Mem1373[esp_966:word32] = 0<32>
	Mem1377[eax_1366:word32] = 0<32>
	Mem1379[esp_966 - 4<i32>:word32] = ebp_1092 - 32<i32>
	Mem1382[esp_966 - 8<i32>:word32] = edi_1365
	word32 eax_1383 = strtoul(Mem1382[esp_966 - 8<i32>:(ptr32 charconst )], Mem1382[esp_966 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem1382[esp_966:int32])
	esp_109 = esp_966 + 4<32>
	branch edi_1365 != Mem1382[ebp_1092 - 32<i32>:word32] l0041BC77
l0041BC6C:
	Mem1388[esp_966:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem1388[esp_966:(ptr32 charconst )])
	esp_109 = esp_966
l0041BC77:
	branch Mem1390[eax_1366:word32] != 0x22<32> l0041BC87
l0041BC7C:
	esp_109 = esp_109 - 4<i32>
	Mem1395[esp_109:word32] = 0x4318C4<32>
	_Xout_of_range(Mem1395[esp_109:(ptr32 charconst )])
l0041BC87:
	Mem1406[esi_102 + 96<i32>:word32] = (eax_1383 & 0xFFFFFF<32>) + 0x20000000<32>
l0041BAF3:
	Mem1413[esp_104 + 4<32>:word32] = ebp_1092 - 28<i32>
	word32 esp_1427 = <invalid>
	ecx_1012 = fn00424170(esi_102, es, ds, Mem1413[esp_104 + 4<32>:word32], out ebp_1092, out esi_102)
	esp_109 = esp_1427 + 4<32>
l0041B9A7:
	Mem1444[ebp_1092 - 4<i32>:byte] = 0x26<8>
	Mem1448[esp_104 + 4<32>:word32] = 1<32>
	Mem1452[ebp_1092 - 32<i32>:word32] = _Init(Mem1448[esp_104 + 4<32>:(ptr32 (struct "std::locale"))], Mem1448[esp_104 + 8<32>:bool])
	Mem1454[esp_104 + 4<32>:word32] = 3<32>
	Mem1456[esp_104:word32] = 0<32>
	Mem1458[ebp_1092 - 4<i32>:byte] = 0x27<8>
	word32 ecx_1459 = Mem1458[ebp_1092 - 28<i32>:word32]
	Mem1461[esp_104 - 4<i32>:word32] = ebp_1092 - 60<i32>
	word32 esi_4941
	word32 ebx_4940
	word32 edi_4942
	word32 edx_4939
	word32 ebp_1465
	word32 eax_1464 = fn0040F7F0(ecx_1459, ebp_1092, esi_102, _Init, Mem1461[esp_104 - 4<i32>:word32], Mem1461[esp_104:word32], Mem1461[esp_104 + 4<i32>:word32], out edx_4939, out ebx_4940, out ebp_1465, out esi_4941, out edi_4942)
	Mem1479[ebp_1465 - 4<i32>:byte] = 0x28<8>
	word32 esp_1472 = <invalid>
	Mem1481[esp_1472:word32] = ebp_1465 - 36<i32>
	word32 edx_4944
	word32 esi_4946
	word32 ecx_4943
	word32 ebx_4945
	word32 edi_1492
	byte al_1507 = fn00411F00(eax_1464, 0x004326E4<p32>, es, ds, Mem1481[esp_1472:word32], out ecx_4943, out edx_4944, out ebx_4945, out ebp_1092, out esi_4946, out edi_1492)
	Mem1504[ebp_1092 - 4<i32>:byte] = 0x27<8>
	word32 esp_1496 = <invalid>
	word32 edx_1506 = Mem1504[ebp_1092 - 40<i32>:word32]
	branch edx_1506 <u 0x10<32> l0041BA22
l0041B9F4:
	word32 ecx_1511 = Mem1504[ebp_1092 - 60<i32>:word32]
	word32 edx_1512 = edx_1506 + 1<32>
	branch edx_1506 <u 0xFFF<32> l0041BA18
l0041BA02:
	ecx_1511 = Mem1504[ecx_1511 - 4<i32>:word32]
	edx_1512 = edx_1506 + 0x24<32>
	branch ecx_1511 - ecx_1511 <=u 0x23<32> l0041BA18
l0041BA12:
	_invalid_parameter_noinfo_noreturn()
l0041BA18:
	Mem1525[esp_1496:word32] = edx_1512
	Mem1528[esp_1496 - 4<i32>:word32] = ecx_1511
	fn0042763F(Mem1528[esp_1496 - 4<i32>:word32])
l0041BA22:
	Mem1535[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem1536[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem1537[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem1538[ebp_1092 - 4<i32>:byte] = 1<8>
	esp_109 = esp_1496 + 4<32>
	word32 edx_1543
	word32 ecx_1542 = fn00401470(ebp_1092 - 36<i32>, out edx_1543)
	branch al_1507 != 0<8> l0041C0A1
l0041BA48:
	Mem1555[esp_1496:word32] = 1<32>
	Mem1556[ebp_1092 - 4<i32>:byte] = 0x29<8>
	word32 eax_1569
	word32 edi_1572
	word32 esi_1574
	word32 ebp_1575
	word32 esp_1576
	call edi_1492 (retsize: 4;)
		uses: ecx:ecx_1542,edx:edx_1543,Stack +0004:Mem1556[esp_1496:word32]
		defs: eax:eax_1569,ebp:ebp_1575,edi:edi_1572,esi:esi_1574,esp:esp_1576
	Mem1586[ebp_1575 - 32<i32>:word32] = eax_1569
	Mem1588[esp_1576:word32] = 2<32>
	Mem1590[esp_1576 - 4<i32>:word32] = 0<32>
	Mem1592[ebp_1575 - 4<i32>:byte] = 0x2A<8>
	word32 ecx_1593 = Mem1592[ebp_1575 - 28<i32>:word32]
	Mem1595[esp_1576 - 8<i32>:word32] = ebp_1575 - 60<i32>
	word32 ebp_1597
	word32 edi_4987
	word32 ebx_4985
	word32 edx_4984
	word32 esi_4986
	word32 eax_1596 = fn0040F7F0(ecx_1593, ebp_1575, esi_1574, edi_1572, Mem1595[esp_1576 - 8<i32>:word32], Mem1595[esp_1576 - 4<i32>:word32], Mem1595[esp_1576:word32], out edx_4984, out ebx_4985, out ebp_1597, out esi_4986, out edi_4987)
	Mem1611[ebp_1597 - 4<i32>:byte] = 0x2B<8>
	word32 esp_1604 = <invalid>
	Mem1613[esp_1604:word32] = ebp_1597 - 36<i32>
	word32 esi_1621
	word32 ebp_1622
	word32 edx_4989
	word32 ebx_4990
	word32 ecx_4988
	word32 edi_4991
	byte al_1634 = fn00411F00(eax_1596, 0x004326E8<p32>, es, ds, Mem1613[esp_1604:word32], out ecx_4988, out edx_4989, out ebx_4990, out ebp_1622, out esi_1621, out edi_4991)
	Mem1631[ebp_1622 - 4<i32>:byte] = 0x2A<8>
	word32 esp_1623 = <invalid>
	word32 edx_1633 = Mem1631[ebp_1622 - 40<i32>:word32]
	branch edx_1633 <u 0x10<32> l0041BABD
l0041BA8F:
	word32 ecx_1638 = Mem1631[ebp_1622 - 60<i32>:word32]
	word32 edx_1639 = edx_1633 + 1<32>
	branch edx_1633 <u 0xFFF<32> l0041BAB3
l0041BA9D:
	ecx_1638 = Mem1631[ecx_1638 - 4<i32>:word32]
	edx_1639 = edx_1633 + 0x24<32>
	branch ecx_1638 - ecx_1638 <=u 0x23<32> l0041BAB3
l0041BAAD:
	_invalid_parameter_noinfo_noreturn()
l0041BAB3:
	Mem1652[esp_1623:word32] = edx_1639
	Mem1655[esp_1623 - 4<i32>:word32] = ecx_1638
	fn0042763F(Mem1655[esp_1623 - 4<i32>:word32])
l0041BABD:
	Mem1662[ebp_1622 - 44<i32>:word32] = 0<32>
	Mem1663[ebp_1622 - 40<i32>:word32] = 0xF<32>
	Mem1664[ebp_1622 - 60<i32>:byte] = 0<8>
	Mem1665[ebp_1622 - 4<i32>:byte] = 1<8>
	word32 edx_4992
	fn00401470(ebp_1622 - 36<i32>, out edx_4992)
	Mem1681[esp_1623:word32] = ebp_1622 - 28<i32>
	esp_1680 = esp_1623
	branch al_1634 != 0<8> l0041C0A7
l0041BAE9:
	word32 esp_1704 = <invalid>
	ecx_1012 = fn004237A0(esi_1621, es, ds, out ebp_1092, out esi_102)
	esp_109 = esp_1704 + 4<32>
l0041B578:
	Mem1721[ebp_1092 - 4<i32>:byte] = 0x17<8>
	Mem1725[esp_104 + 4<32>:word32] = 1<32>
	Mem1729[ebp_1092 - 32<i32>:word32] = _Init(Mem1725[esp_104 + 4<32>:(ptr32 (struct "std::locale"))], Mem1725[esp_104 + 8<32>:bool])
	Mem1731[esp_104 + 4<32>:word32] = 2<32>
	Mem1733[esp_104:word32] = 0<32>
	Mem1735[ebp_1092 - 4<i32>:byte] = 0x18<8>
	word32 ecx_1736 = Mem1735[ebp_1092 - 28<i32>:word32]
	Mem1738[esp_104 - 4<i32>:word32] = ebp_1092 - 60<i32>
	word32 edx_4932
	word32 esi_4934
	word32 ebx_4933
	word32 edi_4935
	word32 ebp_1742
	word32 eax_1741 = fn0040F7F0(ecx_1736, ebp_1092, esi_102, _Init, Mem1738[esp_104 - 4<i32>:word32], Mem1738[esp_104:word32], Mem1738[esp_104 + 4<i32>:word32], out edx_4932, out ebx_4933, out ebp_1742, out esi_4934, out edi_4935)
	Mem1756[ebp_1742 - 4<i32>:byte] = 0x19<8>
	word32 esp_1749 = <invalid>
	Mem1758[esp_1749:word32] = ebp_1742 - 36<i32>
	word32 ebx_4938
	word32 ecx_4936
	word32 edx_4937
	word32 edi_1769
	word32 esi_1771
	byte al_1784 = fn00411F00(eax_1741, 0x004326DC<p32>, es, ds, Mem1758[esp_1749:word32], out ecx_4936, out edx_4937, out ebx_4938, out ebp_1092, out esi_1771, out edi_1769)
	Mem1781[ebp_1092 - 4<i32>:byte] = 0x18<8>
	word32 esp_1773 = <invalid>
	word32 edx_1783 = Mem1781[ebp_1092 - 40<i32>:word32]
	branch edx_1783 <u 0x10<32> l0041B5F3
l0041B5C5:
	word32 ecx_1788 = Mem1781[ebp_1092 - 60<i32>:word32]
	word32 edx_1789 = edx_1783 + 1<32>
	branch edx_1783 <u 0xFFF<32> l0041B5E9
l0041B5D3:
	ecx_1788 = Mem1781[ecx_1788 - 4<i32>:word32]
	edx_1789 = edx_1783 + 0x24<32>
	branch ecx_1788 - ecx_1788 <=u 0x23<32> l0041B5E9
l0041B5E3:
	_invalid_parameter_noinfo_noreturn()
l0041B5E9:
	Mem1802[esp_1773:word32] = edx_1789
	Mem1805[esp_1773 - 4<i32>:word32] = ecx_1788
	fn0042763F(Mem1805[esp_1773 - 4<i32>:word32])
l0041B5F3:
	Mem1812[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem1813[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem1814[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem1815[ebp_1092 - 4<i32>:byte] = 1<8>
	word32 edx_5015
	fn00401470(ebp_1092 - 36<i32>, out edx_5015)
	esp_109 = esp_1773 + 4<32>
	branch al_1784 != 0<8> l0041C0A1
l0041B619:
	Mem1832[esp_1773:word32] = 1<32>
	Mem1833[ebp_1092 - 4<i32>:byte] = 0x1A<8>
	Mem1837[ebp_1092 - 32<i32>:word32] = _Init(Mem1833[esp_1773:(ptr32 (struct "std::locale"))], Mem1833[esp_1773 + 4<i32>:bool])
	Mem1839[esp_1773:word32] = 2<32>
	Mem1841[esp_1773 - 4<i32>:word32] = 0<32>
	Mem1843[ebp_1092 - 4<i32>:byte] = 0x1B<8>
	word32 ecx_1844 = Mem1843[ebp_1092 - 28<i32>:word32]
	Mem1846[esp_1773 - 8<i32>:word32] = ebp_1092 - 60<i32>
	word32 edx_5016
	word32 ebx_5017
	word32 edi_5019
	word32 ebp_1852
	word32 esi_5018
	word32 eax_1851 = fn0040F7F0(ecx_1844, ebp_1092, esi_1771, edi_1769, Mem1846[esp_1773 - 8<i32>:word32], Mem1846[esp_1773 - 4<i32>:word32], Mem1846[esp_1773:word32], out edx_5016, out ebx_5017, out ebp_1852, out esi_5018, out edi_5019)
	Mem1866[ebp_1852 - 4<i32>:byte] = 0x1C<8>
	word32 esp_1859 = <invalid>
	Mem1868[esp_1859:word32] = ebp_1852 - 36<i32>
	word32 ecx_5020
	word32 esi_5023
	word32 ebx_5022
	word32 edi_1884
	word32 ebp_1887
	word32 edx_5021
	byte al_1899 = fn00411F00(eax_1851, 0x004326E0<p32>, es, ds, Mem1868[esp_1859:word32], out ecx_5020, out edx_5021, out ebx_5022, out ebp_1887, out esi_5023, out edi_1884)
	Mem1896[ebp_1887 - 4<i32>:byte] = 0x1B<8>
	word32 esp_1888 = <invalid>
	word32 edx_1898 = Mem1896[ebp_1887 - 40<i32>:word32]
	branch edx_1898 <u 0x10<32> l0041B68E
l0041B660:
	word32 ecx_1903 = Mem1896[ebp_1887 - 60<i32>:word32]
	word32 edx_1904 = edx_1898 + 1<32>
	branch edx_1898 <u 0xFFF<32> l0041B684
l0041B66E:
	ecx_1903 = Mem1896[ecx_1903 - 4<i32>:word32]
	edx_1904 = edx_1898 + 0x24<32>
	branch ecx_1903 - ecx_1903 <=u 0x23<32> l0041B684
l0041B67E:
	_invalid_parameter_noinfo_noreturn()
l0041B684:
	Mem1917[esp_1888:word32] = edx_1904
	Mem1920[esp_1888 - 4<i32>:word32] = ecx_1903
	fn0042763F(Mem1920[esp_1888 - 4<i32>:word32])
l0041B68E:
	Mem1927[ebp_1887 - 44<i32>:word32] = 0<32>
	Mem1928[ebp_1887 - 40<i32>:word32] = 0xF<32>
	Mem1929[ebp_1887 - 60<i32>:byte] = 0<8>
	Mem1930[ebp_1887 - 4<i32>:byte] = 1<8>
	word32 edx_1935
	word32 ecx_1934 = fn00401470(ebp_1887 - 36<i32>, out edx_1935)
	branch al_1899 == 0<8> l0041B997
l0041B997:
	Mem1951[esp_1888:word32] = ebp_1887 - 28<i32>
	word32 esp_1969 = <invalid>
	ecx_1012 = fn0041EE50(es, ds, Mem1951[esp_1888:word32], out ebp_1092, out esi_102)
	esp_109 = esp_1969 + 4<32>
l0041B6B4:
	Mem1986[esp_1888:word32] = 1<32>
	Mem1987[ebp_1887 - 4<i32>:byte] = 0x1D<8>
	word32 eax_1990
	word32 edi_1993
	word32 esi_1995
	word32 ebp_1996
	word32 esp_1997
	call edi_1884 (retsize: 4;)
		uses: ecx:ecx_1934,edx:edx_1935,Stack +0004:Mem1987[esp_1888:word32]
		defs: eax:eax_1990,ebp:ebp_1996,edi:edi_1993,esi:esi_1995,esp:esp_1997
	Mem2007[ebp_1996 - 32<i32>:word32] = eax_1990
	Mem2009[esp_1997:word32] = 6<32>
	Mem2011[esp_1997 - 4<i32>:word32] = 2<32>
	Mem2013[ebp_1996 - 4<i32>:byte] = 0x1E<8>
	word32 ecx_2014 = Mem2013[ebp_1996 - 28<i32>:word32]
	Mem2016[esp_1997 - 8<i32>:word32] = ebp_1996 - 60<i32>
	word32 edx_5024
	word32 esi_5026
	word32 ebx_5025
	word32 edi_5027
	word32 ebp_2018
	word32 eax_2017 = fn0040F7F0(ecx_2014, ebp_1996, esi_1995, edi_1993, Mem2016[esp_1997 - 8<i32>:word32], Mem2016[esp_1997 - 4<i32>:word32], Mem2016[esp_1997:word32], out edx_5024, out ebx_5025, out ebp_2018, out esi_5026, out edi_5027)
	Mem2032[ebp_2018 - 4<i32>:byte] = 0x1F<8>
	word32 esp_2025 = <invalid>
	Mem2034[esp_2025:word32] = ebp_2018 - 36<i32>
	word32 ebx_5030
	word32 edx_5029
	word32 ecx_5028
	word32 edi_2040
	byte al_2055 = fn00411F00(eax_2017, 0x004326C4<p32>, es, ds, Mem2034[esp_2025:word32], out ecx_5028, out edx_5029, out ebx_5030, out ebp_1092, out esi_102, out edi_2040)
	Mem2052[ebp_1092 - 4<i32>:byte] = 0x1E<8>
	word32 esp_2044 = <invalid>
	word32 edx_2054 = Mem2052[ebp_1092 - 40<i32>:word32]
	branch edx_2054 <u 0x10<32> l0041B729
l0041B6FB:
	word32 ecx_2059 = Mem2052[ebp_1092 - 60<i32>:word32]
	word32 edx_2060 = edx_2054 + 1<32>
	branch edx_2054 <u 0xFFF<32> l0041B71F
l0041B709:
	ecx_2059 = Mem2052[ecx_2059 - 4<i32>:word32]
	edx_2060 = edx_2054 + 0x24<32>
	branch ecx_2059 - ecx_2059 <=u 0x23<32> l0041B71F
l0041B719:
	_invalid_parameter_noinfo_noreturn()
l0041B71F:
	Mem2073[esp_2044:word32] = edx_2060
	Mem2076[esp_2044 - 4<i32>:word32] = ecx_2059
	fn0042763F(Mem2076[esp_2044 - 4<i32>:word32])
l0041B729:
	Mem2083[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem2084[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem2085[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem2086[ebp_1092 - 4<i32>:byte] = 1<8>
	word32 edx_2091
	ecx_1012 = fn00401470(ebp_1092 - 36<i32>, out edx_2091)
	branch al_2055 == 0<8> l0041B7A9
l0041B7A9:
	Mem2103[esp_2044:word32] = 1<32>
	Mem2104[ebp_1092 - 4<i32>:byte] = 0x20<8>
	word32 eax_2117
	word32 edi_2120
	word32 esi_2122
	word32 ebp_2123
	word32 esp_2124
	call edi_2040 (retsize: 4;)
		uses: ecx:ecx_2090,edx:edx_2091,Stack +0004:Mem2104[esp_2044:word32]
		defs: eax:eax_2117,ebp:ebp_2123,edi:edi_2120,esi:esi_2122,esp:esp_2124
	Mem2134[ebp_2123 - 32<i32>:word32] = eax_2117
	Mem2136[esp_2124:word32] = 6<32>
	Mem2138[esp_2124 - 4<i32>:word32] = 2<32>
	Mem2140[ebp_2123 - 4<i32>:byte] = 0x21<8>
	word32 ecx_2141 = Mem2140[ebp_2123 - 28<i32>:word32]
	Mem2143[esp_2124 - 8<i32>:word32] = ebp_2123 - 60<i32>
	word32 edx_5032
	word32 ebx_5033
	word32 esi_5034
	word32 ebp_2145
	word32 edi_5035
	word32 eax_2144 = fn0040F7F0(ecx_2141, ebp_2123, esi_2122, edi_2120, Mem2143[esp_2124 - 8<i32>:word32], Mem2143[esp_2124 - 4<i32>:word32], Mem2143[esp_2124:word32], out edx_5032, out ebx_5033, out ebp_2145, out esi_5034, out edi_5035)
	Mem2159[ebp_2145 - 4<i32>:byte] = 0x22<8>
	word32 esp_2152 = <invalid>
	Mem2161[esp_2152:word32] = ebp_2145 - 36<i32>
	word32 ecx_5036
	word32 ebx_5038
	word32 edi_2167
	word32 edx_5037
	byte al_2182 = fn00411F00(eax_2144, 0x004326CC<p32>, es, ds, Mem2161[esp_2152:word32], out ecx_5036, out edx_5037, out ebx_5038, out ebp_1092, out esi_102, out edi_2167)
	Mem2179[ebp_1092 - 4<i32>:byte] = 0x21<8>
	word32 esp_2171 = <invalid>
	word32 edx_2181 = Mem2179[ebp_1092 - 40<i32>:word32]
	branch edx_2181 <u 0x10<32> l0041B81E
l0041B7F0:
	word32 ecx_2186 = Mem2179[ebp_1092 - 60<i32>:word32]
	word32 edx_2187 = edx_2181 + 1<32>
	branch edx_2181 <u 0xFFF<32> l0041B814
l0041B7FE:
	ecx_2186 = Mem2179[ecx_2186 - 4<i32>:word32]
	edx_2187 = edx_2181 + 0x24<32>
	branch ecx_2186 - ecx_2186 <=u 0x23<32> l0041B814
l0041B80E:
	_invalid_parameter_noinfo_noreturn()
l0041B814:
	Mem2200[esp_2171:word32] = edx_2187
	Mem2203[esp_2171 - 4<i32>:word32] = ecx_2186
	fn0042763F(Mem2203[esp_2171 - 4<i32>:word32])
l0041B81E:
	Mem2210[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem2211[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem2212[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem2213[ebp_1092 - 4<i32>:byte] = 1<8>
	word32 edx_2218
	ecx_1012 = fn00401470(ebp_1092 - 36<i32>, out edx_2218)
	branch al_2182 == 0<8> l0041B89E
l0041B89E:
	Mem2230[esp_2171:word32] = 1<32>
	Mem2231[ebp_1092 - 4<i32>:byte] = 0x23<8>
	word32 eax_2244
	word32 edi_2247
	word32 esi_2249
	word32 ebp_2250
	word32 esp_2251
	call edi_2167 (retsize: 4;)
		uses: ecx:ecx_2217,edx:edx_2218,Stack +0004:Mem2231[esp_2171:word32]
		defs: eax:eax_2244,ebp:ebp_2250,edi:edi_2247,esi:esi_2249,esp:esp_2251
	Mem2261[ebp_2250 - 32<i32>:word32] = eax_2244
	Mem2263[esp_2251:word32] = 4<32>
	Mem2265[esp_2251 - 4<i32>:word32] = 2<32>
	Mem2267[ebp_2250 - 4<i32>:byte] = 0x24<8>
	word32 ecx_2268 = Mem2267[ebp_2250 - 28<i32>:word32]
	Mem2270[esp_2251 - 8<i32>:word32] = ebp_2250 - 60<i32>
	word32 esi_5041
	word32 edi_5042
	word32 edx_5039
	word32 ebx_5040
	word32 ebp_2272
	word32 eax_2271 = fn0040F7F0(ecx_2268, ebp_2250, esi_2249, edi_2247, Mem2270[esp_2251 - 8<i32>:word32], Mem2270[esp_2251 - 4<i32>:word32], Mem2270[esp_2251:word32], out edx_5039, out ebx_5040, out ebp_2272, out esi_5041, out edi_5042)
	Mem2286[ebp_2272 - 4<i32>:byte] = 0x25<8>
	word32 esp_2279 = <invalid>
	Mem2288[esp_2279:word32] = ebp_2272 - 36<i32>
	word32 ecx_5043
	word32 ebx_5045
	word32 edi_5046
	word32 edx_5044
	byte al_2309 = fn00411F00(eax_2271, 0x004326D4<p32>, es, ds, Mem2288[esp_2279:word32], out ecx_5043, out edx_5044, out ebx_5045, out ebp_1092, out esi_102, out edi_5046)
	Mem2306[ebp_1092 - 4<i32>:byte] = 0x24<8>
	word32 esp_2298 = <invalid>
	word32 edx_2308 = Mem2306[ebp_1092 - 40<i32>:word32]
	branch edx_2308 <u 0x10<32> l0041B913
l0041B8E5:
	word32 ecx_2313 = Mem2306[ebp_1092 - 60<i32>:word32]
	word32 edx_2314 = edx_2308 + 1<32>
	branch edx_2308 <u 0xFFF<32> l0041B909
l0041B8F3:
	ecx_2313 = Mem2306[ecx_2313 - 4<i32>:word32]
	edx_2314 = edx_2308 + 0x24<32>
	branch ecx_2313 - ecx_2313 <=u 0x23<32> l0041B909
l0041B903:
	_invalid_parameter_noinfo_noreturn()
l0041B909:
	Mem2327[esp_2298:word32] = edx_2314
	Mem2330[esp_2298 - 4<i32>:word32] = ecx_2313
	fn0042763F(Mem2330[esp_2298 - 4<i32>:word32])
l0041B913:
	Mem2337[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem2338[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem2339[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem2340[ebp_1092 - 4<i32>:byte] = 1<8>
	esp_109 = esp_2298 + 4<32>
	word32 edx_5047
	ecx_1012 = fn00401470(ebp_1092 - 36<i32>, out edx_5047)
	branch al_2309 == 0<8> l0041C0AC
l0041B939:
	word32 edi_2355 = Mem2340[ebp_1092 - 28<i32>:word32]
	word32 edi_2356 = edi_2355 + 0x18<32>
	word32 eax_2357 = _errno()
	branch Mem2340[edi_2355 + 0x2C<32>:word32] <u 0x10<32> l0041B94F
l0041B94D:
	edi_2356 = Mem2340[edi_2355 + 0x18<32>:word32]
l0041B94F:
	Mem2365[esp_2298:word32] = 0<32>
	Mem2369[eax_2357:word32] = 0<32>
	Mem2371[esp_2298 - 4<i32>:word32] = ebp_1092 - 32<i32>
	Mem2374[esp_2298 - 8<i32>:word32] = edi_2356
	word32 eax_2375 = strtoul(Mem2374[esp_2298 - 8<i32>:(ptr32 charconst )], Mem2374[esp_2298 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2374[esp_2298:int32])
	esp_109 = esp_2298 + 4<32>
	branch edi_2356 != Mem2374[ebp_1092 - 32<i32>:word32] l0041B975
l0041B96A:
	Mem2380[esp_2298:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem2380[esp_2298:(ptr32 charconst )])
	esp_109 = esp_2298
l0041B975:
	branch Mem2382[eax_2357:word32] != 0x22<32> l0041B985
l0041B97A:
	esp_109 = esp_109 - 4<i32>
	Mem2387[esp_109:word32] = 0x4318C4<32>
	_Xout_of_range(Mem2387[esp_109:(ptr32 charconst )])
l0041B985:
	Mem2398[esi_102 + 96<i32>:word32] = (eax_2375 & 0xFFFFFF<32>) + 0x12000000<32>
l0041B840:
	word32 edi_2399 = Mem2213[ebp_1092 - 28<i32>:word32]
	word32 edi_2400 = edi_2399 + 0x18<32>
	word32 eax_2401 = _errno()
	branch Mem2213[edi_2399 + 0x2C<32>:word32] <u 0x10<32> l0041B856
l0041B854:
	edi_2400 = Mem2213[edi_2399 + 0x18<32>:word32]
l0041B856:
	Mem2408[esp_2171:word32] = 0<32>
	Mem2412[eax_2401:word32] = 0<32>
	Mem2414[esp_2171 - 4<i32>:word32] = ebp_1092 - 32<i32>
	Mem2417[esp_2171 - 8<i32>:word32] = edi_2400
	word32 eax_2418 = strtoul(Mem2417[esp_2171 - 8<i32>:(ptr32 charconst )], Mem2417[esp_2171 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2417[esp_2171:int32])
	esp_109 = esp_2171 + 4<32>
	branch edi_2400 != Mem2417[ebp_1092 - 32<i32>:word32] l0041B87C
l0041B871:
	Mem2423[esp_2171:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem2423[esp_2171:(ptr32 charconst )])
	esp_109 = esp_2171
l0041B87C:
	branch Mem2425[eax_2401:word32] != 0x22<32> l0041B88C
l0041B881:
	esp_109 = esp_109 - 4<i32>
	Mem2430[esp_109:word32] = 0x4318C4<32>
	_Xout_of_range(Mem2430[esp_109:(ptr32 charconst )])
l0041B88C:
	Mem2441[esi_102 + 96<i32>:word32] = (eax_2418 & 0xFFFFFF<32>) + 0x11000000<32>
l0041B74B:
	word32 edi_2442 = Mem2086[ebp_1092 - 28<i32>:word32]
	word32 edi_2443 = edi_2442 + 0x18<32>
	word32 eax_2444 = _errno()
	branch Mem2086[edi_2442 + 0x2C<32>:word32] <u 0x10<32> l0041B761
l0041B75F:
	edi_2443 = Mem2086[edi_2442 + 0x18<32>:word32]
l0041B761:
	Mem2451[esp_2044:word32] = 0<32>
	Mem2455[eax_2444:word32] = 0<32>
	Mem2457[esp_2044 - 4<i32>:word32] = ebp_1092 - 32<i32>
	Mem2460[esp_2044 - 8<i32>:word32] = edi_2443
	word32 eax_2461 = strtoul(Mem2460[esp_2044 - 8<i32>:(ptr32 charconst )], Mem2460[esp_2044 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2460[esp_2044:int32])
	esp_109 = esp_2044 + 4<32>
	branch edi_2443 != Mem2460[ebp_1092 - 32<i32>:word32] l0041B787
l0041B77C:
	Mem2466[esp_2044:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem2466[esp_2044:(ptr32 charconst )])
	esp_109 = esp_2044
l0041B787:
	branch Mem2468[eax_2444:word32] != 0x22<32> l0041B797
l0041B78C:
	esp_109 = esp_109 - 4<i32>
	Mem2473[esp_109:word32] = 0x4318C4<32>
	_Xout_of_range(Mem2473[esp_109:(ptr32 charconst )])
l0041B797:
	Mem2484[esi_102 + 96<i32>:word32] = (eax_2461 & 0xFFFFFF<32>) + 0x10000000<32>
l0041B1ED:
	Mem2486[ebp_1092 - 4<i32>:byte] = 0xB<8>
	Mem2490[esp_104 + 4<32>:word32] = 1<32>
	Mem2494[ebp_1092 - 32<i32>:word32] = _Init(Mem2490[esp_104 + 4<32>:(ptr32 (struct "std::locale"))], Mem2490[esp_104 + 8<32>:bool])
	Mem2496[esp_104 + 4<32>:word32] = 2<32>
	Mem2498[esp_104:word32] = 0<32>
	Mem2500[ebp_1092 - 4<i32>:byte] = 0xC<8>
	word32 ecx_2501 = Mem2500[ebp_1092 - 28<i32>:word32]
	Mem2503[esp_104 - 4<i32>:word32] = ebp_1092 - 60<i32>
	word32 edx_4925
	word32 edi_4928
	word32 ebx_4926
	word32 esi_4927
	word32 ebp_2507
	word32 eax_2506 = fn0040F7F0(ecx_2501, ebp_1092, esi_102, _Init, Mem2503[esp_104 - 4<i32>:word32], Mem2503[esp_104:word32], Mem2503[esp_104 + 4<i32>:word32], out edx_4925, out ebx_4926, out ebp_2507, out esi_4927, out edi_4928)
	Mem2521[ebp_2507 - 4<i32>:byte] = 0xD<8>
	word32 esp_2514 = <invalid>
	Mem2523[esp_2514:word32] = ebp_2507 - 36<i32>
	word32 edx_4930
	word32 ecx_4929
	word32 ebx_4931
	word32 edi_2534
	byte al_2549 = fn00411F00(eax_2506, 0x004326C0<p32>, es, ds, Mem2523[esp_2514:word32], out ecx_4929, out edx_4930, out ebx_4931, out ebp_1092, out esi_102, out edi_2534)
	Mem2546[ebp_1092 - 4<i32>:byte] = 0xC<8>
	word32 esp_2538 = <invalid>
	word32 edx_2548 = Mem2546[ebp_1092 - 40<i32>:word32]
	branch edx_2548 <u 0x10<32> l0041B268
l0041B23A:
	word32 ecx_2553 = Mem2546[ebp_1092 - 60<i32>:word32]
	word32 edx_2554 = edx_2548 + 1<32>
	branch edx_2548 <u 0xFFF<32> l0041B25E
l0041B248:
	ecx_2553 = Mem2546[ecx_2553 - 4<i32>:word32]
	edx_2554 = edx_2548 + 0x24<32>
	branch ecx_2553 - ecx_2553 <=u 0x23<32> l0041B25E
l0041B258:
	_invalid_parameter_noinfo_noreturn()
l0041B25E:
	Mem2567[esp_2538:word32] = edx_2554
	Mem2570[esp_2538 - 4<i32>:word32] = ecx_2553
	fn0042763F(Mem2570[esp_2538 - 4<i32>:word32])
l0041B268:
	Mem2577[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem2578[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem2579[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem2580[ebp_1092 - 4<i32>:byte] = 1<8>
	word32 esp_2595 = esp_2538 + 4<32>
	word32 edx_2585
	word32 ecx_2584 = fn00401470(ebp_1092 - 36<i32>, out edx_2585)
	branch al_2549 == 0<8> l0041B568
l0041B28E:
	Mem2597[esp_2538:word32] = 1<32>
	Mem2598[ebp_1092 - 4<i32>:byte] = 0xE<8>
	word32 eax_2611
	word32 edi_2614
	word32 esi_2616
	word32 ebp_2617
	word32 esp_2618
	call edi_2534 (retsize: 4;)
		uses: ecx:ecx_2584,edx:edx_2585,Stack +0004:Mem2598[esp_2538:word32]
		defs: eax:eax_2611,ebp:ebp_2617,edi:edi_2614,esi:esi_2616,esp:esp_2618
	Mem2628[ebp_2617 - 32<i32>:word32] = eax_2611
	Mem2630[esp_2618:word32] = 6<32>
	Mem2632[esp_2618 - 4<i32>:word32] = 2<32>
	Mem2634[ebp_2617 - 4<i32>:byte] = 0xF<8>
	word32 ecx_2635 = Mem2634[ebp_2617 - 28<i32>:word32]
	Mem2637[esp_2618 - 8<i32>:word32] = ebp_2617 - 60<i32>
	word32 edx_5048
	word32 edi_5051
	word32 ebx_5049
	word32 esi_5050
	word32 ebp_2639
	word32 eax_2638 = fn0040F7F0(ecx_2635, ebp_2617, esi_2616, edi_2614, Mem2637[esp_2618 - 8<i32>:word32], Mem2637[esp_2618 - 4<i32>:word32], Mem2637[esp_2618:word32], out edx_5048, out ebx_5049, out ebp_2639, out esi_5050, out edi_5051)
	Mem2653[ebp_2639 - 4<i32>:byte] = 0x10<8>
	word32 esp_2646 = <invalid>
	Mem2655[esp_2646:word32] = ebp_2639 - 36<i32>
	word32 edx_5053
	word32 ebx_5054
	word32 ecx_5052
	word32 edi_2661
	byte al_2676 = fn00411F00(eax_2638, 0x004326C4<p32>, es, ds, Mem2655[esp_2646:word32], out ecx_5052, out edx_5053, out ebx_5054, out ebp_1092, out esi_102, out edi_2661)
	Mem2673[ebp_1092 - 4<i32>:byte] = 0xF<8>
	word32 esp_2665 = <invalid>
	word32 edx_2675 = Mem2673[ebp_1092 - 40<i32>:word32]
	branch edx_2675 <u 0x10<32> l0041B303
l0041B2D5:
	word32 ecx_2680 = Mem2673[ebp_1092 - 60<i32>:word32]
	word32 edx_2681 = edx_2675 + 1<32>
	branch edx_2675 <u 0xFFF<32> l0041B2F9
l0041B2E3:
	ecx_2680 = Mem2673[ecx_2680 - 4<i32>:word32]
	edx_2681 = edx_2675 + 0x24<32>
	branch ecx_2680 - ecx_2680 <=u 0x23<32> l0041B2F9
l0041B2F3:
	_invalid_parameter_noinfo_noreturn()
l0041B2F9:
	Mem2694[esp_2665:word32] = edx_2681
	Mem2697[esp_2665 - 4<i32>:word32] = ecx_2680
	fn0042763F(Mem2697[esp_2665 - 4<i32>:word32])
l0041B303:
	Mem2704[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem2705[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem2706[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem2707[ebp_1092 - 4<i32>:byte] = 1<8>
	word32 edx_2712
	ecx_1012 = fn00401470(ebp_1092 - 36<i32>, out edx_2712)
	branch al_2676 == 0<8> l0041B37E
l0041B37E:
	Mem2724[esp_2665:word32] = 1<32>
	Mem2725[ebp_1092 - 4<i32>:byte] = 0x11<8>
	word32 eax_2738
	word32 edi_2741
	word32 esi_2743
	word32 ebp_2744
	word32 esp_2745
	call edi_2661 (retsize: 4;)
		uses: ecx:ecx_2711,edx:edx_2712,Stack +0004:Mem2725[esp_2665:word32]
		defs: eax:eax_2738,ebp:ebp_2744,edi:edi_2741,esi:esi_2743,esp:esp_2745
	Mem2755[ebp_2744 - 32<i32>:word32] = eax_2738
	Mem2757[esp_2745:word32] = 6<32>
	Mem2759[esp_2745 - 4<i32>:word32] = 2<32>
	Mem2761[ebp_2744 - 4<i32>:byte] = 0x12<8>
	word32 ecx_2762 = Mem2761[ebp_2744 - 28<i32>:word32]
	Mem2764[esp_2745 - 8<i32>:word32] = ebp_2744 - 60<i32>
	word32 esi_5066
	word32 edx_5064
	word32 ebx_5065
	word32 edi_5067
	word32 ebp_2766
	word32 eax_2765 = fn0040F7F0(ecx_2762, ebp_2744, esi_2743, edi_2741, Mem2764[esp_2745 - 8<i32>:word32], Mem2764[esp_2745 - 4<i32>:word32], Mem2764[esp_2745:word32], out edx_5064, out ebx_5065, out ebp_2766, out esi_5066, out edi_5067)
	Mem2780[ebp_2766 - 4<i32>:byte] = 0x13<8>
	word32 esp_2773 = <invalid>
	Mem2782[esp_2773:word32] = ebp_2766 - 36<i32>
	word32 edx_5069
	word32 ecx_5068
	word32 ebx_5070
	word32 edi_2788
	byte al_2803 = fn00411F00(eax_2765, 0x004326CC<p32>, es, ds, Mem2782[esp_2773:word32], out ecx_5068, out edx_5069, out ebx_5070, out ebp_1092, out esi_102, out edi_2788)
	Mem2800[ebp_1092 - 4<i32>:byte] = 0x12<8>
	word32 esp_2792 = <invalid>
	word32 edx_2802 = Mem2800[ebp_1092 - 40<i32>:word32]
	branch edx_2802 <u 0x10<32> l0041B3F3
l0041B3C5:
	word32 ecx_2807 = Mem2800[ebp_1092 - 60<i32>:word32]
	word32 edx_2808 = edx_2802 + 1<32>
	branch edx_2802 <u 0xFFF<32> l0041B3E9
l0041B3D3:
	ecx_2807 = Mem2800[ecx_2807 - 4<i32>:word32]
	edx_2808 = edx_2802 + 0x24<32>
	branch ecx_2807 - ecx_2807 <=u 0x23<32> l0041B3E9
l0041B3E3:
	_invalid_parameter_noinfo_noreturn()
l0041B3E9:
	Mem2821[esp_2792:word32] = edx_2808
	Mem2824[esp_2792 - 4<i32>:word32] = ecx_2807
	fn0042763F(Mem2824[esp_2792 - 4<i32>:word32])
l0041B3F3:
	Mem2831[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem2832[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem2833[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem2834[ebp_1092 - 4<i32>:byte] = 1<8>
	word32 edx_2839
	ecx_1012 = fn00401470(ebp_1092 - 36<i32>, out edx_2839)
	branch al_2803 == 0<8> l0041B473
l0041B473:
	Mem2851[esp_2792:word32] = 1<32>
	Mem2852[ebp_1092 - 4<i32>:byte] = 0x14<8>
	word32 eax_2865
	word32 edi_2868
	word32 esi_2870
	word32 ebp_2871
	word32 esp_2872
	call edi_2788 (retsize: 4;)
		uses: ecx:ecx_2838,edx:edx_2839,Stack +0004:Mem2852[esp_2792:word32]
		defs: eax:eax_2865,ebp:ebp_2871,edi:edi_2868,esi:esi_2870,esp:esp_2872
	Mem2882[ebp_2871 - 32<i32>:word32] = eax_2865
	Mem2884[esp_2872:word32] = 4<32>
	Mem2886[esp_2872 - 4<i32>:word32] = 2<32>
	Mem2888[ebp_2871 - 4<i32>:byte] = 0x15<8>
	word32 ecx_2889 = Mem2888[ebp_2871 - 28<i32>:word32]
	Mem2891[esp_2872 - 8<i32>:word32] = ebp_2871 - 60<i32>
	word32 edx_5071
	word32 esi_5073
	word32 edi_5074
	word32 ebx_5072
	word32 ebp_2893
	word32 eax_2892 = fn0040F7F0(ecx_2889, ebp_2871, esi_2870, edi_2868, Mem2891[esp_2872 - 8<i32>:word32], Mem2891[esp_2872 - 4<i32>:word32], Mem2891[esp_2872:word32], out edx_5071, out ebx_5072, out ebp_2893, out esi_5073, out edi_5074)
	Mem2907[ebp_2893 - 4<i32>:byte] = 0x16<8>
	word32 esp_2900 = <invalid>
	Mem2909[esp_2900:word32] = ebp_2893 - 36<i32>
	word32 edi_5078
	word32 edx_5076
	word32 ecx_5075
	word32 ebx_5077
	byte al_2930 = fn00411F00(eax_2892, 0x004326D4<p32>, es, ds, Mem2909[esp_2900:word32], out ecx_5075, out edx_5076, out ebx_5077, out ebp_1092, out esi_102, out edi_5078)
	Mem2927[ebp_1092 - 4<i32>:byte] = 0x15<8>
	word32 esp_2919 = <invalid>
	word32 edx_2929 = Mem2927[ebp_1092 - 40<i32>:word32]
	branch edx_2929 <u 0x10<32> l0041B4E8
l0041B4BA:
	word32 ecx_2934 = Mem2927[ebp_1092 - 60<i32>:word32]
	word32 edx_2935 = edx_2929 + 1<32>
	branch edx_2929 <u 0xFFF<32> l0041B4DE
l0041B4C8:
	ecx_2934 = Mem2927[ecx_2934 - 4<i32>:word32]
	edx_2935 = edx_2929 + 0x24<32>
	branch ecx_2934 - ecx_2934 <=u 0x23<32> l0041B4DE
l0041B4D8:
	_invalid_parameter_noinfo_noreturn()
l0041B4DE:
	Mem2948[esp_2919:word32] = edx_2935
	Mem2951[esp_2919 - 4<i32>:word32] = ecx_2934
	fn0042763F(Mem2951[esp_2919 - 4<i32>:word32])
l0041B4E8:
	Mem2958[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem2959[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem2960[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem2961[ebp_1092 - 4<i32>:byte] = 1<8>
	esp_2595 = esp_2919 + 4<32>
	word32 edx_5079
	ecx_1012 = fn00401470(ebp_1092 - 36<i32>, out edx_5079)
	branch al_2930 == 0<8> l0041B568
l0041B568:
	Mem2987[esp_2595 - 4<i32>:word32] = ebp_1092 - 28<i32>
	word32 esp_3011 = <invalid>
	ecx_1012 = fn0041ED20(esi_102, es, ds, out ebp_1092, out esi_102)
	esp_109 = esp_3011 + 4<32>
l0041B50A:
	word32 edi_3027 = Mem2961[ebp_1092 - 28<i32>:word32]
	word32 edi_3028 = edi_3027 + 0x18<32>
	word32 eax_3029 = _errno()
	branch Mem2961[edi_3027 + 0x2C<32>:word32] <u 0x10<32> l0041B520
l0041B51E:
	edi_3028 = Mem2961[edi_3027 + 0x18<32>:word32]
l0041B520:
	Mem3036[esp_2919:word32] = 0<32>
	Mem3040[eax_3029:word32] = 0<32>
	Mem3042[esp_2919 - 4<i32>:word32] = ebp_1092 - 32<i32>
	Mem3045[esp_2919 - 8<i32>:word32] = edi_3028
	word32 eax_3046 = strtoul(Mem3045[esp_2919 - 8<i32>:(ptr32 charconst )], Mem3045[esp_2919 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem3045[esp_2919:int32])
	esp_109 = esp_2919 + 4<32>
	branch edi_3028 != Mem3045[ebp_1092 - 32<i32>:word32] l0041B546
l0041B53B:
	Mem3051[esp_2919:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem3051[esp_2919:(ptr32 charconst )])
	esp_109 = esp_2919
l0041B546:
	branch Mem3053[eax_3029:word32] != 0x22<32> l0041B556
l0041B54B:
	esp_109 = esp_109 - 4<i32>
	Mem3058[esp_109:word32] = 0x4318C4<32>
	_Xout_of_range(Mem3058[esp_109:(ptr32 charconst )])
l0041B556:
	Mem3067[esi_102 + 96<i32>:word32] = (eax_3046 & 0xFFFFFF<32>) + 0x2000000<32>
l0041B415:
	word32 edi_3068 = Mem2834[ebp_1092 - 28<i32>:word32]
	word32 edi_3069 = edi_3068 + 0x18<32>
	word32 eax_3070 = _errno()
	branch Mem2834[edi_3068 + 0x2C<32>:word32] <u 0x10<32> l0041B42B
l0041B429:
	edi_3069 = Mem2834[edi_3068 + 0x18<32>:word32]
l0041B42B:
	Mem3077[esp_2792:word32] = 0<32>
	Mem3081[eax_3070:word32] = 0<32>
	Mem3083[esp_2792 - 4<i32>:word32] = ebp_1092 - 32<i32>
	Mem3086[esp_2792 - 8<i32>:word32] = edi_3069
	word32 eax_3087 = strtoul(Mem3086[esp_2792 - 8<i32>:(ptr32 charconst )], Mem3086[esp_2792 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem3086[esp_2792:int32])
	esp_109 = esp_2792 + 4<32>
	branch edi_3069 != Mem3086[ebp_1092 - 32<i32>:word32] l0041B451
l0041B446:
	Mem3092[esp_2792:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem3092[esp_2792:(ptr32 charconst )])
	esp_109 = esp_2792
l0041B451:
	branch Mem3094[eax_3070:word32] != 0x22<32> l0041B461
l0041B456:
	esp_109 = esp_109 - 4<i32>
	Mem3099[esp_109:word32] = 0x4318C4<32>
	_Xout_of_range(Mem3099[esp_109:(ptr32 charconst )])
l0041B461:
	Mem3110[esi_102 + 96<i32>:word32] = (eax_3087 & 0xFFFFFF<32>) + 0x1000000<32>
l0041B325:
	word32 edi_3111 = Mem2707[ebp_1092 - 28<i32>:word32]
	word32 edi_3112 = edi_3111 + 0x18<32>
	word32 eax_3113 = _errno()
	branch Mem2707[edi_3111 + 0x2C<32>:word32] <u 0x10<32> l0041B33B
l0041B339:
	edi_3112 = Mem2707[edi_3111 + 0x18<32>:word32]
l0041B33B:
	Mem3120[esp_2665:word32] = 0<32>
	Mem3124[eax_3113:word32] = 0<32>
	Mem3126[esp_2665 - 4<i32>:word32] = ebp_1092 - 32<i32>
	Mem3129[esp_2665 - 8<i32>:word32] = edi_3112
	word32 eax_3130 = strtoul(Mem3129[esp_2665 - 8<i32>:(ptr32 charconst )], Mem3129[esp_2665 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem3129[esp_2665:int32])
	esp_109 = esp_2665 + 4<32>
	branch edi_3112 != Mem3129[ebp_1092 - 32<i32>:word32] l0041B361
l0041B356:
	Mem3135[esp_2665:word32] = 0x4318AC<32>
	_Xinvalid_argument(Mem3135[esp_2665:(ptr32 charconst )])
	esp_109 = esp_2665
l0041B361:
	branch Mem3137[eax_3113:word32] != 0x22<32> l0041B371
l0041B366:
	esp_109 = esp_109 - 4<i32>
	Mem3142[esp_109:word32] = 0x4318C4<32>
	_Xout_of_range(Mem3142[esp_109:(ptr32 charconst )])
l0041B371:
	Mem3153[esi_102 + 96<i32>:word32] = eax_3130 & 0xFFFFFF<32>
l0041C094:
	Mem3160[esp_104 + 4<32>:word32] = ebp_1092 - 28<i32>
	ecx_1012 = fn0041C3B0(esi_102, es, ds, Mem3160[esp_104 + 4<32>:word32], out ebp_1092, out esi_102)
	esp_109 = <invalid>
l0041B1DD:
	Mem3193[esp_104 + 4<32>:word32] = ebp_1092 - 28<i32>
	word32 esp_3216 = <invalid>
	ecx_1012 = fn004262A0(esi_102, edi_112, es, ds, out ebp_1092, out esi_102)
	esp_109 = esp_3216 + 4<32>
l0041B08B:
	Mem3225[ebp_1092 - 4<i32>:byte] = 5<8>
	Mem3229[esp_104 + 4<32>:word32] = 1<32>
	Mem3233[ebp_1092 - 32<i32>:word32] = _Init(Mem3229[esp_104 + 4<32>:(ptr32 (struct "std::locale"))], Mem3229[esp_104 + 8<32>:bool])
	Mem3235[esp_104 + 4<32>:word32] = 4<32>
	Mem3237[esp_104:word32] = 0<32>
	Mem3239[ebp_1092 - 4<i32>:byte] = 6<8>
	word32 ecx_3240 = Mem3239[ebp_1092 - 28<i32>:word32]
	Mem3242[esp_104 - 4<i32>:word32] = ebp_1092 - 60<i32>
	word32 ebx_4918
	word32 edi_4920
	word32 esi_4919
	word32 edx_4917
	word32 ebp_3246
	word32 eax_3245 = fn0040F7F0(ecx_3240, ebp_1092, esi_102, _Init, Mem3242[esp_104 - 4<i32>:word32], Mem3242[esp_104:word32], Mem3242[esp_104 + 4<i32>:word32], out edx_4917, out ebx_4918, out ebp_3246, out esi_4919, out edi_4920)
	Mem3260[ebp_3246 - 4<i32>:byte] = 7<8>
	word32 esp_3253 = <invalid>
	Mem3262[esp_3253:word32] = ebp_3246 - 36<i32>
	word32 edx_4922
	word32 ebx_4923
	word32 esi_4924
	word32 ecx_4921
	word32 edi_3273
	byte al_3288 = fn00411F00(eax_3245, 0x004326B4<p32>, es, ds, Mem3262[esp_3253:word32], out ecx_4921, out edx_4922, out ebx_4923, out ebp_1092, out esi_4924, out edi_3273)
	Mem3285[ebp_1092 - 4<i32>:byte] = 6<8>
	word32 esp_3277 = <invalid>
	word32 edx_3287 = Mem3285[ebp_1092 - 40<i32>:word32]
	branch edx_3287 <u 0x10<32> l0041B106
l0041B0D8:
	word32 ecx_3292 = Mem3285[ebp_1092 - 60<i32>:word32]
	word32 edx_3293 = edx_3287 + 1<32>
	branch edx_3287 <u 0xFFF<32> l0041B0FC
l0041B0E6:
	ecx_3292 = Mem3285[ecx_3292 - 4<i32>:word32]
	edx_3293 = edx_3287 + 0x24<32>
	branch ecx_3292 - ecx_3292 <=u 0x23<32> l0041B0FC
l0041B0F6:
	_invalid_parameter_noinfo_noreturn()
l0041B0FC:
	Mem3306[esp_3277:word32] = edx_3293
	Mem3309[esp_3277 - 4<i32>:word32] = ecx_3292
	fn0042763F(Mem3309[esp_3277 - 4<i32>:word32])
l0041B106:
	Mem3316[ebp_1092 - 44<i32>:word32] = 0<32>
	Mem3317[ebp_1092 - 40<i32>:word32] = 0xF<32>
	Mem3318[ebp_1092 - 60<i32>:byte] = 0<8>
	Mem3319[ebp_1092 - 4<i32>:byte] = 1<8>
	esp_109 = esp_3277 + 4<32>
	word32 edx_3324
	word32 ecx_3323 = fn00401470(ebp_1092 - 36<i32>, out edx_3324)
	branch al_3288 != 0<8> l0041C0A1
l0041B12C:
	Mem3336[esp_3277:word32] = 1<32>
	Mem3337[ebp_1092 - 4<i32>:byte] = 8<8>
	word32 eax_3350
	word32 edi_3353
	word32 esi_3355
	word32 ebp_3356
	word32 esp_3357
	call edi_3273 (retsize: 4;)
		uses: ecx:ecx_3323,edx:edx_3324,Stack +0004:Mem3337[esp_3277:word32]
		defs: eax:eax_3350,ebp:ebp_3356,edi:edi_3353,esi:esi_3355,esp:esp_3357
	Mem3367[ebp_3356 - 32<i32>:word32] = eax_3350
	Mem3369[esp_3357:word32] = 3<32>
	Mem3371[esp_3357 - 4<i32>:word32] = 0<32>
	Mem3373[ebp_3356 - 4<i32>:byte] = 9<8>
	word32 ecx_3374 = Mem3373[ebp_3356 - 28<i32>:word32]
	Mem3376[esp_3357 - 8<i32>:word32] = ebp_3356 - 60<i32>
	word32 edx_5056
	word32 esi_5058
	word32 edi_5059
	word32 ebx_5057
	word32 ebp_3378
	word32 eax_3377 = fn0040F7F0(ecx_3374, ebp_3356, esi_3355, edi_3353, Mem3376[esp_3357 - 8<i32>:word32], Mem3376[esp_3357 - 4<i32>:word32], Mem3376[esp_3357:word32], out edx_5056, out ebx_5057, out ebp_3378, out esi_5058, out edi_5059)
	Mem3392[ebp_3378 - 4<i32>:byte] = 0xA<8>
	word32 esp_3385 = <invalid>
	Mem3394[esp_3385:word32] = ebp_3378 - 36<i32>
	word32 ebx_5062
	word32 ecx_5060
	word32 edx_5061
	word32 edi_3400
	word32 esi_3402
	word32 ebp_3403
	byte al_3415 = fn00411F00(eax_3377, 0x004326BC<p32>, es, ds, Mem3394[esp_3385:word32], out ecx_5060, out edx_5061, out ebx_5062, out ebp_3403, out esi_3402, out edi_3400)
	Mem3412[ebp_3403 - 4<i32>:byte] = 9<8>
	word32 esp_3404 = <invalid>
	word32 edx_3414 = Mem3412[ebp_3403 - 40<i32>:word32]
	branch edx_3414 <u 0x10<32> l0041B1A1
l0041B173:
	word32 ecx_3419 = Mem3412[ebp_3403 - 60<i32>:word32]
	word32 edx_3420 = edx_3414 + 1<32>
	branch edx_3414 <u 0xFFF<32> l0041B197
l0041B181:
	ecx_3419 = Mem3412[ecx_3419 - 4<i32>:word32]
	edx_3420 = edx_3414 + 0x24<32>
	branch ecx_3419 - ecx_3419 <=u 0x23<32> l0041B197
l0041B191:
	_invalid_parameter_noinfo_noreturn()
l0041B197:
	Mem3433[esp_3404:word32] = edx_3420
	Mem3436[esp_3404 - 4<i32>:word32] = ecx_3419
	fn0042763F(Mem3436[esp_3404 - 4<i32>:word32])
l0041B1A1:
	Mem3443[ebp_3403 - 44<i32>:word32] = 0<32>
	Mem3444[ebp_3403 - 40<i32>:word32] = 0xF<32>
	Mem3445[ebp_3403 - 60<i32>:byte] = 0<8>
	Mem3446[ebp_3403 - 4<i32>:byte] = 1<8>
	word32 edx_5063
	fn00401470(ebp_3403 - 36<i32>, out edx_5063)
	Mem3462[esp_3404:word32] = ebp_3403 - 28<i32>
	esp_109 = esp_3404
	branch al_3415 == 0<8> l0041B1D3
l0041B1D3:
	ecx_1012 = fn0041D540(esi_3402, edi_3400, es, ds, Mem3462[esp_3404 + 28<i32>:word32], Mem3462[esp_3404 + 36<i32>:word32], out ebp_1092, out esi_102)
l0041B1C9:
	word32 esp_3508 = <invalid>
	ecx_1012 = fn0041DAF0(esi_3402, es, ds, out ebp_1092, out esi_102)
	esp_109 = esp_3508 + 4<32>
l0041AFD6:
	Mem3526[esp_104 + 4<32>:word32] = 1<32>
	Mem3528[ebp_1092 - 4<i32>:byte] = 2<8>
	Mem3532[ebp_1092 - 32<i32>:word32] = _Init(Mem3528[esp_104 + 4<32>:(ptr32 (struct "std::locale"))], Mem3528[esp_104 + 8<32>:bool])
	Mem3534[esp_104 + 4<32>:word32] = 4<32>
	Mem3536[esp_104:word32] = 0<32>
	Mem3538[ebp_1092 - 4<i32>:byte] = 3<8>
	word32 ecx_3539 = Mem3538[ebp_1092 - 28<i32>:word32]
	Mem3541[esp_104 - 4<i32>:word32] = ebp_1092 - 60<i32>
	word32 esi_4911
	word32 edx_4909
	word32 ebx_4910
	word32 edi_4912
	word32 ebp_3546
	word32 eax_3545 = fn0040F7F0(ecx_3539, ebp_1092, esi_102, edi_112, Mem3541[esp_104 - 4<i32>:word32], Mem3541[esp_104:word32], Mem3541[esp_104 + 4<i32>:word32], out edx_4909, out ebx_4910, out ebp_3546, out esi_4911, out edi_4912)
	Mem3560[ebp_3546 - 4<i32>:byte] = 4<8>
	word32 esp_3553 = <invalid>
	Mem3562[esp_3553:word32] = ebp_3546 - 36<i32>
	word32 ecx_4913
	word32 ebx_4915
	word32 edi_4916
	word32 edx_4914
	word32 esi_3575
	word32 ebp_3576
	byte al_3588 = fn00411F00(eax_3545, 0x00431D24<p32>, es, ds, Mem3562[esp_3553:word32], out ecx_4913, out edx_4914, out ebx_4915, out ebp_3576, out esi_3575, out edi_4916)
	Mem3585[ebp_3576 - 4<i32>:byte] = 3<8>
	word32 esp_3577 = <invalid>
	word32 edx_3587 = Mem3585[ebp_3576 - 40<i32>:word32]
	branch edx_3587 <u 0x10<32> l0041B04F
l0041B021:
	word32 ecx_3592 = Mem3585[ebp_3576 - 60<i32>:word32]
	word32 edx_3593 = edx_3587 + 1<32>
	branch edx_3587 <u 0xFFF<32> l0041B045
l0041B02F:
	ecx_3592 = Mem3585[ecx_3592 - 4<i32>:word32]
	edx_3593 = edx_3587 + 0x24<32>
	branch ecx_3592 - ecx_3592 <=u 0x23<32> l0041B045
l0041B03F:
	_invalid_parameter_noinfo_noreturn()
l0041B045:
	Mem3606[esp_3577:word32] = edx_3593
	Mem3609[esp_3577 - 4<i32>:word32] = ecx_3592
	fn0042763F(Mem3609[esp_3577 - 4<i32>:word32])
l0041B04F:
	Mem3616[ebp_3576 - 44<i32>:word32] = 0<32>
	Mem3617[ebp_3576 - 40<i32>:word32] = 0xF<32>
	Mem3618[ebp_3576 - 60<i32>:byte] = 0<8>
	Mem3619[ebp_3576 - 4<i32>:byte] = 1<8>
	word32 edx_5055
	fn00401470(ebp_3576 - 36<i32>, out edx_5055)
	Mem3635[esp_3577:word32] = ebp_3576 - 28<i32>
	branch al_3588 == 0<8> l0041B081
l0041B081:
	word32 esp_3658 = <invalid>
	ecx_1012 = fn0041CC60(esi_3575, es, ds, Mem3635[esp_3577 + 28<i32>:word32], Mem3635[esp_3577 + 36<i32>:word32], out ebp_1092, out esi_102)
	esp_109 = esp_3658 + 4<32>
l0041B077:
	ecx_1012 = fn0041C3B0(esi_3575, es, ds, Mem3635[esp_3577:word32], out ebp_1092, out esi_102)
	esp_109 = <invalid>
l0041C0A1:
	esp_1680 = esp_109 - 4<i32>
	Mem3704[esp_1680:word32] = ebp_1092 - 28<i32>
l0041C0A7:
	word32 esp_3726 = <invalid>
	ecx_1012 = fn00421620(es, ds, Mem3718[esp_1680:word32], out ebp_1092, out esi_102)
	esp_109 = esp_3726 + 4<32>
l0041C0AC:
	word32 edi_3758 = Mem3736[ebp_1092 - 28<i32>:word32]
	Mem3761[esi_102 + 104<i32>:byte] = CONVERT(Mem3736[esi_102 + 96<i32>:word32] == 0xFFFFFFFF<32>, bool, int8)
	branch edi_3758 == 0<32> l0041C129
l0041C0BD:
	word32 edx_3765 = Mem3761[ebp_1092 - 24<i32>:word32]
	word32 esp_3776 = esp_109 - 4<i32>
	Mem3806[esp_3776:word32] = ecx_1012
	word32 edi_4906
	word32 esi_4905
	ebp_1092 = fn00403510(edi_3758, edx_3765, esi_102, out esi_4905, out edi_4906)
	word32 esi_3820 = Mem3806[ebp_1092 - 28<i32>:word32]
	word32 edx_3824 = SLICE((Mem3806[ebp_1092 - 20<i32>:word32] - esi_3820) *s64 0x2AAAAAAB<32>, word32, 32)
	word32 eax_3828 = (edx_3824 >> 2<32> >>u 0x1F<32>) + (edx_3824 >> 2<32>)
	word32 ecx_3831 = eax_3828 * 0x18<32>
	branch eax_3828 * 0x18<32> <u 0x1000<32> l0041C10A
l0041C0F4:
	esi_3820 = Mem3806[esi_3820 - 4<i32>:word32]
	ecx_3831 = eax_3828 * 0x18<32> + 0x23<32>
	branch esi_3820 - esi_3820 <=u 0x23<32> l0041C10A
l0041C104:
	_invalid_parameter_noinfo_noreturn()
l0041C10A:
	Mem3843[esp_3776:word32] = ecx_3831
	Mem3846[esp_3776 - 4<i32>:word32] = esi_3820
	fn0042763F(Mem3846[esp_3776 - 4<i32>:word32])
	Mem3851[ebp_1092 - 28<i32>:word32] = 0<32>
	Mem3852[ebp_1092 - 24<i32>:word32] = 0<32>
	Mem3853[ebp_1092 - 20<i32>:word32] = 0<32>
l0041C129:
	word32 edx_3856 = Mem3855[ebp_1092 + 28<i32>:word32]
	branch edx_3856 <u 0x10<32> l0041C15F
l0041C131:
	word32 ecx_3859 = Mem3855[ebp_1092 + 8<i32>:word32]
	edx_3856 = edx_3856 + 1<32>
	branch edx_3856 <u 0xFFF<32> l0041C155
l0041C13F:
	ecx_3859 = Mem3855[ecx_3859 - 4<i32>:word32]
	edx_3856 = edx_3856 + 0x24<32>
	branch ecx_3859 - ecx_3859 <=u 0x23<32> l0041C155
l0041C14F:
	_invalid_parameter_noinfo_noreturn()
l0041C155:
	word32 esp_3872 = esp_109 - 4<i32>
	Mem3874[esp_3872:word32] = edx_3856
	Mem3877[esp_3872 - 4<i32>:word32] = ecx_3859
	fn0042763F(Mem3877[esp_3872 - 4<i32>:word32])
l0041C15F:
	Mem3917[fs:0x00000000<p32>:word32] = Mem3883[ebp_1092 - 12<i32>:word32]
	word32 esp_3920 = esp_109 + 4<i32>
	word32 edi_3921 = Mem3917[esp_3920:word32]
	word32 ebx_3925 = Mem3917[esp_3920 + 8<i32>:word32]
	word32 ecx_4908
	word32 eax_4907
	fn00427500(Mem3917[ebp_1092 - 16<i32>:word32] ^ ebp_1092, edx_3856, ebx_3925, ebp_1092, Mem3917[esp_3920 + 4<i32>:word32], edi_3921, es, ds, Mem3917[esp_3920 + 8<i32>:word32], out eax_4907, out ecx_4908)
	ebpOut = Mem3917[ebp_1092:word32]
	ediOut = edi_3921
	return ebx_3925
fn0041AEF0_exit:


word32 fn0041C1F0(word32 ecx, word32 ebx, word32 ebp, selector es, selector ds, word32 dwArg2C, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041C3F6
//      fn0041C910
//      fn0041CA90
//      fn0041CC60
//      fn0041D540
//      fn0041DAF0
//      fn0041ED20
//      fn0041EE50
//      fn004204C0
//      fn00421620
//      fn004237A0
//      fn00424170
//      fn00425A20
//      fn004262A0
//      fn00426E70
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] ebx:[0..31] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +002C:[0..31]
// LiveOut: eax ebp ebx ecx edi edx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn0041C1F0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc04
l0041C1F0:
	Mem6[&tLoc04:word32] = ebp
	bool fLoc44_89 = Mem25[0x0043A008<p32>:bool] ^ SLICE(&tLoc04, bool, 0)
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	word32 esi_40 = _Init(1<32>, fLoc44_89)
	word32 ebp_7 = &tLoc04
	word32 edx_44 = Mem43[ecx + 100<i32>:word32]
	word32 eax_45 = Mem43[&tLoc04 + 24<i32>:word32]
	branch eax_45 <u edx_44 l0041C256_thunk_fn0041C39F
l0041C256_thunk_fn0041C39F:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg0 = <invalid>
	word32 stackArg4 = <invalid>
	word32 stackArg52 = <invalid>
	word32 ecx_53
	word32 edx_54
	word32 ebx_131
	word32 ebp_132
	word32 edi_133
	word32 eax_52 = fn0041C39F(ecx, stackArg0, stackArg4, stackArg52, out ecx_53, out edx_54, out ebx_131, out ebp_132, out edi_133)
	ecxOut = ecx_53
	edxOut = edx_54
	ebxOut = dwArg2C
	ebpOut = ebp_7
	esiOut = esi_40
	ediOut = ecx
	return eax_52
l0041C256_thunk_fn0041C25C:
	word32 ebp_63
	word32 ebx_64
	word32 ecx_65
	word32 edi_66
	word32 edx_67
	word32 esi_68
	word32 eax_62 = CONVERT(fn0041C25C(eax_45, edx_44, dwArg2C, &tLoc04, ecx, es, ds, ebx, out ecx_65, out edx_67, out ebx_64, out ebp_63, out esi_68, out edi_66), byte, uint32)
	ecxOut = ecx_65
	edxOut = edx_67
	ebxOut = ebx_64
	ebpOut = ebp_63
	esiOut = esi_68
	ediOut = edi_66
	return eax_62
fn0041C1F0_exit:


byte fn0041C25C(word32 eax, word32 edx, word32 ebx, word32 ebp, word32 edi, selector es, selector ds, word32 dwArg0C, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
//      fn0041C1F0
// MayUse:  cs:[0..15] ds:[0..15] eax:[0..31] ebp:[0..31] ebx:[0..31] edi:[0..31] edx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +000C:[0..31]
// LiveOut: eax ebp ebx ecx edi edx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0
// Preserved:
fn0041C25C_entry:
	selector fs
l0041C25C:
	word32 eax_6 = eax - edx
	word32 ecx_11 = ebx
	branch eax_6 >=u ebx l0041C265
l0041C262_1:
	ecx_11 = eax_6
l0041C265:
	word32 eax_17 = ebp + 8<i32>
	branch Mem0[ebp + 28<i32>:word32] <u 0x10<32> l0041C270
l0041C26C_1:
	eax_17 = Mem0[ebp + 8<i32>:word32]
l0041C270:
	word32 ebp_42
	word32 esi_353
	word32 edx_351
	word32 edi_354
	word32 ecx_350
	word32 ebx_352
	fn00402A70(ebp - 40<i32>, edi, eax_17 + edx, ecx_11, dwArg0C, out ecx_350, out edx_351, out ebx_352, out ebp_42, out esi_353, out edi_354)
	Mem56[ebp_42 - 4<i32>:byte] = 4<8>
	word32 esp_49 = <invalid>
	Mem58[esp_49 + 4<32>:word32] = ebp_42 - 48<i32>
	word32 eax_76
	word32 ebx_77
	word32 edi_79
	word32 esi_80
	word32 ebp_82
	fn00403180(ebp_42 - 40<i32>, ebp_42 + 32<i32>, es, ds, Mem58[esp_49 + 4<32>:word32], out eax_76, out ebx_77, out ebp_82, out esi_80, out edi_79)
	Mem91[ebp_82 - 4<i32>:byte] = 3<8>
	word32 edx_104 = Mem91[ebp_82 - 20<i32>:word32]
	Mem95[ebp_82 - 13<i32>:byte] = SLICE(eax_76, byte, 0)
	word32 esp_83 = <invalid>
	branch edx_104 <u 0x10<32> l0041C2CF
l0041C2A1:
	word32 ecx_103 = Mem95[ebp_82 - 40<i32>:word32]
	edx_104 = edx_104 + 1<32>
	branch edx_104 <u 0xFFF<32> l0041C2C5
l0041C2AF:
	ecx_103 = Mem95[ecx_103 - 4<i32>:word32]
	word32 eax_105 = ecx_103 - ecx_103
	edx_104 = edx_104 + 0x24<32>
	branch eax_105 <=u 0x23<32> l0041C2C5
l0041C2BF:
	_invalid_parameter_noinfo_noreturn()
l0041C2C5:
	Mem112[esp_83:word32] = edx_104
	Mem115[esp_83 - 4<i32>:word32] = ecx_103
	fn0042763F(Mem115[esp_83 - 4<i32>:word32])
l0041C2CF:
	Mem121[ebp_82 - 24<i32>:word32] = 0<32>
	Mem122[ebp_82 - 20<i32>:word32] = 0xF<32>
	Mem123[ebp_82 - 40<i32>:byte] = 0<8>
	Mem124[ebp_82 - 4<i32>:byte] = 5<8>
	word32 esp_149 = esp_83 + 4<32>
	branch esi_80 == 0<32> l0041C2FC
l0041C2E9:
	word32 eax_130 = Mem124[esi_80:word32]
	word32 eax_156
	call Mem124[eax_130 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_130,ecx:esi_80,edx:edx_132
		defs: eax:eax_156,esp:esp_154
	branch eax_156 == 0<32> l0041C2FC
l0041C2F4:
	word32 edx_163 = Mem124[eax_156:word32]
	Mem166[esp_149 - 4<i32>:word32] = 1<32>
	call Mem166[edx_163:word32] (retsize: 4;)
		uses: eax:eax_156,ecx:eax_156,edx:edx_163
		defs: esp:esp_167
l0041C2FC:
	byte bl_182
	branch Mem174[ebp_82 - 13<i32>:byte] != 0<8> l0041C306
l0041C306:
	Mem180[edi_79 + 100<i32>:word32] = Mem174[edi_79 + 100<i32>:word32] + ebx_77
	bl_182 = 1<8>
l0041C302:
	bl_182 = 0<8>
l0041C30B:
	word32 edx_188 = Mem187[ebp_82 + 28<i32>:word32]
	branch edx_188 <u 0x10<32> l0041C341
l0041C313:
	word32 ecx_191 = Mem187[ebp_82 + 8<i32>:word32]
	word32 edx_192 = edx_188 + 1<32>
	branch edx_188 <u 0xFFF<32> l0041C337
l0041C321:
	ecx_191 = Mem187[ecx_191 - 4<i32>:word32]
	word32 eax_198 = ecx_191 - ecx_191
	edx_192 = edx_188 + 0x24<32>
	branch eax_198 <=u 0x23<32> l0041C337
l0041C331:
	_invalid_parameter_noinfo_noreturn()
l0041C337:
	word32 esp_205 = esp_149 - 4<i32>
	Mem207[esp_205:word32] = edx_192
	Mem210[esp_205 - 4<i32>:word32] = ecx_191
	fn0042763F(Mem210[esp_205 - 4<i32>:word32])
l0041C341:
	word32 edx_217 = Mem216[ebp_82 + 52<i32>:word32]
	Mem218[ebp_82 + 24<i32>:word32] = 0<32>
	Mem219[ebp_82 + 28<i32>:word32] = 0xF<32>
	Mem220[ebp_82 + 8<i32>:byte] = 0<8>
	branch edx_217 <u 0x10<32> l0041C389
l0041C35B:
	word32 ecx_223 = Mem220[ebp_82 + 32<i32>:word32]
	edx_217 = edx_217 + 1<32>
	branch edx_217 <u 0xFFF<32> l0041C37F
l0041C369:
	ecx_223 = Mem220[ecx_223 - 4<i32>:word32]
	word32 eax_230 = ecx_223 - ecx_223
	edx_217 = edx_217 + 0x24<32>
	branch eax_230 <=u 0x23<32> l0041C37F
l0041C379:
	_invalid_parameter_noinfo_noreturn()
l0041C37F:
	word32 esp_236 = esp_149 - 4<i32>
	Mem238[esp_236:word32] = edx_217
	Mem241[esp_236 - 4<i32>:word32] = ecx_223
	fn0042763F(Mem241[esp_236 - 4<i32>:word32])
l0041C389:
	Mem261[fs:0x00000000<p32>:word32] = Mem253[ebp_82 - 12<i32>:word32]
	word32 esp_264 = esp_149 + 4<i32>
	word32 edi_265 = Mem261[esp_264:word32]
	word32 esi_267 = Mem261[esp_264 + 4<i32>:word32]
	word32 ebx_269 = Mem261[esp_264 + 8<i32>:word32]
	word32 ebp_271 = Mem261[ebp_82:word32]
	ecxOut = Mem261[esp_149:word32]
	edxOut = edx_217
	ebxOut = ebx_269
	ebpOut = ebp_271
	esiOut = esi_267
	ediOut = edi_265
	return bl_182
fn0041C25C_exit:


word32 fn0041C39F(word32 ecx, word32 dwArg00, word32 dwArg04, word32 dwArg34, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
//      fn0041C1F0
// MayUse:  ecx:[0..31] fs:[0..15] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0034:[0..31]
// LiveOut: eax ebp ebx ecx edi edx
// Trashed: SCZO eax ebp ebx ecx edi edx esi Top xmm0
// Preserved: esp
fn0041C39F_entry:
	ptr32 fp
	selector fs
	word32 dwLoc04
	word32 eax
	word32 ebp
	word32 esi
	word32 edi
	selector es
	selector ds
l0041C39F:
	word32 edx_12
	word32 ebx_103
	word32 ebp_104
	word32 esi_105
	word32 edi_106
	word32 ecx_10 = fn004113B0(ecx, dwLoc04, dwArg00, dwArg04, out edx_12, out ebx_103, out ebp_104, out esi_105, out edi_106)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	Mem44[fs:0<32>:word32] = fp + 0x20<32>
	word32 esi_47 = Mem44[dwArg34:word32]
	word32 eax_49 = _errno()
	branch Mem44[esi_47 + 0x2C<32>:word32] <u 0x10<32> l0041C3F6
l0041C3F2_thunk_fn0041C3F6:
	word32 ecx_56
	word32 edx_57
	word32 ebp_113
	word32 esi_114
	word32 eax_55 = CONVERT(fn0041C3F6(eax, ebp, esi, edi, es, ds, out ecx_56, out edx_57, out ebp_113, out esi_114), byte, uint32)
	ecxOut = ecx_56
	edxOut = edx_57
	ebxOut = <invalid>
	ebpOut = <invalid>
	ediOut = <invalid>
	return eax_55
l0041C3F2_thunk_fn0041C3F4:
	fn0041C3F4(esi_47 + 0x18<32>)
	ecxOut = ecx_10
	edxOut = edx_12
	ebxOut = <invalid>
	ebpOut = <invalid>
	ediOut = <invalid>
	return eax_49
fn0041C39F_exit:


word32 fn0041C3B0(word32 ecx, selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ecx esi esp
// Trashed: SCZO eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: DP
fn0041C3B0_entry:
	ptr32 fp
	selector fs
l0041C3B0:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 esi_36 = Mem32[dwArg04:word32]
	word32 eax_38 = _errno()
	branch Mem32[esi_36 + 0x2C<32>:word32] <u 0x10<32> l0041C3F2_thunk_fn0041C3F6
l0041C3F2_thunk_fn0041C3F6:
	word32 ebp_48
	word32 ecx_50
	word32 esi_53
	word32 edx_120
	fn0041C3F6(eax_38, fp - 4<i32>, esi_36 + 0x18<32>, ecx, es, ds, out ecx_50, out edx_120, out ebp_48, out esi_53)
	ebpOut = ebp_48
	esiOut = esi_53
	return ecx_50
l0041C3F2_thunk_fn0041C3F4:
	word32 esi_69 = fn0041C3F4(esi_36 + 0x18<32>)
	ebpOut = fp - 4<i32>
	esiOut = esi_69
	return ecx
fn0041C3B0_exit:


word32 fn0041C3F4(word32 esi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041C39F
//      fn0041C3B0
// MayUse:  esi:[0..31]
// LiveOut: esi
// Trashed: esi Top
// Preserved: esp
fn0041C3F4_entry:
	word32 eax
	word32 ebp
	word32 edi
	selector es
	selector ds
l0041C3F4:
	word32 esi_6 = Mem0[esi:word32]
l0041C3F4_thunk_fn0041C3F6:
	word32 ecx_12
	word32 edx_13
	word32 ebp_14
	word32 esi_15
	fn0041C3F6(eax, ebp, esi, edi, es, ds, out ecx_12, out edx_13, out ebp_14, out esi_15)
	return esi_6
fn0041C3F4_exit:


byte fn0041C3F6(word32 eax, word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ecxOut, ptr32 & edxOut, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041C39F
//      fn0041C3B0
// MayUse:  cs:[0..15] ds:[0..15] eax:[0..31] ebp:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ecx edx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn0041C3F6_entry:
	def fp
	def eax
	def ebp
	def esi
	def edi
	def fs
	def ds
	def es
	def ebx
l0041C3F6:
	Mem5[eax:word32] = 0<32>
	eax_15 = strtoul(esi, ebp - 20<i32>, 0<32>)
	esp_16 = fp
	branch esi != Mem14[ebp - 20<i32>:word32] l0041C41E
l0041C413:
	_Xinvalid_argument(0x4318AC<32>)
	esp_20 = fp - 4<i32>
l0041C41E:
	esp_27 = PHI((esp_16, l0041C3F6), (esp_20, l0041C413))
	Mem23 = PHI((Mem14, l0041C3F6), (Mem21, l0041C413))
	branch Mem23[Mem23[ebp - 24<i32>:word32]:word32] != 0x22<32> l0041C431
l0041C426:
	esp_28 = esp_27 - 4<i32>
	Mem29[esp_28:word32] = 0x4318C4<32>
	_Xout_of_range(Mem29[esp_28:(ptr32 charconst )])
l0041C431:
	esp_30 = PHI((esp_27, l0041C41E), (esp_28, l0041C426))
	Mem38[edi + 96<i32>:word32] = eax_15
	esp_31 = esp_30 - 0x18<32>
	Mem41[ebp - 20<i32>:word32] = esp_31
	Mem43[esp_31 - 4<i32>:word32] = 4<32>
	Mem44[esp_31 + 16<i32>:word32] = 0<32>
	Mem45[esp_31 + 20<i32>:word32] = 0xF<32>
	Mem47[esp_31 - 8<i32>:word32] = 0x431D40<32>
	Mem48[esp_31:byte] = 0<8>
	fn00402A70(esp_31, edi, Mem48[esp_31 - 8<i32>:word32], Mem48[esp_31 - 4<i32>:word32], Mem48[esp_31 + 12<i32>:word32], out ecx_396, out edx_397, out ebx_54, out ebp_53, out esi_398, out edi_56)
	Mem68[ebp_53 - 4<i32>:word32] = 0<32>
	esp_60 = <invalid>
	Mem72[esp_60 - 0x14<32>:word32] = Mem68[ebx_54:word32]
	fn004028D0(esp_60 - 0x10<32>, edi_56, Mem72[esp_60 - 0x14<32>:word32], out edx_399, out ebp_75)
	Mem85[ebp_75 - 4<i32>:word32] = 0xFFFFFFFF<32>
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	esp_76 = <invalid>
	stackArg44 = <invalid>
	esp_88 = esp_76 + 4<32>
	branch SLICE(fn0041C1F0(edi_56, ebx, ebp_75, es, ds, stackArg44, out ecx_402, out edx_92, out ebx_403, out ebp_404, out esi_405, out edi_406), byte, 0) == 0<8> l0041C489
l0041C489:
	Mem101[ebp_75 - 28<i32>:word32] = esp_76 - 0x14<32>
	Mem103[esp_76 - 0x18<32>:word32] = 4<32>
	Mem104[esp_76 - 4<32>:word32] = 0<32>
	Mem105[esp_76:word32] = 0xF<32>
	Mem107[esp_76 - 0x1C<32>:word32] = 0x431D24<32>
	Mem108[esp_76 - 0x14<32>:byte] = 0<8>
	fn00402A70(esp_76 - 0x14<32>, edi_56, Mem108[esp_76 - 0x1C<32>:word32], Mem108[esp_76 - 0x18<32>:word32], Mem108[esp_76 - 8<32>:word32], out ecx_407, out edx_408, out ebx_111, out ebp_110, out esi_409, out edi_113)
	Mem125[ebp_110 - 4<i32>:word32] = 1<32>
	esp_117 = <invalid>
	Mem129[esp_117 - 0x14<32>:word32] = Mem125[ebx_111:word32]
	fn004028D0(esp_117 - 0x10<32>, edi_113, Mem129[esp_117 - 0x14<32>:word32], out edx_410, out ebp_132)
	Mem142[ebp_132 - 4<i32>:word32] = 0xFFFFFFFF<32>
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	esp_133 = <invalid>
	stackArg44 = <invalid>
	esp_143 = esp_133 + 4<32>
	branch SLICE(fn0041C1F0(edi_113, ebx, ebp_132, es, ds, stackArg44, out ecx_412, out edx_147, out ebx_413, out ebp_414, out esi_415, out edi_416), byte, 0) == 0<8> l0041C4DF
l0041C4DF:
	Mem156[ebp_132 - 28<i32>:word32] = esp_133 - 0x14<32>
	Mem158[esp_133 - 0x18<32>:word32] = 6<32>
	Mem159[esp_133 - 4<32>:word32] = 0<32>
	Mem160[esp_133:word32] = 0xF<32>
	Mem162[esp_133 - 0x1C<32>:word32] = 0x431D70<32>
	Mem163[esp_133 - 0x14<32>:byte] = 0<8>
	fn00402A70(esp_133 - 0x14<32>, edi_113, Mem163[esp_133 - 0x1C<32>:word32], Mem163[esp_133 - 0x18<32>:word32], Mem163[esp_133 - 8<32>:word32], out ecx_417, out edx_418, out ebx_166, out ebp_165, out esi_419, out edi_168)
	Mem180[ebp_165 - 4<i32>:word32] = 2<32>
	esp_172 = <invalid>
	Mem184[esp_172 - 0x14<32>:word32] = Mem180[ebx_166:word32]
	fn004028D0(esp_172 - 0x10<32>, edi_168, Mem184[esp_172 - 0x14<32>:word32], out edx_420, out ebp_187)
	Mem197[ebp_187 - 4<i32>:word32] = 0xFFFFFFFF<32>
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	esp_188 = <invalid>
	stackArg44 = <invalid>
	esp_198 = esp_188 + 4<32>
	branch SLICE(fn0041C1F0(edi_168, ebx, ebp_187, es, ds, stackArg44, out ecx_422, out edx_202, out ebx_423, out ebp_424, out esi_425, out edi_426), byte, 0) == 0<8> l0041C58A
l0041C529:
	esi_208 = Mem197[ebx_166:word32]
	esi_209 = esi_208 + 0x18<32>
	eax_210 = _errno()
	branch Mem197[esi_208 + 0x2C<32>:word32] <u 0x10<32> l0041C53E
l0041C53C:
	esi_214 = Mem197[esi_208 + 0x18<32>:word32]
l0041C53E:
	esi_223 = PHI((esi_209, l0041C529), (esi_214, l0041C53C))
	Mem218[eax_210:word32] = 0<32>
	Mem221[esp_188:word32] = ebp_187 - 24<i32>
	Mem224[esp_188 - 4<32>:word32] = esi_223
	rLoc1_388 = strtof(Mem224[esp_188 - 4<32>:(ptr32 charconst )], Mem224[esp_188:(ptr32 (ptr32 charconst ))])
	esp_228 = esp_188 + 4<32>
	Mem229[ebp_187 - 20<i32>:real32] = CONVERT(rLoc1_388, real64, real32)
	branch esi_223 != Mem229[ebp_187 - 24<i32>:word32] l0041C565
l0041C55A:
	esp_233 = esp_188
	Mem234[esp_188:word32] = 0x4318E0<32>
	_Xinvalid_argument(Mem234[esp_188:(ptr32 charconst )])
l0041C565:
	esp_239 = PHI((esp_228, l0041C53E), (esp_233, l0041C55A))
	Mem236 = PHI((Mem229, l0041C53E), (Mem234, l0041C55A))
	branch Mem236[eax_210:word32] != 0x22<32> l0041C575
l0041C56A:
	esp_240 = esp_239 - 4<i32>
	Mem241[esp_240:word32] = 0x4318F8<32>
	_Xout_of_range(Mem241[esp_240:(ptr32 charconst )])
l0041C575:
	esp_286 = PHI((esp_239, l0041C565), (esp_240, l0041C56A))
	Mem244 = PHI((Mem236, l0041C565), (Mem241, l0041C56A))
	v22_246 = Mem244[ebp_187 - 20<i32>:real32] * Mem244[0x00432F70<p32>:real32]
	xmm0_248 = SEQ(0<96>, v22_246)
	eax_249 = fn0042D730(xmm0_248, out edx_251)
	Mem267[edi_168 + 96<i32>:word32] = eax_249
l0041C4D3:
	Mem269[edi_113 + 96<i32>:word32] = Mem142[edi_113 + 96<i32>:word32] & 0xFF<32>
l0041C47E:
	Mem276[edi_56 + 98<i32>:word16] = 0<16>
l0041C58A:
	edx_299 = PHI((edx_92, l0041C47E), (edx_147, l0041C4D3), (edx_202, l0041C4DF), (edx_251, l0041C575))
	esp_285 = PHI((esp_88, l0041C47E), (esp_143, l0041C4D3), (esp_198, l0041C4DF), (esp_286, l0041C575))
	Mem278 = PHI((Mem276, l0041C47E), (Mem269, l0041C4D3), (Mem197, l0041C4DF), (Mem267, l0041C575))
	ebp_277 = PHI((ebp_75, l0041C47E), (ebp_132, l0041C4D3), (ebp_187, l0041C4DF), (ebp_187, l0041C575))
	Mem284[fs:0x00000000<p32>:word32] = Mem278[ebp_277 - 12<i32>:word32]
	esp_288 = esp_285 + 4<i32>
	esi_291 = Mem284[esp_288 + 4<i32>:word32]
	fn00427500(Mem284[ebp_277 - 16<i32>:word32] ^ ebp_277, edx_299, Mem284[esp_288 + 8<i32>:word32], ebp_277, esi_291, Mem284[esp_288:word32], es, ds, Mem284[esp_288 + 8<i32>:word32], out eax_335, out ecx_336)
	ebp_344 = Mem284[ebp_277:word32]
	ecxOut = ecx_336
	edxOut = edx_299
	ebpOut = ebp_344
	esiOut = esi_291
	return SLICE(eax_335, byte, 0)
fn0041C3F6_exit:


word32 fn0041C5B0(word32 ecx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00421620
// MayUse:  ecx:[0..31]
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: esp
fn0041C5B0_entry:
l0041C5B0:
	return Mem0[ecx + 96<i32>:word32] >>u 0x1A<32>
fn0041C5B0_exit:


word32 fn0041C5C0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041EE50
//      fn00421620
//      fn00424170
// MayUse:  Stack +0004:[0..31]
// LiveOut: eax
// Trashed: SCZOP eax ecx edx Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: ebp esp
fn0041C5C0_entry:
l0041C5C0:
	word128 xmm0_10 = fn00427210()
	word32 ecx_43
	word32 edx_44
	return fn0042D911(SEQ(SLICE(xmm0_10, word64, 64), SLICE(xmm0_10, real64, 0) * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg04, word32, word128)), real64, 0) + Mem6[(dwArg04 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64])), out ecx_43, out edx_44)
fn0041C5C0_exit:


word32 fn0041C600(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041CC60
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: eax
// Trashed: SCZOP eax ecx edx Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: ebp esp
fn0041C600_entry:
	ptr32 fp
l0041C600:
	__align_stack<word32>(fp - 4<i32>)
	libm_sse2_pow_precise()
	libm_sse2_pow_precise(Mem6[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg04, word32, word128)), real64, 0) + Mem6[(dwArg04 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]))
	word32 ecx_85
	word32 edx_86
	return fn0042D911(SEQ(0<64>, Mem29[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg08, word32, word128)), real64, 0) + Mem29[(dwArg08 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + Mem29[esp_31:real64]), out ecx_85, out edx_86)
fn0041C600_exit:


word32 fn0041C680(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041CC60
//      fn0041ED20
//      fn0041EE50
//      fn004204C0
//      fn00421620
//      fn004237A0
//      fn00424170
//      fn00425A20
//      fn004262A0
//      fn00426E70
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: eax ecx
// Trashed: SCZOP eax ecx edx Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: ebp esp
fn0041C680_entry:
	ptr32 fp
l0041C680:
	__align_stack<word32>(fp - 4<i32>)
	libm_sse2_pow_precise()
	libm_sse2_pow_precise(Mem6[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg04, word32, word128)), real64, 0) + Mem6[(dwArg04 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]))
	libm_sse2_pow_precise(Mem30[esp_32:real64] + Mem6[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg08, word32, word128)), real64, 0) + Mem30[(dwArg08 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]))
	word32 ecx_116
	word32 edx_117
	word32 eax_74 = fn0042D911(SEQ(0<64>, Mem30[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg0C, word32, word128)), real64, 0) + Mem53[(dwArg0C >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + Mem53[esp_55:real64]), out ecx_116, out edx_117)
	ecxOut = ecx_101
	return eax_74
fn0041C680_exit:


word32 fn0041C740(word32 dwArg04, word16 wArg08, word32 dwArg0C, ptr32 & edxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041EE50
//      fn004204C0
//      fn00421620
//      fn00426E70
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..15] Stack +000C:[0..31]
// LiveOut: eax edx
// Trashed: SCZOP eax ecx edx Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: ebp esp
fn0041C740_entry:
	ptr32 fp
l0041C740:
	__align_stack<word32>(fp - 4<i32>)
	libm_sse2_pow_precise()
	libm_sse2_pow_precise(Mem6[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg04, word32, word128)), real64, 0) + Mem6[(dwArg04 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]))
	real64 v18_49 = Mem29[esp_31:real64] + Mem29[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg0C, word32, word128)), real64, 0) + Mem29[(dwArg0C >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64])
	word128 xmm0_54 = __cvtdq2pd<int32[4],real64[4]>(CONVERT(wArg08, word16, word128))
	word32 ecx_95
	word32 edx_96
	word32 eax_58 = fn0042D911(SEQ(SLICE(xmm0_54, word64, 64), SLICE(xmm0_54, real64, 0) + v18_49), out ecx_95, out edx_96)
	edxOut = edx_82
	return eax_58
fn0041C740_exit:


word32 fn0041C7E0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, ptr32 & ecxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00424170
//      fn00425A20
//      fn004262A0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: eax ecx
// Trashed: SCZOP eax ecx edx Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: ebp esp
fn0041C7E0_entry:
	ptr32 fp
l0041C7E0:
	__align_stack<word32>(fp - 4<i32>)
	libm_sse2_pow_precise()
	libm_sse2_pow_precise(Mem6[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg04, word32, word128)), real64, 0) + Mem6[(dwArg04 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]))
	libm_sse2_pow_precise(Mem30[esp_32:real64] + Mem6[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg0C, word32, word128)), real64, 0) + Mem30[(dwArg0C >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]))
	libm_sse2_pow_precise(Mem54[esp_56:real64] + Mem54[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg10, word32, word128)), real64, 0) + Mem54[(dwArg10 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]))
	real64 v32_97 = Mem77[esp_79:real64] + Mem54[0x00432E60<p32>:real64] * (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg08, word32, word128)), real64, 0) + Mem77[(dwArg08 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64])
	word128 xmm0_102 = __cvtdq2pd<int32[4],real64[4]>(CONVERT(dwArg14 * 2<32>, word32, word128))
	word32 ecx_160
	word32 edx_161
	word32 eax_111 = fn0042D911(SEQ(SLICE(xmm0_102, word64, 64), SLICE(xmm0_102, real64, 0) + Mem77[(dwArg14 * 2<32> >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64] + v32_97), out ecx_160, out edx_161)
	ecxOut = ecx_142
	return eax_111
fn0041C7E0_exit:


word32 fn0041C910(word32 ebx, selector es, selector ds, word32 dwArg04, word32 dwArg28, ptr32 & ecxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041CC60
//      fn0041DAF0
//      fn0041ED20
//      fn0041EE50
//      fn004204C0
//      fn00421620
//      fn004237A0
//      fn00424170
//      fn00425A20
//      fn004262A0
//      fn00426E70
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31] Stack +0028:[0..31]
// LiveOut: eax ebp ebx ecx edi esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn0041C910_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc30
l0041C910:
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	word32 esp_218 = fp - 0x40<32>
	word32 eax_135 = dwArg04
	word32 edx_34 = 0<32>
	word32 esi_35 = dwArg04
	word32 ecx_175 = Mem32[dwArg04 + 20<i32>:word32]
	branch ecx_175 <u 0x10<32> l0041C94C
l0041C94A:
	esi_35 = Mem32[dwArg04:word32]
l0041C94C:
	branch Mem32[esi_35:byte] != 0x73<8> l0041C967
l0041C951:
	word32 esi_45 = dwArg04
	branch ecx_175 <u 0x10<32> l0041C95A
l0041C958:
	esi_45 = Mem32[dwArg04:word32]
l0041C95A:
	branch Mem32[esi_45 + 1<i32>:byte] != 0x70<8> l0041C967
l0041C967:
	word32 esi_56 = dwArg04
	branch ecx_175 <u 0x10<32> l0041C970
l0041C96E:
	esi_56 = Mem32[dwArg04:word32]
l0041C970:
	branch Mem32[esi_56:byte] == 0x63<8> l0041C983
l0041C975:
	word32 esi_68 = dwArg04
	branch ecx_175 <u 0x10<32> l0041C97E
l0041C97C:
	esi_68 = Mem32[dwArg04:word32]
l0041C97E:
	branch Mem32[esi_68:byte] != 0x66<8> l0041C988
l0041C983:
	edx_34 = 1<32>
l0041C960:
	edx_34 = 2<32>
l0041C988:
	word32 edi_82 = dwArg04
	branch ecx_175 <u 0x10<32> l0041C991
l0041C98F:
	edi_82 = Mem32[dwArg04:word32]
l0041C991:
	Mem110[&tLoc30 + 16<i32>:word32] = 0<32>
	word32 esi_101 = edx_34 + 1<i32>
	branch Mem32[edi_82 + edx_34:byte] == 0x72<8> l0041C9A2
l0041C99F_1:
	esi_101 = edx_34
l0041C9A2:
	Mem114[&tLoc30 + 20<i32>:word32] = 0xF<32>
	word32 edx_117 = Mem114[dwArg04 + 16<i32>:word32]
	Mem118[&tLoc30:byte] = 0<8>
	branch edx_117 <u esi_101 l0041CA7E
l0041C9B8:
	word32 edx_122 = edx_117 - esi_101
	word32 edi_124 = 0xFFFFFFFF<32>
	branch edx_122 >=u 0xFFFFFFFF<32> l0041C9C3
l0041C9C0_1:
	edi_124 = edx_122
l0041C9C3:
	branch ecx_175 <u 0x10<32> l0041C9CA
l0041C9C8:
	eax_135 = Mem118[dwArg04:word32]
l0041C9CA:
	word32 ebx_725
	word32 esi_726
	word32 edi_727
	word32 edx_724
	word32 ebp_173
	fn00402A70(&tLoc30, edi_124, eax_135 + esi_101, edi_124, ebx, out ecx_175, out edx_724, out ebx_725, out ebp_173, out esi_726, out edi_727)
	Mem186[ebp_173 - 4<i32>:word32] = 0<32>
	word32 esp_180 = <invalid>
	word32 eax_187 = _errno()
	word32 esi_189 = ebp_173 - 44<i32>
	branch Mem186[ebp_173 - 24<i32>:word32] <u 0x10<32> l0041C9F3
l0041C9EF_1:
	esi_189 = Mem186[ebp_173 - 44<i32>:word32]
l0041C9F3:
	Mem196[esp_180 + 4<32>:word32] = 0xA<32>
	Mem199[esp_180:word32] = ebp_173 - 20<i32>
	Mem202[esp_180 - 4<i32>:word32] = esi_189
	Mem204[eax_187:word32] = 0<32>
	strtol(Mem204[esp_180 - 4<i32>:(ptr32 charconst )], Mem204[esp_180:(ptr32 (ptr32 charconst ))], Mem204[esp_180 + 4<i32>:int32])
	word32 esp_206 = esp_180 + 8<32>
	branch esi_189 != Mem204[ebp_173 - 20<i32>:word32] l0041CA18
l0041CA0D:
	Mem212[esp_180 + 4<32>:word32] = 0x431878<32>
	_Xinvalid_argument(Mem212[esp_180 + 4<32>:(ptr32 charconst )])
	esp_206 = esp_180 + 4<32>
l0041CA18:
	branch Mem214[eax_187:word32] == 0x22<32> l0041CA73
l0041CA73:
	esp_218 = esp_206 - 4<i32>
	Mem219[esp_218:word32] = 0x431890<32>
	_Xout_of_range(Mem219[esp_218:(ptr32 charconst )])
l0041CA7E:
	word32 edx_715
	word32 ebx_716
	word32 ebp_229
	word32 edi_232
	word32 esi_234
	fn004113B0(ecx_175, Mem227[esp_218 + -4<i32>:word32], Mem227[esp_218:word32], Mem227[esp_218 + 4<i32>:word32], out edx_715, out ebx_716, out ebp_229, out esi_234, out edi_232)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 esp_235 = <invalid>
	Mem243[esp_235 + 8<32>:word32] = ebp_229
	Mem246[esp_235 + 4<32>:word32] = 0xFFFFFFFF<32>
	Mem248[esp_235:word32] = 0x42F570<32>
	Mem251[esp_235 - 4<i32>:word32] = Mem248[fs:0<32>:word32]
	Mem254[esp_235 - 0x10<32>:word32] = esi_234
	Mem256[esp_235 - 0x14<32>:word32] = edi_232
	Mem260[esp_235 - 0x18<32>:word32] = Mem256[0x0043A008<p32>:word32] ^ esp_235 + 8<32>
	Mem262[fs:0<32>:word32] = esp_235 - 4<32>
	Mem267[esp_235 - 8<32>:word32] = esp_235 - 0x30<32>
	Mem269[esp_235 - 0x34<32>:word32] = 2<32>
	Mem270[esp_235 - 0x20<32>:word32] = 0<32>
	Mem271[esp_235 - 0x1C<32>:word32] = 0xF<32>
	Mem273[esp_235 - 0x38<32>:word32] = 0x4326F8<32>
	Mem274[esp_235 - 0x30<32>:byte] = 0<8>
	word32 edx_718
	word32 edi_719
	word32 ecx_717
	word32 ebp_276
	word32 ebx_277
	word32 esi_281
	fn00402A70(esp_235 - 0x30<32>, edi_232, Mem274[esp_235 - 0x38<32>:word32], Mem274[esp_235 - 0x34<32>:word32], Mem274[esp_235 - 0x24<32>:word32], out ecx_717, out edx_718, out ebx_277, out ebp_276, out esi_281, out edi_719)
	Mem291[ebp_276 - 4<i32>:word32] = 0<32>
	word32 esp_283 = <invalid>
	word32 edi_292 = Mem291[ebp_276 + 8<i32>:word32]
	Mem295[esp_283 - 0x14<32>:word32] = edi_292
	word32 edx_720
	word32 ebp_298
	fn004028D0(esp_283 - 0x10<32>, edi_292, Mem295[esp_283 - 0x14<32>:word32], out edx_720, out ebp_298)
	Mem308[ebp_298 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 ecx_721
	word32 ebx_723
	word32 edx_722
	word32 ebp_385
	word32 edi_388
	word32 esi_390
	branch SLICE(fn0041C1F0(esi_281, ebx_277, ebp_298, es, ds, dwArg28, out ecx_721, out edx_722, out ebx_723, out ebp_385, out esi_390, out edi_388), byte, 0) == 0<8> l0041CB12
l0041CB03_thunk_fn0041CB12:
	word32 ebp_403
	word32 ebx_404
	word32 ecx_405
	word32 edi_406
	word32 esi_408
	word32 eax_402 = fn0041CB12(ebp_385, edi_388, es, ds, out ecx_405, out ebx_404, out ebp_403, out esi_408, out edi_406)
	ecxOut = ecx_405
	ebxOut = ebx_404
	ebpOut = ebp_403
	esiOut = esi_408
	ediOut = edi_406
	return eax_402
l0041CB03_thunk_fn0041CB05:
	word32 ebp_425
	word32 ebx_426
	word32 ecx_427
	word32 edi_428
	word32 esi_430
	word32 eax_424 = fn0041CB05(ebp_385, esi_390, edi_388, es, ds, out ecx_427, out ebx_426, out ebp_425, out esi_430, out edi_428)
	ecxOut = ecx_427
	ebxOut = ebx_426
	ebpOut = ebp_425
	esiOut = esi_430
	ediOut = edi_428
	return eax_424
l0041CA1D:
	word32 edx_446 = Mem214[ebp_173 - 24<i32>:word32]
	branch edx_446 <u 0x10<32> l0041CA53
l0041CA25:
	word32 ecx_449 = Mem214[ebp_173 - 44<i32>:word32]
	edx_446 = edx_446 + 1<32>
	branch edx_446 <u 0xFFF<32> l0041CA49
l0041CA33:
	ecx_449 = Mem214[ecx_449 - 4<i32>:word32]
	edx_446 = edx_446 + 0x24<32>
	branch ecx_449 - ecx_449 <=u 0x23<32> l0041CA49
l0041CA43:
	_invalid_parameter_noinfo_noreturn()
l0041CA49:
	word32 esp_461 = esp_206 - 4<i32>
	Mem463[esp_461:word32] = edx_446
	Mem466[esp_461 - 4<i32>:word32] = ecx_449
	fn0042763F(Mem466[esp_461 - 4<i32>:word32])
l0041CA53:
	Mem480[fs:0x00000000<p32>:word32] = Mem476[ebp_173 - 12<i32>:word32]
	word32 esp_483 = esp_206 + 4<i32>
	word32 edi_484 = Mem480[esp_483:word32]
	word32 esi_486 = Mem480[esp_483 + 4<i32>:word32]
	word32 ebx_488 = Mem480[esp_483 + 8<i32>:word32]
	word32 eax_505
	word32 ecx_506
	fn00427500(Mem480[ebp_173 - 16<i32>:word32] ^ ebp_173, edx_446, ebx_488, ebp_173, esi_486, edi_484, es, ds, Mem480[esp_483 + 8<i32>:word32], out eax_505, out ecx_506)
	word32 ebp_514 = Mem480[ebp_173:word32]
	ecxOut = ecx_506
	ebxOut = ebx_488
	ebpOut = ebp_514
	esiOut = esi_486
	ediOut = edi_484
	return eax_505
fn0041C910_exit:


word32 fn0041CA90(word32 edi, selector es, selector ds, word32 dwArg28, ptr32 & ebpOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041CC60
// MayUse:  cs:[0..15] ds:[0..15] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0028:[0..31]
// LiveOut: ebp ebx edi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: esp
fn0041CA90_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc3C
l0041CA90:
	Mem28[fs:0<32>:word32] = fp - 16<i32>
	Mem37[&tLoc3C + 16<i32>:word32] = 0<32>
	Mem38[&tLoc3C + 20<i32>:word32] = 0xF<32>
	Mem41[&tLoc3C:byte] = 0<8>
	word32 ebp_43
	word32 ebx_44
	word32 esi_48
	word32 ecx_179
	word32 edx_180
	word32 edi_181
	fn00402A70(&tLoc3C, edi, 0x4326F8<32>, 2<32>, Mem41[&tLoc3C + 12<i32>:word32], out ecx_179, out edx_180, out ebx_44, out ebp_43, out esi_48, out edi_181)
	Mem58[ebp_43 - 4<i32>:word32] = 0<32>
	word32 esp_50 = <invalid>
	word32 edi_59 = Mem58[ebp_43 + 8<i32>:word32]
	Mem62[esp_50 - 0x14<32>:word32] = edi_59
	word32 ebp_65
	word32 edx_182
	fn004028D0(esp_50 - 0x10<32>, edi_59, Mem62[esp_50 - 0x14<32>:word32], out edx_182, out ebp_65)
	Mem75[ebp_65 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 ebp_82
	word32 edi_85
	word32 esi_87
	word32 ecx_183
	word32 edx_184
	word32 ebx_185
	branch SLICE(fn0041C1F0(esi_48, ebx_44, ebp_65, es, ds, dwArg28, out ecx_183, out edx_184, out ebx_185, out ebp_82, out esi_87, out edi_85), byte, 0) == 0<8> l0041CB03_thunk_fn0041CB12
l0041CB03_thunk_fn0041CB12:
	word32 ebp_100
	word32 ebx_101
	word32 edi_103
	word32 ecx_186
	word32 esi_187
	fn0041CB12(ebp_82, edi_85, es, ds, out ecx_186, out ebx_101, out ebp_100, out esi_187, out edi_103)
	ebpOut = ebp_100
	ediOut = edi_103
	return ebx_101
l0041CB03_thunk_fn0041CB05:
	word32 ebp_122
	word32 ebx_123
	word32 edi_125
	word32 ecx_188
	word32 esi_189
	fn0041CB05(ebp_82, esi_87, edi_85, es, ds, out ecx_188, out ebx_123, out ebp_122, out esi_189, out edi_125)
	ebpOut = ebp_122
	ediOut = edi_125
	return ebx_123
fn0041CA90_exit:


word32 fn0041CB05(word32 ebp, word32 esi, word32 edi, selector es, selector ds, ptr32 & ecxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041C910
//      fn0041CA90
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] edi:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx ecx edi esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: esp
fn0041CB05_entry:
l0041CB05:
	Mem7[esi + 96<i32>:word32] = Mem0[esi + 96<i32>:word32] + 0x20<32>
	Mem9[esi + 108<i32>:word32] = 9<32>
l0041CB10_thunk_fn0041CB12:
	word32 ebp_19
	word32 ebx_20
	word32 ecx_21
	word32 edi_22
	word32 esi_24
	word32 eax_18 = fn0041CB12(ebp, edi, es, ds, out ecx_21, out ebx_20, out ebp_19, out esi_24, out edi_22)
	ecxOut = ecx_21
	ebxOut = ebx_20
	ebpOut = ebp_19
	esiOut = esi_24
	ediOut = edi_22
	return eax_18
fn0041CB05_exit:


word32 fn0041CB12(word32 ebp, word32 edi, selector es, selector ds, ptr32 & ecxOut, ptr32 & ebxOut, ptr32 & ebpOut, ptr32 & esiOut, ptr32 & ediOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041C910
//      fn0041CA90
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: eax ebp ebx ecx edi esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn0041CB12_entry:
	selector fs
	struct <anonymous> tLoc18
l0041CB12:
	Mem8[ebp + 8<i32>:word32] = &tLoc18
	Mem11[&tLoc18 + 16<i32>:word32] = 0<32>
	Mem12[&tLoc18 + 20<i32>:word32] = 0xF<32>
	Mem15[&tLoc18:byte] = 0<8>
	word32 ebp_19
	word32 ebx_20
	word32 edi_22
	word32 esi_24
	word32 edx_346
	word32 ecx_345
	fn00402A70(&tLoc18, edi, 0x4326FC<32>, 3<32>, Mem15[&tLoc18 + 12<i32>:word32], out ecx_345, out edx_346, out ebx_20, out ebp_19, out esi_24, out edi_22)
	Mem34[ebp_19 - 4<i32>:word32] = 1<32>
	word32 esp_26 = <invalid>
	Mem37[esp_26 - 0x14<32>:word32] = edi_22
	word32 ebp_40
	word32 edx_347
	fn004028D0(esp_26 - 0x10<32>, edi_22, Mem37[esp_26 - 0x14<32>:word32], out edx_347, out ebp_40)
	Mem50[ebp_40 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_41 = <invalid>
	word32 ebp_57
	word32 edi_60
	word32 esi_62
	word32 edx_349
	word32 ecx_348
	word32 ebx_350
	branch SLICE(fn0041C1F0(esi_24, ebx_20, ebp_40, es, ds, Mem50[esp_41 + 0x2C<32>:word32], out ecx_348, out edx_349, out ebx_350, out ebp_57, out esi_62, out edi_60), byte, 0) == 0<8> l0041CB6B
l0041CB6B:
	word128 xmm0_76 = fn00427210()
	word32 ecx_365
	word32 edx_366
	Mem97[esi_62 + 96<i32>:word32] = Mem50[esi_62 + 96<i32>:word32] - fn0042D911(SEQ(SLICE(xmm0_76, word64, 64), SLICE(xmm0_76, real64, 0) * Mem50[0x00432E68<p32>:real64]), out ecx_365, out edx_366)
l0041CB5B:
	Mem100[esi_62 + 96<i32>:word32] = Mem50[esi_62 + 96<i32>:word32] + 0x420<32>
	Mem102[esi_62 + 108<i32>:word32] = 0xB<32>
l0041CB85:
	Mem108[ebp_57 + 8<i32>:word32] = esp_41 - 0x14<32>
	Mem110[esp_41 - 0x18<32>:word32] = 1<32>
	Mem111[esp_41 - 4<32>:word32] = 0<32>
	Mem112[esp_41:word32] = 0xF<32>
	Mem114[esp_41 - 0x1C<32>:word32] = 0x432700<32>
	Mem115[esp_41 - 0x14<32>:byte] = 0<8>
	word32 ebp_119
	word32 ebx_120
	word32 edi_122
	word32 esi_124
	word32 ecx_351
	word32 edx_352
	fn00402A70(esp_41 - 0x14<32>, edi_60, Mem115[esp_41 - 0x1C<32>:word32], Mem115[esp_41 - 0x18<32>:word32], Mem115[esp_41 - 8<32>:word32], out ecx_351, out edx_352, out ebx_120, out ebp_119, out esi_124, out edi_122)
	Mem134[ebp_119 - 4<i32>:word32] = 2<32>
	word32 esp_126 = <invalid>
	Mem137[esp_126 - 0x14<32>:word32] = edi_122
	word32 ebp_140
	word32 edx_353
	fn004028D0(esp_126 - 0x10<32>, edi_122, Mem137[esp_126 - 0x14<32>:word32], out edx_353, out ebp_140)
	Mem150[ebp_140 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_141 = <invalid>
	word32 ebp_157
	word32 edi_160
	word32 esi_162
	word32 ecx_354
	word32 edx_355
	word32 ebx_356
	branch SLICE(fn0041C1F0(esi_124, ebx_120, ebp_140, es, ds, Mem150[esp_141 + 0x2C<32>:word32], out ecx_354, out edx_355, out ebx_356, out ebp_157, out esi_162, out edi_160), byte, 0) == 0<8> l0041CBD1
l0041CBCE:
	Mem175[esi_162 + 96<i32>:word32] = Mem150[esi_162 + 96<i32>:word32] + 1<32>
l0041CBD1:
	Mem182[ebp_157 + 8<i32>:word32] = esp_141 - 0x14<32>
	Mem184[esp_141 - 0x18<32>:word32] = 1<32>
	Mem185[esp_141 - 4<32>:word32] = 0<32>
	Mem186[esp_141:word32] = 0xF<32>
	Mem188[esp_141 - 0x1C<32>:word32] = 0x432704<32>
	Mem189[esp_141 - 0x14<32>:byte] = 0<8>
	word32 ebp_193
	word32 ebx_194
	word32 edi_196
	word32 esi_198
	word32 ecx_357
	word32 edx_358
	fn00402A70(esp_141 - 0x14<32>, edi_160, Mem189[esp_141 - 0x1C<32>:word32], Mem189[esp_141 - 0x18<32>:word32], Mem189[esp_141 - 8<32>:word32], out ecx_357, out edx_358, out ebx_194, out ebp_193, out esi_198, out edi_196)
	Mem208[ebp_193 - 4<i32>:word32] = 3<32>
	word32 esp_200 = <invalid>
	Mem211[esp_200 - 0x14<32>:word32] = edi_196
	word32 ebp_214
	word32 edx_359
	fn004028D0(esp_200 - 0x10<32>, edi_196, Mem211[esp_200 - 0x14<32>:word32], out edx_359, out ebp_214)
	Mem224[ebp_214 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_215 = <invalid>
	word32 ebp_231
	word32 ebx_232
	word32 esi_236
	word32 ecx_360
	word32 edx_361
	word32 edi_362
	word32 eax_230 = fn0041C1F0(esi_198, ebx_194, ebp_214, es, ds, Mem224[esp_215 + 0x2C<32>:word32], out ecx_360, out edx_361, out ebx_232, out ebp_231, out esi_236, out edi_362)
	branch SLICE(eax_230, byte, 0) == 0<8> l0041CC47
l0041CC1A:
	word128 xmm0_250 = fn00427210()
	word32 eax_252 = Mem224[esi_236 + 96<i32>:word32]
	word32 ecx_363
	word32 edx_364
	eax_230 = fn0042D911(SEQ(SLICE(xmm0_250, word64, 64), SLICE(xmm0_250, real64, 0) + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_252, word32, word128)), real64, 0) + Mem224[(eax_252 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64])), out ecx_363, out edx_364)
	Mem279[esi_236 + 96<i32>:word32] = eax_230
l0041CC47:
	Mem284[fs:0x00000000<p32>:word32] = Mem281[ebp_231 - 12<i32>:word32]
	word32 edi_288 = Mem284[esp_215 + 8<32>:word32]
	word32 esi_290 = Mem284[esp_215 + 0xC<32>:word32]
	word32 ebp_292 = Mem284[ebp_231:word32]
	ecxOut = Mem284[esp_215 + 4<32>:word32]
	ebxOut = ebx_232
	ebpOut = ebp_292
	esiOut = esi_290
	ediOut = edi_288
	return eax_230
fn0041CB12_exit:


word32 fn0041CC60(word32 ecx, selector es, selector ds, word32 dwArg20, word32 dwArg28, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0020:[0..31] Stack +0028:[0..31]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn0041CC60_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc8C
l0041CC60:
	word32 esp_1005
	Mem34[fs:0<32>:word32] = fp - 16<i32>
	word128 xmm0_41 = fn00427210()
	word32 edx_2514
	word32 ecx_2513
	Mem64[ecx + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_41, word64, 64), SLICE(xmm0_41, real64, 0) * Mem43[0x00432EC0<p32>:real64]), out ecx_2513, out edx_2514)
	Mem67[ecx + 108<i32>:word32] = 4<32>
	Mem70[&tLoc8C + 16<i32>:word32] = 0<32>
	Mem71[&tLoc8C + 20<i32>:word32] = 0xF<32>
	Mem74[&tLoc8C:byte] = 0<8>
	word32 ebp_76
	word32 ebx_77
	word32 edi_79
	word32 esi_2517
	word32 edx_2516
	word32 ecx_2515
	fn00402A70(&tLoc8C, ecx, 0x432708<32>, 3<32>, Mem74[&tLoc8C + 12<i32>:word32], out ecx_2515, out edx_2516, out ebx_77, out ebp_76, out esi_2517, out edi_79)
	Mem91[ebp_76 - 4<i32>:word32] = 0<32>
	word32 esp_83 = <invalid>
	Mem95[esp_83 - 0x14<32>:word32] = Mem91[ebx_77:word32]
	word32 ebp_98
	word32 edx_2518
	fn004028D0(esp_83 - 0x10<32>, edi_79, Mem95[esp_83 - 0x14<32>:word32], out edx_2518, out ebp_98)
	Mem108[ebp_98 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_99 = <invalid>
	word32 edx_2520
	word32 ecx_2519
	word32 esi_2521
	word32 edi_1105
	word32 ebp_1113
	word32 ebx_116
	branch SLICE(fn0041C1F0(edi_79, ebx_77, ebp_98, es, ds, Mem108[esp_99 + 0x2C<32>:word32], out ecx_2519, out edx_2520, out ebx_116, out ebp_1113, out esi_2521, out edi_1105), byte, 0) == 0<8> l0041CD18
l0041CD18:
	Mem135[ebp_1113 - 24<i32>:word32] = esp_99 - 0x14<32>
	Mem137[esp_99 - 0x18<32>:word32] = 3<32>
	Mem138[esp_99 - 4<32>:word32] = 0<32>
	Mem139[esp_99:word32] = 0xF<32>
	Mem141[esp_99 - 0x1C<32>:word32] = 0x43270C<32>
	Mem142[esp_99 - 0x14<32>:byte] = 0<8>
	word32 ebp_144
	word32 ebx_145
	word32 edi_147
	word32 ecx_2522
	word32 edx_2523
	word32 esi_2524
	fn00402A70(esp_99 - 0x14<32>, edi_1105, Mem142[esp_99 - 0x1C<32>:word32], Mem142[esp_99 - 0x18<32>:word32], Mem142[esp_99 - 8<32>:word32], out ecx_2522, out edx_2523, out ebx_145, out ebp_144, out esi_2524, out edi_147)
	Mem159[ebp_144 - 4<i32>:word32] = 1<32>
	word32 esp_151 = <invalid>
	Mem163[esp_151 - 0x14<32>:word32] = Mem159[ebx_145:word32]
	word32 ebp_166
	word32 edx_2525
	fn004028D0(esp_151 - 0x10<32>, edi_147, Mem163[esp_151 - 0x14<32>:word32], out edx_2525, out ebp_166)
	Mem176[ebp_166 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_167 = <invalid>
	word32 ecx_2526
	word32 esi_2528
	word32 edx_2527
	branch SLICE(fn0041C1F0(edi_147, ebx_145, ebp_166, es, ds, Mem176[esp_167 + 0x2C<32>:word32], out ecx_2526, out edx_2527, out ebx_116, out ebp_1113, out esi_2528, out edi_1105), byte, 0) == 0<8> l0041CD73
l0041CD73:
	Mem198[ebp_1113 - 24<i32>:word32] = esp_167 - 0x14<32>
	Mem200[esp_167 - 0x18<32>:word32] = 3<32>
	Mem201[esp_167 - 4<32>:word32] = 0<32>
	Mem202[esp_167:word32] = 0xF<32>
	Mem204[esp_167 - 0x1C<32>:word32] = 0x432710<32>
	Mem205[esp_167 - 0x14<32>:byte] = 0<8>
	word32 ebp_207
	word32 ebx_208
	word32 edi_210
	word32 ecx_2529
	word32 esi_2531
	word32 edx_2530
	fn00402A70(esp_167 - 0x14<32>, edi_1105, Mem205[esp_167 - 0x1C<32>:word32], Mem205[esp_167 - 0x18<32>:word32], Mem205[esp_167 - 8<32>:word32], out ecx_2529, out edx_2530, out ebx_208, out ebp_207, out esi_2531, out edi_210)
	Mem222[ebp_207 - 4<i32>:word32] = 2<32>
	word32 esp_214 = <invalid>
	Mem226[esp_214 - 0x14<32>:word32] = Mem222[ebx_208:word32]
	word32 ebp_229
	word32 edx_2532
	fn004028D0(esp_214 - 0x10<32>, edi_210, Mem226[esp_214 - 0x14<32>:word32], out edx_2532, out ebp_229)
	Mem239[ebp_229 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_230 = <invalid>
	word32 ecx_2533
	word32 esi_2535
	word32 edx_2534
	branch SLICE(fn0041C1F0(edi_210, ebx_208, ebp_229, es, ds, Mem239[esp_230 + 0x2C<32>:word32], out ecx_2533, out edx_2534, out ebx_116, out ebp_1113, out esi_2535, out edi_1105), byte, 0) == 0<8> l0041CDCE
l0041CDCE:
	Mem261[ebp_1113 - 24<i32>:word32] = esp_230 - 0x14<32>
	Mem263[esp_230 - 0x18<32>:word32] = 3<32>
	Mem264[esp_230 - 4<32>:word32] = 0<32>
	Mem265[esp_230:word32] = 0xF<32>
	Mem267[esp_230 - 0x1C<32>:word32] = 0x432714<32>
	Mem268[esp_230 - 0x14<32>:byte] = 0<8>
	word32 ebp_270
	word32 ebx_271
	word32 edi_273
	word32 ecx_2543
	word32 edx_2544
	word32 esi_2545
	fn00402A70(esp_230 - 0x14<32>, edi_1105, Mem268[esp_230 - 0x1C<32>:word32], Mem268[esp_230 - 0x18<32>:word32], Mem268[esp_230 - 8<32>:word32], out ecx_2543, out edx_2544, out ebx_271, out ebp_270, out esi_2545, out edi_273)
	Mem285[ebp_270 - 4<i32>:word32] = 3<32>
	word32 esp_277 = <invalid>
	Mem289[esp_277 - 0x14<32>:word32] = Mem285[ebx_271:word32]
	word32 ebp_292
	word32 edx_2546
	fn004028D0(esp_277 - 0x10<32>, edi_273, Mem289[esp_277 - 0x14<32>:word32], out edx_2546, out ebp_292)
	Mem302[ebp_292 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_293 = <invalid>
	word32 edx_2548
	word32 ecx_2547
	word32 esi_2549
	branch SLICE(fn0041C1F0(edi_273, ebx_271, ebp_292, es, ds, Mem302[esp_293 + 0x2C<32>:word32], out ecx_2547, out edx_2548, out ebx_116, out ebp_1113, out esi_2549, out edi_1105), byte, 0) == 0<8> l0041CE29
l0041CE29:
	Mem324[ebp_1113 - 24<i32>:word32] = esp_293 - 0x14<32>
	Mem326[esp_293 - 0x18<32>:word32] = 3<32>
	Mem327[esp_293 - 4<32>:word32] = 0<32>
	Mem328[esp_293:word32] = 0xF<32>
	Mem330[esp_293 - 0x1C<32>:word32] = 0x432718<32>
	Mem331[esp_293 - 0x14<32>:byte] = 0<8>
	word32 ebp_333
	word32 ebx_334
	word32 edi_336
	word32 esi_2559
	word32 ecx_2557
	word32 edx_2558
	fn00402A70(esp_293 - 0x14<32>, edi_1105, Mem331[esp_293 - 0x1C<32>:word32], Mem331[esp_293 - 0x18<32>:word32], Mem331[esp_293 - 8<32>:word32], out ecx_2557, out edx_2558, out ebx_334, out ebp_333, out esi_2559, out edi_336)
	Mem348[ebp_333 - 4<i32>:word32] = 4<32>
	word32 esp_340 = <invalid>
	Mem352[esp_340 - 0x14<32>:word32] = Mem348[ebx_334:word32]
	word32 ebp_355
	word32 edx_2560
	fn004028D0(esp_340 - 0x10<32>, edi_336, Mem352[esp_340 - 0x14<32>:word32], out edx_2560, out ebp_355)
	Mem365[ebp_355 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_356 = <invalid>
	word32 ecx_2561
	word32 esi_2563
	word32 edx_2562
	branch SLICE(fn0041C1F0(edi_336, ebx_334, ebp_355, es, ds, Mem365[esp_356 + 0x2C<32>:word32], out ecx_2561, out edx_2562, out ebx_116, out ebp_1113, out esi_2563, out edi_1105), byte, 0) == 0<8> l0041CE84
l0041CE84:
	Mem387[ebp_1113 - 24<i32>:word32] = esp_356 - 0x14<32>
	Mem389[esp_356 - 0x18<32>:word32] = 3<32>
	Mem390[esp_356 - 4<32>:word32] = 0<32>
	Mem391[esp_356:word32] = 0xF<32>
	Mem393[esp_356 - 0x1C<32>:word32] = 0x43271C<32>
	Mem394[esp_356 - 0x14<32>:byte] = 0<8>
	word32 ebp_396
	word32 ebx_397
	word32 edi_399
	word32 ecx_2565
	word32 edx_2566
	word32 esi_2567
	fn00402A70(esp_356 - 0x14<32>, edi_1105, Mem394[esp_356 - 0x1C<32>:word32], Mem394[esp_356 - 0x18<32>:word32], Mem394[esp_356 - 8<32>:word32], out ecx_2565, out edx_2566, out ebx_397, out ebp_396, out esi_2567, out edi_399)
	Mem411[ebp_396 - 4<i32>:word32] = 5<32>
	word32 esp_403 = <invalid>
	Mem415[esp_403 - 0x14<32>:word32] = Mem411[ebx_397:word32]
	word32 ebp_418
	word32 edx_2568
	fn004028D0(esp_403 - 0x10<32>, edi_399, Mem415[esp_403 - 0x14<32>:word32], out edx_2568, out ebp_418)
	Mem428[ebp_418 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_419 = <invalid>
	word32 ecx_2569
	word32 edx_2570
	word32 esi_2571
	branch SLICE(fn0041C1F0(edi_399, ebx_397, ebp_418, es, ds, Mem428[esp_419 + 0x2C<32>:word32], out ecx_2569, out edx_2570, out ebx_116, out ebp_1113, out esi_2571, out edi_1105), byte, 0) == 0<8> l0041CEDF
l0041CEDF:
	Mem450[ebp_1113 - 24<i32>:word32] = esp_419 - 0x14<32>
	Mem452[esp_419 - 0x18<32>:word32] = 3<32>
	Mem453[esp_419 - 4<32>:word32] = 0<32>
	Mem454[esp_419:word32] = 0xF<32>
	Mem456[esp_419 - 0x1C<32>:word32] = 0x432720<32>
	Mem457[esp_419 - 0x14<32>:byte] = 0<8>
	word32 ebp_459
	word32 ebx_460
	word32 edi_462
	word32 esi_2582
	word32 ecx_2580
	word32 edx_2581
	fn00402A70(esp_419 - 0x14<32>, edi_1105, Mem457[esp_419 - 0x1C<32>:word32], Mem457[esp_419 - 0x18<32>:word32], Mem457[esp_419 - 8<32>:word32], out ecx_2580, out edx_2581, out ebx_460, out ebp_459, out esi_2582, out edi_462)
	Mem474[ebp_459 - 4<i32>:word32] = 6<32>
	word32 esp_466 = <invalid>
	Mem478[esp_466 - 0x14<32>:word32] = Mem474[ebx_460:word32]
	word32 ebp_481
	word32 edx_2583
	fn004028D0(esp_466 - 0x10<32>, edi_462, Mem478[esp_466 - 0x14<32>:word32], out edx_2583, out ebp_481)
	Mem491[ebp_481 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_482 = <invalid>
	word32 esi_2586
	word32 edx_2585
	word32 ecx_2584
	branch SLICE(fn0041C1F0(edi_462, ebx_460, ebp_481, es, ds, Mem491[esp_482 + 0x2C<32>:word32], out ecx_2584, out edx_2585, out ebx_116, out ebp_1113, out esi_2586, out edi_1105), byte, 0) == 0<8> l0041CF3A
l0041CF3A:
	Mem513[ebp_1113 - 24<i32>:word32] = esp_482 - 0x14<32>
	Mem515[esp_482 - 0x18<32>:word32] = 4<32>
	Mem516[esp_482 - 4<32>:word32] = 0<32>
	Mem517[esp_482:word32] = 0xF<32>
	Mem519[esp_482 - 0x1C<32>:word32] = 0x432724<32>
	Mem520[esp_482 - 0x14<32>:byte] = 0<8>
	word32 ebp_522
	word32 ebx_523
	word32 edi_525
	word32 ecx_2592
	word32 esi_2594
	word32 edx_2593
	fn00402A70(esp_482 - 0x14<32>, edi_1105, Mem520[esp_482 - 0x1C<32>:word32], Mem520[esp_482 - 0x18<32>:word32], Mem520[esp_482 - 8<32>:word32], out ecx_2592, out edx_2593, out ebx_523, out ebp_522, out esi_2594, out edi_525)
	Mem537[ebp_522 - 4<i32>:word32] = 7<32>
	word32 esp_529 = <invalid>
	Mem541[esp_529 - 0x14<32>:word32] = Mem537[ebx_523:word32]
	word32 ebp_544
	word32 edx_2595
	fn004028D0(esp_529 - 0x10<32>, edi_525, Mem541[esp_529 - 0x14<32>:word32], out edx_2595, out ebp_544)
	Mem554[ebp_544 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_545 = <invalid>
	word32 esi_2598
	word32 ecx_2596
	word32 edx_2597
	branch SLICE(fn0041C1F0(edi_525, ebx_523, ebp_544, es, ds, Mem554[esp_545 + 0x2C<32>:word32], out ecx_2596, out edx_2597, out ebx_116, out ebp_1113, out esi_2598, out edi_1105), byte, 0) == 0<8> l0041CF95
l0041CF95:
	Mem576[ebp_1113 - 24<i32>:word32] = esp_545 - 0x14<32>
	Mem578[esp_545 - 0x18<32>:word32] = 4<32>
	Mem579[esp_545 - 4<32>:word32] = 0<32>
	Mem580[esp_545:word32] = 0xF<32>
	Mem582[esp_545 - 0x1C<32>:word32] = 0x43272C<32>
	Mem583[esp_545 - 0x14<32>:byte] = 0<8>
	word32 ebp_585
	word32 ebx_586
	word32 edi_588
	word32 ecx_2611
	word32 esi_2613
	word32 edx_2612
	fn00402A70(esp_545 - 0x14<32>, edi_1105, Mem583[esp_545 - 0x1C<32>:word32], Mem583[esp_545 - 0x18<32>:word32], Mem583[esp_545 - 8<32>:word32], out ecx_2611, out edx_2612, out ebx_586, out ebp_585, out esi_2613, out edi_588)
	Mem600[ebp_585 - 4<i32>:word32] = 8<32>
	word32 esp_592 = <invalid>
	Mem604[esp_592 - 0x14<32>:word32] = Mem600[ebx_586:word32]
	word32 ebp_607
	word32 edx_2614
	fn004028D0(esp_592 - 0x10<32>, edi_588, Mem604[esp_592 - 0x14<32>:word32], out edx_2614, out ebp_607)
	Mem617[ebp_607 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_608 = <invalid>
	word32 esi_2617
	word32 edx_2616
	word32 ecx_2615
	branch SLICE(fn0041C1F0(edi_588, ebx_586, ebp_607, es, ds, Mem617[esp_608 + 0x2C<32>:word32], out ecx_2615, out edx_2616, out ebx_116, out ebp_1113, out esi_2617, out edi_1105), byte, 0) == 0<8> l0041CFF4
l0041CFF4:
	Mem639[ebp_1113 - 24<i32>:word32] = esp_608 - 0x14<32>
	Mem641[esp_608 - 0x18<32>:word32] = 3<32>
	Mem642[esp_608 - 4<32>:word32] = 0<32>
	Mem643[esp_608:word32] = 0xF<32>
	Mem645[esp_608 - 0x1C<32>:word32] = 0x432734<32>
	Mem646[esp_608 - 0x14<32>:byte] = 0<8>
	word32 ebp_648
	word32 ebx_649
	word32 edi_651
	word32 ecx_2627
	word32 esi_2629
	word32 edx_2628
	fn00402A70(esp_608 - 0x14<32>, edi_1105, Mem646[esp_608 - 0x1C<32>:word32], Mem646[esp_608 - 0x18<32>:word32], Mem646[esp_608 - 8<32>:word32], out ecx_2627, out edx_2628, out ebx_649, out ebp_648, out esi_2629, out edi_651)
	Mem663[ebp_648 - 4<i32>:word32] = 9<32>
	word32 esp_655 = <invalid>
	Mem667[esp_655 - 0x14<32>:word32] = Mem663[ebx_649:word32]
	word32 ebp_670
	word32 edx_2630
	fn004028D0(esp_655 - 0x10<32>, edi_651, Mem667[esp_655 - 0x14<32>:word32], out edx_2630, out ebp_670)
	Mem680[ebp_670 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_671 = <invalid>
	word32 ecx_2631
	word32 edx_2632
	word32 esi_2633
	branch SLICE(fn0041C1F0(edi_651, ebx_649, ebp_670, es, ds, Mem680[esp_671 + 0x2C<32>:word32], out ecx_2631, out edx_2632, out ebx_116, out ebp_1113, out esi_2633, out edi_1105), byte, 0) == 0<8> l0041D053
l0041D053:
	Mem702[ebp_1113 - 24<i32>:word32] = esp_671 - 0x14<32>
	Mem704[esp_671 - 0x18<32>:word32] = 2<32>
	Mem705[esp_671 - 4<32>:word32] = 0<32>
	Mem706[esp_671:word32] = 0xF<32>
	Mem708[esp_671 - 0x1C<32>:word32] = 0x432738<32>
	Mem709[esp_671 - 0x14<32>:byte] = 0<8>
	word32 ebp_711
	word32 ebx_712
	word32 edi_714
	word32 esi_2636
	word32 edx_2635
	word32 ecx_2634
	fn00402A70(esp_671 - 0x14<32>, edi_1105, Mem709[esp_671 - 0x1C<32>:word32], Mem709[esp_671 - 0x18<32>:word32], Mem709[esp_671 - 8<32>:word32], out ecx_2634, out edx_2635, out ebx_712, out ebp_711, out esi_2636, out edi_714)
	Mem726[ebp_711 - 4<i32>:word32] = 0xA<32>
	word32 esp_718 = <invalid>
	Mem730[esp_718 - 0x14<32>:word32] = Mem726[ebx_712:word32]
	word32 ebp_733
	word32 edx_2637
	fn004028D0(esp_718 - 0x10<32>, edi_714, Mem730[esp_718 - 0x14<32>:word32], out edx_2637, out ebp_733)
	Mem743[ebp_733 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_734 = <invalid>
	esp_1005 = esp_734 + 4<32>
	word32 edx_2639
	word32 esi_2640
	word32 ecx_2638
	branch SLICE(fn0041C1F0(edi_714, ebx_712, ebp_733, es, ds, Mem743[esp_734 + 0x2C<32>:word32], out ecx_2638, out edx_2639, out ebx_116, out ebp_1113, out esi_2640, out edi_1105), byte, 0) == 0<8> l0041D0C4
l0041D0C4:
	word32 edx_2642
	word32 ecx_2641
	Mem781[edi_1105 + 96<i32>:word32] = fn0042D911(SEQ(0<64>, Mem743[ebp_1113 - 40<i32>:real64] * Mem743[0x00432EB8<p32>:real64]), out ecx_2641, out edx_2642)
	Mem782[edi_1105 + 108<i32>:word32] = 0<32>
l0041D09D:
	Mem786[esp_734:word32] = Mem743[ebx_116:word32] + 48<i32>
	word32 esp_803 = <invalid>
	word32 ebx_790
	word32 esi_794
	word32 edi_2645
	word32 ecx_2643
	word32 ebp_2644
	Mem812[esp_803:word32] = fn0041C910(ebx_116, es, ds, Mem786[esp_734:word32], Mem786[esp_734 + 36<i32>:word32], out ecx_2643, out ebx_790, out ebp_2644, out esi_794, out edi_2645)
	Mem814[esp_803 - 4<i32>:word32] = esi_794
	word32 esp_830 = <invalid>
	word32 esi_2647
	word32 ecx_2646
	Mem839[esp_830:word32] = fn0041C910(ebx_790, es, ds, Mem814[esp_803 - 4<i32>:word32], Mem814[esp_803 + 32<i32>:word32], out ecx_2646, out ebx_116, out ebp_1113, out esi_2647, out edi_1105)
	Mem858[edi_1105 + 96<i32>:word32] = Mem839[edi_1105 + 96<i32>:word32] + fn0041C600(Mem839[esp_830:word32], Mem839[esp_830 + 4<i32>:word32])
	Mem860[edi_1105 + 108<i32>:word32] = 4<32>
	esp_1005 = esp_830 + 8<32>
l0041D03E:
	Mem862[esp_671:word32] = 0<32>
	Mem864[esp_671 - 4<i32>:word32] = 0x14<32>
	Mem883[edi_1105 + 96<i32>:word32] = Mem864[edi_1105 + 96<i32>:word32] + fn0041C600(Mem864[esp_671 - 4<i32>:word32], Mem864[esp_671:word32])
	Mem885[edi_1105 + 100<i32>:word32] = Mem883[edi_1105 + 100<i32>:word32] + 0xFFFFFFFE<32>
	esp_1005 = esp_671 + 4<32>
l0041CFDF:
	Mem888[esp_608:word32] = 0<32>
	Mem890[esp_608 - 4<i32>:word32] = 0x14<32>
	Mem909[edi_1105 + 96<i32>:word32] = Mem890[edi_1105 + 96<i32>:word32] + fn0041C600(Mem890[esp_608 - 4<i32>:word32], Mem890[esp_608:word32])
	Mem911[edi_1105 + 100<i32>:word32] = Mem909[edi_1105 + 100<i32>:word32] + 0xFFFFFFFD<32>
	esp_1005 = esp_608 + 4<32>
l0041CF84:
	Mem914[esp_545:word32] = 0<32>
	Mem916[esp_545 - 4<i32>:word32] = 0x10<32>
	Mem935[edi_1105 + 96<i32>:word32] = Mem916[edi_1105 + 96<i32>:word32] + fn0041C600(Mem916[esp_545 - 4<i32>:word32], Mem916[esp_545:word32])
	esp_1005 = esp_545 + 4<32>
l0041CF29:
	Mem938[esp_482:word32] = 0<32>
	Mem940[esp_482 - 4<i32>:word32] = 0x12<32>
	Mem959[edi_1105 + 96<i32>:word32] = Mem940[edi_1105 + 96<i32>:word32] + fn0041C600(Mem940[esp_482 - 4<i32>:word32], Mem940[esp_482:word32])
	esp_1005 = esp_482 + 4<32>
l0041CECE:
	Mem962[esp_419:word32] = 1<32>
	Mem964[esp_419 - 4<i32>:word32] = 4<32>
	Mem983[edi_1105 + 96<i32>:word32] = Mem964[edi_1105 + 96<i32>:word32] + fn0041C600(Mem964[esp_419 - 4<i32>:word32], Mem964[esp_419:word32])
	esp_1005 = esp_419 + 4<32>
l0041CE73:
	Mem986[esp_356:word32] = 1<32>
	Mem988[esp_356 - 4<i32>:word32] = 0xC<32>
	Mem1007[edi_1105 + 96<i32>:word32] = Mem988[edi_1105 + 96<i32>:word32] + fn0041C600(Mem988[esp_356 - 4<i32>:word32], Mem988[esp_356:word32])
	esp_1005 = esp_356 + 4<32>
l0041CE18:
	Mem1010[esp_293:word32] = 0<32>
	Mem1012[esp_293 - 4<i32>:word32] = 4<32>
	Mem1031[edi_1105 + 96<i32>:word32] = Mem1012[edi_1105 + 96<i32>:word32] + fn0041C600(Mem1012[esp_293 - 4<i32>:word32], Mem1012[esp_293:word32])
	esp_1005 = esp_293 + 4<32>
l0041CDBD:
	Mem1034[esp_230:word32] = 0<32>
	Mem1036[esp_230 - 4<i32>:word32] = 0xC<32>
	Mem1055[edi_1105 + 96<i32>:word32] = Mem1036[edi_1105 + 96<i32>:word32] + fn0041C600(Mem1036[esp_230 - 4<i32>:word32], Mem1036[esp_230:word32])
	esp_1005 = esp_230 + 4<32>
l0041CD62:
	Mem1058[esp_167:word32] = 2<32>
	Mem1060[esp_167 - 4<i32>:word32] = 4<32>
	Mem1079[edi_1105 + 96<i32>:word32] = Mem1060[edi_1105 + 96<i32>:word32] + fn0041C600(Mem1060[esp_167 - 4<i32>:word32], Mem1060[esp_167:word32])
	esp_1005 = esp_167 + 4<32>
l0041CD07:
	Mem1082[esp_99:word32] = 2<32>
	Mem1084[esp_99 - 4<i32>:word32] = 0xC<32>
	Mem1103[edi_1105 + 96<i32>:word32] = Mem1084[edi_1105 + 96<i32>:word32] + fn0041C600(Mem1084[esp_99 - 4<i32>:word32], Mem1084[esp_99:word32])
	esp_1005 = esp_99 + 4<32>
l0041D0E0:
	word32 esp_1154
	word32 ebp_1163
	word32 edi_1166
	word32 ebx_1164
	branch Mem1106[edi_1105 + 108<i32>:word32] == 0<32> l0041D0F1
l0041D0F1:
	word32 esp_1110 = esp_1005 - 0x18<32>
	Mem1114[ebp_1113 - 24<i32>:word32] = esp_1110
	Mem1116[esp_1110 - 4<i32>:word32] = 2<32>
	Mem1117[esp_1110 + 16<i32>:word32] = 0<32>
	Mem1118[esp_1110 + 20<i32>:word32] = 0xF<32>
	Mem1120[esp_1110 - 8<i32>:word32] = 0x43273C<32>
	Mem1121[esp_1110:byte] = 0<8>
	word32 ebp_1124
	word32 ebx_1125
	word32 edi_1127
	word32 esi_2538
	word32 edx_2537
	word32 ecx_2536
	fn00402A70(esp_1110, edi_1105, Mem1121[esp_1110 - 8<i32>:word32], Mem1121[esp_1110 - 4<i32>:word32], Mem1121[esp_1110 + 12<i32>:word32], out ecx_2536, out edx_2537, out ebx_1125, out ebp_1124, out esi_2538, out edi_1127)
	Mem1139[ebp_1124 - 4<i32>:word32] = 0xB<32>
	word32 esp_1131 = <invalid>
	Mem1143[esp_1131 - 0x14<32>:word32] = Mem1139[ebx_1125:word32]
	word32 ebp_1146
	word32 edx_2539
	fn004028D0(esp_1131 - 0x10<32>, edi_1127, Mem1143[esp_1131 - 0x14<32>:word32], out edx_2539, out ebp_1146)
	Mem1156[ebp_1146 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1147 = <invalid>
	esp_1154 = esp_1147 + 4<32>
	word32 edx_2541
	word32 esi_2542
	word32 ecx_2540
	branch SLICE(fn0041C1F0(edi_1127, ebx_1125, ebp_1146, es, ds, Mem1156[esp_1147 + 0x2C<32>:word32], out ecx_2540, out edx_2541, out ebx_1164, out ebp_1163, out esi_2542, out edi_1166), byte, 0) == 0<8> l0041D13E
l0041D13B:
	Mem1181[edi_1166 + 96<i32>:word32] = Mem1156[edi_1166 + 96<i32>:word32] + 1<32>
l0041D0E6:
	esp_1154 = esp_1005 - 4<i32>
	Mem1186[esp_1154:word32] = Mem1106[ebx_116:word32]
	ebx_1164 = fn0041CA90(edi_1105, es, ds, Mem1186[esp_1154 + 36<i32>:word32], out ebp_1163, out edi_1166)
l0041D13E:
	branch (Mem1210[edi_1166 + 96<i32>:word32] & 0xFC000000<32>) == 0x4C000000<32> l0041D213
l0041D151:
	word32 esp_1216 = esp_1154 - 0x18<32>
	Mem1220[ebp_1163 - 24<i32>:word32] = esp_1216
	Mem1222[esp_1216 - 4<i32>:word32] = 1<32>
	Mem1223[esp_1216 + 16<i32>:word32] = 0<32>
	Mem1224[esp_1216 + 20<i32>:word32] = 0xF<32>
	Mem1226[esp_1216 - 8<i32>:word32] = 0x432740<32>
	Mem1227[esp_1216:byte] = 0<8>
	word32 ebp_1230
	word32 ebx_1231
	word32 edi_1233
	word32 edx_2551
	word32 esi_2552
	word32 ecx_2550
	fn00402A70(esp_1216, edi_1166, Mem1227[esp_1216 - 8<i32>:word32], Mem1227[esp_1216 - 4<i32>:word32], Mem1227[esp_1216 + 12<i32>:word32], out ecx_2550, out edx_2551, out ebx_1231, out ebp_1230, out esi_2552, out edi_1233)
	Mem1245[ebp_1230 - 4<i32>:word32] = 0xC<32>
	word32 esp_1237 = <invalid>
	Mem1249[esp_1237 - 0x14<32>:word32] = Mem1245[ebx_1231:word32]
	word32 ebp_1252
	word32 edx_2553
	fn004028D0(esp_1237 - 0x10<32>, edi_1233, Mem1249[esp_1237 - 0x14<32>:word32], out edx_2553, out ebp_1252)
	Mem1262[ebp_1252 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1253 = <invalid>
	esp_1154 = esp_1253 + 4<32>
	word32 ecx_2554
	word32 edx_2555
	word32 esi_2556
	branch SLICE(fn0041C1F0(edi_1233, ebx_1231, ebp_1252, es, ds, Mem1262[esp_1253 + 0x2C<32>:word32], out ecx_2554, out edx_2555, out ebx_1164, out ebp_1163, out esi_2556, out edi_1166), byte, 0) == 0<8> l0041D19F
l0041D19B:
	Mem1287[edi_1166 + 96<i32>:word32] = Mem1262[edi_1166 + 96<i32>:word32] + 2<32>
l0041D19F:
	word32 esi_1293 = Mem1290[ebx_1164:word32]
	word32 edx_1296 = SLICE((Mem1290[ebx_1164 + 4<i32>:word32] - esi_1293) *s64 0x2AAAAAAB<32>, word32, 32)
	branch (edx_1296 >> 2<32> >>u 0x1F<32>) + (edx_1296 >> 2<32>) <=u 2<32> l0041D213
l0041D1BC:
	word32 ecx_1303 = Mem1290[esi_1293 + 40<i32>:word32]
	word32 eax_1304 = esi_1293 + 24<i32>
	branch ecx_1303 == 0<32> l0041D52B
l0041D52B:
	word32 esp_1317 = <invalid>
	word32 edx_2587
	word32 ebx_2588
	word32 ebp_2589
	word32 edi_2591
	word32 esi_2590
	ecx_1303 = fn004113B0(ecx_1303, Mem1290[esp_1253:word32], Mem1290[esp_1253 + 4<32>:word32], Mem1290[esp_1253 + 8<32>:word32], out edx_2587, out ebx_2588, out ebp_2589, out esi_2590, out edi_2591)
	esp_1154 = esp_1317 + 0xC<32>
l0041D1CA:
	word32 edx_1324 = Mem1290[esi_1293 + 44<i32>:word32]
	word32 esi_1325 = esi_1293 + 24<i32>
	branch edx_1324 <u 0x10<32> l0041D1D6
l0041D1D4:
	esi_1325 = Mem1290[esi_1293 + 24<i32>:word32]
l0041D1D6:
	branch Mem1290[esi_1325:byte] != 0x63<8> l0041D213
l0041D1DB:
	branch ecx_1303 <=u 1<32> l0041D530
l0041D530:
	word32 esp_1349 = <invalid>
	word32 esi_2609
	word32 ebp_2608
	word32 ebx_2607
	word32 edi_2610
	word32 edx_2606
	ecx_1303 = fn004113B0(ecx_1303, Mem1290[esp_1154 + -4<i32>:word32], Mem1290[esp_1154:word32], Mem1290[esp_1154 + 4<i32>:word32], out edx_2606, out ebx_2607, out ebp_2608, out esi_2609, out edi_2610)
	esp_1154 = esp_1349 + 0xC<32>
l0041D1E4:
	word32 esi_1357 = esi_1293 + 24<i32>
	branch edx_1324 <u 0x10<32> l0041D1ED
l0041D1EB:
	esi_1357 = Mem1290[esi_1293 + 24<i32>:word32]
l0041D1ED:
	branch Mem1290[esi_1357 + 1<i32>:byte] != 0x72<8> l0041D213
l0041D1F3:
	branch ecx_1303 <=u 2<32> l0041D535
l0041D535:
	word32 ebp_1376
	word32 ebx_1377
	word32 edi_1379
	word32 esi_1381
	word32 edx_2618
	word32 ecx_1378 = fn004113B0(ecx_1303, Mem1290[esp_1154 + -4<i32>:word32], Mem1290[esp_1154:word32], Mem1290[esp_1154 + 4<i32>:word32], out edx_2618, out ebx_1377, out ebp_1376, out esi_1381, out edi_1379)
	int3()
	int3()
	int3()
	int3()
	int3()
	int3()
	word32 esp_1382 = <invalid>
	Mem1390[esp_1382 + 8<32>:word32] = ebp_1376
	Mem1393[esp_1382 + 4<32>:word32] = 0xFFFFFFFF<32>
	Mem1395[esp_1382:word32] = 0x42F6F0<32>
	Mem1398[esp_1382 - 4<i32>:word32] = Mem1395[fs:0<32>:word32]
	Mem1400[esp_1382 - 8<i32>:word32] = ecx_1378
	Mem1402[esp_1382 - 12<i32>:word32] = ebx_1377
	Mem1404[esp_1382 - 16<i32>:word32] = esi_1381
	Mem1406[esp_1382 - 20<i32>:word32] = edi_1379
	Mem1412[esp_1382 - 24<i32>:word32] = Mem1406[0x0043A008<p32>:word32] ^ esp_1382 + 8<32>
	Mem1414[fs:0<32>:word32] = esp_1382 - 4<32>
	word128 xmm0_1418 = fn00427210()
	word32 ecx_2619
	word32 edx_2620
	Mem1440[ecx_1378 + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_1418, word64, 64), SLICE(xmm0_1418, real64, 0) * Mem1414[0x00432EC0<p32>:real64]), out ecx_2619, out edx_2620)
	Mem1442[esp_1382 - 8<32>:word32] = esp_1382 - 0x30<32>
	Mem1444[esp_1382 - 0x34<32>:word32] = 5<32>
	Mem1445[esp_1382 - 0x20<32>:word32] = 0<32>
	Mem1446[esp_1382 - 0x1C<32>:word32] = 0xF<32>
	Mem1448[esp_1382 - 0x38<32>:word32] = 0x43274C<32>
	Mem1449[esp_1382 - 0x30<32>:byte] = 0<8>
	word32 ebp_1451
	word32 ebx_1452
	word32 edi_1454
	word32 edx_2622
	word32 ecx_2621
	word32 esi_2623
	fn00402A70(esp_1382 - 0x30<32>, edi_1379, Mem1449[esp_1382 - 0x38<32>:word32], Mem1449[esp_1382 - 0x34<32>:word32], Mem1449[esp_1382 - 0x24<32>:word32], out ecx_2621, out edx_2622, out ebx_1452, out ebp_1451, out esi_2623, out edi_1454)
	Mem1464[ebp_1451 - 4<i32>:word32] = 0<32>
	word32 esp_1458 = <invalid>
	Mem1471[esp_1458 - 0x14<32>:word32] = Mem1464[Mem1464[ebp_1451 + 8<i32>:word32]:word32]
	word32 ebp_1474
	word32 edx_2624
	fn004028D0(esp_1458 - 0x10<32>, edi_1454, Mem1471[esp_1458 - 0x14<32>:word32], out edx_2624, out ebp_1474)
	Mem1484[ebp_1474 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 ebp_1511
	word32 ebx_1512
	word32 edi_1514
	word32 esi_1516
	word32 edx_2626
	word32 ecx_2625
	branch SLICE(fn0041C1F0(ebx_1452, ebx_1452, ebp_1474, es, ds, dwArg28, out ecx_2625, out edx_2626, out ebx_1512, out ebp_1511, out esi_1516, out edi_1514), byte, 0) == 0<8> l0041D5FE
l0041D5CD_thunk_fn0041D5FE:
	word32 ebp_1529
	word32 esi_1534
	word32 ecx_1531 = fn0041D5FE(ebp_1511, edi_1514, es, ds, out ebp_1529, out esi_1534)
	ebpOut = ebp_1529
	esiOut = esi_1534
	return ecx_1531
l0041D5CD_thunk_fn0041D5CF:
	word32 ebp_1551
	word32 esi_1556
	word32 ecx_1553 = fn0041D5CF(ebx_1512, esi_1516, es, ds, dwArg20, out ebp_1551, out esi_1556)
	ebpOut = ebp_1551
	esiOut = esi_1556
	return ecx_1553
l0041D1FC:
	branch edx_1324 <u 0x10<32> l0041D203
l0041D201:
	eax_1304 = Mem1290[esi_1293 + 24<i32>:word32]
l0041D203:
	Mem1586[edi_1166 + 96<i32>:word32] = Mem1290[edi_1166 + 96<i32>:word32] | CONVERT(Mem1290[eax_1304 + 2<i32>:byte], byte, int32) + 0x3FD0<32> << 0x12<32>
l0041D213:
	word32 edx_1599 = SLICE((Mem1594[ebx_1164 + 4<i32>:word32] - Mem1594[ebx_1164:word32]) *s64 0x2AAAAAAB<32>, word32, 32)
	word32 edx_1600 = edx_1599 >> 2<32>
	word32 esi_1603 = (edx_1599 >> 2<32> >>u 0x1F<32>) + (edx_1599 >> 2<32>)
	branch esi_1603 <=u 1<32> l0041D50D
l0041D232:
	word32 esp_1608 = esp_1154 - 4<i32>
	Mem1609[esp_1608:word32] = 1<32>
	Mem1615[ebp_1163 - 4<i32>:word32] = 0xD<32>
	Mem1618[ebp_1163 - 36<i32>:word32] = _Init(Mem1615[esp_1608:(ptr32 (struct "std::locale"))], Mem1615[esp_1608 + 4<i32>:bool])
	Mem1619[ebp_1163 - 4<i32>:word32] = 0xE<32>
	word32 eax_1622 = esi_1603 - 1<i32> + (esi_1603 - 1<i32>) * 2<32>
	word32 ecx_1625 = Mem1619[ebx_1164:word32] + (eax_1622 << 3<32>)
	Mem1626[ebp_1163 - 72<i32>:word32] = 0<32>
	Mem1627[ebp_1163 - 68<i32>:word32] = 0xF<32>
	Mem1628[ebp_1163 - 88<i32>:byte] = 0<8>
	Mem1629[ebp_1163 - 28<i32>:word32] = 1<32>
	Mem1631[ebp_1163 - 20<i32>:word32] = eax_1622 << 3<32>
	word32 edx_1624 = 2<32>
	branch Mem1629[ecx_1625 + 16<i32>:word32] >=u 2<32> l0041D283
l0041D27F_1:
	edx_1624 = Mem1631[ecx_1625 + 16<i32>:word32]
l0041D283:
	branch Mem1631[ecx_1625 + 20<i32>:word32] <u 0x10<32> l0041D28B
l0041D289:
	ecx_1625 = Mem1631[ecx_1625:word32]
l0041D28B:
	word32 esi_1721
	Mem1644[esp_1608:word32] = edx_1624
	Mem1647[esp_1608 - 4<i32>:word32] = ecx_1625
	word32 ebp_1659
	word32 edx_2573
	word32 edi_2576
	word32 esi_2575
	word32 ebx_2574
	word32 ecx_2572
	fn00402A70(ebp_1163 - 88<i32>, edi_1166, Mem1647[esp_1608 - 4<i32>:word32], Mem1647[esp_1608:word32], Mem1647[esp_1608 + 16<i32>:word32], out ecx_2572, out edx_2573, out ebx_2574, out ebp_1659, out esi_2575, out edi_2576)
	Mem1673[ebp_1659 - 4<i32>:word32] = 0xF<32>
	Mem1674[ebp_1659 - 24<i32>:word32] = 0x13<32>
	Mem1676[ebp_1659 - 28<i32>:word32] = 0x13<32>
	word32 esp_1666 = <invalid>
	Mem1680[esp_1666 + 4<32>:word32] = ebp_1659 - 40<i32>
	word32 esp_1708 = <invalid>
	word32 esp_1716 = esp_1708 + 4<32>
	word32 ecx_2577
	word32 esi_2579
	word32 edx_2578
	word32 edi_1704
	word32 ebx_1702
	branch fn00411F00(ebp_1659 - 88<i32>, 0x00432744<p32>, es, ds, Mem1680[esp_1666 + 4<32>:word32], out ecx_2577, out edx_2578, out ebx_1702, out ebp_1163, out esi_2579, out edi_1704) != 0<8> l0041D34C
l0041D34C:
	esi_1721 = Mem1680[ebp_1163 - 92<i32>:word32]
l0041D2C3:
	Mem1723[esp_1708:word32] = 1<32>
	Mem1724[ebp_1163 - 4<i32>:word32] = 0x10<32>
	Mem1728[ebp_1163 - 92<i32>:word32] = _Init(Mem1724[esp_1708:(ptr32 (struct "std::locale"))], Mem1724[esp_1708 + 4<i32>:bool])
	Mem1729[ebp_1163 - 4<i32>:word32] = 0x11<32>
	word32 ecx_1732 = Mem1729[ebx_1702:word32] + Mem1729[ebp_1163 - 20<i32>:word32]
	Mem1733[ebp_1163 - 48<i32>:word32] = 0<32>
	Mem1734[ebp_1163 - 44<i32>:word32] = 0xF<32>
	Mem1735[ebp_1163 - 64<i32>:byte] = 0<8>
	Mem1737[ebp_1163 - 28<i32>:word32] = 0x17<32>
	word32 edx_1730 = 3<32>
	branch Mem1735[ecx_1732 + 16<i32>:word32] >=u 3<32> l0041D30B
l0041D307_1:
	edx_1730 = Mem1737[ecx_1732 + 16<i32>:word32]
l0041D30B:
	branch Mem1737[ecx_1732 + 20<i32>:word32] <u 0x10<32> l0041D313
l0041D311:
	ecx_1732 = Mem1737[ecx_1732:word32]
l0041D313:
	Mem1750[esp_1708:word32] = edx_1730
	Mem1753[esp_1708 - 4<i32>:word32] = ecx_1732
	word32 ebp_1762
	word32 ecx_2599
	word32 edi_2603
	word32 ebx_2601
	word32 edx_2600
	word32 esi_2602
	fn00402A70(ebp_1163 - 64<i32>, edi_1704, Mem1753[esp_1708 - 4<i32>:word32], Mem1753[esp_1708:word32], Mem1753[esp_1708 + 16<i32>:word32], out ecx_2599, out edx_2600, out ebx_2601, out ebp_1762, out esi_2602, out edi_2603)
	Mem1776[ebp_1762 - 4<i32>:word32] = 0x12<32>
	Mem1777[ebp_1762 - 24<i32>:word32] = 0x3F<32>
	Mem1779[ebp_1762 - 28<i32>:word32] = 0x3F<32>
	word32 esp_1769 = <invalid>
	Mem1783[esp_1769 + 4<32>:word32] = ebp_1762 - 96<i32>
	word32 esp_1801 = <invalid>
	word32 ecx_2604
	word32 edx_2605
	byte al_1810 = fn00411F00(ebp_1762 - 64<i32>, 0x00432748<p32>, es, ds, Mem1783[esp_1769 + 4<32>:word32], out ecx_2604, out edx_2605, out ebx_1702, out ebp_1163, out esi_1721, out edi_1704)
	esp_1716 = esp_1801 + 4<32>
	branch al_1810 != 0<8> l0041D34F
l0041D34F:
	Mem1815[ebp_1163 - 29<i32>:byte] = 1<8>
l0041D347:
	Mem1816[ebp_1163 - 29<i32>:byte] = al_1810
l0041D353:
	Mem1818[ebp_1163 - 4<i32>:word32] = 0x11<32>
	word32 eax_1819 = Mem1818[ebp_1163 - 24<i32>:word32]
	branch (SLICE(eax_1819, byte, 0) & 8<8>) == 0<8> l0041D3B2
l0041D361:
	word32 edx_1824 = Mem1818[ebp_1163 - 44<i32>:word32]
	Mem1826[ebp_1163 - 24<i32>:word32] = eax_1819 & 0xFFFFFFF7<32>
	word32 eax_1851 = SEQ(SLICE(eax_1819, word24, 8), SLICE(eax_1819, byte, 0) & 0xF7<8>)
	branch edx_1824 <u 0x10<32> l0041D3A0
l0041D36F:
	word32 ecx_1829 = Mem1826[ebp_1163 - 64<i32>:word32]
	word32 edx_1830 = edx_1824 + 1<32>
	branch edx_1824 <u 0xFFF<32> l0041D393
l0041D37D:
	ecx_1829 = Mem1826[ecx_1829 - 4<i32>:word32]
	edx_1830 = edx_1824 + 0x24<32>
	branch ecx_1829 - ecx_1829 <=u 0x23<32> l0041D393
l0041D38D:
	_invalid_parameter_noinfo_noreturn()
l0041D393:
	word32 esp_1843 = esp_1716 - 4<i32>
	Mem1845[esp_1843:word32] = edx_1830
	Mem1848[esp_1843 - 4<i32>:word32] = ecx_1829
	fn0042763F(Mem1848[esp_1843 - 4<i32>:word32])
	eax_1851 = Mem1848[ebp_1163 - 24<i32>:word32]
l0041D3A0:
	Mem1855[ebp_1163 - 48<i32>:word32] = 0<32>
	Mem1856[ebp_1163 - 44<i32>:word32] = 0xF<32>
	Mem1857[ebp_1163 - 64<i32>:byte] = 0<8>
	eax_1819 = eax_1851 (alias)
l0041D3B2:
	word32 esp_1925 = esp_1716
	branch (SLICE(eax_1819, byte, 0) & 4<8>) == 0<8> l0041D3DA
l0041D3B6:
	Mem1873[ebp_1163 - 28<i32>:word32] = eax_1819 & 0xFFFFFFFB<32>
	Mem1874[ebp_1163 - 4<i32>:word32] = 0x13<32>
	branch esi_1721 == 0<32> l0041D3DA
l0041D3C7:
	word32 eax_1883 = Mem1874[esi_1721:word32]
	word32 eax_1944
	call Mem1874[eax_1883 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_1883,ecx:esi_1876
		defs: eax:eax_1944,esp:esp_1943
	branch eax_1944 == 0<32> l0041D3DA
l0041D3D2:
	word32 edx_1952 = Mem1874[eax_1944:word32]
	Mem1955[esp_1925 - 4<i32>:word32] = 1<32>
	call Mem1955[edx_1952:word32] (retsize: 4;)
		uses: ecx:eax_1944,edx:edx_1952
		defs: esp:esp_1956
l0041D3DA:
	Mem1963[ebp_1163 - 4<i32>:word32] = 0xE<32>
	edx_1600 = Mem1963[ebp_1163 - 68<i32>:word32]
	branch edx_1600 <u 0x10<32> l0041D417
l0041D3E9:
	word32 ecx_1967 = Mem1963[ebp_1163 - 88<i32>:word32]
	edx_1600 = edx_1600 + 1<32>
	branch edx_1600 <u 0xFFF<32> l0041D40D
l0041D3F7:
	ecx_1967 = Mem1963[ecx_1967 - 4<i32>:word32]
	edx_1600 = edx_1600 + 0x24<32>
	branch ecx_1967 - ecx_1967 <=u 0x23<32> l0041D40D
l0041D407:
	_invalid_parameter_noinfo_noreturn()
l0041D40D:
	word32 esp_1980 = esp_1925 - 4<i32>
	Mem1982[esp_1980:word32] = edx_1600
	Mem1985[esp_1980 - 4<i32>:word32] = ecx_1967
	fn0042763F(Mem1985[esp_1980 - 4<i32>:word32])
l0041D417:
	Mem1991[ebp_1163 - 72<i32>:word32] = 0<32>
	Mem1992[ebp_1163 - 68<i32>:word32] = 0xF<32>
	Mem1993[ebp_1163 - 88<i32>:byte] = 0<8>
	Mem1994[ebp_1163 - 4<i32>:word32] = 0x14<32>
	esp_1154 = esp_1925
	word32 ecx_1995 = Mem1994[ebp_1163 - 36<i32>:word32]
	branch ecx_1995 == 0<32> l0041D448
l0041D437:
	word32 eax_1999 = Mem1994[ecx_1995:word32]
	word32 eax_2032
	call Mem1994[eax_1999 + 8<i32>:word32] (retsize: 4;)
		uses: eax:eax_1999,ecx:ecx_1995
		defs: eax:eax_2032,edx:edx_2034,esp:esp_2031
	branch eax_2032 == 0<32> l0041D448
l0041D440:
	word32 edx_2040 = Mem1994[eax_2032:word32]
	Mem2043[esp_1154 - 4<i32>:word32] = 1<32>
	call Mem2043[edx_2040:word32] (retsize: 4;)
		uses: ecx:eax_2032,edx:edx_2040
		defs: edx:edx_2047,esp:esp_2044
l0041D448:
	Mem2053[ebp_1163 - 4<i32>:word32] = 0xFFFFFFFF<32>
	branch Mem2051[ebp_1163 - 29<i32>:byte] == 0<8> l0041D4EE
l0041D459:
	ebx_1702 = Mem2053[ebx_1702:word32] + Mem2053[ebp_1163 - 20<i32>:word32]
	word32 eax_2058 = _errno()
	Mem2060[ebp_1163 - 24<i32>:word32] = eax_2058
	branch Mem2053[ebx_1702 + 20<i32>:word32] <u 0x10<32> l0041D46F
l0041D46D:
	ebx_1702 = Mem2060[ebx_1702:word32]
l0041D46F:
	Mem2064[eax_2058:word32] = 0<32>
	word32 esp_2069 = esp_1154 - 4<i32>
	Mem2070[esp_2069:word32] = 0x10<32>
	Mem2072[esp_2069 - 4<i32>:word32] = ebp_1163 - 20<i32>
	Mem2075[esp_2069 - 8<i32>:word32] = ebx_1702
	word32 eax_2076 = strtol(Mem2075[esp_2069 - 8<i32>:(ptr32 charconst )], Mem2075[esp_2069 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2075[esp_2069:int32])
	esp_1154 = esp_2069 + 4<32>
	branch ebx_1702 != Mem2075[ebp_1163 - 20<i32>:word32] l0041D497
l0041D48C:
	Mem2082[esp_2069:word32] = 0x431878<32>
	_Xinvalid_argument(Mem2082[esp_2069:(ptr32 charconst )])
	esp_1154 = esp_2069
l0041D497:
	branch Mem2084[Mem2084[ebp_1163 - 24<i32>:word32]:word32] == 0x22<32> l0041D4E3
l0041D4E3:
	esp_1154 = esp_1154 - 4<i32>
	Mem2090[esp_1154:word32] = 0x431890<32>
	_Xout_of_range(Mem2090[esp_1154:(ptr32 charconst )])
l0041D4EE:
	word32 ecx_2099 = edi_1704 + 112<i32>
	word32 eax_2101 = Mem2093[ebx_1702:word32] + Mem2093[ebp_1163 - 20<i32>:word32]
	branch ecx_2099 == eax_2101 l0041D50D
l0041D4FA:
	word32 edx_2105 = eax_2101
	branch Mem2093[eax_2101 + 20<i32>:word32] <u 0x10<32> l0041D504
l0041D502:
	edx_2105 = Mem2093[eax_2101:word32]
l0041D504:
	word32 esp_2113 = esp_1154 - 4<i32>
	Mem2114[esp_2113:word32] = Mem2093[eax_2101 + 16<i32>:word32]
	Mem2117[esp_2113 - 4<i32>:word32] = edx_2105
	word32 ebx_2649
	word32 ecx_2648
	word32 edi_2651
	word32 esi_2650
	fn00402A70(ecx_2099, edi_1704, Mem2117[esp_2113 - 4<i32>:word32], Mem2117[esp_2113:word32], Mem2117[esp_2113 + 16<i32>:word32], out ecx_2648, out edx_1600, out ebx_2649, out ebp_1163, out esi_2650, out edi_2651)
	word32 esp_2133 = <invalid>
	esp_1154 = esp_2133 + 8<32>
l0041D49F:
	branch Mem2084[edi_1704 + 108<i32>:word32] != 0<32> l0041D4B0
l0041D4B0:
	branch eax_2076 >= 0<32> l0041D4D3
l0041D4D3:
	Mem2150[edi_1704 + 96<i32>:word32] = eax_2076 & 0xFFFC<32> | Mem2084[edi_1704 + 96<i32>:word32]
l0041D4B4:
	word32 ecx_2652
	Mem2175[edi_1704 + 96<i32>:word32] = eax_2076 & 0xFFFC<32> | fn0042D911(fn00427210(), out ecx_2652, out edx_1600) ^ Mem2084[edi_1704 + 96<i32>:word32]
l0041D4A5:
	Mem2178[edi_1704 + 96<i32>:word32] = Mem2084[edi_1704 + 96<i32>:word32] | eax_2076 & 0x3FFFFFC<32>
l0041D50D:
	Mem2185[fs:0x00000000<p32>:word32] = Mem2182[ebp_1163 - 12<i32>:word32]
	word32 esp_2188 = esp_1154 + 4<i32>
	word32 esi_2191 = Mem2185[esp_2188 + 4<i32>:word32]
	word32 eax_2564
	word32 ecx_2236
	fn00427500(Mem2185[ebp_1163 - 16<i32>:word32] ^ ebp_1163, edx_1600, Mem2185[esp_2188 + 8<i32>:word32], ebp_1163, esi_2191, Mem2185[esp_2188:word32], es, ds, Mem2185[esp_2188 + 8<i32>:word32], out eax_2564, out ecx_2236)
	ebpOut = Mem2185[ebp_1163:word32]
	esiOut = esi_2191
	return ecx_2236
fn0041CC60_exit:


word32 fn0041D540(word32 ecx, word32 edi, selector es, selector ds, word32 dwArg20, word32 dwArg28, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0020:[0..31] Stack +0028:[0..31]
// LiveOut: ebp ecx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: esp
fn0041D540_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc3C
l0041D540:
	Mem35[fs:0<32>:word32] = fp - 16<i32>
	word128 xmm0_39 = fn00427210()
	word32 ecx_212
	word32 edx_213
	Mem61[ecx + 96<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_39, word64, 64), SLICE(xmm0_39, real64, 0) * Mem35[0x00432EC0<p32>:real64]), out ecx_212, out edx_213)
	Mem66[&tLoc3C + 16<i32>:word32] = 0<32>
	Mem67[&tLoc3C + 20<i32>:word32] = 0xF<32>
	Mem70[&tLoc3C:byte] = 0<8>
	word32 ebp_72
	word32 ebx_73
	word32 edi_75
	word32 ecx_214
	word32 edx_215
	word32 esi_216
	fn00402A70(&tLoc3C, edi, 0x43274C<32>, 5<32>, Mem70[&tLoc3C + 12<i32>:word32], out ecx_214, out edx_215, out ebx_73, out ebp_72, out esi_216, out edi_75)
	Mem85[ebp_72 - 4<i32>:word32] = 0<32>
	word32 esp_79 = <invalid>
	Mem92[esp_79 - 0x14<32>:word32] = Mem85[Mem85[ebp_72 + 8<i32>:word32]:word32]
	word32 ebp_95
	word32 edx_217
	fn004028D0(esp_79 - 0x10<32>, edi_75, Mem92[esp_79 - 0x14<32>:word32], out edx_217, out ebp_95)
	Mem105[ebp_95 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 ebp_112
	word32 ebx_113
	word32 edi_115
	word32 esi_117
	word32 ecx_218
	word32 edx_219
	branch SLICE(fn0041C1F0(ebx_73, ebx_73, ebp_95, es, ds, dwArg28, out ecx_218, out edx_219, out ebx_113, out ebp_112, out esi_117, out edi_115), byte, 0) == 0<8> l0041D5CD_thunk_fn0041D5FE
l0041D5CD_thunk_fn0041D5FE:
	word32 ebp_130
	word32 esi_135
	word32 ecx_132 = fn0041D5FE(ebp_112, edi_115, es, ds, out ebp_130, out esi_135)
	ebpOut = ebp_130
	esiOut = esi_135
	return ecx_132
l0041D5CD_thunk_fn0041D5CF:
	word32 ebp_152
	word32 esi_157
	word32 ecx_154 = fn0041D5CF(ebx_113, esi_117, es, ds, dwArg20, out ebp_152, out esi_157)
	ebpOut = ebp_152
	esiOut = esi_157
	return ecx_154
fn0041D540_exit:


word32 fn0041D5CF(word32 ebx, word32 esi, selector es, selector ds, word32 dwArg20, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041CC60
//      fn0041D540
// MayUse:  cs:[0..15] ds:[0..15] ebx:[0..31] es:[0..15] esi:[0..31] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0020:[0..31]
// LiveOut: ebp ecx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: esp
fn0041D5CF_entry:
l0041D5CF:
	word32 esp_32 = <invalid>
	word32 ebx_19
	word32 esi_23
	word32 ecx_143
	word32 ebp_144
	word32 edi_145
	Mem41[esp_32:word32] = fn0041C910(ebx, es, ds, Mem0[esi:word32] + 72<i32>, dwArg20, out ecx_143, out ebx_19, out ebp_144, out esi_23, out edi_145)
	Mem44[esp_32 - 4<i32>:word32] = esi_23 + 48<i32>
	word32 esp_60 = <invalid>
	word32 ebx_47
	word32 esi_51
	word32 ecx_146
	word32 ebp_147
	word32 edi_148
	Mem69[esp_60:word32] = fn0041C910(ebx_19, es, ds, Mem44[esp_32 - 4<i32>:word32], Mem44[esp_32 + 32<i32>:word32], out ecx_146, out ebx_47, out ebp_147, out esi_51, out edi_148)
	Mem72[esp_60 - 4<i32>:word32] = esi_51 + 24<i32>
	word32 esp_88 = <invalid>
	word32 ebp_74
	word32 edi_77
	word32 ecx_149
	word32 ebx_150
	word32 esi_151
	Mem97[esp_88:word32] = fn0041C910(ebx_47, es, ds, Mem72[esp_60 - 4<i32>:word32], Mem72[esp_60 + 32<i32>:word32], out ecx_149, out ebx_150, out ebp_74, out esi_151, out edi_77)
	word32 ecx_152
	fn0041C680(Mem97[esp_88:word32], Mem97[esp_88 + 4<i32>:word32], Mem97[esp_88 + 8<i32>:word32], out ecx_152)
l0041D5F9_thunk_fn0041D5FE:
	word32 ebp_118
	word32 esi_123
	word32 ecx_120 = fn0041D5FE(ebp_74, edi_77, es, ds, out ebp_118, out esi_123)
	ebpOut = ebp_118
	esiOut = esi_123
	return ecx_120
fn0041D5CF_exit:


word32 fn0041D5FE(word32 ebp, word32 edi, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041CC60
//      fn0041D540
// MayUse:  cs:[0..15] ds:[0..15] ebp:[0..31] edi:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ecx esi
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn0041D5FE_entry:
	selector fs
	struct <anonymous> tLoc18
l0041D5FE:
	word32 esp_1082
	word32 ebp_1042
	word32 eax_1083
	word32 ebx_1043
	word32 ebx_1601
	word32 eax_1624
	word32 esp_1622
	Mem8[ebp + 8<i32>:word32] = &tLoc18
	Mem11[&tLoc18 + 16<i32>:word32] = 0<32>
	Mem12[&tLoc18 + 20<i32>:word32] = 0xF<32>
	Mem15[&tLoc18:byte] = 0<8>
	word32 ebp_19
	word32 ebx_20
	word32 edi_22
	word32 esi_24
	word32 edx_1814
	word32 ecx_1813
	fn00402A70(&tLoc18, edi, 0x432754<32>, 4<32>, Mem15[&tLoc18 + 12<i32>:word32], out ecx_1813, out edx_1814, out ebx_20, out ebp_19, out esi_24, out edi_22)
	Mem34[ebp_19 - 4<i32>:word32] = 1<32>
	word32 esp_26 = <invalid>
	Mem38[esp_26 - 0x14<32>:word32] = Mem34[esi_24:word32]
	word32 ebp_41
	word32 edx_1815
	fn004028D0(esp_26 - 0x10<32>, edi_22, Mem38[esp_26 - 0x14<32>:word32], out edx_1815, out ebp_41)
	Mem51[ebp_41 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_42 = <invalid>
	word32 ebp_58
	word32 ebx_59
	word32 edi_61
	word32 esi_63
	word32 ecx_1816
	word32 edx_1817
	branch SLICE(fn0041C1F0(ebx_20, ebx_20, ebp_41, es, ds, Mem51[esp_42 + 0x2C<32>:word32], out ecx_1816, out edx_1817, out ebx_59, out ebp_58, out esi_63, out edi_61), byte, 0) == 0<8> l0041D677
l0041D677:
	Mem78[ebp_58 + 8<i32>:word32] = esp_42 - 0x14<32>
	Mem80[esp_42 - 0x18<32>:word32] = 6<32>
	Mem81[esp_42 - 4<32>:word32] = 0<32>
	Mem82[esp_42:word32] = 0xF<32>
	Mem84[esp_42 - 0x1C<32>:word32] = 0x43275C<32>
	Mem85[esp_42 - 0x14<32>:byte] = 0<8>
	word32 ebp_87
	word32 ebx_88
	word32 edi_90
	word32 esi_92
	word32 ecx_1828
	word32 edx_1829
	fn00402A70(esp_42 - 0x14<32>, edi_61, Mem85[esp_42 - 0x1C<32>:word32], Mem85[esp_42 - 0x18<32>:word32], Mem85[esp_42 - 8<32>:word32], out ecx_1828, out edx_1829, out ebx_88, out ebp_87, out esi_92, out edi_90)
	Mem102[ebp_87 - 4<i32>:word32] = 2<32>
	word32 esp_94 = <invalid>
	Mem106[esp_94 - 0x14<32>:word32] = Mem102[esi_92:word32]
	word32 ebp_109
	word32 edx_1830
	fn004028D0(esp_94 - 0x10<32>, edi_90, Mem106[esp_94 - 0x14<32>:word32], out edx_1830, out ebp_109)
	Mem119[ebp_109 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_110 = <invalid>
	word32 ebp_121
	word32 ebx_122
	word32 edi_124
	word32 esi_126
	word32 ecx_1831
	word32 edx_1832
	branch SLICE(fn0041C1F0(ebx_88, ebx_88, ebp_109, es, ds, Mem119[esp_110 + 0x2C<32>:word32], out ecx_1831, out edx_1832, out ebx_122, out ebp_121, out esi_126, out edi_124), byte, 0) == 0<8> l0041D6D9
l0041D6D9:
	word32 esp_1453
	word32 ebx_1430
	Mem141[ebp_121 + 8<i32>:word32] = esp_110 - 0x14<32>
	Mem143[esp_110 - 0x18<32>:word32] = 5<32>
	Mem144[esp_110 - 4<32>:word32] = 0<32>
	Mem145[esp_110:word32] = 0xF<32>
	Mem147[esp_110 - 0x1C<32>:word32] = 0x432764<32>
	Mem148[esp_110 - 0x14<32>:byte] = 0<8>
	word32 ebp_150
	word32 ebx_151
	word32 edi_153
	word32 esi_155
	word32 ecx_1839
	word32 edx_1840
	fn00402A70(esp_110 - 0x14<32>, edi_124, Mem148[esp_110 - 0x1C<32>:word32], Mem148[esp_110 - 0x18<32>:word32], Mem148[esp_110 - 8<32>:word32], out ecx_1839, out edx_1840, out ebx_151, out ebp_150, out esi_155, out edi_153)
	Mem165[ebp_150 - 4<i32>:word32] = 3<32>
	word32 esp_157 = <invalid>
	Mem169[esp_157 - 0x14<32>:word32] = Mem165[esi_155:word32]
	word32 ebp_172
	word32 edx_1841
	fn004028D0(esp_157 - 0x10<32>, edi_153, Mem169[esp_157 - 0x14<32>:word32], out edx_1841, out ebp_172)
	Mem182[ebp_172 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_173 = <invalid>
	word32 ebp_184
	word32 ebx_185
	word32 edi_187
	word32 esi_189
	word32 ecx_1842
	word32 edx_1843
	branch SLICE(fn0041C1F0(ebx_151, ebx_151, ebp_172, es, ds, Mem182[esp_173 + 0x2C<32>:word32], out ecx_1842, out edx_1843, out ebx_185, out ebp_184, out esi_189, out edi_187), byte, 0) == 0<8> l0041D752
l0041D752:
	Mem204[ebp_184 + 8<i32>:word32] = esp_173 - 0x14<32>
	Mem206[esp_173 - 0x18<32>:word32] = 5<32>
	Mem207[esp_173 - 4<32>:word32] = 0<32>
	Mem208[esp_173:word32] = 0xF<32>
	Mem210[esp_173 - 0x1C<32>:word32] = 0x43276C<32>
	Mem211[esp_173 - 0x14<32>:byte] = 0<8>
	word32 ebp_213
	word32 ebx_214
	word32 edi_216
	word32 esi_218
	word32 ecx_1854
	word32 edx_1855
	fn00402A70(esp_173 - 0x14<32>, edi_187, Mem211[esp_173 - 0x1C<32>:word32], Mem211[esp_173 - 0x18<32>:word32], Mem211[esp_173 - 8<32>:word32], out ecx_1854, out edx_1855, out ebx_214, out ebp_213, out esi_218, out edi_216)
	Mem228[ebp_213 - 4<i32>:word32] = 4<32>
	word32 esp_220 = <invalid>
	Mem232[esp_220 - 0x14<32>:word32] = Mem228[esi_218:word32]
	word32 ebp_235
	word32 edx_1856
	fn004028D0(esp_220 - 0x10<32>, edi_216, Mem232[esp_220 - 0x14<32>:word32], out edx_1856, out ebp_235)
	Mem245[ebp_235 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_236 = <invalid>
	word32 ebp_247
	word32 ebx_248
	word32 edi_250
	word32 esi_252
	word32 ecx_1857
	word32 edx_1858
	branch SLICE(fn0041C1F0(ebx_214, ebx_214, ebp_235, es, ds, Mem245[esp_236 + 0x2C<32>:word32], out ecx_1857, out edx_1858, out ebx_248, out ebp_247, out esi_252, out edi_250), byte, 0) == 0<8> l0041D7B2
l0041D7B2:
	Mem267[ebp_247 + 8<i32>:word32] = esp_236 - 0x14<32>
	Mem269[esp_236 - 0x18<32>:word32] = 6<32>
	Mem270[esp_236 - 4<32>:word32] = 0<32>
	Mem271[esp_236:word32] = 0xF<32>
	Mem273[esp_236 - 0x1C<32>:word32] = 0x432774<32>
	Mem274[esp_236 - 0x14<32>:byte] = 0<8>
	word32 ebp_276
	word32 ebx_277
	word32 edi_279
	word32 esi_281
	word32 ecx_1865
	word32 edx_1866
	fn00402A70(esp_236 - 0x14<32>, edi_250, Mem274[esp_236 - 0x1C<32>:word32], Mem274[esp_236 - 0x18<32>:word32], Mem274[esp_236 - 8<32>:word32], out ecx_1865, out edx_1866, out ebx_277, out ebp_276, out esi_281, out edi_279)
	Mem291[ebp_276 - 4<i32>:word32] = 5<32>
	word32 esp_283 = <invalid>
	Mem295[esp_283 - 0x14<32>:word32] = Mem291[esi_281:word32]
	word32 ebp_298
	word32 edx_1867
	fn004028D0(esp_283 - 0x10<32>, edi_279, Mem295[esp_283 - 0x14<32>:word32], out edx_1867, out ebp_298)
	Mem308[ebp_298 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_299 = <invalid>
	word32 ebp_310
	word32 ebx_311
	word32 edi_313
	word32 esi_315
	word32 ecx_1868
	word32 edx_1869
	branch SLICE(fn0041C1F0(ebx_277, ebx_277, ebp_298, es, ds, Mem308[esp_299 + 0x2C<32>:word32], out ecx_1868, out edx_1869, out ebx_311, out ebp_310, out esi_315, out edi_313), byte, 0) == 0<8> l0041D82B
l0041D82B:
	Mem330[ebp_310 + 8<i32>:word32] = esp_299 - 0x14<32>
	Mem332[esp_299 - 0x18<32>:word32] = 5<32>
	Mem333[esp_299 - 4<32>:word32] = 0<32>
	Mem334[esp_299:word32] = 0xF<32>
	Mem336[esp_299 - 0x1C<32>:word32] = 0x43277C<32>
	Mem337[esp_299 - 0x14<32>:byte] = 0<8>
	word32 ebp_339
	word32 ebx_340
	word32 edi_342
	word32 esi_344
	word32 ecx_1880
	word32 edx_1881
	fn00402A70(esp_299 - 0x14<32>, edi_313, Mem337[esp_299 - 0x1C<32>:word32], Mem337[esp_299 - 0x18<32>:word32], Mem337[esp_299 - 8<32>:word32], out ecx_1880, out edx_1881, out ebx_340, out ebp_339, out esi_344, out edi_342)
	Mem354[ebp_339 - 4<i32>:word32] = 6<32>
	word32 esp_346 = <invalid>
	Mem358[esp_346 - 0x14<32>:word32] = Mem354[esi_344:word32]
	word32 ebp_361
	word32 edx_1882
	fn004028D0(esp_346 - 0x10<32>, edi_342, Mem358[esp_346 - 0x14<32>:word32], out edx_1882, out ebp_361)
	Mem371[ebp_361 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_362 = <invalid>
	word32 ebp_373
	word32 ebx_374
	word32 edi_376
	word32 esi_378
	word32 ecx_1883
	word32 edx_1884
	branch SLICE(fn0041C1F0(ebx_340, ebx_340, ebp_361, es, ds, Mem371[esp_362 + 0x2C<32>:word32], out ecx_1883, out edx_1884, out ebx_374, out ebp_373, out esi_378, out edi_376), byte, 0) == 0<8> l0041D8A2
l0041D8A2:
	Mem393[ebp_373 + 8<i32>:word32] = esp_362 - 0x14<32>
	Mem395[esp_362 - 0x18<32>:word32] = 5<32>
	Mem396[esp_362 - 4<32>:word32] = 0<32>
	Mem397[esp_362:word32] = 0xF<32>
	Mem399[esp_362 - 0x1C<32>:word32] = 0x432784<32>
	Mem400[esp_362 - 0x14<32>:byte] = 0<8>
	word32 ebp_402
	word32 ebx_403
	word32 edi_405
	word32 esi_407
	word32 ecx_1895
	word32 edx_1896
	fn00402A70(esp_362 - 0x14<32>, edi_376, Mem400[esp_362 - 0x1C<32>:word32], Mem400[esp_362 - 0x18<32>:word32], Mem400[esp_362 - 8<32>:word32], out ecx_1895, out edx_1896, out ebx_403, out ebp_402, out esi_407, out edi_405)
	Mem417[ebp_402 - 4<i32>:word32] = 7<32>
	word32 esp_409 = <invalid>
	Mem421[esp_409 - 0x14<32>:word32] = Mem417[esi_407:word32]
	word32 ebp_424
	word32 edx_1897
	fn004028D0(esp_409 - 0x10<32>, edi_405, Mem421[esp_409 - 0x14<32>:word32], out edx_1897, out ebp_424)
	Mem434[ebp_424 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_425 = <invalid>
	word32 ebp_436
	word32 ebx_437
	word32 edi_439
	word32 esi_441
	word32 ecx_1898
	word32 edx_1899
	branch SLICE(fn0041C1F0(ebx_403, ebx_403, ebp_424, es, ds, Mem434[esp_425 + 0x2C<32>:word32], out ecx_1898, out edx_1899, out ebx_437, out ebp_436, out esi_441, out edi_439), byte, 0) == 0<8> l0041D916
l0041D916:
	word32 esp_1030
	word32 ebx_1006
	Mem456[ebp_436 + 8<i32>:word32] = esp_425 - 0x14<32>
	Mem458[esp_425 - 0x18<32>:word32] = 5<32>
	Mem459[esp_425 - 4<32>:word32] = 0<32>
	Mem460[esp_425:word32] = 0xF<32>
	Mem462[esp_425 - 0x1C<32>:word32] = 0x43278C<32>
	Mem463[esp_425 - 0x14<32>:byte] = 0<8>
	word32 ebp_465
	word32 ebx_466
	word32 edi_468
	word32 esi_470
	word32 ecx_1910
	word32 edx_1911
	fn00402A70(esp_425 - 0x14<32>, edi_439, Mem463[esp_425 - 0x1C<32>:word32], Mem463[esp_425 - 0x18<32>:word32], Mem463[esp_425 - 8<32>:word32], out ecx_1910, out edx_1911, out ebx_466, out ebp_465, out esi_470, out edi_468)
	Mem480[ebp_465 - 4<i32>:word32] = 8<32>
	word32 esp_472 = <invalid>
	Mem484[esp_472 - 0x14<32>:word32] = Mem480[esi_470:word32]
	word32 ebp_487
	word32 edx_1912
	fn004028D0(esp_472 - 0x10<32>, edi_468, Mem484[esp_472 - 0x14<32>:word32], out edx_1912, out ebp_487)
	Mem497[ebp_487 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_488 = <invalid>
	word32 ebp_499
	word32 ebx_500
	word32 edi_502
	word32 esi_504
	word32 ecx_1913
	word32 edx_1914
	branch SLICE(fn0041C1F0(ebx_466, ebx_466, ebp_487, es, ds, Mem497[esp_488 + 0x2C<32>:word32], out ecx_1913, out edx_1914, out ebx_500, out ebp_499, out esi_504, out edi_502), byte, 0) == 0<8> l0041D98F
l0041D98F:
	Mem519[ebp_499 + 8<i32>:word32] = esp_488 - 0x14<32>
	Mem521[esp_488 - 0x18<32>:word32] = 5<32>
	Mem522[esp_488 - 4<32>:word32] = 0<32>
	Mem523[esp_488:word32] = 0xF<32>
	Mem525[esp_488 - 0x1C<32>:word32] = 0x432794<32>
	Mem526[esp_488 - 0x14<32>:byte] = 0<8>
	word32 ebp_528
	word32 ebx_529
	word32 edi_531
	word32 esi_533
	word32 ecx_1925
	word32 edx_1926
	fn00402A70(esp_488 - 0x14<32>, edi_502, Mem526[esp_488 - 0x1C<32>:word32], Mem526[esp_488 - 0x18<32>:word32], Mem526[esp_488 - 8<32>:word32], out ecx_1925, out edx_1926, out ebx_529, out ebp_528, out esi_533, out edi_531)
	Mem543[ebp_528 - 4<i32>:word32] = 9<32>
	word32 esp_535 = <invalid>
	Mem547[esp_535 - 0x14<32>:word32] = Mem543[esi_533:word32]
	word32 ebp_550
	word32 edx_1927
	fn004028D0(esp_535 - 0x10<32>, edi_531, Mem547[esp_535 - 0x14<32>:word32], out edx_1927, out ebp_550)
	Mem560[ebp_550 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_551 = <invalid>
	word32 ebp_562
	word32 ebx_563
	word32 edi_565
	word32 esi_567
	word32 ecx_1928
	word32 edx_1929
	branch SLICE(fn0041C1F0(ebx_529, ebx_529, ebp_550, es, ds, Mem560[esp_551 + 0x2C<32>:word32], out ecx_1928, out edx_1929, out ebx_563, out ebp_562, out esi_567, out edi_565), byte, 0) == 0<8> l0041D9EF
l0041D9EF:
	Mem582[ebp_562 + 8<i32>:word32] = esp_551 - 0x14<32>
	Mem584[esp_551 - 0x18<32>:word32] = 6<32>
	Mem585[esp_551 - 4<32>:word32] = 0<32>
	Mem586[esp_551:word32] = 0xF<32>
	Mem588[esp_551 - 0x1C<32>:word32] = 0x43279C<32>
	Mem589[esp_551 - 0x14<32>:byte] = 0<8>
	word32 ebp_591
	word32 ebx_592
	word32 edi_594
	word32 esi_596
	word32 ecx_1936
	word32 edx_1937
	fn00402A70(esp_551 - 0x14<32>, edi_565, Mem589[esp_551 - 0x1C<32>:word32], Mem589[esp_551 - 0x18<32>:word32], Mem589[esp_551 - 8<32>:word32], out ecx_1936, out edx_1937, out ebx_592, out ebp_591, out esi_596, out edi_594)
	Mem606[ebp_591 - 4<i32>:word32] = 0xA<32>
	word32 esp_598 = <invalid>
	Mem610[esp_598 - 0x14<32>:word32] = Mem606[esi_596:word32]
	word32 ebp_613
	word32 edx_1938
	fn004028D0(esp_598 - 0x10<32>, edi_594, Mem610[esp_598 - 0x14<32>:word32], out edx_1938, out ebp_613)
	Mem623[ebp_613 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_614 = <invalid>
	word32 ebp_625
	word32 ebx_626
	word32 edi_628
	word32 esi_630
	word32 ecx_1939
	word32 edx_1940
	branch SLICE(fn0041C1F0(ebx_592, ebx_592, ebp_613, es, ds, Mem623[esp_614 + 0x2C<32>:word32], out ecx_1939, out edx_1940, out ebx_626, out ebp_625, out esi_630, out edi_628), byte, 0) == 0<8> l0041DA65
l0041DA65:
	Mem645[ebp_625 + 8<i32>:word32] = esp_614 - 0x14<32>
	Mem647[esp_614 - 0x18<32>:word32] = 5<32>
	Mem648[esp_614 - 4<32>:word32] = 0<32>
	Mem649[esp_614:word32] = 0xF<32>
	Mem651[esp_614 - 0x1C<32>:word32] = 0x4327A4<32>
	Mem652[esp_614 - 0x14<32>:byte] = 0<8>
	word32 ebp_654
	word32 ebx_655
	word32 edi_657
	word32 esi_659
	word32 ecx_1951
	word32 edx_1952
	fn00402A70(esp_614 - 0x14<32>, edi_628, Mem652[esp_614 - 0x1C<32>:word32], Mem652[esp_614 - 0x18<32>:word32], Mem652[esp_614 - 8<32>:word32], out ecx_1951, out edx_1952, out ebx_655, out ebp_654, out esi_659, out edi_657)
	Mem669[ebp_654 - 4<i32>:word32] = 0xB<32>
	word32 esp_661 = <invalid>
	Mem673[esp_661 - 0x14<32>:word32] = Mem669[esi_659:word32]
	word32 ebp_676
	word32 edx_1953
	fn004028D0(esp_661 - 0x10<32>, edi_657, Mem673[esp_661 - 0x14<32>:word32], out edx_1953, out ebp_676)
	Mem686[ebp_676 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_677 = <invalid>
	esp_1082 = esp_677 + 4<32>
	word32 ebx_689
	word32 esi_693
	word32 ecx_1954
	word32 edx_1955
	word32 edi_1956
	branch SLICE(fn0041C1F0(ebx_655, ebx_655, ebp_676, es, ds, Mem686[esp_677 + 0x2C<32>:word32], out ecx_1954, out edx_1955, out ebx_689, out ebp_1042, out esi_693, out edi_1956), byte, 0) == 0<8> l0041DADC
l0041DAAF:
	Mem708[esp_677:word32] = Mem686[esi_693:word32] + 72<i32>
	word32 esp_724 = <invalid>
	word32 ebx_711
	word32 esi_715
	word32 ecx_1957
	word32 ebp_1958
	word32 edi_1959
	Mem733[esp_724:word32] = fn0041C910(ebx_689, es, ds, Mem708[esp_677:word32], Mem708[esp_677 + 36<i32>:word32], out ecx_1957, out ebx_711, out ebp_1958, out esi_715, out edi_1959)
	Mem736[esp_724 - 4<i32>:word32] = esi_715 + 48<i32>
	word32 esp_752 = <invalid>
	word32 ebx_739
	word32 esi_743
	word32 ecx_1960
	word32 ebp_1961
	word32 edi_1962
	Mem761[esp_752:word32] = fn0041C910(ebx_711, es, ds, Mem736[esp_724 - 4<i32>:word32], Mem736[esp_724 + 32<i32>:word32], out ecx_1960, out ebx_739, out ebp_1961, out esi_743, out edi_1962)
	Mem764[esp_752 - 4<i32>:word32] = esi_743 + 24<i32>
	word32 esp_780 = <invalid>
	word32 ecx_1963
	word32 esi_1964
	word32 edi_1965
	Mem789[esp_780:word32] = fn0041C910(ebx_739, es, ds, Mem764[esp_752 - 4<i32>:word32], Mem764[esp_752 + 32<i32>:word32], out ecx_1963, out ebx_1043, out ebp_1042, out esi_1964, out edi_1965)
	esp_1082 = esp_780 + 0xC<32>
	word32 ecx_1966
	eax_1083 = fn0041C680(Mem789[esp_780:word32], Mem789[esp_780 + 4<i32>:word32], Mem789[esp_780 + 8<i32>:word32], out ecx_1966) + 0x342<32>
l0041DA39:
	Mem812[esp_614:word32] = Mem623[esi_630:word32] + 72<i32>
	word32 esp_828 = <invalid>
	word32 ebx_815
	word32 esi_819
	word32 ecx_1941
	word32 ebp_1942
	word32 edi_1943
	Mem837[esp_828:word32] = fn0041C910(ebx_626, es, ds, Mem812[esp_614:word32], Mem812[esp_614 + 36<i32>:word32], out ecx_1941, out ebx_815, out ebp_1942, out esi_819, out edi_1943)
	Mem840[esp_828 - 4<i32>:word32] = esi_819 + 48<i32>
	word32 esp_856 = <invalid>
	word32 ebx_843
	word32 esi_847
	word32 ecx_1944
	word32 ebp_1945
	word32 edi_1946
	Mem865[esp_856:word32] = fn0041C910(ebx_815, es, ds, Mem840[esp_828 - 4<i32>:word32], Mem840[esp_828 + 32<i32>:word32], out ecx_1944, out ebx_843, out ebp_1945, out esi_847, out edi_1946)
	Mem868[esp_856 - 4<i32>:word32] = esi_847 + 24<i32>
	word32 esp_884 = <invalid>
	word32 ecx_1947
	word32 esi_1948
	word32 edi_1949
	Mem893[esp_884:word32] = fn0041C910(ebx_843, es, ds, Mem868[esp_856 - 4<i32>:word32], Mem868[esp_856 + 32<i32>:word32], out ecx_1947, out ebx_1043, out ebp_1042, out esi_1948, out edi_1949)
	esp_1082 = esp_884 + 0xC<32>
	word32 ecx_1950
	eax_1083 = fn0041C680(Mem893[esp_884:word32], Mem893[esp_884 + 4<i32>:word32], Mem893[esp_884 + 8<i32>:word32], out ecx_1950) + 0x102<32>
l0041D9D9:
	Mem917[esp_551:word32] = Mem560[esi_567:word32] + 0x18<32>
	word32 esp_933 = <invalid>
	word32 ebx_920
	word32 esi_924
	word32 ecx_1930
	word32 ebp_1931
	word32 edi_1932
	Mem942[esp_933:word32] = fn0041C910(ebx_563, es, ds, Mem917[esp_551:word32], Mem917[esp_551 + 36<i32>:word32], out ecx_1930, out ebx_920, out ebp_1931, out esi_924, out edi_1932)
	Mem944[esp_933 - 4<i32>:word32] = esi_924
	word32 esp_960 = <invalid>
	word32 esi_951
	word32 ecx_1933
	word32 ebp_1934
	word32 edi_1935
	Mem969[esp_960:word32] = fn0041C910(ebx_920, es, ds, Mem944[esp_933 - 4<i32>:word32], Mem944[esp_933 + 32<i32>:word32], out ecx_1933, out ebx_1006, out ebp_1934, out esi_951, out edi_1935)
	Mem971[esp_960 - 4<i32>:word32] = esi_951
	esp_1030 = esp_960 - 4<i32>
l0041D960:
	Mem975[esp_488:word32] = Mem497[esi_504:word32] + 72<i32>
	word32 esp_991 = <invalid>
	word32 ebx_978
	word32 esi_982
	word32 ecx_1915
	word32 ebp_1916
	word32 edi_1917
	Mem1000[esp_991:word32] = fn0041C910(ebx_500, es, ds, Mem975[esp_488:word32], Mem975[esp_488 + 36<i32>:word32], out ecx_1915, out ebx_978, out ebp_1916, out esi_982, out edi_1917)
	Mem1003[esp_991 - 4<i32>:word32] = esi_982 + 48<i32>
	word32 esp_1019 = <invalid>
	word32 esi_1010
	word32 ecx_1918
	word32 ebp_1919
	word32 edi_1920
	Mem1028[esp_1019:word32] = fn0041C910(ebx_978, es, ds, Mem1003[esp_991 - 4<i32>:word32], Mem1003[esp_991 + 32<i32>:word32], out ecx_1918, out ebx_1006, out ebp_1919, out esi_1010, out edi_1920)
	Mem1031[esp_1019 - 4<i32>:word32] = esi_1010 + 24<i32>
	esp_1030 = esp_1019 - 4<i32>
l0041D97A:
	word32 esp_1056 = <invalid>
	word32 ecx_1921
	word32 esi_1922
	word32 edi_1923
	Mem1065[esp_1056:word32] = fn0041C910(ebx_1006, es, ds, Mem1040[esp_1030:word32], Mem1040[esp_1030 + 36<i32>:word32], out ecx_1921, out ebx_1043, out ebp_1042, out esi_1922, out edi_1923)
	esp_1082 = esp_1056 + 0xC<32>
	word32 ecx_1924
	eax_1083 = fn0041C680(Mem1065[esp_1056:word32], Mem1065[esp_1056 + 4<i32>:word32], Mem1065[esp_1056 + 8<i32>:word32], out ecx_1924) + 0x242<32>
l0041D8EC:
	Mem1088[esp_425:word32] = Mem434[esi_441:word32] + 48<i32>
	word32 esp_1104 = <invalid>
	word32 ebx_1091
	word32 esi_1095
	word32 ecx_1900
	word32 ebp_1901
	word32 edi_1902
	Mem1113[esp_1104:word32] = fn0041C910(ebx_437, es, ds, Mem1088[esp_425:word32], Mem1088[esp_425 + 36<i32>:word32], out ecx_1900, out ebx_1091, out ebp_1901, out esi_1095, out edi_1902)
	Mem1115[esp_1104 - 4<i32>:word32] = esi_1095
	word32 esp_1131 = <invalid>
	word32 ebx_1118
	word32 edi_1120
	word32 ecx_1903
	word32 ebp_1904
	word32 esi_1905
	Mem1140[esp_1131:word32] = fn0041C910(ebx_1091, es, ds, Mem1115[esp_1104 - 4<i32>:word32], Mem1115[esp_1104 + 32<i32>:word32], out ecx_1903, out ebx_1118, out ebp_1904, out esi_1905, out edi_1120)
	Mem1143[esp_1131 - 4<i32>:word32] = edi_1120 + 24<i32>
	word32 esp_1159 = <invalid>
	word32 ecx_1906
	word32 esi_1907
	word32 edi_1908
	Mem1168[esp_1159:word32] = fn0041C910(ebx_1118, es, ds, Mem1143[esp_1131 - 4<i32>:word32], Mem1143[esp_1131 + 32<i32>:word32], out ecx_1906, out ebx_1043, out ebp_1042, out esi_1907, out edi_1908)
	esp_1082 = esp_1159 + 0xC<32>
	word32 ecx_1909
	eax_1083 = fn0041C680(Mem1168[esp_1159:word32], Mem1168[esp_1159 + 4<i32>:word32], Mem1168[esp_1159 + 8<i32>:word32], out ecx_1909) + 0x42<32>
l0041D875:
	Mem1191[esp_362:word32] = Mem371[esi_378:word32] + 72<i32>
	word32 esp_1207 = <invalid>
	word32 ebx_1194
	word32 esi_1198
	word32 ecx_1885
	word32 ebp_1886
	word32 edi_1887
	Mem1216[esp_1207:word32] = fn0041C910(ebx_374, es, ds, Mem1191[esp_362:word32], Mem1191[esp_362 + 36<i32>:word32], out ecx_1885, out ebx_1194, out ebp_1886, out esi_1198, out edi_1887)
	Mem1219[esp_1207 - 4<i32>:word32] = esi_1198 + 48<i32>
	word32 esp_1235 = <invalid>
	word32 ebx_1222
	word32 esi_1226
	word32 ecx_1888
	word32 ebp_1889
	word32 edi_1890
	Mem1244[esp_1235:word32] = fn0041C910(ebx_1194, es, ds, Mem1219[esp_1207 - 4<i32>:word32], Mem1219[esp_1207 + 32<i32>:word32], out ecx_1888, out ebx_1222, out ebp_1889, out esi_1226, out edi_1890)
	Mem1247[esp_1235 - 4<i32>:word32] = esi_1226 + 24<i32>
	word32 esp_1263 = <invalid>
	word32 ecx_1891
	word32 esi_1892
	word32 edi_1893
	Mem1272[esp_1263:word32] = fn0041C910(ebx_1222, es, ds, Mem1247[esp_1235 - 4<i32>:word32], Mem1247[esp_1235 + 32<i32>:word32], out ecx_1891, out ebx_1043, out ebp_1042, out esi_1892, out edi_1893)
	esp_1082 = esp_1263 + 0xC<32>
	word32 ecx_1894
	eax_1083 = fn0041C680(Mem1272[esp_1263:word32], Mem1272[esp_1263 + 4<i32>:word32], Mem1272[esp_1263 + 8<i32>:word32], out ecx_1894) + 0x42<32>
l0041D7FC:
	Mem1295[esp_299:word32] = Mem308[esi_315:word32] + 72<i32>
	word32 esp_1311 = <invalid>
	word32 ebx_1298
	word32 esi_1302
	word32 ecx_1870
	word32 ebp_1871
	word32 edi_1872
	Mem1320[esp_1311:word32] = fn0041C910(ebx_311, es, ds, Mem1295[esp_299:word32], Mem1295[esp_299 + 36<i32>:word32], out ecx_1870, out ebx_1298, out ebp_1871, out esi_1302, out edi_1872)
	Mem1323[esp_1311 - 4<i32>:word32] = esi_1302 + 48<i32>
	word32 esp_1339 = <invalid>
	word32 ebx_1326
	word32 esi_1330
	word32 ecx_1873
	word32 ebp_1874
	word32 edi_1875
	Mem1348[esp_1339:word32] = fn0041C910(ebx_1298, es, ds, Mem1323[esp_1311 - 4<i32>:word32], Mem1323[esp_1311 + 32<i32>:word32], out ecx_1873, out ebx_1326, out ebp_1874, out esi_1330, out edi_1875)
	Mem1351[esp_1339 - 4<i32>:word32] = esi_1330 + 24<i32>
	word32 esp_1367 = <invalid>
	word32 ecx_1876
	word32 esi_1877
	word32 edi_1878
	Mem1376[esp_1367:word32] = fn0041C910(ebx_1326, es, ds, Mem1351[esp_1339 - 4<i32>:word32], Mem1351[esp_1339 + 32<i32>:word32], out ecx_1876, out ebx_1043, out ebp_1042, out esi_1877, out edi_1878)
	esp_1082 = esp_1367 + 0xC<32>
	word32 ecx_1879
	eax_1083 = fn0041C680(Mem1376[esp_1367:word32], Mem1376[esp_1367 + 4<i32>:word32], Mem1376[esp_1367 + 8<i32>:word32], out ecx_1879) + 0x1C2<32>
l0041D79C:
	Mem1400[esp_236:word32] = Mem245[esi_252:word32] + 0x18<32>
	word32 esp_1416 = <invalid>
	word32 ebx_1403
	word32 esi_1407
	word32 ecx_1859
	word32 ebp_1860
	word32 edi_1861
	Mem1425[esp_1416:word32] = fn0041C910(ebx_248, es, ds, Mem1400[esp_236:word32], Mem1400[esp_236 + 36<i32>:word32], out ecx_1859, out ebx_1403, out ebp_1860, out esi_1407, out edi_1861)
	Mem1427[esp_1416 - 4<i32>:word32] = esi_1407
	word32 esp_1443 = <invalid>
	word32 esi_1434
	word32 ecx_1862
	word32 ebp_1863
	word32 edi_1864
	Mem1452[esp_1443:word32] = fn0041C910(ebx_1403, es, ds, Mem1427[esp_1416 - 4<i32>:word32], Mem1427[esp_1416 + 32<i32>:word32], out ecx_1862, out ebx_1430, out ebp_1863, out esi_1434, out edi_1864)
	Mem1454[esp_1443 - 4<i32>:word32] = esi_1434
	esp_1453 = esp_1443 - 4<i32>
l0041D723:
	Mem1458[esp_173:word32] = Mem182[esi_189:word32] + 72<i32>
	word32 esp_1474 = <invalid>
	word32 ebx_1461
	word32 esi_1465
	word32 ecx_1844
	word32 ebp_1845
	word32 edi_1846
	Mem1483[esp_1474:word32] = fn0041C910(ebx_185, es, ds, Mem1458[esp_173:word32], Mem1458[esp_173 + 36<i32>:word32], out ecx_1844, out ebx_1461, out ebp_1845, out esi_1465, out edi_1846)
	Mem1486[esp_1474 - 4<i32>:word32] = esi_1465 + 48<i32>
	word32 esp_1502 = <invalid>
	word32 esi_1493
	word32 ecx_1847
	word32 ebp_1848
	word32 edi_1849
	Mem1511[esp_1502:word32] = fn0041C910(ebx_1461, es, ds, Mem1486[esp_1474 - 4<i32>:word32], Mem1486[esp_1474 + 32<i32>:word32], out ecx_1847, out ebx_1430, out ebp_1848, out esi_1493, out edi_1849)
	Mem1514[esp_1502 - 4<i32>:word32] = esi_1493 + 24<i32>
	esp_1453 = esp_1502 - 4<i32>
l0041D73D:
	word32 esp_1539 = <invalid>
	word32 ecx_1850
	word32 esi_1851
	word32 edi_1852
	Mem1548[esp_1539:word32] = fn0041C910(ebx_1430, es, ds, Mem1523[esp_1453:word32], Mem1523[esp_1453 + 36<i32>:word32], out ecx_1850, out ebx_1043, out ebp_1042, out esi_1851, out edi_1852)
	esp_1082 = esp_1539 + 0xC<32>
	word32 ecx_1853
	eax_1083 = fn0041C680(Mem1548[esp_1539:word32], Mem1548[esp_1539 + 4<i32>:word32], Mem1548[esp_1539 + 8<i32>:word32], out ecx_1853) + 0x182<32>
l0041D6C1:
	Mem1571[esp_110:word32] = Mem119[esi_126:word32] + 48<i32>
	word32 esp_1587 = <invalid>
	word32 ebx_1574
	word32 esi_1578
	word32 ecx_1833
	word32 ebp_1834
	word32 edi_1835
	Mem1596[esp_1587:word32] = fn0041C910(ebx_122, es, ds, Mem1571[esp_110:word32], Mem1571[esp_110 + 36<i32>:word32], out ecx_1833, out ebx_1574, out ebp_1834, out esi_1578, out edi_1835)
	Mem1598[esp_1587 - 4<i32>:word32] = esi_1578
	word32 esp_1614 = <invalid>
	word32 edi_1603
	word32 ecx_1836
	word32 ebp_1837
	word32 esi_1838
	Mem1623[esp_1614:word32] = fn0041C910(ebx_1574, es, ds, Mem1598[esp_1587 - 4<i32>:word32], Mem1598[esp_1587 + 32<i32>:word32], out ecx_1836, out ebx_1601, out ebp_1837, out esi_1838, out edi_1603)
	esp_1622 = esp_1614
	eax_1624 = edi_1603 + 24<i32>
l0041D648:
	Mem1628[esp_42:word32] = Mem51[esi_63:word32] + 72<i32>
	word32 esp_1644 = <invalid>
	word32 ebx_1631
	word32 esi_1635
	word32 ecx_1818
	word32 ebp_1819
	word32 edi_1820
	Mem1653[esp_1644:word32] = fn0041C910(ebx_59, es, ds, Mem1628[esp_42:word32], Mem1628[esp_42 + 36<i32>:word32], out ecx_1818, out ebx_1631, out ebp_1819, out esi_1635, out edi_1820)
	Mem1656[esp_1644 - 4<i32>:word32] = esi_1635 + 48<i32>
	word32 esp_1672 = <invalid>
	word32 esi_1663
	word32 ecx_1821
	word32 ebp_1822
	word32 edi_1823
	Mem1681[esp_1672:word32] = fn0041C910(ebx_1631, es, ds, Mem1656[esp_1644 - 4<i32>:word32], Mem1656[esp_1644 + 32<i32>:word32], out ecx_1821, out ebx_1601, out ebp_1822, out esi_1663, out edi_1823)
	esp_1622 = esp_1672
	eax_1624 = esi_1663 + 24<i32>
l0041D661:
	word32 esp_1684 = esp_1622 - 4<i32>
	Mem1686[esp_1684:word32] = eax_1624
	word32 esp_1709 = <invalid>
	word32 ecx_1824
	word32 esi_1825
	word32 edi_1826
	Mem1718[esp_1709:word32] = fn0041C910(ebx_1601, es, ds, Mem1686[esp_1684:word32], Mem1686[esp_1684 + 36<i32>:word32], out ecx_1824, out ebx_1043, out ebp_1042, out esi_1825, out edi_1826)
	esp_1082 = esp_1709 + 0xC<32>
	word32 ecx_1827
	eax_1083 = fn0041C680(Mem1718[esp_1709:word32], Mem1718[esp_1709 + 4<i32>:word32], Mem1718[esp_1709 + 8<i32>:word32], out ecx_1827) + 0x382<32>
l0041DAD9:
	Mem1742[ebx_1043 + 96<i32>:word32] = Mem1739[ebx_1043 + 96<i32>:word32] + eax_1083
l0041DADC:
	Mem1750[fs:0x00000000<p32>:word32] = Mem1746[ebp_1042 - 12<i32>:word32]
	word32 ecx_1753 = Mem1750[esp_1082:word32]
	word32 esi_1757 = Mem1750[esp_1082 + 8<i32>:word32]
	ebpOut = Mem1750[ebp_1042:word32]
	esiOut = esi_1757
	return ecx_1753
fn0041D5FE_exit:


word32 fn0041DAF0(word32 ecx, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: cs ds es fs gs ss
fn0041DAF0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc5C
l0041DAF0:
	word32 edx_3252
	word32 esp_1171
	word32 ebp_1150
	word32 edi_1153
	word128 xmm0_1017
	word32 esp_1544
	word32 ebx_1526
	word32 ecx_1508
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	Mem42[&tLoc5C + 16<i32>:word32] = 0<32>
	Mem43[&tLoc5C + 20<i32>:word32] = 0xF<32>
	Mem46[&tLoc5C:byte] = 0<8>
	word32 ebp_48
	word32 ebx_49
	word32 edi_51
	word32 esi_53
	word32 ecx_3411
	word32 edx_3412
	fn00402A70(&tLoc5C, ecx, 0x4327AC<32>, 4<32>, Mem46[&tLoc5C + 12<i32>:word32], out ecx_3411, out edx_3412, out ebx_49, out ebp_48, out esi_53, out edi_51)
	Mem63[ebp_48 - 4<i32>:word32] = 0<32>
	word32 esp_55 = <invalid>
	Mem67[esp_55 - 0x14<32>:word32] = Mem63[esi_53:word32]
	word32 ebp_70
	word32 edx_3413
	fn004028D0(esp_55 - 0x10<32>, edi_51, Mem67[esp_55 - 0x14<32>:word32], out edx_3413, out ebp_70)
	Mem80[ebp_70 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_71 = <invalid>
	word32 esp_2741 = esp_71 + 4<32>
	word32 edi_90
	word32 ecx_3414
	word32 edx_3415
	word32 ebx_3416
	word32 ebp_150
	word32 esi_155
	branch SLICE(fn0041C1F0(edi_51, ebx_49, ebp_70, es, ds, Mem80[esp_71 + 0x2C<32>:word32], out ecx_3414, out edx_3415, out ebx_3416, out ebp_150, out esi_155, out edi_90), byte, 0) == 0<8> l0041DE96
l0041DE96:
	Mem107[ebp_150 - 20<i32>:word32] = esp_71 - 0x14<32>
	Mem109[esp_71 - 0x18<32>:word32] = 5<32>
	Mem110[esp_71 - 4<32>:word32] = 0<32>
	Mem111[esp_71:word32] = 0xF<32>
	Mem113[esp_71 - 0x1C<32>:word32] = 0x4327B4<32>
	Mem114[esp_71 - 0x14<32>:byte] = 0<8>
	word32 ebp_116
	word32 ebx_117
	word32 edi_119
	word32 esi_121
	word32 ecx_3417
	word32 edx_3418
	fn00402A70(esp_71 - 0x14<32>, edi_90, Mem114[esp_71 - 0x1C<32>:word32], Mem114[esp_71 - 0x18<32>:word32], Mem114[esp_71 - 8<32>:word32], out ecx_3417, out edx_3418, out ebx_117, out ebp_116, out esi_121, out edi_119)
	Mem131[ebp_116 - 4<i32>:word32] = 1<32>
	word32 esp_123 = <invalid>
	Mem135[esp_123 - 0x14<32>:word32] = Mem131[esi_121:word32]
	word32 ebp_138
	word32 edx_3419
	fn004028D0(esp_123 - 0x10<32>, edi_119, Mem135[esp_123 - 0x14<32>:word32], out edx_3419, out ebp_138)
	Mem148[ebp_138 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_139 = <invalid>
	word32 edi_153
	word32 ecx_3420
	word32 edx_3421
	word32 ebx_3422
	branch SLICE(fn0041C1F0(edi_119, ebx_117, ebp_138, es, ds, Mem148[esp_139 + 0x2C<32>:word32], out ecx_3420, out edx_3421, out ebx_3422, out ebp_150, out esi_155, out edi_153), byte, 0) == 0<8> l0041E0CD
l0041E0CD:
	Mem170[ebp_150 - 20<i32>:word32] = esp_139 - 0x14<32>
	Mem172[esp_139 - 0x18<32>:word32] = 4<32>
	Mem173[esp_139 - 4<32>:word32] = 0<32>
	Mem174[esp_139:word32] = 0xF<32>
	Mem176[esp_139 - 0x1C<32>:word32] = 0x4327AC<32>
	Mem177[esp_139 - 0x14<32>:byte] = 0<8>
	word32 ebp_179
	word32 ebx_180
	word32 edi_182
	word32 esi_184
	word32 ecx_3424
	word32 edx_3425
	fn00402A70(esp_139 - 0x14<32>, edi_153, Mem177[esp_139 - 0x1C<32>:word32], Mem177[esp_139 - 0x18<32>:word32], Mem177[esp_139 - 8<32>:word32], out ecx_3424, out edx_3425, out ebx_180, out ebp_179, out esi_184, out edi_182)
	Mem194[ebp_179 - 4<i32>:word32] = 2<32>
	word32 esp_186 = <invalid>
	Mem198[esp_186 - 0x14<32>:word32] = Mem194[esi_184:word32]
	word32 ebp_201
	word32 edx_3426
	fn004028D0(esp_186 - 0x10<32>, edi_182, Mem198[esp_186 - 0x14<32>:word32], out edx_3426, out ebp_201)
	Mem211[ebp_201 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_202 = <invalid>
	word32 edi_216
	word32 ebx_3429
	word32 ecx_3427
	word32 edx_3428
	branch SLICE(fn0041C1F0(edi_182, ebx_180, ebp_201, es, ds, Mem211[esp_202 + 0x2C<32>:word32], out ecx_3427, out edx_3428, out ebx_3429, out ebp_150, out esi_155, out edi_216), byte, 0) == 0<8> l0041E440
l0041E440:
	Mem233[ebp_150 - 20<i32>:word32] = esp_202 - 0x14<32>
	Mem235[esp_202 - 0x18<32>:word32] = 6<32>
	Mem236[esp_202 - 4<32>:word32] = 0<32>
	Mem237[esp_202:word32] = 0xF<32>
	Mem239[esp_202 - 0x1C<32>:word32] = 0x4327BC<32>
	Mem240[esp_202 - 0x14<32>:byte] = 0<8>
	word32 ebp_242
	word32 ebx_243
	word32 edi_245
	word32 esi_247
	word32 edx_3441
	word32 ecx_3440
	fn00402A70(esp_202 - 0x14<32>, edi_216, Mem240[esp_202 - 0x1C<32>:word32], Mem240[esp_202 - 0x18<32>:word32], Mem240[esp_202 - 8<32>:word32], out ecx_3440, out edx_3441, out ebx_243, out ebp_242, out esi_247, out edi_245)
	Mem257[ebp_242 - 4<i32>:word32] = 3<32>
	word32 esp_249 = <invalid>
	Mem261[esp_249 - 0x14<32>:word32] = Mem257[esi_247:word32]
	word32 ebp_264
	word32 edx_3442
	fn004028D0(esp_249 - 0x10<32>, edi_245, Mem261[esp_249 - 0x14<32>:word32], out edx_3442, out ebp_264)
	Mem274[ebp_264 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_265 = <invalid>
	word32 edi_279
	word32 ebx_3445
	word32 ecx_3443
	word32 edx_3444
	branch SLICE(fn0041C1F0(edi_245, ebx_243, ebp_264, es, ds, Mem274[esp_265 + 0x2C<32>:word32], out ecx_3443, out edx_3444, out ebx_3445, out ebp_150, out esi_155, out edi_279), byte, 0) == 0<8> l0041E677
l0041E677:
	Mem296[ebp_150 - 20<i32>:word32] = esp_265 - 0x14<32>
	Mem298[esp_265 - 0x18<32>:word32] = 5<32>
	Mem299[esp_265 - 4<32>:word32] = 0<32>
	Mem300[esp_265:word32] = 0xF<32>
	Mem302[esp_265 - 0x1C<32>:word32] = 0x4327C4<32>
	Mem303[esp_265 - 0x14<32>:byte] = 0<8>
	word32 ebp_305
	word32 ebx_306
	word32 edi_308
	word32 esi_310
	word32 edx_3470
	word32 ecx_3469
	fn00402A70(esp_265 - 0x14<32>, edi_279, Mem303[esp_265 - 0x1C<32>:word32], Mem303[esp_265 - 0x18<32>:word32], Mem303[esp_265 - 8<32>:word32], out ecx_3469, out edx_3470, out ebx_306, out ebp_305, out esi_310, out edi_308)
	Mem320[ebp_305 - 4<i32>:word32] = 4<32>
	word32 esp_312 = <invalid>
	Mem324[esp_312 - 0x14<32>:word32] = Mem320[esi_310:word32]
	word32 ebp_327
	word32 edx_3471
	fn004028D0(esp_312 - 0x10<32>, edi_308, Mem324[esp_312 - 0x14<32>:word32], out edx_3471, out ebp_327)
	Mem337[ebp_327 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_328 = <invalid>
	word32 ebp_339
	word32 edi_342
	word32 esi_344
	word32 ebx_3474
	word32 edx_3473
	word32 ecx_3472
	branch SLICE(fn0041C1F0(edi_308, ebx_306, ebp_327, es, ds, Mem337[esp_328 + 0x2C<32>:word32], out ecx_3472, out edx_3473, out ebx_3474, out ebp_339, out esi_344, out edi_342), byte, 0) == 0<8> l0041E879
l0041E879:
	Mem359[ebp_339 - 20<i32>:word32] = esp_328 - 0x14<32>
	Mem361[esp_328 - 0x18<32>:word32] = 4<32>
	Mem362[esp_328 - 4<32>:word32] = 0<32>
	Mem363[esp_328:word32] = 0xF<32>
	Mem365[esp_328 - 0x1C<32>:word32] = 0x4327CC<32>
	Mem366[esp_328 - 0x14<32>:byte] = 0<8>
	word32 ebp_368
	word32 ebx_369
	word32 edi_371
	word32 esi_373
	word32 edx_3485
	word32 ecx_3484
	fn00402A70(esp_328 - 0x14<32>, edi_342, Mem366[esp_328 - 0x1C<32>:word32], Mem366[esp_328 - 0x18<32>:word32], Mem366[esp_328 - 8<32>:word32], out ecx_3484, out edx_3485, out ebx_369, out ebp_368, out esi_373, out edi_371)
	Mem383[ebp_368 - 4<i32>:word32] = 5<32>
	word32 esp_375 = <invalid>
	Mem387[esp_375 - 0x14<32>:word32] = Mem383[esi_373:word32]
	word32 ebp_390
	word32 edx_3486
	fn004028D0(esp_375 - 0x10<32>, edi_371, Mem387[esp_375 - 0x14<32>:word32], out edx_3486, out ebp_390)
	Mem400[ebp_390 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_391 = <invalid>
	word32 ebp_402
	word32 ebx_403
	word32 edi_405
	word32 esi_407
	word32 edx_3488
	word32 ecx_3487
	branch SLICE(fn0041C1F0(edi_371, ebx_369, ebp_390, es, ds, Mem400[esp_391 + 0x2C<32>:word32], out ecx_3487, out edx_3488, out ebx_403, out ebp_402, out esi_407, out edi_405), byte, 0) == 0<8> l0041E9B9
l0041E9B9:
	Mem422[ebp_402 - 20<i32>:word32] = esp_391 - 0x14<32>
	Mem424[esp_391 - 0x18<32>:word32] = 4<32>
	Mem425[esp_391 - 4<32>:word32] = 0<32>
	Mem426[esp_391:word32] = 0xF<32>
	Mem428[esp_391 - 0x1C<32>:word32] = 0x4327D4<32>
	Mem429[esp_391 - 0x14<32>:byte] = 0<8>
	word32 ebp_431
	word32 ebx_432
	word32 edi_434
	word32 esi_436
	word32 ecx_3513
	word32 edx_3514
	fn00402A70(esp_391 - 0x14<32>, edi_405, Mem429[esp_391 - 0x1C<32>:word32], Mem429[esp_391 - 0x18<32>:word32], Mem429[esp_391 - 8<32>:word32], out ecx_3513, out edx_3514, out ebx_432, out ebp_431, out esi_436, out edi_434)
	Mem446[ebp_431 - 4<i32>:word32] = 6<32>
	word32 esp_438 = <invalid>
	Mem450[esp_438 - 0x14<32>:word32] = Mem446[esi_436:word32]
	word32 ebp_453
	word32 edx_3515
	fn004028D0(esp_438 - 0x10<32>, edi_434, Mem450[esp_438 - 0x14<32>:word32], out edx_3515, out ebp_453)
	Mem463[ebp_453 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_454 = <invalid>
	word32 ebp_465
	word32 edi_468
	word32 esi_470
	word32 edx_3517
	word32 ebx_3518
	word32 ecx_3516
	branch SLICE(fn0041C1F0(edi_434, ebx_432, ebp_453, es, ds, Mem463[esp_454 + 0x2C<32>:word32], out ecx_3516, out edx_3517, out ebx_3518, out ebp_465, out esi_470, out edi_468), byte, 0) == 0<8> l0041EBB5
l0041EBB5:
	Mem485[ebp_465 - 20<i32>:word32] = esp_454 - 0x14<32>
	Mem487[esp_454 - 0x18<32>:word32] = 3<32>
	Mem488[esp_454 - 4<32>:word32] = 0<32>
	Mem489[esp_454:word32] = 0xF<32>
	Mem491[esp_454 - 0x1C<32>:word32] = 0x4326BC<32>
	Mem492[esp_454 - 0x14<32>:byte] = 0<8>
	word32 ebp_494
	word32 ebx_495
	word32 edi_497
	word32 esi_499
	word32 edx_3529
	word32 ecx_3528
	fn00402A70(esp_454 - 0x14<32>, edi_468, Mem492[esp_454 - 0x1C<32>:word32], Mem492[esp_454 - 0x18<32>:word32], Mem492[esp_454 - 8<32>:word32], out ecx_3528, out edx_3529, out ebx_495, out ebp_494, out esi_499, out edi_497)
	Mem509[ebp_494 - 4<i32>:word32] = 7<32>
	word32 esp_501 = <invalid>
	Mem513[esp_501 - 0x14<32>:word32] = Mem509[esi_499:word32]
	word32 ebp_516
	word32 edx_3530
	fn004028D0(esp_501 - 0x10<32>, edi_497, Mem513[esp_501 - 0x14<32>:word32], out edx_3530, out ebp_516)
	Mem526[ebp_516 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_517 = <invalid>
	esp_1171 = esp_517 + 4<32>
	word32 ebx_529
	word32 esi_533
	word32 edi_3532
	word32 ecx_3531
	branch SLICE(fn0041C1F0(edi_497, ebx_495, ebp_516, es, ds, Mem526[esp_517 + 0x2C<32>:word32], out ecx_3531, out edx_3252, out ebx_529, out ebp_1150, out esi_533, out edi_3532), byte, 0) == 0<8> l0041ECF5
l0041EC03:
	Mem548[esp_517:word32] = Mem526[esi_533:word32] + 24<i32>
	word32 ebp_550
	word32 ebx_551
	word32 esi_555
	word32 ecx_3553
	word32 edi_3554
	word32 eax_549 = fn0041C910(ebx_529, es, ds, Mem548[esp_517:word32], Mem548[esp_517 + 36<i32>:word32], out ecx_3553, out ebx_551, out ebp_550, out esi_555, out edi_3554)
	Mem581[ebp_550 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_549, word32, word128)), real64, 0) + Mem548[(eax_549 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem590[ebp_550 - 24<i32>:real64] = Mem581[ebp_550 - 24<i32>:real64] * SLICE(fn00427210(), real64, 0)
	word128 xmm0_592 = fn00427210()
	word32 ecx_3555
	word32 edx_3556
	word32 eax_597 = fn0042D911(SEQ(SLICE(xmm0_592, word64, 64), SLICE(xmm0_592, real64, 0) * Mem590[0x00432EE0<p32>:real64]), out ecx_3555, out edx_3556)
	word32 esp_564 = <invalid>
	real64 v338_618 = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_597, word32, word128)), real64, 0) + Mem590[(eax_597 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem623[esp_564:word32] = esi_555 + 48<i32>
	Mem627[ebp_550 - 24<i32>:real64] = Mem590[ebp_550 - 24<i32>:real64] + v338_618
	word32 ebp_629
	word32 ebx_630
	word32 esi_634
	word32 ecx_3557
	word32 edi_3558
	word32 eax_628 = fn0041C910(ebx_551, es, ds, Mem627[esp_564:word32], Mem627[esp_564 + 36<i32>:word32], out ecx_3557, out ebx_630, out ebp_629, out esi_634, out edi_3558)
	Mem660[ebp_629 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_628, word32, word128)), real64, 0) + Mem627[(eax_628 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_643 = <invalid>
	real64 v345_666 = Mem660[ebp_629 - 32<i32>:real64] * SLICE(fn00427210(), real64, 0)
	Mem670[esp_643:word32] = esi_634 + 72<i32>
	Mem674[ebp_629 - 32<i32>:real64] = v345_666 + Mem670[ebp_629 - 24<i32>:real64]
	word32 ebx_3560
	word32 esi_3561
	word32 ecx_3559
	word32 eax_675 = fn0041C910(ebx_630, es, ds, Mem674[esp_643:word32], Mem674[esp_643 + 36<i32>:word32], out ecx_3559, out ebx_3560, out ebp_1150, out esi_3561, out edi_1153)
	Mem707[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_675, word32, word128)), real64, 0) + Mem674[(eax_675 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_690 = <invalid>
	word128 xmm0_709 = fn00427210()
	esp_1171 = esp_690 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_709, word64, 64), SLICE(xmm0_709, real64, 0) * Mem707[ebp_1150 - 24<i32>:real64] + Mem707[ebp_1150 - 32<i32>:real64])
l0041EA07:
	word32 ebx_718 = Mem463[esi_470:word32]
	branch Mem463[esi_470 + 4<i32>:word32] - ebx_718 >=u 0x60<32> l0041EAC8
l0041EAC8:
	Mem725[esp_454:word32] = ebx_718 + 48<i32>
	word32 ebp_727
	word32 ebx_728
	word32 esi_3534
	word32 edi_3535
	word32 ecx_3533
	word32 eax_726 = fn0041C910(ebx_718, es, ds, Mem725[esp_454:word32], Mem725[esp_454 + 36<i32>:word32], out ecx_3533, out ebx_728, out ebp_727, out esi_3534, out edi_3535)
	Mem758[ebp_727 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_726, word32, word128)), real64, 0) + Mem725[(eax_726 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem767[ebp_727 - 24<i32>:real64] = Mem758[ebp_727 - 24<i32>:real64] * SLICE(fn00427210(), real64, 0)
	word128 xmm0_769 = fn00427210()
	word32 ecx_3536
	word32 edx_3537
	word32 eax_774 = fn0042D911(SEQ(SLICE(xmm0_769, word64, 64), SLICE(xmm0_769, real64, 0) * Mem767[0x00432EE0<p32>:real64]), out ecx_3536, out edx_3537)
	word32 esp_741 = <invalid>
	real64 v311_795 = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_774, word32, word128)), real64, 0) + Mem767[(eax_774 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem800[esp_741:word32] = ebx_728 + 72<i32>
	Mem804[ebp_727 - 24<i32>:real64] = Mem767[ebp_727 - 24<i32>:real64] + v311_795
	word32 ebp_806
	word32 ebx_807
	word32 edi_3540
	word32 ecx_3538
	word32 esi_3539
	word32 eax_805 = fn0041C910(ebx_728, es, ds, Mem804[esp_741:word32], Mem804[esp_741 + 36<i32>:word32], out ecx_3538, out ebx_807, out ebp_806, out esi_3539, out edi_3540)
	Mem837[ebp_806 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_805, word32, word128)), real64, 0) + Mem804[(eax_805 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_820 = <invalid>
	real64 v318_843 = Mem837[ebp_806 - 32<i32>:real64] * SLICE(fn00427210(), real64, 0)
	Mem847[esp_820:word32] = ebx_807 + 24<i32>
	Mem851[ebp_806 - 32<i32>:real64] = v318_843 + Mem847[ebp_806 - 24<i32>:real64]
	word32 esi_3543
	word32 ecx_3541
	word32 ebx_3542
	word32 eax_852 = fn0041C910(ebx_807, es, ds, Mem851[esp_820:word32], Mem851[esp_820 + 36<i32>:word32], out ecx_3541, out ebx_3542, out ebp_1150, out esi_3543, out edi_1153)
	Mem884[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_852, word32, word128)), real64, 0) + Mem851[(eax_852 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_867 = <invalid>
	word128 xmm0_886 = fn00427210()
	esp_1171 = esp_867 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_886, word64, 64), SLICE(xmm0_886, real64, 0) * Mem884[ebp_1150 - 24<i32>:real64] + Mem884[ebp_1150 - 32<i32>:real64])
l0041EA1A:
	Mem896[esp_454:word32] = ebx_718 + 24<i32>
	word32 ebp_898
	word32 ebx_899
	word32 edi_3546
	word32 esi_3545
	word32 ecx_3544
	word32 eax_897 = fn0041C910(ebx_718, es, ds, Mem896[esp_454:word32], Mem896[esp_454 + 36<i32>:word32], out ecx_3544, out ebx_899, out ebp_898, out esi_3545, out edi_3546)
	Mem929[ebp_898 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_897, word32, word128)), real64, 0) + Mem896[(eax_897 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem938[ebp_898 - 24<i32>:real64] = Mem929[ebp_898 - 24<i32>:real64] * SLICE(fn00427210(), real64, 0)
	word128 xmm0_940 = fn00427210()
	word32 edx_3548
	word32 ecx_3547
	word32 eax_945 = fn0042D911(SEQ(SLICE(xmm0_940, word64, 64), SLICE(xmm0_940, real64, 0) * Mem938[0x00432EE0<p32>:real64]), out ecx_3547, out edx_3548)
	word32 esp_912 = <invalid>
	real64 v290_966 = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_945, word32, word128)), real64, 0) + Mem938[(eax_945 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem971[esp_912:word32] = ebx_899 + 48<i32>
	Mem975[ebp_898 - 24<i32>:real64] = Mem938[ebp_898 - 24<i32>:real64] + v290_966
	word32 esi_3551
	word32 ecx_3549
	word32 ebx_3550
	word32 eax_976 = fn0041C910(ebx_899, es, ds, Mem975[esp_912:word32], Mem975[esp_912 + 36<i32>:word32], out ecx_3549, out ebx_3550, out ebp_1150, out esi_3551, out edi_1153)
	Mem1008[ebp_1150 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_976, word32, word128)), real64, 0) + Mem975[(eax_976 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_991 = <invalid>
	word128 xmm0_1010 = fn00427210()
	esp_1171 = esp_991 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_1010, word64, 64), SLICE(xmm0_1010, real64, 0) * Mem1008[ebp_1150 - 32<i32>:real64] + Mem1008[ebp_1150 - 24<i32>:real64])
l0041E8C7:
	Mem1021[esp_391:word32] = Mem400[esi_407:word32] + 24<i32>
	word32 ebp_1023
	word32 ebx_1024
	word32 esi_1028
	word32 ecx_3519
	word32 edi_3520
	word32 eax_1022 = fn0041C910(ebx_403, es, ds, Mem1021[esp_391:word32], Mem1021[esp_391 + 36<i32>:word32], out ecx_3519, out ebx_1024, out ebp_1023, out esi_1028, out edi_3520)
	Mem1054[ebp_1023 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1022, word32, word128)), real64, 0) + Mem1021[(eax_1022 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem1063[ebp_1023 - 24<i32>:real64] = Mem1054[ebp_1023 - 24<i32>:real64] * SLICE(fn00427210(), real64, 0)
	word128 xmm0_1065 = fn00427210()
	word32 ecx_3521
	word32 edx_3522
	word32 eax_1070 = fn0042D911(SEQ(SLICE(xmm0_1065, word64, 64), SLICE(xmm0_1065, real64, 0) * Mem1063[0x00432EE0<p32>:real64]), out ecx_3521, out edx_3522)
	word32 esp_1037 = <invalid>
	real64 v237_1092 = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1070 + 0x40<32>, word32, word128)), real64, 0) + Mem1063[(eax_1070 + 0x40<32> >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem1097[esp_1037:word32] = esi_1028 + 48<i32>
	Mem1101[ebp_1023 - 24<i32>:real64] = Mem1063[ebp_1023 - 24<i32>:real64] + v237_1092
	word32 ebp_1103
	word32 ebx_1104
	word32 esi_1108
	word32 edi_3524
	word32 ecx_3523
	word32 eax_1102 = fn0041C910(ebx_1024, es, ds, Mem1101[esp_1037:word32], Mem1101[esp_1037 + 36<i32>:word32], out ecx_3523, out ebx_1104, out ebp_1103, out esi_1108, out edi_3524)
	Mem1134[ebp_1103 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1102, word32, word128)), real64, 0) + Mem1101[(eax_1102 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_1117 = <invalid>
	real64 v244_1140 = Mem1134[ebp_1103 - 32<i32>:real64] * SLICE(fn00427210(), real64, 0)
	Mem1144[esp_1117:word32] = esi_1108 + 72<i32>
	Mem1148[ebp_1103 - 32<i32>:real64] = v244_1140 + Mem1144[ebp_1103 - 24<i32>:real64]
	word32 esi_3527
	word32 ebx_3526
	word32 ecx_3525
	word32 eax_1149 = fn0041C910(ebx_1104, es, ds, Mem1148[esp_1117:word32], Mem1148[esp_1117 + 36<i32>:word32], out ecx_3525, out ebx_3526, out ebp_1150, out esi_3527, out edi_1153)
	Mem1181[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1149, word32, word128)), real64, 0) + Mem1148[(eax_1149 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_1164 = <invalid>
	word128 xmm0_1183 = fn00427210()
	esp_1171 = esp_1164 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_1183, word64, 64), SLICE(xmm0_1183, real64, 0) * Mem1181[ebp_1150 - 24<i32>:real64] + Mem1181[ebp_1150 - 32<i32>:real64])
l0041E6C5:
	word32 ebx_1192 = Mem337[esi_344:word32]
	branch Mem337[esi_344 + 4<i32>:word32] - ebx_1192 >=u 0x60<32> l0041E789
l0041E789:
	Mem1199[esp_328:word32] = ebx_1192 + 48<i32>
	word32 ebp_1201
	word32 ebx_1202
	word32 edi_3491
	word32 esi_3490
	word32 ecx_3489
	word32 eax_1200 = fn0041C910(ebx_1192, es, ds, Mem1199[esp_328:word32], Mem1199[esp_328 + 36<i32>:word32], out ecx_3489, out ebx_1202, out ebp_1201, out esi_3490, out edi_3491)
	Mem1232[ebp_1201 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1200, word32, word128)), real64, 0) + Mem1199[(eax_1200 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem1241[ebp_1201 - 24<i32>:real64] = Mem1232[ebp_1201 - 24<i32>:real64] * SLICE(fn00427210(), real64, 0)
	word128 xmm0_1243 = fn00427210()
	word32 edx_3493
	word32 ecx_3492
	word32 eax_1248 = fn0042D911(SEQ(SLICE(xmm0_1243, word64, 64), SLICE(xmm0_1243, real64, 0) * Mem1241[0x00432EE0<p32>:real64]), out ecx_3492, out edx_3493)
	word32 esp_1215 = <invalid>
	real64 v263_1270 = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1248 + 0x40<32>, word32, word128)), real64, 0) + Mem1241[(eax_1248 + 0x40<32> >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem1275[esp_1215:word32] = ebx_1202 + 72<i32>
	Mem1279[ebp_1201 - 24<i32>:real64] = Mem1241[ebp_1201 - 24<i32>:real64] + v263_1270
	word32 ebp_1281
	word32 ebx_1282
	word32 edi_3496
	word32 ecx_3494
	word32 esi_3495
	word32 eax_1280 = fn0041C910(ebx_1202, es, ds, Mem1279[esp_1215:word32], Mem1279[esp_1215 + 36<i32>:word32], out ecx_3494, out ebx_1282, out ebp_1281, out esi_3495, out edi_3496)
	Mem1312[ebp_1281 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1280, word32, word128)), real64, 0) + Mem1279[(eax_1280 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_1295 = <invalid>
	real64 v270_1318 = Mem1312[ebp_1281 - 32<i32>:real64] * SLICE(fn00427210(), real64, 0)
	Mem1322[esp_1295:word32] = ebx_1282 + 24<i32>
	Mem1326[ebp_1281 - 32<i32>:real64] = v270_1318 + Mem1322[ebp_1281 - 24<i32>:real64]
	word32 ebx_3498
	word32 esi_3499
	word32 ecx_3497
	word32 eax_1327 = fn0041C910(ebx_1282, es, ds, Mem1326[esp_1295:word32], Mem1326[esp_1295 + 36<i32>:word32], out ecx_3497, out ebx_3498, out ebp_1150, out esi_3499, out edi_1153)
	Mem1359[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1327, word32, word128)), real64, 0) + Mem1326[(eax_1327 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_1342 = <invalid>
	word128 xmm0_1361 = fn00427210()
	esp_1171 = esp_1342 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_1361, word64, 64), SLICE(xmm0_1361, real64, 0) * Mem1359[ebp_1150 - 24<i32>:real64] + Mem1359[ebp_1150 - 32<i32>:real64])
l0041E6D8:
	Mem1371[esp_328:word32] = ebx_1192 + 24<i32>
	word32 ebp_1373
	word32 ebx_1374
	word32 edi_3502
	word32 ecx_3500
	word32 esi_3501
	word32 eax_1372 = fn0041C910(ebx_1192, es, ds, Mem1371[esp_328:word32], Mem1371[esp_328 + 36<i32>:word32], out ecx_3500, out ebx_1374, out ebp_1373, out esi_3501, out edi_3502)
	Mem1404[ebp_1373 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1372, word32, word128)), real64, 0) + Mem1371[(eax_1372 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem1413[ebp_1373 - 24<i32>:real64] = Mem1404[ebp_1373 - 24<i32>:real64] * SLICE(fn00427210(), real64, 0)
	word128 xmm0_1415 = fn00427210()
	word32 edx_3504
	word32 ecx_3503
	word32 eax_1420 = fn0042D911(SEQ(SLICE(xmm0_1415, word64, 64), SLICE(xmm0_1415, real64, 0) * Mem1413[0x00432EE0<p32>:real64]), out ecx_3503, out edx_3504)
	word32 esp_1387 = <invalid>
	real64 v196_1442 = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1420 + 0x40<32>, word32, word128)), real64, 0) + Mem1413[(eax_1420 + 0x40<32> >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	Mem1447[esp_1387:word32] = ebx_1374 + 48<i32>
	Mem1451[ebp_1373 - 24<i32>:real64] = Mem1413[ebp_1373 - 24<i32>:real64] + v196_1442
	word32 esi_3507
	word32 ecx_3505
	word32 ebx_3506
	word32 eax_1452 = fn0041C910(ebx_1374, es, ds, Mem1451[esp_1387:word32], Mem1451[esp_1387 + 36<i32>:word32], out ecx_3505, out ebx_3506, out ebp_1150, out esi_3507, out edi_1153)
	Mem1484[ebp_1150 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1452, word32, word128)), real64, 0) + Mem1451[(eax_1452 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_1467 = <invalid>
	word128 xmm0_1486 = fn00427210()
	esp_1171 = esp_1467 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_1486, word64, 64), SLICE(xmm0_1486, real64, 0) * Mem1484[ebp_1150 - 32<i32>:real64] + Mem1484[ebp_1150 - 24<i32>:real64])
l0041E48E:
	word32 ebx_1496 = Mem274[esi_155:word32]
	branch Mem274[esi_155 + 4<i32>:word32] - ebx_1496 >=u 0x60<32> l0041E568
l0041E568:
	word128 xmm0_1502 = fn00427210()
	word32 edx_3475
	Mem1522[ebp_150 - 44<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_1502, word64, 64), SLICE(xmm0_1502, real64, 0) * Mem274[0x00432E88<p32>:real64]), out ecx_1508, out edx_3475)
	Mem1524[ebp_150 - 28<i32>:word32] = ebx_1496 + 48<i32>
	word32 eax_1525 = _errno()
	Mem1527[ebp_150 - 20<i32>:word32] = eax_1525
	ebx_1526 = ebx_1496 + 0x48<32>
	branch Mem1527[ebx_1496 + 0x5C<32>:word32] <u 0x10<32> l0041E597
l0041E595:
	ebx_1526 = Mem1527[ebx_1496 + 0x48<32>:word32]
l0041E597:
	Mem1532[eax_1525:word32] = 0<32>
	Mem1537[esp_265:word32] = 0<32>
	Mem1539[esp_265 - 4<i32>:word32] = ebp_150 - 36<i32>
	Mem1542[esp_265 - 8<i32>:word32] = ebx_1526
	Mem1545[ebp_150 - 40<i32>:word32] = strtol(Mem1542[esp_265 - 8<i32>:(ptr32 charconst )], Mem1542[esp_265 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem1542[esp_265:int32])
	esp_1544 = esp_265 + 4<32>
	branch ebx_1526 != Mem1545[ebp_150 - 36<i32>:word32] l0041E5C0
l0041E5B5:
	Mem1549[esp_265:word32] = 0x431878<32>
	_Xinvalid_argument(Mem1549[esp_265:(ptr32 charconst )])
	esp_1544 = esp_265
l0041E5C0:
	branch Mem1551[Mem1551[ebp_150 - 20<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041E5CC:
	word32 esp_1560 = esp_1544 - 4<i32>
	Mem1561[esp_1560:word32] = Mem1551[ebp_150 - 28<i32>:word32]
	word32 ebp_1578
	word32 ebx_1579
	word32 esi_1583
	word32 edi_3509
	word32 ecx_3508
	word32 eax_1577 = fn0041C910(ebx_1526, es, ds, Mem1561[esp_1560:word32], Mem1561[esp_1560 + 36<i32>:word32], out ecx_3508, out ebx_1579, out ebp_1578, out esi_1583, out edi_3509)
	Mem1609[ebp_1578 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1577, word32, word128)), real64, 0) + Mem1561[(eax_1577 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_1611 = fn00427210()
	word32 esp_1592 = <invalid>
	word32 eax_1613 = Mem1609[ebp_1578 - 44<i32>:word32]
	real64 v211_1615 = Mem1609[ebp_1578 - 24<i32>:real64] * SLICE(xmm0_1611, real64, 0)
	Mem1619[esp_1592:word32] = esi_1583
	Mem1640[ebp_1578 - 24<i32>:real64] = v211_1615 + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1613, word32, word128)), real64, 0) + Mem1619[(eax_1613 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(Mem1619[ebp_1578 + 0x28<32>:word16], word16, word128)), real64, 0)
	word32 esi_3512
	word32 ebx_3511
	word32 ecx_3510
	word32 eax_1641 = fn0041C910(ebx_1579, es, ds, Mem1640[esp_1592:word32], Mem1640[esp_1592 + 36<i32>:word32], out ecx_3510, out ebx_3511, out ebp_1150, out esi_3512, out edi_1153)
	Mem1673[ebp_1150 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1641, word32, word128)), real64, 0) + Mem1640[(eax_1641 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_1656 = <invalid>
	esp_1171 = esp_1656 + 4<32>
	xmm0_1017 = SEQ(0<64>, Mem1673[ebp_1150 - 24<i32>:real64] + Mem1673[ebp_1150 - 32<i32>:real64] * SLICE(fn00427210(), real64, 0))
l0041E4A6:
	word128 xmm0_1686 = fn00427210()
	word32 edx_3476
	Mem1706[ebp_150 - 44<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_1686, word64, 64), SLICE(xmm0_1686, real64, 0) * Mem274[0x00432E88<p32>:real64]), out ecx_1508, out edx_3476)
	Mem1708[ebp_150 - 36<i32>:word32] = ebx_1496 + 24<i32>
	word32 eax_1709 = _errno()
	Mem1712[ebp_150 - 28<i32>:word32] = eax_1709
	esi_155 = ebx_1496 + 48<i32>
	branch Mem1708[ebx_1496 + 68<i32>:word32] <u 0x10<32> l0041E4D5
l0041E4D3:
	esi_155 = Mem1712[ebx_1496 + 48<i32>:word32]
l0041E4D5:
	Mem1716[eax_1709:word32] = 0<32>
	Mem1721[esp_265:word32] = 0<32>
	Mem1723[esp_265 - 4<i32>:word32] = ebp_150 - 20<i32>
	Mem1726[esp_265 - 8<i32>:word32] = esi_155
	word32 eax_1727 = strtol(Mem1726[esp_265 - 8<i32>:(ptr32 charconst )], Mem1726[esp_265 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem1726[esp_265:int32])
	esp_1544 = esp_265 + 4<32>
	ebx_1526 = eax_1727
	branch esi_155 != Mem1726[ebp_150 - 20<i32>:word32] l0041E4FD
l0041E4F2:
	Mem1733[esp_265:word32] = 0x431878<32>
	_Xinvalid_argument(Mem1733[esp_265:(ptr32 charconst )])
	esp_1544 = esp_265
l0041E4FD:
	branch Mem1735[Mem1735[ebp_150 - 28<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041E509:
	word32 esp_1741 = esp_1544 - 4<i32>
	Mem1742[esp_1741:word32] = Mem1735[ebp_150 - 36<i32>:word32]
	word32 ebx_1758
	word32 esi_3483
	word32 ecx_3482
	word32 eax_1756 = fn0041C910(eax_1727, es, ds, Mem1742[esp_1741:word32], Mem1742[esp_1741 + 36<i32>:word32], out ecx_3482, out ebx_1758, out ebp_1150, out esi_3483, out edi_1153)
	Mem1788[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1756, word32, word128)), real64, 0) + Mem1742[(eax_1756 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_1790 = fn00427210()
	word32 esp_1771 = <invalid>
	word32 eax_1792 = Mem1788[ebp_1150 - 44<i32>:word32]
	esp_1171 = esp_1771 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_1790, word64, 64), SLICE(xmm0_1790, real64, 0) * Mem1788[ebp_1150 - 24<i32>:real64] + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1792, word32, word128)), real64, 0) + Mem1788[(eax_1792 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(SLICE(ebx_1758, word16, 0), word16, word128)), real64, 0))
l0041E11B:
	word32 ebx_1817 = Mem211[esi_155:word32]
	word32 ecx_1818 = Mem211[esi_155 + 4<i32>:word32] - ebx_1817
	branch ecx_1818 >=u 0x60<32> l0041E1F5
l0041E1F5:
	branch ecx_1818 >=u 0x78<32> l0041E310
l0041E310:
	word128 xmm0_1826 = fn00427210()
	word32 edx_3467
	Mem1846[ebp_150 - 44<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_1826, word64, 64), SLICE(xmm0_1826, real64, 0) * Mem211[0x00432E88<p32>:real64]), out ecx_1508, out edx_3467)
	Mem1848[ebp_150 - 36<i32>:word32] = ebx_1817 + 72<i32>
	word32 eax_1849 = _errno()
	Mem1851[ebp_150 - 28<i32>:word32] = eax_1849
	ebx_1526 = ebx_1817 + 0x60<32>
	branch Mem1851[ebx_1817 + 0x74<32>:word32] <u 0x10<32> l0041E33F
l0041E33D:
	ebx_1526 = Mem1851[ebx_1817 + 0x60<32>:word32]
l0041E33F:
	Mem1856[eax_1849:word32] = 0<32>
	Mem1861[esp_202:word32] = 0<32>
	Mem1863[esp_202 - 4<i32>:word32] = ebp_150 - 20<i32>
	Mem1866[esp_202 - 8<i32>:word32] = ebx_1526
	Mem1869[ebp_150 - 40<i32>:word32] = strtol(Mem1866[esp_202 - 8<i32>:(ptr32 charconst )], Mem1866[esp_202 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem1866[esp_202:int32])
	esp_1544 = esp_202 + 4<32>
	branch ebx_1526 != Mem1869[ebp_150 - 20<i32>:word32] l0041E368
l0041E35D:
	Mem1873[esp_202:word32] = 0x431878<32>
	_Xinvalid_argument(Mem1873[esp_202:(ptr32 charconst )])
	esp_1544 = esp_202
l0041E368:
	branch Mem1875[Mem1875[ebp_150 - 28<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041E374:
	word32 esp_1884 = esp_1544 - 4<i32>
	Mem1885[esp_1884:word32] = Mem1875[esi_155:word32] + 48<i32>
	word32 edi_3564
	word32 ecx_3562
	word32 ebp_3563
	word32 ebx_1901
	word32 esi_1905
	fn0041C910(ebx_1526, es, ds, Mem1885[esp_1884:word32], Mem1885[esp_1884 + 36<i32>:word32], out ecx_3562, out ebx_1901, out ebp_3563, out esi_1905, out edi_3564)
	word32 esp_1914 = <invalid>
	Mem1924[esp_1914:word32] = esi_1905 + 24<i32>
	word32 edi_3567
	word32 esi_3566
	word32 ecx_3565
	word32 ebp_1926
	word32 ebx_1927
	word32 eax_1925 = fn0041C910(ebx_1901, es, ds, Mem1924[esp_1914:word32], Mem1924[esp_1914 + 36<i32>:word32], out ecx_3565, out ebx_1927, out ebp_1926, out esi_3566, out edi_3567)
	Mem1957[ebp_1926 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1925, word32, word128)), real64, 0) + Mem1924[(eax_1925 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_1959 = fn00427210()
	word32 esp_1940 = <invalid>
	Mem1964[esp_1940:word32] = Mem1957[ebp_1926 - 36<i32>:word32]
	Mem1968[ebp_1926 - 32<i32>:real64] = Mem1957[ebp_1926 - 32<i32>:real64] * SLICE(xmm0_1959, real64, 0)
	word32 esi_3570
	word32 ecx_3568
	word32 ebx_3569
	word32 eax_1969 = fn0041C910(ebx_1927, es, ds, Mem1968[esp_1940:word32], Mem1968[esp_1940 + 36<i32>:word32], out ecx_3568, out ebx_3569, out ebp_1150, out esi_3570, out edi_1153)
	Mem2001[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_1969, word32, word128)), real64, 0) + Mem1968[(eax_1969 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_2003 = fn00427210()
	word32 eax_2005 = Mem2001[ebp_1150 - 44<i32>:word32]
	Mem2034[ebp_1150 - 24<i32>:real64] = Mem2001[ebp_1150 - 24<i32>:real64] * SLICE(xmm0_2003, real64, 0) + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2005, word32, word128)), real64, 0) + Mem2001[(eax_2005 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(Mem2001[ebp_1150 + 0x28<32>:word16], word16, word128)), real64, 0) + Mem2001[ebp_1150 - 32<i32>:real64]
	word32 esp_1984 = <invalid>
	word128 xmm0_2036 = fn00427210()
	esp_1171 = esp_1984 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_2036, word64, 64), SLICE(xmm0_2036, real64, 0) * Mem2034[0x00432E48<p32>:real64] + Mem2034[ebp_1150 - 24<i32>:real64])
l0041E201:
	word128 xmm0_2045 = fn00427210()
	word32 edx_3468
	Mem2065[ebp_150 - 44<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_2045, word64, 64), SLICE(xmm0_2045, real64, 0) * Mem211[0x00432E88<p32>:real64]), out ecx_1508, out edx_3468)
	Mem2067[ebp_150 - 36<i32>:word32] = ebx_1817 + 48<i32>
	word32 eax_2068 = _errno()
	Mem2070[ebp_150 - 28<i32>:word32] = eax_2068
	ebx_1526 = ebx_1817 + 0x48<32>
	branch Mem2070[ebx_1817 + 0x5C<32>:word32] <u 0x10<32> l0041E230
l0041E22E:
	ebx_1526 = Mem2070[ebx_1817 + 0x48<32>:word32]
l0041E230:
	Mem2075[eax_2068:word32] = 0<32>
	Mem2080[esp_202:word32] = 0<32>
	Mem2082[esp_202 - 4<i32>:word32] = ebp_150 - 20<i32>
	Mem2085[esp_202 - 8<i32>:word32] = ebx_1526
	Mem2088[ebp_150 - 40<i32>:word32] = strtol(Mem2085[esp_202 - 8<i32>:(ptr32 charconst )], Mem2085[esp_202 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2085[esp_202:int32])
	esp_1544 = esp_202 + 4<32>
	branch ebx_1526 != Mem2088[ebp_150 - 20<i32>:word32] l0041E259
l0041E24E:
	Mem2092[esp_202:word32] = 0x431878<32>
	_Xinvalid_argument(Mem2092[esp_202:(ptr32 charconst )])
	esp_1544 = esp_202
l0041E259:
	branch Mem2094[Mem2094[ebp_150 - 28<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041E265:
	word32 esp_2103 = esp_1544 - 4<i32>
	Mem2104[esp_2103:word32] = Mem2094[ebp_150 - 36<i32>:word32]
	word32 ebp_2121
	word32 ebx_2122
	word32 esi_2126
	word32 ecx_3477
	word32 edi_3478
	word32 eax_2120 = fn0041C910(ebx_1526, es, ds, Mem2104[esp_2103:word32], Mem2104[esp_2103 + 36<i32>:word32], out ecx_3477, out ebx_2122, out ebp_2121, out esi_2126, out edi_3478)
	Mem2152[ebp_2121 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2120, word32, word128)), real64, 0) + Mem2104[(eax_2120 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_2154 = fn00427210()
	word32 esp_2135 = <invalid>
	word32 eax_2156 = Mem2152[ebp_2121 - 44<i32>:word32]
	real64 v154_2158 = Mem2152[ebp_2121 - 32<i32>:real64] * SLICE(xmm0_2154, real64, 0)
	Mem2162[esp_2135:word32] = esi_2126
	Mem2183[ebp_2121 - 32<i32>:real64] = v154_2158 + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2156, word32, word128)), real64, 0) + Mem2162[(eax_2156 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(Mem2162[ebp_2121 + 0x28<32>:word16], word16, word128)), real64, 0)
	word32 esi_3481
	word32 ecx_3479
	word32 ebx_3480
	word32 eax_2184 = fn0041C910(ebx_2122, es, ds, Mem2183[esp_2135:word32], Mem2183[esp_2135 + 36<i32>:word32], out ecx_3479, out ebx_3480, out ebp_1150, out esi_3481, out edi_1153)
	Mem2216[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2184, word32, word128)), real64, 0) + Mem2183[(eax_2184 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_2199 = <invalid>
	esp_1171 = esp_2199 + 4<32>
	xmm0_1017 = SEQ(0<64>, Mem2216[ebp_1150 - 32<i32>:real64] + Mem2216[ebp_1150 - 24<i32>:real64] * SLICE(fn00427210(), real64, 0))
l0041E133:
	word128 xmm0_2229 = fn00427210()
	word32 edx_3446
	esi_155 = fn0042D911(SEQ(SLICE(xmm0_2229, word64, 64), SLICE(xmm0_2229, real64, 0) * Mem211[0x00432E88<p32>:real64]), out ecx_1508, out edx_3446)
	Mem2251[ebp_150 - 36<i32>:word32] = ebx_1817 + 24<i32>
	word32 eax_2252 = _errno()
	Mem2254[ebp_150 - 28<i32>:word32] = eax_2252
	ebx_1526 = ebx_1817 + 0x30<32>
	branch Mem2254[ebx_1817 + 0x44<32>:word32] <u 0x10<32> l0041E161
l0041E15F:
	ebx_1526 = Mem2254[ebx_1817 + 0x30<32>:word32]
l0041E161:
	Mem2259[eax_2252:word32] = 0<32>
	Mem2264[esp_202:word32] = 0<32>
	Mem2266[esp_202 - 4<i32>:word32] = ebp_150 - 20<i32>
	Mem2269[esp_202 - 8<i32>:word32] = ebx_1526
	Mem2272[ebp_150 - 44<i32>:word32] = strtol(Mem2269[esp_202 - 8<i32>:(ptr32 charconst )], Mem2269[esp_202 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2269[esp_202:int32])
	esp_1544 = esp_202 + 4<32>
	branch ebx_1526 != Mem2272[ebp_150 - 20<i32>:word32] l0041E18A
l0041E17F:
	Mem2276[esp_202:word32] = 0x431878<32>
	_Xinvalid_argument(Mem2276[esp_202:(ptr32 charconst )])
	esp_1544 = esp_202
l0041E18A:
	branch Mem2278[Mem2278[ebp_150 - 28<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041E196:
	word32 esp_2284 = esp_1544 - 4<i32>
	Mem2285[esp_2284:word32] = Mem2278[ebp_150 - 36<i32>:word32]
	word32 esi_2305
	word32 ecx_3456
	word32 ebx_3457
	word32 eax_2299 = fn0041C910(ebx_1526, es, ds, Mem2285[esp_2284:word32], Mem2285[esp_2284 + 36<i32>:word32], out ecx_3456, out ebx_3457, out ebp_1150, out esi_2305, out edi_1153)
	Mem2331[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2299, word32, word128)), real64, 0) + Mem2285[(eax_2299 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_2314 = <invalid>
	word128 xmm0_2333 = fn00427210()
	esp_1171 = esp_2314 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_2333, word64, 64), SLICE(xmm0_2333, real64, 0) * Mem2331[ebp_1150 - 24<i32>:real64] + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(esi_2305, word32, word128)), real64, 0) + Mem2331[(esi_2305 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(Mem2331[ebp_1150 + 0x2C<32>:word16], word16, word128)), real64, 0))
l0041DEE4:
	word32 ebx_2360 = Mem148[esi_155:word32]
	branch Mem148[esi_155 + 4<i32>:word32] - ebx_2360 >=u 0x60<32> l0041DFBE
l0041DFBE:
	word128 xmm0_2366 = fn00427210()
	word32 edx_3430
	Mem2386[ebp_150 - 44<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_2366, word64, 64), SLICE(xmm0_2366, real64, 0) * Mem148[0x00432E90<p32>:real64]), out ecx_1508, out edx_3430)
	Mem2388[ebp_150 - 36<i32>:word32] = ebx_2360 + 48<i32>
	word32 eax_2389 = _errno()
	Mem2391[ebp_150 - 28<i32>:word32] = eax_2389
	ebx_1526 = ebx_2360 + 0x48<32>
	branch Mem2391[ebx_2360 + 0x5C<32>:word32] <u 0x10<32> l0041DFED
l0041DFEB:
	ebx_1526 = Mem2391[ebx_2360 + 0x48<32>:word32]
l0041DFED:
	Mem2396[eax_2389:word32] = 0<32>
	Mem2401[esp_139:word32] = 0<32>
	Mem2403[esp_139 - 4<i32>:word32] = ebp_150 - 20<i32>
	Mem2406[esp_139 - 8<i32>:word32] = ebx_1526
	Mem2409[ebp_150 - 40<i32>:word32] = strtol(Mem2406[esp_139 - 8<i32>:(ptr32 charconst )], Mem2406[esp_139 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2406[esp_139:int32])
	esp_1544 = esp_139 + 4<32>
	branch ebx_1526 != Mem2409[ebp_150 - 20<i32>:word32] l0041E016
l0041E00B:
	Mem2413[esp_139:word32] = 0x431878<32>
	_Xinvalid_argument(Mem2413[esp_139:(ptr32 charconst )])
	esp_1544 = esp_139
l0041E016:
	branch Mem2415[Mem2415[ebp_150 - 28<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041E022:
	word32 esp_2424 = esp_1544 - 4<i32>
	Mem2425[esp_2424:word32] = Mem2415[ebp_150 - 36<i32>:word32]
	word32 ebp_2442
	word32 ebx_2443
	word32 esi_2447
	word32 ecx_3435
	word32 edi_3436
	word32 eax_2441 = fn0041C910(ebx_1526, es, ds, Mem2425[esp_2424:word32], Mem2425[esp_2424 + 36<i32>:word32], out ecx_3435, out ebx_2443, out ebp_2442, out esi_2447, out edi_3436)
	Mem2473[ebp_2442 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2441, word32, word128)), real64, 0) + Mem2425[(eax_2441 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_2475 = fn00427210()
	word32 esp_2456 = <invalid>
	word32 eax_2477 = Mem2473[ebp_2442 - 44<i32>:word32]
	real64 v45_2479 = Mem2473[ebp_2442 - 32<i32>:real64] * SLICE(xmm0_2475, real64, 0)
	Mem2483[esp_2456:word32] = esi_2447
	Mem2504[ebp_2442 - 32<i32>:real64] = v45_2479 + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2477, word32, word128)), real64, 0) + Mem2483[(eax_2477 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(Mem2483[ebp_2442 + 0x28<32>:word16], word16, word128)), real64, 0)
	word32 esi_3439
	word32 ecx_3437
	word32 ebx_3438
	word32 eax_2505 = fn0041C910(ebx_2443, es, ds, Mem2504[esp_2456:word32], Mem2504[esp_2456 + 36<i32>:word32], out ecx_3437, out ebx_3438, out ebp_1150, out esi_3439, out edi_1153)
	Mem2537[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2505, word32, word128)), real64, 0) + Mem2504[(eax_2505 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_2520 = <invalid>
	esp_1171 = esp_2520 + 4<32>
	xmm0_1017 = SEQ(0<64>, Mem2537[ebp_1150 - 32<i32>:real64] + Mem2537[ebp_1150 - 24<i32>:real64] * SLICE(fn00427210(), real64, 0))
l0041DEFC:
	word128 xmm0_2550 = fn00427210()
	word32 edx_3431
	Mem2570[ebp_150 - 44<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_2550, word64, 64), SLICE(xmm0_2550, real64, 0) * Mem148[0x00432E90<p32>:real64]), out ecx_1508, out edx_3431)
	Mem2572[ebp_150 - 36<i32>:word32] = ebx_2360 + 24<i32>
	word32 eax_2573 = _errno()
	Mem2576[ebp_150 - 28<i32>:word32] = eax_2573
	esi_155 = ebx_2360 + 48<i32>
	branch Mem2572[ebx_2360 + 68<i32>:word32] <u 0x10<32> l0041DF2B
l0041DF29:
	esi_155 = Mem2576[ebx_2360 + 48<i32>:word32]
l0041DF2B:
	Mem2580[eax_2573:word32] = 0<32>
	Mem2585[esp_139:word32] = 0<32>
	Mem2587[esp_139 - 4<i32>:word32] = ebp_150 - 20<i32>
	Mem2590[esp_139 - 8<i32>:word32] = esi_155
	word32 eax_2591 = strtol(Mem2590[esp_139 - 8<i32>:(ptr32 charconst )], Mem2590[esp_139 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2590[esp_139:int32])
	esp_1544 = esp_139 + 4<32>
	ebx_1526 = eax_2591
	branch esi_155 != Mem2590[ebp_150 - 20<i32>:word32] l0041DF53
l0041DF48:
	Mem2597[esp_139:word32] = 0x431878<32>
	_Xinvalid_argument(Mem2597[esp_139:(ptr32 charconst )])
	esp_1544 = esp_139
l0041DF53:
	branch Mem2599[Mem2599[ebp_150 - 28<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041DF5F:
	word32 esp_2605 = esp_1544 - 4<i32>
	Mem2606[esp_2605:word32] = Mem2599[ebp_150 - 36<i32>:word32]
	word32 ebx_2622
	word32 esi_3433
	word32 ecx_3432
	word32 eax_2620 = fn0041C910(eax_2591, es, ds, Mem2606[esp_2605:word32], Mem2606[esp_2605 + 36<i32>:word32], out ecx_3432, out ebx_2622, out ebp_1150, out esi_3433, out edi_1153)
	Mem2652[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2620, word32, word128)), real64, 0) + Mem2606[(eax_2620 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_2654 = fn00427210()
	word32 esp_2635 = <invalid>
	word32 eax_2656 = Mem2652[ebp_1150 - 44<i32>:word32]
	esp_1171 = esp_2635 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_2654, word64, 64), SLICE(xmm0_2654, real64, 0) * Mem2652[ebp_1150 - 24<i32>:real64] + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2656, word32, word128)), real64, 0) + Mem2652[(eax_2656 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(SLICE(ebx_2622, word16, 0), word16, word128)), real64, 0))
l0041DB6E:
	ebx_1526 = Mem80[esi_155:word32]
	ecx_1508 = Mem80[esi_155 + 4<i32>:word32] - ebx_1526
	branch ecx_1508 >=u 0x60<32> l0041DC4F
l0041DB86:
	word128 xmm0_2687 = fn00427210()
	word32 edx_3423
	esi_155 = fn0042D911(SEQ(SLICE(xmm0_2687, word64, 64), SLICE(xmm0_2687, real64, 0) * Mem80[0x00432E90<p32>:real64]), out ecx_1508, out edx_3423)
	Mem2709[ebp_150 - 36<i32>:word32] = ebx_1526 + 24<i32>
	word32 eax_2710 = _errno()
	Mem2712[ebp_150 - 44<i32>:word32] = eax_2710
	ebx_1526 = ebx_1526 + 0x30<32>
	branch Mem2712[ebx_1526 + 0x44<32>:word32] <u 0x10<32> l0041DBB4
l0041DBB2:
	ebx_1526 = Mem2712[ebx_1526 + 0x30<32>:word32]
l0041DBB4:
	Mem2717[eax_2710:word32] = 0<32>
	Mem2722[esp_71:word32] = 0<32>
	Mem2724[esp_71 - 4<i32>:word32] = ebp_150 - 40<i32>
	Mem2727[esp_71 - 8<i32>:word32] = ebx_1526
	Mem2730[ebp_150 - 28<i32>:word32] = strtol(Mem2727[esp_71 - 8<i32>:(ptr32 charconst )], Mem2727[esp_71 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2727[esp_71:int32])
	esp_1544 = esp_71 + 4<32>
	branch ebx_1526 != Mem2730[ebp_150 - 40<i32>:word32] l0041DBDD
l0041DBD2:
	Mem2734[esp_71:word32] = 0x431878<32>
	_Xinvalid_argument(Mem2734[esp_71:(ptr32 charconst )])
	esp_1544 = esp_71
l0041DBDD:
	branch Mem2736[Mem2736[ebp_150 - 44<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041DC44:
	esp_2741 = esp_1544 - 4<i32>
	Mem2742[esp_2741:word32] = 0x431890<32>
	_Xout_of_range(Mem2742[esp_2741:(ptr32 charconst )])
l0041DC4F:
	branch ecx_1508 >=u 0x78<32> l0041DD66
l0041DD66:
	word128 xmm0_2751 = fn00427210()
	word32 edx_3447
	Mem2774[ebp_150 - 44<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_2751, word64, 64), SLICE(xmm0_2751, real64, 0) * Mem2753[0x00432E90<p32>:real64]), out ecx_1508, out edx_3447)
	Mem2778[ebp_150 - 36<i32>:word32] = ebx_1526 + 72<i32>
	word32 eax_2779 = _errno()
	Mem2781[ebp_150 - 28<i32>:word32] = eax_2779
	ebx_1526 = ebx_1526 + 0x60<32>
	branch Mem2781[ebx_1526 + 20<i32>:word32] <u 0x10<32> l0041DD95
l0041DD93:
	ebx_1526 = Mem2781[ebx_1526:word32]
l0041DD95:
	Mem2786[eax_2779:word32] = 0<32>
	word32 esp_2791 = esp_2741 - 4<i32>
	Mem2792[esp_2791:word32] = 0<32>
	Mem2794[esp_2791 - 4<i32>:word32] = ebp_150 - 20<i32>
	Mem2797[esp_2791 - 8<i32>:word32] = ebx_1526
	Mem2800[ebp_150 - 40<i32>:word32] = strtol(Mem2797[esp_2791 - 8<i32>:(ptr32 charconst )], Mem2797[esp_2791 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2797[esp_2791:int32])
	esp_1544 = esp_2791 + 4<32>
	branch ebx_1526 != Mem2800[ebp_150 - 20<i32>:word32] l0041DDBE
l0041DDB3:
	Mem2804[esp_2791:word32] = 0x431878<32>
	_Xinvalid_argument(Mem2804[esp_2791:(ptr32 charconst )])
	esp_1544 = esp_2791
l0041DDBE:
	branch Mem2806[Mem2806[ebp_150 - 28<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041DDCA:
	word32 esp_2817 = esp_1544 - 4<i32>
	Mem2818[esp_2817:word32] = Mem2806[esi_155:word32] + 48<i32>
	word32 edi_3460
	word32 ecx_3458
	word32 ebp_3459
	word32 ebx_2846
	word32 esi_2850
	fn0041C910(ebx_1526, es, ds, Mem2818[esp_2817:word32], Mem2818[esp_2817 + 36<i32>:word32], out ecx_3458, out ebx_2846, out ebp_3459, out esi_2850, out edi_3460)
	word32 esp_2859 = <invalid>
	Mem2869[esp_2859:word32] = esi_2850 + 24<i32>
	word32 esi_3462
	word32 edi_3463
	word32 ecx_3461
	word32 ebp_2871
	word32 ebx_2872
	word32 eax_2870 = fn0041C910(ebx_2846, es, ds, Mem2869[esp_2859:word32], Mem2869[esp_2859 + 36<i32>:word32], out ecx_3461, out ebx_2872, out ebp_2871, out esi_3462, out edi_3463)
	Mem2902[ebp_2871 - 32<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2870, word32, word128)), real64, 0) + Mem2869[(eax_2870 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_2904 = fn00427210()
	word32 esp_2885 = <invalid>
	Mem2909[esp_2885:word32] = Mem2902[ebp_2871 - 36<i32>:word32]
	Mem2913[ebp_2871 - 32<i32>:real64] = Mem2902[ebp_2871 - 32<i32>:real64] * SLICE(xmm0_2904, real64, 0)
	word32 ebx_3465
	word32 esi_3466
	word32 ecx_3464
	word32 eax_2914 = fn0041C910(ebx_2872, es, ds, Mem2913[esp_2885:word32], Mem2913[esp_2885 + 36<i32>:word32], out ecx_3464, out ebx_3465, out ebp_1150, out esi_3466, out edi_1153)
	Mem2946[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2914, word32, word128)), real64, 0) + Mem2913[(eax_2914 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_2948 = fn00427210()
	word32 eax_2950 = Mem2946[ebp_1150 - 44<i32>:word32]
	Mem2979[ebp_1150 - 24<i32>:real64] = Mem2946[ebp_1150 - 24<i32>:real64] * SLICE(xmm0_2948, real64, 0) + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_2950, word32, word128)), real64, 0) + Mem2946[(eax_2950 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(Mem2946[ebp_1150 + 0x28<32>:word16], word16, word128)), real64, 0) + Mem2946[ebp_1150 - 32<i32>:real64]
	word32 esp_2929 = <invalid>
	word128 xmm0_2981 = fn00427210()
	esp_1171 = esp_2929 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_2981, word64, 64), SLICE(xmm0_2981, real64, 0) * Mem2979[0x00432E48<p32>:real64] + Mem2979[ebp_1150 - 24<i32>:real64])
l0041DC5B:
	word128 xmm0_2990 = fn00427210()
	word32 edx_3448
	Mem3010[ebp_150 - 40<i32>:word32] = fn0042D911(SEQ(SLICE(xmm0_2990, word64, 64), SLICE(xmm0_2990, real64, 0) * Mem2753[0x00432E90<p32>:real64]), out ecx_1508, out edx_3448)
	Mem3012[ebp_150 - 44<i32>:word32] = ebx_1526 + 48<i32>
	word32 eax_3013 = _errno()
	Mem3015[ebp_150 - 36<i32>:word32] = eax_3013
	ebx_1526 = ebx_1526 + 0x48<32>
	branch Mem3015[ebx_1526 + 20<i32>:word32] <u 0x10<32> l0041DC8A
l0041DC88:
	ebx_1526 = Mem3015[ebx_1526:word32]
l0041DC8A:
	Mem3020[eax_3013:word32] = 0<32>
	word32 esp_3024 = esp_2741 - 4<i32>
	Mem3025[esp_3024:word32] = 0<32>
	Mem3027[esp_3024 - 4<i32>:word32] = ebp_150 - 28<i32>
	Mem3030[esp_3024 - 8<i32>:word32] = ebx_1526
	Mem3033[ebp_150 - 20<i32>:word32] = strtol(Mem3030[esp_3024 - 8<i32>:(ptr32 charconst )], Mem3030[esp_3024 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem3030[esp_3024:int32])
	esp_1544 = esp_3024 + 4<32>
	branch ebx_1526 != Mem3033[ebp_150 - 28<i32>:word32] l0041DCB3
l0041DCA8:
	Mem3037[esp_3024:word32] = 0x431878<32>
	_Xinvalid_argument(Mem3037[esp_3024:(ptr32 charconst )])
	esp_1544 = esp_3024
l0041DCB3:
	branch Mem3039[Mem3039[ebp_150 - 36<i32>:word32]:word32] == 0x22<32> l0041DC44
l0041DCBB:
	word32 esp_3048 = esp_1544 - 4<i32>
	Mem3049[esp_3048:word32] = Mem3039[ebp_150 - 44<i32>:word32]
	word32 edi_3452
	word32 ecx_3451
	word32 ebp_3066
	word32 ebx_3067
	word32 esi_3071
	word32 eax_3065 = fn0041C910(ebx_1526, es, ds, Mem3049[esp_3048:word32], Mem3049[esp_3048 + 36<i32>:word32], out ecx_3451, out ebx_3067, out ebp_3066, out esi_3071, out edi_3452)
	Mem3097[ebp_3066 - 48<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_3065, word32, word128)), real64, 0) + Mem3049[(eax_3065 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word128 xmm0_3099 = fn00427210()
	word32 esp_3080 = <invalid>
	word32 eax_3101 = Mem3097[ebp_3066 - 40<i32>:word32]
	real64 v88_3103 = Mem3097[ebp_3066 - 48<i32>:real64] * SLICE(xmm0_3099, real64, 0)
	Mem3107[esp_3080:word32] = esi_3071
	Mem3128[ebp_3066 - 48<i32>:real64] = v88_3103 + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_3101, word32, word128)), real64, 0) + Mem3107[(eax_3101 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(Mem3107[ebp_3066 + 0x14<32>:word16], word16, word128)), real64, 0)
	word32 ebx_3454
	word32 esi_3455
	word32 ecx_3453
	word32 eax_3129 = fn0041C910(ebx_3067, es, ds, Mem3128[esp_3080:word32], Mem3128[esp_3080 + 36<i32>:word32], out ecx_3453, out ebx_3454, out ebp_1150, out esi_3455, out edi_1153)
	Mem3161[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_3129, word32, word128)), real64, 0) + Mem3128[(eax_3129 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_3144 = <invalid>
	esp_1171 = esp_3144 + 4<32>
	xmm0_1017 = SEQ(0<64>, Mem3161[ebp_1150 - 48<i32>:real64] + Mem3161[ebp_1150 - 24<i32>:real64] * SLICE(fn00427210(), real64, 0))
l0041DBE5:
	word32 esp_3175 = esp_1544 - 4<i32>
	Mem3176[esp_3175:word32] = Mem2736[ebp_150 - 36<i32>:word32]
	word32 ebx_3450
	word32 ecx_3449
	word32 esi_3196
	word32 eax_3190 = fn0041C910(ebx_1526, es, ds, Mem3176[esp_3175:word32], Mem3176[esp_3175 + 36<i32>:word32], out ecx_3449, out ebx_3450, out ebp_1150, out esi_3196, out edi_1153)
	Mem3222[ebp_1150 - 24<i32>:real64] = SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(eax_3190, word32, word128)), real64, 0) + Mem3176[(eax_3190 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]
	word32 esp_3205 = <invalid>
	word128 xmm0_3224 = fn00427210()
	esp_1171 = esp_3205 + 4<32>
	xmm0_1017 = SEQ(SLICE(xmm0_3224, word64, 64), SLICE(xmm0_3224, real64, 0) * Mem3222[ebp_1150 - 24<i32>:real64] + (SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(esi_3196, word32, word128)), real64, 0) + Mem3222[(esi_3196 >>u 0x1F<32>) * 8<32> + 0x00432F80<p32>:real64]) + SLICE(__cvtdq2pd<int32[4],real64[4]>(CONVERT(Mem3222[ebp_1150 + 0x1C<32>:word16], word16, word128)), real64, 0))
l0041ECED:
	word32 ecx_3434
	Mem3266[edi_1153 + 96<i32>:word32] = fn0042D911(xmm0_1017, out ecx_3434, out edx_3252)
l0041ECF5:
	Mem3273[fs:0x00000000<p32>:word32] = Mem3269[ebp_1150 - 12<i32>:word32]
	word32 esp_3277 = esp_1171 + 4<i32>
	word32 esi_3280 = Mem3273[esp_3277 + 4<i32>:word32]
	word32 eax_3552
	word32 ecx_3300
	fn00427500(Mem3273[ebp_1150 - 16<i32>:word32] ^ ebp_1150, edx_3252, Mem3273[esp_3277 + 8<i32>:word32], ebp_1150, esi_3280, Mem3273[esp_3277:word32], es, ds, Mem3273[esp_3277 + 8<i32>:word32], out eax_3552, out ecx_3300)
	ebpOut = Mem3273[ebp_1150:word32]
	esiOut = esi_3280
	return ecx_3300
fn0041DAF0_exit:


word32 fn0041ED20(word32 ecx, selector es, selector ds, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] ecx:[0..31] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn0041ED20_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc38
l0041ED20:
	word32 esp_143
	word32 ebp_147
	word32 edi_150
	word32 eax_186
	Mem30[fs:0<32>:word32] = fp - 16<i32>
	Mem38[&tLoc38 + 16<i32>:word32] = 0<32>
	Mem39[&tLoc38 + 20<i32>:word32] = 0xF<32>
	Mem42[&tLoc38:byte] = 0<8>
	word32 ebp_44
	word32 ebx_45
	word32 edi_47
	word32 ecx_376
	word32 edx_377
	word32 esi_378
	fn00402A70(&tLoc38, ecx, 0x4327DC<32>, 4<32>, Mem42[&tLoc38 + 12<i32>:word32], out ecx_376, out edx_377, out ebx_45, out ebp_44, out esi_378, out edi_47)
	Mem57[ebp_44 - 4<i32>:word32] = 0<32>
	word32 esp_51 = <invalid>
	Mem64[esp_51 - 0x14<32>:word32] = Mem57[Mem57[ebp_44 + 8<i32>:word32]:word32]
	word32 ebp_67
	word32 edx_379
	fn004028D0(esp_51 - 0x10<32>, edi_47, Mem64[esp_51 - 0x14<32>:word32], out edx_379, out ebp_67)
	Mem77[ebp_67 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_68 = <invalid>
	word32 ebp_84
	word32 ebx_85
	word32 edi_87
	word32 esi_89
	word32 ecx_380
	word32 edx_381
	branch SLICE(fn0041C1F0(edi_47, ebx_45, ebp_67, es, ds, Mem77[esp_68 + 0x2C<32>:word32], out ecx_380, out edx_381, out ebx_85, out ebp_84, out esi_89, out edi_87), byte, 0) == 0<8> l0041EDD3
l0041EDD3:
	Mem104[ebp_84 + 8<i32>:word32] = esp_68 - 0x14<32>
	Mem106[esp_68 - 0x18<32>:word32] = 5<32>
	Mem107[esp_68 - 4<32>:word32] = 0<32>
	Mem108[esp_68:word32] = 0xF<32>
	Mem110[esp_68 - 0x1C<32>:word32] = 0x4327E4<32>
	Mem111[esp_68 - 0x14<32>:byte] = 0<8>
	word32 ebp_113
	word32 ebx_114
	word32 edi_116
	word32 esi_118
	word32 ecx_382
	word32 edx_383
	fn00402A70(esp_68 - 0x14<32>, edi_87, Mem111[esp_68 - 0x1C<32>:word32], Mem111[esp_68 - 0x18<32>:word32], Mem111[esp_68 - 8<32>:word32], out ecx_382, out edx_383, out ebx_114, out ebp_113, out esi_118, out edi_116)
	Mem128[ebp_113 - 4<i32>:word32] = 1<32>
	word32 esp_120 = <invalid>
	Mem132[esp_120 - 0x14<32>:word32] = Mem128[esi_118:word32]
	word32 ebp_135
	word32 edx_384
	fn004028D0(esp_120 - 0x10<32>, edi_116, Mem132[esp_120 - 0x14<32>:word32], out edx_384, out ebp_135)
	Mem145[ebp_135 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_136 = <invalid>
	esp_143 = esp_136 + 4<32>
	word32 ecx_385
	word32 edx_386
	word32 ebx_387
	word32 esi_388
	branch SLICE(fn0041C1F0(edi_116, ebx_114, ebp_135, es, ds, Mem145[esp_136 + 0x2C<32>:word32], out ecx_385, out edx_386, out ebx_387, out ebp_147, out esi_388, out edi_150), byte, 0) == 0<8> l0041EE3C
l0041EE1D:
	word128 xmm0_166 = fn00427210()
	word32 ecx_398
	word32 edx_399
	eax_186 = fn0042D911(SEQ(SLICE(xmm0_166, word64, 64), SLICE(xmm0_166, real64, 0) * Mem145[0x00432EC0<p32>:real64]), out ecx_398, out edx_399) + 0x12C<32>
l0041ED94:
	Mem191[esp_68:word32] = Mem77[esi_89:word32] + 48<i32>
	word32 esp_207 = <invalid>
	word32 ebx_194
	word32 esi_198
	word32 ecx_389
	word32 ebp_390
	word32 edi_391
	Mem216[esp_207:word32] = fn0041C910(ebx_85, es, ds, Mem191[esp_68:word32], Mem191[esp_68 + 36<i32>:word32], out ecx_389, out ebx_194, out ebp_390, out esi_198, out edi_391)
	Mem219[esp_207 - 4<i32>:word32] = esi_198 + 24<i32>
	word32 esp_235 = <invalid>
	word32 ecx_392
	word32 ebx_393
	word32 esi_394
	Mem244[esp_235:word32] = fn0041C910(ebx_194, es, ds, Mem219[esp_207 - 4<i32>:word32], Mem219[esp_207 + 32<i32>:word32], out ecx_392, out ebx_393, out ebp_147, out esi_394, out edi_150)
	Mem246[esp_235 - 4<i32>:word32] = 0<32>
	word32 ecx_395
	word32 eax_247 = fn0041C680(Mem246[esp_235 - 4<i32>:word32], Mem246[esp_235:word32], Mem246[esp_235 + 4<i32>:word32], out ecx_395)
	word128 xmm0_267 = fn00427210()
	esp_143 = esp_235 + 8<32>
	word32 ecx_396
	word32 edx_397
	eax_186 = fn0042D911(SEQ(SLICE(xmm0_267, word64, 64), SLICE(xmm0_267, real64, 0) * Mem246[0x00432EE0<p32>:real64]), out ecx_396, out edx_397) + 0x7AC<32> + eax_247
l0041EE39:
	Mem292[edi_150 + 96<i32>:word32] = eax_186
l0041EE3C:
	Mem299[fs:0x00000000<p32>:word32] = Mem295[ebp_147 - 12<i32>:word32]
	word32 ecx_302 = Mem299[esp_143:word32]
	word32 esi_306 = Mem299[esp_143 + 8<i32>:word32]
	ebpOut = Mem299[ebp_147:word32]
	esiOut = esi_306
	return ecx_302
fn0041ED20_exit:


word32 fn0041EE50(selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved:
fn0041EE50_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc5C
	struct <anonymous> tLoc44
l0041EE50:
	word32 esp_2249
	word32 ebp_2253
	word32 ebx_2349
	word32 eax_6322
	Mem31[fs:0<32>:word32] = fp - 16<i32>
	Mem39[&tLoc5C + 20<i32>:word32] = 0x4327EC<32>
	word32 ebx_7470
	fn00402890(&tLoc44, Mem39[&tLoc5C + 16<i32>:word32], Mem39[&tLoc5C + 20<i32>:word32], out ebx_7470)
	word32 edi_57 = Mem50[dwArg04:word32]
	fn00403B80(&tLoc5C)
	word32 ebp_71
	word32 ebx_72 = fn00402BB0(&tLoc5C, fp - 4<i32>, edi_57, edi_57, out ebp_71)
	Mem83[ebp_71 - 4<i32>:byte] = 0<8>
	Mem85[ebp_71 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_77 = <invalid>
	word32 ebp_92
	word32 ebx_93
	word32 edx_7472
	word32 ecx_7471
	word32 esi_7473
	word32 edi_7474
	branch SLICE(fn0041C1F0(ebx_72, ebx_72, ebp_71, es, ds, Mem85[esp_77 + 40<i32>:word32], out ecx_7471, out edx_7472, out ebx_93, out ebp_92, out esi_7473, out edi_7474), byte, 0) == 0<8> l0041EF28
l0041EF28:
	Mem112[ebp_92 - 24<i32>:word32] = esp_77 - 0x18<32>
	Mem114[esp_77 - 0x1C<32>:word32] = 0x4327F4<32>
	word32 ebx_7475
	fn00402890(esp_77 - 0x18<32>, Mem114[esp_77 - 0x20<32>:word32], Mem114[esp_77 - 0x1C<32>:word32], out ebx_7475)
	Mem125[ebp_92 - 4<i32>:word32] = 2<32>
	word32 edi_131 = Mem125[Mem125[ebp_92 + 8<i32>:word32]:word32]
	Mem134[esp_77 - 0x34<32>:word32] = ebp_92 - 13<i32>
	Mem135[ebp_92 - 20<i32>:word32] = esp_77 - 0x30<32>
	Mem138[esp_77 - 0x38<32>:word32] = Mem135[ebp_92 + 8<i32>:word32]
	fn00403B80(esp_77 - 0x30<32>)
	Mem142[esp_77 - 0x34<32>:word32] = edi_131
	Mem144[ebp_92 - 4<i32>:byte] = 3<8>
	word32 ebp_146
	word32 ebx_147 = fn00402BB0(esp_77 - 0x30<32>, ebp_92, edi_131, Mem144[esp_77 - 0x34<32>:word32], out ebp_146)
	Mem158[ebp_146 - 4<i32>:byte] = 2<8>
	Mem160[ebp_146 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_152 = <invalid>
	word32 ebp_162
	word32 ebx_163
	word32 ecx_7476
	word32 edx_7477
	word32 esi_7478
	word32 edi_7479
	branch SLICE(fn0041C1F0(ebx_147, ebx_147, ebp_146, es, ds, Mem160[esp_152 + 40<i32>:word32], out ecx_7476, out edx_7477, out ebx_163, out ebp_162, out esi_7478, out edi_7479), byte, 0) == 0<8> l0041EFD6
l0041EFD6:
	Mem182[ebp_162 - 24<i32>:word32] = esp_152 - 0x18<32>
	Mem184[esp_152 - 0x1C<32>:word32] = 0x4327FC<32>
	word32 ebx_7491
	fn00402890(esp_152 - 0x18<32>, Mem184[esp_152 - 0x20<32>:word32], Mem184[esp_152 - 0x1C<32>:word32], out ebx_7491)
	Mem195[ebp_162 - 4<i32>:word32] = 4<32>
	word32 edi_201 = Mem195[Mem195[ebp_162 + 8<i32>:word32]:word32]
	Mem204[esp_152 - 0x34<32>:word32] = ebp_162 - 13<i32>
	Mem205[ebp_162 - 20<i32>:word32] = esp_152 - 0x30<32>
	Mem208[esp_152 - 0x38<32>:word32] = Mem205[ebp_162 + 8<i32>:word32]
	fn00403B80(esp_152 - 0x30<32>)
	Mem212[esp_152 - 0x34<32>:word32] = edi_201
	Mem214[ebp_162 - 4<i32>:byte] = 5<8>
	word32 ebp_216
	word32 ebx_217 = fn00402BB0(esp_152 - 0x30<32>, ebp_162, edi_201, Mem214[esp_152 - 0x34<32>:word32], out ebp_216)
	Mem228[ebp_216 - 4<i32>:byte] = 4<8>
	Mem230[ebp_216 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_222 = <invalid>
	word32 ebp_232
	word32 ebx_233
	word32 ecx_7492
	word32 edx_7493
	word32 esi_7494
	word32 edi_7495
	branch SLICE(fn0041C1F0(ebx_217, ebx_217, ebp_216, es, ds, Mem230[esp_222 + 40<i32>:word32], out ecx_7492, out edx_7493, out ebx_233, out ebp_232, out esi_7494, out edi_7495), byte, 0) == 0<8> l0041F084
l0041F084:
	Mem252[ebp_232 - 24<i32>:word32] = esp_222 - 0x18<32>
	Mem254[esp_222 - 0x1C<32>:word32] = 0x432804<32>
	word32 ebx_7507
	fn00402890(esp_222 - 0x18<32>, Mem254[esp_222 - 0x20<32>:word32], Mem254[esp_222 - 0x1C<32>:word32], out ebx_7507)
	Mem265[ebp_232 - 4<i32>:word32] = 6<32>
	word32 edi_271 = Mem265[Mem265[ebp_232 + 8<i32>:word32]:word32]
	Mem274[esp_222 - 0x34<32>:word32] = ebp_232 - 13<i32>
	Mem275[ebp_232 - 20<i32>:word32] = esp_222 - 0x30<32>
	Mem278[esp_222 - 0x38<32>:word32] = Mem275[ebp_232 + 8<i32>:word32]
	fn00403B80(esp_222 - 0x30<32>)
	Mem282[esp_222 - 0x34<32>:word32] = edi_271
	Mem284[ebp_232 - 4<i32>:byte] = 7<8>
	word32 ebp_286
	word32 ebx_287 = fn00402BB0(esp_222 - 0x30<32>, ebp_232, edi_271, Mem284[esp_222 - 0x34<32>:word32], out ebp_286)
	Mem298[ebp_286 - 4<i32>:byte] = 6<8>
	Mem300[ebp_286 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_292 = <invalid>
	word32 ebp_302
	word32 ebx_303
	word32 ecx_7508
	word32 edx_7509
	word32 esi_7510
	word32 edi_7511
	branch SLICE(fn0041C1F0(ebx_287, ebx_287, ebp_286, es, ds, Mem300[esp_292 + 40<i32>:word32], out ecx_7508, out edx_7509, out ebx_303, out ebp_302, out esi_7510, out edi_7511), byte, 0) == 0<8> l0041F130
l0041F130:
	Mem322[ebp_302 - 24<i32>:word32] = esp_292 - 0x18<32>
	Mem324[esp_292 - 0x1C<32>:word32] = 0x43280C<32>
	word32 ebx_7523
	fn00402890(esp_292 - 0x18<32>, Mem324[esp_292 - 0x20<32>:word32], Mem324[esp_292 - 0x1C<32>:word32], out ebx_7523)
	Mem335[ebp_302 - 4<i32>:word32] = 8<32>
	word32 edi_341 = Mem335[Mem335[ebp_302 + 8<i32>:word32]:word32]
	Mem344[esp_292 - 0x34<32>:word32] = ebp_302 - 13<i32>
	Mem345[ebp_302 - 20<i32>:word32] = esp_292 - 0x30<32>
	Mem348[esp_292 - 0x38<32>:word32] = Mem345[ebp_302 + 8<i32>:word32]
	fn00403B80(esp_292 - 0x30<32>)
	Mem352[esp_292 - 0x34<32>:word32] = edi_341
	Mem354[ebp_302 - 4<i32>:byte] = 9<8>
	word32 ebp_356
	word32 ebx_357 = fn00402BB0(esp_292 - 0x30<32>, ebp_302, edi_341, Mem354[esp_292 - 0x34<32>:word32], out ebp_356)
	Mem368[ebp_356 - 4<i32>:byte] = 8<8>
	Mem370[ebp_356 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_362 = <invalid>
	word32 ebp_372
	word32 ebx_373
	word32 ecx_7524
	word32 edx_7525
	word32 esi_7526
	word32 edi_7527
	branch SLICE(fn0041C1F0(ebx_357, ebx_357, ebp_356, es, ds, Mem370[esp_362 + 40<i32>:word32], out ecx_7524, out edx_7525, out ebx_373, out ebp_372, out esi_7526, out edi_7527), byte, 0) == 0<8> l0041F1DE
l0041F1DE:
	Mem392[ebp_372 - 24<i32>:word32] = esp_362 - 0x18<32>
	Mem394[esp_362 - 0x1C<32>:word32] = 0x432814<32>
	word32 ebx_7539
	fn00402890(esp_362 - 0x18<32>, Mem394[esp_362 - 0x20<32>:word32], Mem394[esp_362 - 0x1C<32>:word32], out ebx_7539)
	Mem405[ebp_372 - 4<i32>:word32] = 0xA<32>
	word32 edi_411 = Mem405[Mem405[ebp_372 + 8<i32>:word32]:word32]
	Mem414[esp_362 - 0x34<32>:word32] = ebp_372 - 13<i32>
	Mem415[ebp_372 - 20<i32>:word32] = esp_362 - 0x30<32>
	Mem418[esp_362 - 0x38<32>:word32] = Mem415[ebp_372 + 8<i32>:word32]
	fn00403B80(esp_362 - 0x30<32>)
	Mem422[esp_362 - 0x34<32>:word32] = edi_411
	Mem424[ebp_372 - 4<i32>:byte] = 0xB<8>
	word32 ebp_426
	word32 ebx_427 = fn00402BB0(esp_362 - 0x30<32>, ebp_372, edi_411, Mem424[esp_362 - 0x34<32>:word32], out ebp_426)
	Mem438[ebp_426 - 4<i32>:byte] = 0xA<8>
	Mem440[ebp_426 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_432 = <invalid>
	word32 ebp_442
	word32 ebx_443
	word32 ecx_7540
	word32 edx_7541
	word32 esi_7542
	word32 edi_7543
	branch SLICE(fn0041C1F0(ebx_427, ebx_427, ebp_426, es, ds, Mem440[esp_432 + 40<i32>:word32], out ecx_7540, out edx_7541, out ebx_443, out ebp_442, out esi_7542, out edi_7543), byte, 0) == 0<8> l0041F28C
l0041F28C:
	Mem462[ebp_442 - 24<i32>:word32] = esp_432 - 0x18<32>
	Mem464[esp_432 - 0x1C<32>:word32] = 0x43281C<32>
	word32 ebx_7555
	fn00402890(esp_432 - 0x18<32>, Mem464[esp_432 - 0x20<32>:word32], Mem464[esp_432 - 0x1C<32>:word32], out ebx_7555)
	Mem475[ebp_442 - 4<i32>:word32] = 0xC<32>
	word32 edi_481 = Mem475[Mem475[ebp_442 + 8<i32>:word32]:word32]
	Mem484[esp_432 - 0x34<32>:word32] = ebp_442 - 14<i32>
	Mem485[ebp_442 - 20<i32>:word32] = esp_432 - 0x30<32>
	Mem488[esp_432 - 0x38<32>:word32] = Mem485[ebp_442 + 8<i32>:word32]
	fn00403B80(esp_432 - 0x30<32>)
	Mem492[esp_432 - 0x34<32>:word32] = edi_481
	Mem494[ebp_442 - 4<i32>:byte] = 0xD<8>
	word32 ebp_496
	word32 ebx_497 = fn00402BB0(esp_432 - 0x30<32>, ebp_442, edi_481, Mem494[esp_432 - 0x34<32>:word32], out ebp_496)
	Mem508[ebp_496 - 4<i32>:byte] = 0xC<8>
	Mem510[ebp_496 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_502 = <invalid>
	word32 ebp_512
	word32 ebx_513
	word32 ecx_7556
	word32 edx_7557
	word32 esi_7558
	word32 edi_7559
	branch SLICE(fn0041C1F0(ebx_497, ebx_497, ebp_496, es, ds, Mem510[esp_502 + 40<i32>:word32], out ecx_7556, out edx_7557, out ebx_513, out ebp_512, out esi_7558, out edi_7559), byte, 0) == 0<8> l0041F33A
l0041F33A:
	word32 esi_2393
	word32 eax_2411
	Mem532[ebp_512 - 24<i32>:word32] = esp_502 - 0x18<32>
	Mem534[esp_502 - 0x1C<32>:word32] = 0x432824<32>
	word32 ebx_536
	fn00402890(esp_502 - 0x18<32>, Mem534[esp_502 - 0x20<32>:word32], Mem534[esp_502 - 0x1C<32>:word32], out ebx_536)
	Mem547[ebp_512 - 4<i32>:word32] = 0xE<32>
	word32 edi_548 = Mem547[ebp_512 + 8<i32>:word32]
	Mem552[esp_502 - 0x34<32>:word32] = 0<32>
	Mem557[esp_502 - 0x34<32>:word32] = fn0040F760(edi_548, Mem552[esp_502 - 0x34<32>:word32])
	word32 ebp_561
	word32 edx_7571
	fn004028D0(esp_502 - 0x30<32>, edi_548, Mem557[esp_502 - 0x34<32>:word32], out edx_7571, out ebp_561)
	Mem571[ebp_561 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_562 = <invalid>
	word32 ebp_573
	word32 ebx_574
	word32 edi_576
	word32 ecx_7572
	word32 edx_7573
	word32 esi_7574
	branch SLICE(fn0041C1F0(ebx_536, ebx_536, ebp_561, es, ds, Mem571[esp_562 + 0x2C<32>:word32], out ecx_7572, out edx_7573, out ebx_574, out ebp_573, out esi_7574, out edi_576), byte, 0) == 0<8> l0041F3CE
l0041F3CE:
	Mem593[ebp_573 + 8<i32>:word32] = esp_562 - 0x14<32>
	Mem595[esp_562 - 0x18<32>:word32] = 0x43282C<32>
	word32 ebx_597
	fn00402890(esp_562 - 0x14<32>, Mem595[esp_562 - 0x1C<32>:word32], Mem595[esp_562 - 0x18<32>:word32], out ebx_597)
	Mem608[ebp_573 - 4<i32>:word32] = 0xF<32>
	Mem612[esp_562 - 0x30<32>:word32] = 0<32>
	Mem617[esp_562 - 0x30<32>:word32] = fn0040F760(edi_576, Mem612[esp_562 - 0x30<32>:word32])
	word32 ebp_621
	word32 edx_7586
	fn004028D0(esp_562 - 0x2C<32>, edi_576, Mem617[esp_562 - 0x30<32>:word32], out edx_7586, out ebp_621)
	Mem631[ebp_621 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_622 = <invalid>
	word32 ebp_633
	word32 ebx_634
	word32 edi_636
	word32 ecx_7587
	word32 edx_7588
	word32 esi_7589
	branch SLICE(fn0041C1F0(ebx_597, ebx_597, ebp_621, es, ds, Mem631[esp_622 + 0x2C<32>:word32], out ecx_7587, out edx_7588, out ebx_634, out ebp_633, out esi_7589, out edi_636), byte, 0) == 0<8> l0041F461
l0041F461:
	Mem653[ebp_633 + 8<i32>:word32] = esp_622 - 0x14<32>
	Mem655[esp_622 - 0x18<32>:word32] = 0x432834<32>
	word32 ebx_657
	fn00402890(esp_622 - 0x14<32>, Mem655[esp_622 - 0x1C<32>:word32], Mem655[esp_622 - 0x18<32>:word32], out ebx_657)
	Mem668[ebp_633 - 4<i32>:word32] = 0x10<32>
	Mem672[esp_622 - 0x30<32>:word32] = 0<32>
	Mem677[esp_622 - 0x30<32>:word32] = fn0040F760(edi_636, Mem672[esp_622 - 0x30<32>:word32])
	word32 ebp_681
	word32 edx_7600
	fn004028D0(esp_622 - 0x2C<32>, edi_636, Mem677[esp_622 - 0x30<32>:word32], out edx_7600, out ebp_681)
	Mem691[ebp_681 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_682 = <invalid>
	word32 ebp_693
	word32 ebx_694
	word32 edi_696
	word32 ecx_7601
	word32 edx_7602
	word32 esi_7603
	branch SLICE(fn0041C1F0(ebx_657, ebx_657, ebp_681, es, ds, Mem691[esp_682 + 0x2C<32>:word32], out ecx_7601, out edx_7602, out ebx_694, out ebp_693, out esi_7603, out edi_696), byte, 0) == 0<8> l0041F4F4
l0041F4F4:
	Mem713[ebp_693 + 8<i32>:word32] = esp_682 - 0x14<32>
	Mem715[esp_682 - 0x18<32>:word32] = 0x43283C<32>
	word32 ebx_717
	fn00402890(esp_682 - 0x14<32>, Mem715[esp_682 - 0x1C<32>:word32], Mem715[esp_682 - 0x18<32>:word32], out ebx_717)
	Mem728[ebp_693 - 4<i32>:word32] = 0x11<32>
	Mem732[esp_682 - 0x30<32>:word32] = 0<32>
	Mem737[esp_682 - 0x30<32>:word32] = fn0040F760(edi_696, Mem732[esp_682 - 0x30<32>:word32])
	word32 ebp_741
	word32 edx_7614
	fn004028D0(esp_682 - 0x2C<32>, edi_696, Mem737[esp_682 - 0x30<32>:word32], out edx_7614, out ebp_741)
	Mem751[ebp_741 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_742 = <invalid>
	word32 ebp_753
	word32 ebx_754
	word32 edi_756
	word32 ecx_7615
	word32 edx_7616
	word32 esi_7617
	branch SLICE(fn0041C1F0(ebx_717, ebx_717, ebp_741, es, ds, Mem751[esp_742 + 0x2C<32>:word32], out ecx_7615, out edx_7616, out ebx_754, out ebp_753, out esi_7617, out edi_756), byte, 0) == 0<8> l0041F587
l0041F587:
	Mem773[ebp_753 + 8<i32>:word32] = esp_742 - 0x14<32>
	Mem775[esp_742 - 0x18<32>:word32] = 0x432844<32>
	word32 ebx_777
	fn00402890(esp_742 - 0x14<32>, Mem775[esp_742 - 0x1C<32>:word32], Mem775[esp_742 - 0x18<32>:word32], out ebx_777)
	Mem788[ebp_753 - 4<i32>:word32] = 0x12<32>
	Mem792[esp_742 - 0x30<32>:word32] = 0<32>
	Mem797[esp_742 - 0x30<32>:word32] = fn0040F760(edi_756, Mem792[esp_742 - 0x30<32>:word32])
	word32 ebp_801
	word32 edx_7628
	fn004028D0(esp_742 - 0x2C<32>, edi_756, Mem797[esp_742 - 0x30<32>:word32], out edx_7628, out ebp_801)
	Mem811[ebp_801 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_802 = <invalid>
	word32 ebp_813
	word32 ebx_814
	word32 edi_816
	word32 ecx_7629
	word32 edx_7630
	word32 esi_7631
	branch SLICE(fn0041C1F0(ebx_777, ebx_777, ebp_801, es, ds, Mem811[esp_802 + 0x2C<32>:word32], out ecx_7629, out edx_7630, out ebx_814, out ebp_813, out esi_7631, out edi_816), byte, 0) == 0<8> l0041F618
l0041F618:
	Mem833[ebp_813 + 8<i32>:word32] = esp_802 - 0x14<32>
	Mem835[esp_802 - 0x18<32>:word32] = 0x43284C<32>
	word32 ebx_837
	fn00402890(esp_802 - 0x14<32>, Mem835[esp_802 - 0x1C<32>:word32], Mem835[esp_802 - 0x18<32>:word32], out ebx_837)
	Mem848[ebp_813 - 4<i32>:word32] = 0x13<32>
	Mem852[esp_802 - 0x30<32>:word32] = 0<32>
	Mem857[esp_802 - 0x30<32>:word32] = fn0040F760(edi_816, Mem852[esp_802 - 0x30<32>:word32])
	word32 ebp_861
	word32 edx_7642
	fn004028D0(esp_802 - 0x2C<32>, edi_816, Mem857[esp_802 - 0x30<32>:word32], out edx_7642, out ebp_861)
	Mem871[ebp_861 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_862 = <invalid>
	word32 ebp_873
	word32 ebx_874
	word32 edi_876
	word32 ecx_7643
	word32 edx_7644
	word32 esi_7645
	branch SLICE(fn0041C1F0(ebx_837, ebx_837, ebp_861, es, ds, Mem871[esp_862 + 0x2C<32>:word32], out ecx_7643, out edx_7644, out ebx_874, out ebp_873, out esi_7645, out edi_876), byte, 0) == 0<8> l0041F6AB
l0041F6AB:
	Mem893[ebp_873 + 8<i32>:word32] = esp_862 - 0x14<32>
	Mem895[esp_862 - 0x18<32>:word32] = 0x432854<32>
	word32 ebx_897
	fn00402890(esp_862 - 0x14<32>, Mem895[esp_862 - 0x1C<32>:word32], Mem895[esp_862 - 0x18<32>:word32], out ebx_897)
	Mem908[ebp_873 - 4<i32>:word32] = 0x14<32>
	Mem912[esp_862 - 0x30<32>:word32] = 0<32>
	Mem917[esp_862 - 0x30<32>:word32] = fn0040F760(edi_876, Mem912[esp_862 - 0x30<32>:word32])
	word32 ebp_921
	word32 edx_7656
	fn004028D0(esp_862 - 0x2C<32>, edi_876, Mem917[esp_862 - 0x30<32>:word32], out edx_7656, out ebp_921)
	Mem931[ebp_921 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_922 = <invalid>
	word32 ebp_933
	word32 ebx_934
	word32 edi_936
	word32 ecx_7657
	word32 edx_7658
	word32 esi_7659
	branch SLICE(fn0041C1F0(ebx_897, ebx_897, ebp_921, es, ds, Mem931[esp_922 + 0x2C<32>:word32], out ecx_7657, out edx_7658, out ebx_934, out ebp_933, out esi_7659, out edi_936), byte, 0) == 0<8> l0041F73E
l0041F73E:
	Mem953[ebp_933 + 8<i32>:word32] = esp_922 - 0x14<32>
	Mem955[esp_922 - 0x18<32>:word32] = 0x43285C<32>
	word32 ebx_957
	fn00402890(esp_922 - 0x14<32>, Mem955[esp_922 - 0x1C<32>:word32], Mem955[esp_922 - 0x18<32>:word32], out ebx_957)
	Mem968[ebp_933 - 4<i32>:word32] = 0x15<32>
	Mem972[esp_922 - 0x30<32>:word32] = 0<32>
	Mem977[esp_922 - 0x30<32>:word32] = fn0040F760(edi_936, Mem972[esp_922 - 0x30<32>:word32])
	word32 ebp_981
	word32 edx_7670
	fn004028D0(esp_922 - 0x2C<32>, edi_936, Mem977[esp_922 - 0x30<32>:word32], out edx_7670, out ebp_981)
	Mem991[ebp_981 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_982 = <invalid>
	word32 ebp_993
	word32 ebx_994
	word32 edi_996
	word32 ecx_7671
	word32 edx_7672
	word32 esi_7673
	branch SLICE(fn0041C1F0(ebx_957, ebx_957, ebp_981, es, ds, Mem991[esp_982 + 0x2C<32>:word32], out ecx_7671, out edx_7672, out ebx_994, out ebp_993, out esi_7673, out edi_996), byte, 0) == 0<8> l0041F7D1
l0041F7D1:
	Mem1013[ebp_993 + 8<i32>:word32] = esp_982 - 0x14<32>
	Mem1015[esp_982 - 0x18<32>:word32] = 0x432864<32>
	word32 ebx_1017
	fn00402890(esp_982 - 0x14<32>, Mem1015[esp_982 - 0x1C<32>:word32], Mem1015[esp_982 - 0x18<32>:word32], out ebx_1017)
	Mem1028[ebp_993 - 4<i32>:word32] = 0x16<32>
	Mem1032[esp_982 - 0x30<32>:word32] = 0<32>
	Mem1037[esp_982 - 0x30<32>:word32] = fn0040F760(edi_996, Mem1032[esp_982 - 0x30<32>:word32])
	word32 ebp_1041
	word32 edx_7684
	fn004028D0(esp_982 - 0x2C<32>, edi_996, Mem1037[esp_982 - 0x30<32>:word32], out edx_7684, out ebp_1041)
	Mem1051[ebp_1041 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1042 = <invalid>
	word32 ebp_1053
	word32 ebx_1054
	word32 edi_1056
	word32 ecx_7685
	word32 edx_7686
	word32 esi_7687
	branch SLICE(fn0041C1F0(ebx_1017, ebx_1017, ebp_1041, es, ds, Mem1051[esp_1042 + 0x2C<32>:word32], out ecx_7685, out edx_7686, out ebx_1054, out ebp_1053, out esi_7687, out edi_1056), byte, 0) == 0<8> l0041F862
l0041F862:
	Mem1073[ebp_1053 + 8<i32>:word32] = esp_1042 - 0x14<32>
	Mem1075[esp_1042 - 0x18<32>:word32] = 0x432868<32>
	word32 ebx_1077
	fn00402890(esp_1042 - 0x14<32>, Mem1075[esp_1042 - 0x1C<32>:word32], Mem1075[esp_1042 - 0x18<32>:word32], out ebx_1077)
	Mem1088[ebp_1053 - 4<i32>:word32] = 0x17<32>
	Mem1092[esp_1042 - 0x30<32>:word32] = 0<32>
	Mem1097[esp_1042 - 0x30<32>:word32] = fn0040F760(edi_1056, Mem1092[esp_1042 - 0x30<32>:word32])
	word32 ebp_1101
	word32 edx_7698
	fn004028D0(esp_1042 - 0x2C<32>, edi_1056, Mem1097[esp_1042 - 0x30<32>:word32], out edx_7698, out ebp_1101)
	Mem1111[ebp_1101 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1102 = <invalid>
	word32 ebp_1113
	word32 ebx_1114
	word32 edi_1116
	word32 ecx_7699
	word32 edx_7700
	word32 esi_7701
	branch SLICE(fn0041C1F0(ebx_1077, ebx_1077, ebp_1101, es, ds, Mem1111[esp_1102 + 0x2C<32>:word32], out ecx_7699, out edx_7700, out ebx_1114, out ebp_1113, out esi_7701, out edi_1116), byte, 0) == 0<8> l0041F90A
l0041F90A:
	Mem1133[ebp_1113 + 8<i32>:word32] = esp_1102 - 0x14<32>
	Mem1135[esp_1102 - 0x18<32>:word32] = 0x432870<32>
	word32 ebx_1137
	fn00402890(esp_1102 - 0x14<32>, Mem1135[esp_1102 - 0x1C<32>:word32], Mem1135[esp_1102 - 0x18<32>:word32], out ebx_1137)
	Mem1148[ebp_1113 - 4<i32>:word32] = 0x18<32>
	Mem1152[esp_1102 - 0x30<32>:word32] = 0<32>
	Mem1157[esp_1102 - 0x30<32>:word32] = fn0040F760(edi_1116, Mem1152[esp_1102 - 0x30<32>:word32])
	word32 ebp_1161
	word32 edx_7712
	fn004028D0(esp_1102 - 0x2C<32>, edi_1116, Mem1157[esp_1102 - 0x30<32>:word32], out edx_7712, out ebp_1161)
	Mem1171[ebp_1161 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1162 = <invalid>
	word32 ebp_1173
	word32 ebx_1174
	word32 edi_1176
	word32 ecx_7713
	word32 edx_7714
	word32 esi_7715
	branch SLICE(fn0041C1F0(ebx_1137, ebx_1137, ebp_1161, es, ds, Mem1171[esp_1162 + 0x2C<32>:word32], out ecx_7713, out edx_7714, out ebx_1174, out ebp_1173, out esi_7715, out edi_1176), byte, 0) == 0<8> l0041F9B2
l0041F9B2:
	Mem1193[ebp_1173 + 8<i32>:word32] = esp_1162 - 0x14<32>
	Mem1195[esp_1162 - 0x18<32>:word32] = 0x432878<32>
	word32 ebx_1197
	fn00402890(esp_1162 - 0x14<32>, Mem1195[esp_1162 - 0x1C<32>:word32], Mem1195[esp_1162 - 0x18<32>:word32], out ebx_1197)
	Mem1208[ebp_1173 - 4<i32>:word32] = 0x19<32>
	Mem1212[esp_1162 - 0x30<32>:word32] = 0<32>
	Mem1217[esp_1162 - 0x30<32>:word32] = fn0040F760(edi_1176, Mem1212[esp_1162 - 0x30<32>:word32])
	word32 ebp_1221
	word32 edx_7724
	fn004028D0(esp_1162 - 0x2C<32>, edi_1176, Mem1217[esp_1162 - 0x30<32>:word32], out edx_7724, out ebp_1221)
	Mem1231[ebp_1221 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1222 = <invalid>
	word32 ebp_1233
	word32 ebx_1234
	word32 edi_1236
	word32 ecx_7725
	word32 edx_7726
	word32 esi_7727
	branch SLICE(fn0041C1F0(ebx_1197, ebx_1197, ebp_1221, es, ds, Mem1231[esp_1222 + 0x2C<32>:word32], out ecx_7725, out edx_7726, out ebx_1234, out ebp_1233, out esi_7727, out edi_1236), byte, 0) == 0<8> l0041FA5A
l0041FA5A:
	Mem1253[ebp_1233 + 8<i32>:word32] = esp_1222 - 0x14<32>
	Mem1255[esp_1222 - 0x18<32>:word32] = 0x432880<32>
	word32 ebx_1257
	fn00402890(esp_1222 - 0x14<32>, Mem1255[esp_1222 - 0x1C<32>:word32], Mem1255[esp_1222 - 0x18<32>:word32], out ebx_1257)
	Mem1268[ebp_1233 - 4<i32>:word32] = 0x1A<32>
	Mem1272[esp_1222 - 0x30<32>:word32] = 0<32>
	Mem1277[esp_1222 - 0x30<32>:word32] = fn0040F760(edi_1236, Mem1272[esp_1222 - 0x30<32>:word32])
	word32 ebp_1281
	word32 edx_7736
	fn004028D0(esp_1222 - 0x2C<32>, edi_1236, Mem1277[esp_1222 - 0x30<32>:word32], out edx_7736, out ebp_1281)
	Mem1291[ebp_1281 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1282 = <invalid>
	word32 ebp_1293
	word32 ebx_1294
	word32 edi_1296
	word32 ecx_7737
	word32 edx_7738
	word32 esi_7739
	branch SLICE(fn0041C1F0(ebx_1257, ebx_1257, ebp_1281, es, ds, Mem1291[esp_1282 + 0x2C<32>:word32], out ecx_7737, out edx_7738, out ebx_1294, out ebp_1293, out esi_7739, out edi_1296), byte, 0) == 0<8> l0041FB02
l0041FB02:
	Mem1313[ebp_1293 + 8<i32>:word32] = esp_1282 - 0x14<32>
	Mem1315[esp_1282 - 0x18<32>:word32] = 0x432888<32>
	word32 ebx_1317
	fn00402890(esp_1282 - 0x14<32>, Mem1315[esp_1282 - 0x1C<32>:word32], Mem1315[esp_1282 - 0x18<32>:word32], out ebx_1317)
	Mem1328[ebp_1293 - 4<i32>:word32] = 0x1B<32>
	Mem1332[esp_1282 - 0x30<32>:word32] = 0<32>
	Mem1337[esp_1282 - 0x30<32>:word32] = fn0040F760(edi_1296, Mem1332[esp_1282 - 0x30<32>:word32])
	word32 ebp_1341
	word32 edx_7748
	fn004028D0(esp_1282 - 0x2C<32>, edi_1296, Mem1337[esp_1282 - 0x30<32>:word32], out edx_7748, out ebp_1341)
	Mem1351[ebp_1341 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1342 = <invalid>
	word32 ebp_1353
	word32 ebx_1354
	word32 edi_1356
	word32 ecx_7749
	word32 edx_7750
	word32 esi_7751
	branch SLICE(fn0041C1F0(ebx_1317, ebx_1317, ebp_1341, es, ds, Mem1351[esp_1342 + 0x2C<32>:word32], out ecx_7749, out edx_7750, out ebx_1354, out ebp_1353, out esi_7751, out edi_1356), byte, 0) == 0<8> l0041FBAA
l0041FBAA:
	Mem1373[ebp_1353 + 8<i32>:word32] = esp_1342 - 0x14<32>
	Mem1375[esp_1342 - 0x18<32>:word32] = 0x432890<32>
	word32 ebx_1377
	fn00402890(esp_1342 - 0x14<32>, Mem1375[esp_1342 - 0x1C<32>:word32], Mem1375[esp_1342 - 0x18<32>:word32], out ebx_1377)
	Mem1388[ebp_1353 - 4<i32>:word32] = 0x1C<32>
	Mem1392[esp_1342 - 0x30<32>:word32] = 0<32>
	Mem1397[esp_1342 - 0x30<32>:word32] = fn0040F760(edi_1356, Mem1392[esp_1342 - 0x30<32>:word32])
	word32 ebp_1401
	word32 edx_7760
	fn004028D0(esp_1342 - 0x2C<32>, edi_1356, Mem1397[esp_1342 - 0x30<32>:word32], out edx_7760, out ebp_1401)
	Mem1411[ebp_1401 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1402 = <invalid>
	word32 ebp_1413
	word32 ebx_1414
	word32 edi_1416
	word32 ecx_7761
	word32 edx_7762
	word32 esi_7763
	branch SLICE(fn0041C1F0(ebx_1377, ebx_1377, ebp_1401, es, ds, Mem1411[esp_1402 + 0x2C<32>:word32], out ecx_7761, out edx_7762, out ebx_1414, out ebp_1413, out esi_7763, out edi_1416), byte, 0) == 0<8> l0041FC52
l0041FC52:
	Mem1433[ebp_1413 + 8<i32>:word32] = esp_1402 - 0x14<32>
	Mem1435[esp_1402 - 0x18<32>:word32] = 0x432898<32>
	word32 ebx_1437
	fn00402890(esp_1402 - 0x14<32>, Mem1435[esp_1402 - 0x1C<32>:word32], Mem1435[esp_1402 - 0x18<32>:word32], out ebx_1437)
	Mem1448[ebp_1413 - 4<i32>:word32] = 0x1D<32>
	Mem1452[esp_1402 - 0x30<32>:word32] = 0<32>
	Mem1457[esp_1402 - 0x30<32>:word32] = fn0040F760(edi_1416, Mem1452[esp_1402 - 0x30<32>:word32])
	word32 ebp_1461
	word32 edx_7772
	fn004028D0(esp_1402 - 0x2C<32>, edi_1416, Mem1457[esp_1402 - 0x30<32>:word32], out edx_7772, out ebp_1461)
	Mem1471[ebp_1461 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1462 = <invalid>
	word32 ebp_1473
	word32 ebx_1474
	word32 edi_1476
	word32 ecx_7773
	word32 edx_7774
	word32 esi_7775
	branch SLICE(fn0041C1F0(ebx_1437, ebx_1437, ebp_1461, es, ds, Mem1471[esp_1462 + 0x2C<32>:word32], out ecx_7773, out edx_7774, out ebx_1474, out ebp_1473, out esi_7775, out edi_1476), byte, 0) == 0<8> l0041FCEA
l0041FCEA:
	Mem1493[ebp_1473 + 8<i32>:word32] = esp_1462 - 0x14<32>
	Mem1495[esp_1462 - 0x18<32>:word32] = 0x43289C<32>
	word32 ebx_1497
	fn00402890(esp_1462 - 0x14<32>, Mem1495[esp_1462 - 0x1C<32>:word32], Mem1495[esp_1462 - 0x18<32>:word32], out ebx_1497)
	Mem1508[ebp_1473 - 4<i32>:word32] = 0x1E<32>
	Mem1512[esp_1462 - 0x30<32>:word32] = 0<32>
	Mem1517[esp_1462 - 0x30<32>:word32] = fn0040F760(edi_1476, Mem1512[esp_1462 - 0x30<32>:word32])
	word32 ebp_1521
	word32 edx_7784
	fn004028D0(esp_1462 - 0x2C<32>, edi_1476, Mem1517[esp_1462 - 0x30<32>:word32], out edx_7784, out ebp_1521)
	Mem1531[ebp_1521 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1522 = <invalid>
	word32 ebp_1533
	word32 ebx_1534
	word32 edi_1536
	word32 ecx_7785
	word32 edx_7786
	word32 esi_7787
	branch SLICE(fn0041C1F0(ebx_1497, ebx_1497, ebp_1521, es, ds, Mem1531[esp_1522 + 0x2C<32>:word32], out ecx_7785, out edx_7786, out ebx_1534, out ebp_1533, out esi_7787, out edi_1536), byte, 0) == 0<8> l0041FD7D
l0041FD7D:
	Mem1553[ebp_1533 + 8<i32>:word32] = esp_1522 - 0x14<32>
	Mem1555[esp_1522 - 0x18<32>:word32] = 0x4328A4<32>
	word32 ebx_1557
	fn00402890(esp_1522 - 0x14<32>, Mem1555[esp_1522 - 0x1C<32>:word32], Mem1555[esp_1522 - 0x18<32>:word32], out ebx_1557)
	Mem1568[ebp_1533 - 4<i32>:word32] = 0x1F<32>
	Mem1572[esp_1522 - 0x30<32>:word32] = 0<32>
	Mem1577[esp_1522 - 0x30<32>:word32] = fn0040F760(edi_1536, Mem1572[esp_1522 - 0x30<32>:word32])
	word32 ebp_1581
	word32 edx_7796
	fn004028D0(esp_1522 - 0x2C<32>, edi_1536, Mem1577[esp_1522 - 0x30<32>:word32], out edx_7796, out ebp_1581)
	Mem1591[ebp_1581 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1582 = <invalid>
	word32 ebp_1593
	word32 ebx_1594
	word32 edi_1596
	word32 ecx_7797
	word32 edx_7798
	word32 esi_7799
	branch SLICE(fn0041C1F0(ebx_1557, ebx_1557, ebp_1581, es, ds, Mem1591[esp_1582 + 0x2C<32>:word32], out ecx_7797, out edx_7798, out ebx_1594, out ebp_1593, out esi_7799, out edi_1596), byte, 0) == 0<8> l0041FE10
l0041FE10:
	Mem1613[ebp_1593 + 8<i32>:word32] = esp_1582 - 0x14<32>
	Mem1615[esp_1582 - 0x18<32>:word32] = 0x4328AC<32>
	word32 ebx_1617
	fn00402890(esp_1582 - 0x14<32>, Mem1615[esp_1582 - 0x1C<32>:word32], Mem1615[esp_1582 - 0x18<32>:word32], out ebx_1617)
	Mem1628[ebp_1593 - 4<i32>:word32] = 0x20<32>
	Mem1632[esp_1582 - 0x30<32>:word32] = 0<32>
	Mem1637[esp_1582 - 0x30<32>:word32] = fn0040F760(edi_1596, Mem1632[esp_1582 - 0x30<32>:word32])
	word32 ebp_1641
	word32 edx_7810
	fn004028D0(esp_1582 - 0x2C<32>, edi_1596, Mem1637[esp_1582 - 0x30<32>:word32], out edx_7810, out ebp_1641)
	Mem1651[ebp_1641 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1642 = <invalid>
	word32 ebp_1653
	word32 ebx_1654
	word32 edi_1656
	word32 ecx_7811
	word32 edx_7812
	word32 esi_7813
	branch SLICE(fn0041C1F0(ebx_1617, ebx_1617, ebp_1641, es, ds, Mem1651[esp_1642 + 0x2C<32>:word32], out ecx_7811, out edx_7812, out ebx_1654, out ebp_1653, out esi_7813, out edi_1656), byte, 0) == 0<8> l0041FEB8
l0041FEB8:
	Mem1673[ebp_1653 + 8<i32>:word32] = esp_1642 - 0x14<32>
	Mem1675[esp_1642 - 0x18<32>:word32] = 0x4328B0<32>
	word32 ebx_1677
	fn00402890(esp_1642 - 0x14<32>, Mem1675[esp_1642 - 0x1C<32>:word32], Mem1675[esp_1642 - 0x18<32>:word32], out ebx_1677)
	Mem1688[ebp_1653 - 4<i32>:word32] = 0x21<32>
	Mem1692[esp_1642 - 0x30<32>:word32] = 0<32>
	Mem1697[esp_1642 - 0x30<32>:word32] = fn0040F760(edi_1656, Mem1692[esp_1642 - 0x30<32>:word32])
	word32 ebp_1701
	word32 edx_7824
	fn004028D0(esp_1642 - 0x2C<32>, edi_1656, Mem1697[esp_1642 - 0x30<32>:word32], out edx_7824, out ebp_1701)
	Mem1711[ebp_1701 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1702 = <invalid>
	word32 esp_1709 = esp_1702 + 4<32>
	word32 ebp_1713
	word32 ecx_7825
	word32 edx_7826
	word32 esi_7827
	word32 edi_1716
	word32 ebx_1714
	branch SLICE(fn0041C1F0(ebx_1677, ebx_1677, ebp_1701, es, ds, Mem1711[esp_1702 + 0x2C<32>:word32], out ecx_7825, out edx_7826, out ebx_1714, out ebp_1713, out esi_7827, out edi_1716), byte, 0) != 0<8> l0041FF3A
l0041FEF9:
	Mem1733[ebp_1713 + 8<i32>:word32] = esp_1702 - 0x14<32>
	Mem1735[esp_1702 - 0x18<32>:word32] = 0x4328B4<32>
	word32 ebx_1737
	fn00402890(esp_1702 - 0x14<32>, Mem1735[esp_1702 - 0x1C<32>:word32], Mem1735[esp_1702 - 0x18<32>:word32], out ebx_1737)
	Mem1748[ebp_1713 - 4<i32>:word32] = 0x22<32>
	Mem1752[esp_1702 - 0x30<32>:word32] = 0<32>
	Mem1757[esp_1702 - 0x30<32>:word32] = fn0040F760(edi_1716, Mem1752[esp_1702 - 0x30<32>:word32])
	word32 ebp_1761
	word32 edx_7844
	fn004028D0(esp_1702 - 0x2C<32>, edi_1716, Mem1757[esp_1702 - 0x30<32>:word32], out edx_7844, out ebp_1761)
	Mem1771[ebp_1761 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1762 = <invalid>
	esp_1709 = esp_1762 + 4<32>
	word32 ebp_1773
	word32 ecx_7845
	word32 edx_7846
	word32 esi_7847
	branch SLICE(fn0041C1F0(ebx_1737, ebx_1737, ebp_1761, es, ds, Mem1771[esp_1762 + 0x2C<32>:word32], out ecx_7845, out edx_7846, out ebx_1714, out ebp_1773, out esi_7847, out edi_1716), byte, 0) == 0<8> l0041FFA1
l0041FFA1:
	Mem1793[ebp_1773 + 8<i32>:word32] = esp_1762 - 0x14<32>
	Mem1795[esp_1762 - 0x18<32>:word32] = 0x4328B8<32>
	word32 ebx_1797
	fn00402890(esp_1762 - 0x14<32>, Mem1795[esp_1762 - 0x1C<32>:word32], Mem1795[esp_1762 - 0x18<32>:word32], out ebx_1797)
	Mem1808[ebp_1773 - 4<i32>:word32] = 0x23<32>
	Mem1812[esp_1762 - 0x30<32>:word32] = 0<32>
	Mem1817[esp_1762 - 0x30<32>:word32] = fn0040F760(edi_1716, Mem1812[esp_1762 - 0x30<32>:word32])
	word32 ebp_1821
	word32 edx_7848
	fn004028D0(esp_1762 - 0x2C<32>, edi_1716, Mem1817[esp_1762 - 0x30<32>:word32], out edx_7848, out ebp_1821)
	Mem1831[ebp_1821 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1822 = <invalid>
	word32 ebp_1833
	word32 ebx_1834
	word32 edi_1836
	word32 ecx_7849
	word32 edx_7850
	word32 esi_7851
	branch SLICE(fn0041C1F0(ebx_1797, ebx_1797, ebp_1821, es, ds, Mem1831[esp_1822 + 0x2C<32>:word32], out ecx_7849, out edx_7850, out ebx_1834, out ebp_1833, out esi_7851, out edi_1836), byte, 0) == 0<8> l00420049
l00420049:
	Mem1853[ebp_1833 + 8<i32>:word32] = esp_1822 - 0x14<32>
	Mem1855[esp_1822 - 0x18<32>:word32] = 0x4328BC<32>
	word32 ebx_1857
	fn00402890(esp_1822 - 0x14<32>, Mem1855[esp_1822 - 0x1C<32>:word32], Mem1855[esp_1822 - 0x18<32>:word32], out ebx_1857)
	Mem1868[ebp_1833 - 4<i32>:word32] = 0x24<32>
	Mem1872[esp_1822 - 0x30<32>:word32] = 0<32>
	Mem1877[esp_1822 - 0x30<32>:word32] = fn0040F760(edi_1836, Mem1872[esp_1822 - 0x30<32>:word32])
	word32 ebp_1881
	word32 edx_7852
	fn004028D0(esp_1822 - 0x2C<32>, edi_1836, Mem1877[esp_1822 - 0x30<32>:word32], out edx_7852, out ebp_1881)
	Mem1891[ebp_1881 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1882 = <invalid>
	word32 ebp_1893
	word32 ebx_1894
	word32 edi_1896
	word32 ecx_7853
	word32 edx_7854
	word32 esi_7855
	branch SLICE(fn0041C1F0(ebx_1857, ebx_1857, ebp_1881, es, ds, Mem1891[esp_1882 + 0x2C<32>:word32], out ecx_7853, out edx_7854, out ebx_1894, out ebp_1893, out esi_7855, out edi_1896), byte, 0) == 0<8> l004200F1
l004200F1:
	Mem1913[ebp_1893 + 8<i32>:word32] = esp_1882 - 0x14<32>
	Mem1915[esp_1882 - 0x18<32>:word32] = 0x4328C0<32>
	word32 ebx_1917
	fn00402890(esp_1882 - 0x14<32>, Mem1915[esp_1882 - 0x1C<32>:word32], Mem1915[esp_1882 - 0x18<32>:word32], out ebx_1917)
	Mem1928[ebp_1893 - 4<i32>:word32] = 0x25<32>
	Mem1932[esp_1882 - 0x30<32>:word32] = 0<32>
	Mem1937[esp_1882 - 0x30<32>:word32] = fn0040F760(edi_1896, Mem1932[esp_1882 - 0x30<32>:word32])
	word32 ebp_1941
	word32 edx_7864
	fn004028D0(esp_1882 - 0x2C<32>, edi_1896, Mem1937[esp_1882 - 0x30<32>:word32], out edx_7864, out ebp_1941)
	Mem1951[ebp_1941 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1942 = <invalid>
	word32 ebp_1953
	word32 ebx_1954
	word32 edi_1956
	word32 ecx_7865
	word32 edx_7866
	word32 esi_7867
	branch SLICE(fn0041C1F0(ebx_1917, ebx_1917, ebp_1941, es, ds, Mem1951[esp_1942 + 0x2C<32>:word32], out ecx_7865, out edx_7866, out ebx_1954, out ebp_1953, out esi_7867, out edi_1956), byte, 0) == 0<8> l00420199
l00420199:
	Mem1973[ebp_1953 + 8<i32>:word32] = esp_1942 - 0x14<32>
	Mem1975[esp_1942 - 0x18<32>:word32] = 0x4328C4<32>
	word32 ebx_1977
	fn00402890(esp_1942 - 0x14<32>, Mem1975[esp_1942 - 0x1C<32>:word32], Mem1975[esp_1942 - 0x18<32>:word32], out ebx_1977)
	Mem1988[ebp_1953 - 4<i32>:word32] = 0x26<32>
	Mem1992[esp_1942 - 0x30<32>:word32] = 0<32>
	Mem1997[esp_1942 - 0x30<32>:word32] = fn0040F760(edi_1956, Mem1992[esp_1942 - 0x30<32>:word32])
	word32 ebp_2001
	word32 edx_7876
	fn004028D0(esp_1942 - 0x2C<32>, edi_1956, Mem1997[esp_1942 - 0x30<32>:word32], out edx_7876, out ebp_2001)
	Mem2011[ebp_2001 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2002 = <invalid>
	word32 ebp_2013
	word32 ebx_2014
	word32 edi_2016
	word32 ecx_7877
	word32 edx_7878
	word32 esi_7879
	branch SLICE(fn0041C1F0(ebx_1977, ebx_1977, ebp_2001, es, ds, Mem2011[esp_2002 + 0x2C<32>:word32], out ecx_7877, out edx_7878, out ebx_2014, out ebp_2013, out esi_7879, out edi_2016), byte, 0) == 0<8> l00420233
l00420233:
	Mem2033[ebp_2013 + 8<i32>:word32] = esp_2002 - 0x14<32>
	Mem2035[esp_2002 - 0x18<32>:word32] = 0x4328C8<32>
	word32 ebx_2037
	fn00402890(esp_2002 - 0x14<32>, Mem2035[esp_2002 - 0x1C<32>:word32], Mem2035[esp_2002 - 0x18<32>:word32], out ebx_2037)
	Mem2048[ebp_2013 - 4<i32>:word32] = 0x27<32>
	Mem2052[esp_2002 - 0x30<32>:word32] = 0<32>
	Mem2057[esp_2002 - 0x30<32>:word32] = fn0040F760(edi_2016, Mem2052[esp_2002 - 0x30<32>:word32])
	word32 ebp_2061
	word32 edx_7888
	fn004028D0(esp_2002 - 0x2C<32>, edi_2016, Mem2057[esp_2002 - 0x30<32>:word32], out edx_7888, out ebp_2061)
	Mem2071[ebp_2061 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2062 = <invalid>
	word32 ebp_2073
	word32 ebx_2074
	word32 edi_2076
	word32 ecx_7889
	word32 edx_7890
	word32 esi_7891
	branch SLICE(fn0041C1F0(ebx_2037, ebx_2037, ebp_2061, es, ds, Mem2071[esp_2062 + 0x2C<32>:word32], out ecx_7889, out edx_7890, out ebx_2074, out ebp_2073, out esi_7891, out edi_2076), byte, 0) == 0<8> l004202DE
l004202DE:
	Mem2093[ebp_2073 + 8<i32>:word32] = esp_2062 - 0x14<32>
	Mem2095[esp_2062 - 0x18<32>:word32] = 0x4328CC<32>
	word32 ebx_2097
	fn00402890(esp_2062 - 0x14<32>, Mem2095[esp_2062 - 0x1C<32>:word32], Mem2095[esp_2062 - 0x18<32>:word32], out ebx_2097)
	Mem2108[ebp_2073 - 4<i32>:word32] = 0x28<32>
	Mem2112[esp_2062 - 0x30<32>:word32] = 0<32>
	Mem2117[esp_2062 - 0x30<32>:word32] = fn0040F760(edi_2076, Mem2112[esp_2062 - 0x30<32>:word32])
	word32 ebp_2121
	word32 edx_7900
	fn004028D0(esp_2062 - 0x2C<32>, edi_2076, Mem2117[esp_2062 - 0x30<32>:word32], out edx_7900, out ebp_2121)
	Mem2131[ebp_2121 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2122 = <invalid>
	word32 ebp_2133
	word32 ebx_2134
	word32 edi_2136
	word32 ecx_7901
	word32 edx_7902
	word32 esi_7903
	branch SLICE(fn0041C1F0(ebx_2097, ebx_2097, ebp_2121, es, ds, Mem2131[esp_2122 + 0x2C<32>:word32], out ecx_7901, out edx_7902, out ebx_2134, out ebp_2133, out esi_7903, out edi_2136), byte, 0) == 0<8> l00420386
l00420386:
	Mem2153[ebp_2133 + 8<i32>:word32] = esp_2122 - 0x14<32>
	Mem2155[esp_2122 - 0x18<32>:word32] = 0x4328D0<32>
	word32 ebx_2157
	fn00402890(esp_2122 - 0x14<32>, Mem2155[esp_2122 - 0x1C<32>:word32], Mem2155[esp_2122 - 0x18<32>:word32], out ebx_2157)
	Mem2168[ebp_2133 - 4<i32>:word32] = 0x29<32>
	Mem2172[esp_2122 - 0x30<32>:word32] = 0<32>
	Mem2177[esp_2122 - 0x30<32>:word32] = fn0040F760(edi_2136, Mem2172[esp_2122 - 0x30<32>:word32])
	word32 ebp_2181
	word32 edx_7912
	fn004028D0(esp_2122 - 0x2C<32>, edi_2136, Mem2177[esp_2122 - 0x30<32>:word32], out edx_7912, out ebp_2181)
	Mem2191[ebp_2181 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2182 = <invalid>
	word32 ebp_2193
	word32 ebx_2194
	word32 edi_2196
	word32 ecx_7913
	word32 edx_7914
	word32 esi_7915
	branch SLICE(fn0041C1F0(ebx_2157, ebx_2157, ebp_2181, es, ds, Mem2191[esp_2182 + 0x2C<32>:word32], out ecx_7913, out edx_7914, out ebx_2194, out ebp_2193, out esi_7915, out edi_2196), byte, 0) == 0<8> l00420419
l00420419:
	Mem2213[ebp_2193 + 8<i32>:word32] = esp_2182 - 0x14<32>
	Mem2215[esp_2182 - 0x18<32>:word32] = 0x4328D8<32>
	word32 ebx_2217
	fn00402890(esp_2182 - 0x14<32>, Mem2215[esp_2182 - 0x1C<32>:word32], Mem2215[esp_2182 - 0x18<32>:word32], out ebx_2217)
	Mem2228[ebp_2193 - 4<i32>:word32] = 0x2A<32>
	Mem2232[esp_2182 - 0x30<32>:word32] = 0<32>
	Mem2237[esp_2182 - 0x30<32>:word32] = fn0040F760(edi_2196, Mem2232[esp_2182 - 0x30<32>:word32])
	word32 ebp_2241
	word32 edx_7924
	fn004028D0(esp_2182 - 0x2C<32>, edi_2196, Mem2237[esp_2182 - 0x30<32>:word32], out edx_7924, out ebp_2241)
	Mem2251[ebp_2241 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_2242 = <invalid>
	esp_2249 = esp_2242 + 4<32>
	word32 ebx_2254
	word32 edi_2256
	word32 ecx_7925
	word32 edx_7926
	word32 esi_7927
	branch SLICE(fn0041C1F0(ebx_2217, ebx_2217, ebp_2241, es, ds, Mem2251[esp_2242 + 0x2C<32>:word32], out ecx_7925, out edx_7926, out ebx_2254, out ebp_2253, out esi_7927, out edi_2256), byte, 0) == 0<8> l004204AC
l0042045A:
	Mem2271[esp_2242:word32] = 3<32>
	Mem2277[esp_2242:word32] = fn0040F760(edi_2256, Mem2271[esp_2242:word32])
	word32 esp_2294 = <invalid>
	word32 ebx_2281
	word32 edi_2283
	word32 ecx_7938
	word32 ebp_7939
	word32 esi_7940
	Mem2303[esp_2294:word32] = fn0041C910(ebx_2254, es, ds, Mem2277[esp_2242:word32], Mem2277[esp_2242 + 36<i32>:word32], out ecx_7938, out ebx_2281, out ebp_7939, out esi_7940, out edi_2283)
	Mem2305[esp_2294 - 4<i32>:word32] = 2<32>
	Mem2311[esp_2294 - 4<i32>:word32] = fn0040F760(edi_2283, Mem2305[esp_2294 - 4<i32>:word32])
	word32 esp_2328 = <invalid>
	word32 ebx_2315
	word32 edi_2317
	word32 ecx_7941
	word32 ebp_7942
	word32 esi_7943
	Mem2337[esp_2328:word32] = fn0041C910(ebx_2281, es, ds, Mem2311[esp_2294 - 4<i32>:word32], Mem2311[esp_2294 + 32<i32>:word32], out ecx_7941, out ebx_2315, out ebp_7942, out esi_7943, out edi_2317)
	Mem2339[esp_2328 - 4<i32>:word32] = 1<32>
	Mem2345[esp_2328 - 4<i32>:word32] = fn0040F760(edi_2317, Mem2339[esp_2328 - 4<i32>:word32])
	word32 esp_2362 = <invalid>
	word32 ecx_7944
	word32 esi_7945
	word32 edi_7946
	Mem2371[esp_2362:word32] = fn0041C910(ebx_2315, es, ds, Mem2345[esp_2328 - 4<i32>:word32], Mem2345[esp_2328 + 32<i32>:word32], out ecx_7944, out ebx_2349, out ebp_2253, out esi_7945, out edi_7946)
	word32 ecx_7947
	word32 eax_2373 = fn0041C680(Mem2371[esp_2362:word32], Mem2371[esp_2362 + 4<i32>:word32], Mem2371[esp_2362 + 8<i32>:word32], out ecx_7947)
	Mem2391[esp_2362 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_2373
	esp_2249 = esp_2362 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem2391[esp_2362 + 8<32>:word32]) + 0x42A<32>
l004203C7:
	Mem2414[esp_2182:word32] = 3<32>
	Mem2420[esp_2182:word32] = fn0040F760(edi_2196, Mem2414[esp_2182:word32])
	word32 esp_2437 = <invalid>
	word32 ebx_2424
	word32 edi_2426
	word32 ecx_7928
	word32 ebp_7929
	word32 esi_7930
	Mem2446[esp_2437:word32] = fn0041C910(ebx_2194, es, ds, Mem2420[esp_2182:word32], Mem2420[esp_2182 + 36<i32>:word32], out ecx_7928, out ebx_2424, out ebp_7929, out esi_7930, out edi_2426)
	Mem2448[esp_2437 - 4<i32>:word32] = 2<32>
	Mem2454[esp_2437 - 4<i32>:word32] = fn0040F760(edi_2426, Mem2448[esp_2437 - 4<i32>:word32])
	word32 esp_2471 = <invalid>
	word32 ebx_2458
	word32 edi_2460
	word32 ecx_7931
	word32 ebp_7932
	word32 esi_7933
	Mem2480[esp_2471:word32] = fn0041C910(ebx_2424, es, ds, Mem2454[esp_2437 - 4<i32>:word32], Mem2454[esp_2437 + 32<i32>:word32], out ecx_7931, out ebx_2458, out ebp_7932, out esi_7933, out edi_2460)
	Mem2482[esp_2471 - 4<i32>:word32] = 1<32>
	Mem2488[esp_2471 - 4<i32>:word32] = fn0040F760(edi_2460, Mem2482[esp_2471 - 4<i32>:word32])
	word32 esp_2505 = <invalid>
	word32 ecx_7934
	word32 esi_7935
	word32 edi_7936
	Mem2514[esp_2505:word32] = fn0041C910(ebx_2458, es, ds, Mem2488[esp_2471 - 4<i32>:word32], Mem2488[esp_2471 + 32<i32>:word32], out ecx_7934, out ebx_2349, out ebp_2253, out esi_7935, out edi_7936)
	word32 ecx_7937
	word32 eax_2516 = fn0041C680(Mem2514[esp_2505:word32], Mem2514[esp_2505 + 4<i32>:word32], Mem2514[esp_2505 + 8<i32>:word32], out ecx_7937)
	Mem2534[esp_2505 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_2516
	esp_2249 = esp_2505 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem2534[esp_2505 + 8<32>:word32]) + 0x4AA<32>
l0042031F:
	Mem2557[esp_2122:word32] = 3<32>
	Mem2563[esp_2122:word32] = fn0040F760(edi_2136, Mem2557[esp_2122:word32])
	word32 esp_2580 = <invalid>
	word32 ebx_2567
	word32 edi_2569
	word32 ecx_7916
	word32 ebp_7917
	word32 esi_7918
	Mem2589[esp_2580:word32] = fn0041C910(ebx_2134, es, ds, Mem2563[esp_2122:word32], Mem2563[esp_2122 + 36<i32>:word32], out ecx_7916, out ebx_2567, out ebp_7917, out esi_7918, out edi_2569)
	Mem2591[esp_2580 - 4<i32>:word32] = 0<32>
	Mem2593[esp_2580 - 8<i32>:word32] = 2<32>
	word32 esi_7919
	Mem2615[esp_2580 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_2569, Mem2593[esp_2580 - 8<i32>:word32]), 0<32>, ebx_2567, es, ds, Mem2593[esp_2580 - 4<32>:word32], out esi_7919)
	Mem2617[esp_2580 - 8<i32>:word32] = 1<32>
	Mem2622[esp_2580 - 8<32>:word32] = fn0040F760(edi_2569, Mem2617[esp_2580 - 8<i32>:word32])
	word32 esp_2639 = <invalid>
	word32 ebp_2625
	word32 ebx_2626
	word32 ecx_7920
	word32 esi_7921
	word32 edi_7922
	Mem2648[esp_2639:word32] = fn0041C910(ebx_2567, es, ds, Mem2622[esp_2580 - 8<32>:word32], Mem2622[esp_2580 + 0x1C<32>:word32], out ecx_7920, out ebx_2626, out ebp_2625, out esi_7921, out edi_7922)
	word32 edx_7923
	word32 eax_2650 = fn0041C740(Mem2648[esp_2639:word32], Mem2648[esp_2639 + 4<i32>:word16], Mem2648[esp_2639 + 8<i32>:word32], out edx_7923)
	Mem2668[esp_2639 + 8<32>:word32] = 0x2E<32>
	Mem2690[ebx_2626 + 96<i32>:word32] = eax_2650 + fn0041C5C0(Mem2668[esp_2639 + 8<32>:word32])
	Mem2692[fs:0x00000000<p32>:word32] = Mem2690[ebp_2625 - 12<i32>:word32]
	word32 ecx_2693 = Mem2692[esp_2639 + 0xC<32>:word32]
	word32 esi_2697 = Mem2692[esp_2639 + 0x14<32>:word32]
	ebpOut = Mem2692[ebp_2625:word32]
	esiOut = esi_2697
	return ecx_2693
l00420274:
	Mem2704[esp_2062:word32] = 3<32>
	Mem2710[esp_2062:word32] = fn0040F760(edi_2076, Mem2704[esp_2062:word32])
	word32 esp_2727 = <invalid>
	word32 ebx_2714
	word32 edi_2716
	word32 ecx_7904
	word32 ebp_7905
	word32 esi_7906
	Mem2736[esp_2727:word32] = fn0041C910(ebx_2074, es, ds, Mem2710[esp_2062:word32], Mem2710[esp_2062 + 36<i32>:word32], out ecx_7904, out ebx_2714, out ebp_7905, out esi_7906, out edi_2716)
	Mem2738[esp_2727 - 4<i32>:word32] = 0<32>
	Mem2740[esp_2727 - 8<i32>:word32] = 2<32>
	word32 esi_7907
	Mem2763[esp_2727 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_2716, Mem2740[esp_2727 - 8<i32>:word32]), 0<32>, ebx_2714, es, ds, Mem2740[esp_2727 - 4<32>:word32], out esi_7907) << 2<32>
	Mem2765[esp_2727 - 8<i32>:word32] = 1<32>
	Mem2770[esp_2727 - 8<32>:word32] = fn0040F760(edi_2716, Mem2765[esp_2727 - 8<i32>:word32])
	word32 esp_2787 = <invalid>
	word32 ebp_2773
	word32 ebx_2774
	word32 ecx_7908
	word32 esi_7909
	word32 edi_7910
	Mem2796[esp_2787:word32] = fn0041C910(ebx_2714, es, ds, Mem2770[esp_2727 - 8<32>:word32], Mem2770[esp_2727 + 0x1C<32>:word32], out ecx_7908, out ebx_2774, out ebp_2773, out esi_7909, out edi_7910)
	word32 edx_7911
	word32 eax_2798 = fn0041C740(Mem2796[esp_2787:word32], Mem2796[esp_2787 + 4<i32>:word16], Mem2796[esp_2787 + 8<i32>:word32], out edx_7911)
	Mem2816[esp_2787 + 8<32>:word32] = 0x3A<32>
	Mem2838[ebx_2774 + 96<i32>:word32] = eax_2798 + fn0041C5C0(Mem2816[esp_2787 + 8<32>:word32])
	Mem2840[fs:0x00000000<p32>:word32] = Mem2838[ebp_2773 - 12<i32>:word32]
	word32 ecx_2841 = Mem2840[esp_2787 + 0xC<32>:word32]
	word32 esi_2845 = Mem2840[esp_2787 + 0x14<32>:word32]
	ebpOut = Mem2840[ebp_2773:word32]
	esiOut = esi_2845
	return ecx_2841
l004201DA:
	Mem2852[esp_2002:word32] = 3<32>
	Mem2858[esp_2002:word32] = fn0040F760(edi_2016, Mem2852[esp_2002:word32])
	word32 esp_2875 = <invalid>
	word32 ebx_2862
	word32 edi_2864
	word32 ecx_7892
	word32 ebp_7893
	word32 esi_7894
	Mem2884[esp_2875:word32] = fn0041C910(ebx_2014, es, ds, Mem2858[esp_2002:word32], Mem2858[esp_2002 + 36<i32>:word32], out ecx_7892, out ebx_2862, out ebp_7893, out esi_7894, out edi_2864)
	Mem2886[esp_2875 - 4<i32>:word32] = 0<32>
	Mem2888[esp_2875 - 8<i32>:word32] = 2<32>
	word32 esi_7895
	Mem2911[esp_2875 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_2864, Mem2888[esp_2875 - 8<i32>:word32]), 0<32>, ebx_2862, es, ds, Mem2888[esp_2875 - 4<32>:word32], out esi_7895) << 2<32>
	Mem2913[esp_2875 - 8<i32>:word32] = 1<32>
	Mem2918[esp_2875 - 8<32>:word32] = fn0040F760(edi_2864, Mem2913[esp_2875 - 8<i32>:word32])
	word32 esp_2935 = <invalid>
	word32 ecx_7896
	word32 esi_7897
	word32 edi_7898
	Mem2944[esp_2935:word32] = fn0041C910(ebx_2862, es, ds, Mem2918[esp_2875 - 8<32>:word32], Mem2918[esp_2875 + 0x1C<32>:word32], out ecx_7896, out ebx_2349, out ebp_2253, out esi_7897, out edi_7898)
	word32 edx_7899
	word32 eax_2946 = fn0041C740(Mem2944[esp_2935:word32], Mem2944[esp_2935 + 4<i32>:word16], Mem2944[esp_2935 + 8<i32>:word32], out edx_7899)
	Mem2964[esp_2935 + 8<32>:word32] = 0x3A<32>
	esi_2393 = eax_2946
	esp_2249 = esp_2935 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem2964[esp_2935 + 8<32>:word32]) + 2<32>
l00420132:
	Mem2987[esp_1942:word32] = 3<32>
	Mem2993[esp_1942:word32] = fn0040F760(edi_1956, Mem2987[esp_1942:word32])
	word32 esp_3010 = <invalid>
	word32 ebx_2997
	word32 edi_2999
	word32 ecx_7880
	word32 ebp_7881
	word32 esi_7882
	Mem3019[esp_3010:word32] = fn0041C910(ebx_1954, es, ds, Mem2993[esp_1942:word32], Mem2993[esp_1942 + 36<i32>:word32], out ecx_7880, out ebx_2997, out ebp_7881, out esi_7882, out edi_2999)
	Mem3021[esp_3010 - 4<i32>:word32] = 0<32>
	Mem3023[esp_3010 - 8<i32>:word32] = 2<32>
	word32 esi_7883
	Mem3045[esp_3010 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_2999, Mem3023[esp_3010 - 8<i32>:word32]), 0<32>, ebx_2997, es, ds, Mem3023[esp_3010 - 4<32>:word32], out esi_7883)
	Mem3047[esp_3010 - 8<i32>:word32] = 1<32>
	Mem3052[esp_3010 - 8<32>:word32] = fn0040F760(edi_2999, Mem3047[esp_3010 - 8<i32>:word32])
	word32 esp_3069 = <invalid>
	word32 ebp_3055
	word32 ebx_3056
	word32 ecx_7884
	word32 esi_7885
	word32 edi_7886
	Mem3078[esp_3069:word32] = fn0041C910(ebx_2997, es, ds, Mem3052[esp_3010 - 8<32>:word32], Mem3052[esp_3010 + 0x1C<32>:word32], out ecx_7884, out ebx_3056, out ebp_3055, out esi_7885, out edi_7886)
	word32 edx_7887
	word32 eax_3080 = fn0041C740(Mem3078[esp_3069:word32], Mem3078[esp_3069 + 4<i32>:word16], Mem3078[esp_3069 + 8<i32>:word32], out edx_7887)
	Mem3098[esp_3069 + 8<32>:word32] = 0x32<32>
	Mem3120[ebx_3056 + 96<i32>:word32] = eax_3080 + fn0041C5C0(Mem3098[esp_3069 + 8<32>:word32])
	Mem3122[fs:0x00000000<p32>:word32] = Mem3120[ebp_3055 - 12<i32>:word32]
	word32 ecx_3123 = Mem3122[esp_3069 + 0xC<32>:word32]
	word32 esi_3127 = Mem3122[esp_3069 + 0x14<32>:word32]
	ebpOut = Mem3122[ebp_3055:word32]
	esiOut = esi_3127
	return ecx_3123
l0042008A:
	Mem3134[esp_1882:word32] = 3<32>
	Mem3140[esp_1882:word32] = fn0040F760(edi_1896, Mem3134[esp_1882:word32])
	word32 esp_3157 = <invalid>
	word32 ebx_3144
	word32 edi_3146
	word32 ecx_7868
	word32 ebp_7869
	word32 esi_7870
	Mem3166[esp_3157:word32] = fn0041C910(ebx_1894, es, ds, Mem3140[esp_1882:word32], Mem3140[esp_1882 + 36<i32>:word32], out ecx_7868, out ebx_3144, out ebp_7869, out esi_7870, out edi_3146)
	Mem3168[esp_3157 - 4<i32>:word32] = 0<32>
	Mem3170[esp_3157 - 8<i32>:word32] = 2<32>
	word32 esi_7871
	Mem3192[esp_3157 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_3146, Mem3170[esp_3157 - 8<i32>:word32]), 0<32>, ebx_3144, es, ds, Mem3170[esp_3157 - 4<32>:word32], out esi_7871)
	Mem3194[esp_3157 - 8<i32>:word32] = 1<32>
	Mem3199[esp_3157 - 8<32>:word32] = fn0040F760(edi_3146, Mem3194[esp_3157 - 8<i32>:word32])
	word32 esp_3216 = <invalid>
	word32 ebp_3202
	word32 ebx_3203
	word32 ecx_7872
	word32 esi_7873
	word32 edi_7874
	Mem3225[esp_3216:word32] = fn0041C910(ebx_3144, es, ds, Mem3199[esp_3157 - 8<32>:word32], Mem3199[esp_3157 + 0x1C<32>:word32], out ecx_7872, out ebx_3203, out ebp_3202, out esi_7873, out edi_7874)
	word32 edx_7875
	word32 eax_3227 = fn0041C740(Mem3225[esp_3216:word32], Mem3225[esp_3216 + 4<i32>:word16], Mem3225[esp_3216 + 8<i32>:word32], out edx_7875)
	Mem3245[esp_3216 + 8<32>:word32] = 0x30<32>
	Mem3267[ebx_3203 + 96<i32>:word32] = eax_3227 + fn0041C5C0(Mem3245[esp_3216 + 8<32>:word32])
	Mem3269[fs:0x00000000<p32>:word32] = Mem3267[ebp_3202 - 12<i32>:word32]
	word32 ecx_3270 = Mem3269[esp_3216 + 0xC<32>:word32]
	word32 esi_3274 = Mem3269[esp_3216 + 0x14<32>:word32]
	ebpOut = Mem3269[ebp_3202:word32]
	esiOut = esi_3274
	return ecx_3270
l0041FFE2:
	Mem3281[esp_1822:word32] = 3<32>
	Mem3287[esp_1822:word32] = fn0040F760(edi_1836, Mem3281[esp_1822:word32])
	word32 esp_3304 = <invalid>
	word32 ebx_3291
	word32 edi_3293
	word32 ecx_7856
	word32 ebp_7857
	word32 esi_7858
	Mem3313[esp_3304:word32] = fn0041C910(ebx_1834, es, ds, Mem3287[esp_1822:word32], Mem3287[esp_1822 + 36<i32>:word32], out ecx_7856, out ebx_3291, out ebp_7857, out esi_7858, out edi_3293)
	Mem3315[esp_3304 - 4<i32>:word32] = 0<32>
	Mem3317[esp_3304 - 8<i32>:word32] = 2<32>
	word32 esi_7859
	Mem3339[esp_3304 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_3293, Mem3317[esp_3304 - 8<i32>:word32]), 0<32>, ebx_3291, es, ds, Mem3317[esp_3304 - 4<32>:word32], out esi_7859)
	Mem3341[esp_3304 - 8<i32>:word32] = 1<32>
	Mem3346[esp_3304 - 8<32>:word32] = fn0040F760(edi_3293, Mem3341[esp_3304 - 8<i32>:word32])
	word32 esp_3363 = <invalid>
	word32 ebp_3349
	word32 ebx_3350
	word32 ecx_7860
	word32 esi_7861
	word32 edi_7862
	Mem3372[esp_3363:word32] = fn0041C910(ebx_3291, es, ds, Mem3346[esp_3304 - 8<32>:word32], Mem3346[esp_3304 + 0x1C<32>:word32], out ecx_7860, out ebx_3350, out ebp_3349, out esi_7861, out edi_7862)
	word32 edx_7863
	word32 eax_3374 = fn0041C740(Mem3372[esp_3363:word32], Mem3372[esp_3363 + 4<i32>:word16], Mem3372[esp_3363 + 8<i32>:word32], out edx_7863)
	Mem3392[esp_3363 + 8<32>:word32] = 0x20<32>
	Mem3414[ebx_3350 + 96<i32>:word32] = eax_3374 + fn0041C5C0(Mem3392[esp_3363 + 8<32>:word32])
	Mem3416[fs:0x00000000<p32>:word32] = Mem3414[ebp_3349 - 12<i32>:word32]
	word32 ecx_3417 = Mem3416[esp_3363 + 0xC<32>:word32]
	word32 esi_3421 = Mem3416[esp_3363 + 0x14<32>:word32]
	ebpOut = Mem3416[ebp_3349:word32]
	esiOut = esi_3421
	return ecx_3417
l0041FF3A:
	word32 esp_3428 = esp_1709 - 4<i32>
	Mem3429[esp_3428:word32] = 3<32>
	Mem3436[esp_3428:word32] = fn0040F760(edi_1716, Mem3429[esp_3428:word32])
	word32 esp_3460 = <invalid>
	word32 ebx_3447
	word32 edi_3449
	word32 ecx_7836
	word32 ebp_7837
	word32 esi_7838
	Mem3469[esp_3460:word32] = fn0041C910(ebx_1714, es, ds, Mem3436[esp_3428:word32], Mem3436[esp_3428 + 36<i32>:word32], out ecx_7836, out ebx_3447, out ebp_7837, out esi_7838, out edi_3449)
	Mem3471[esp_3460 - 4<i32>:word32] = 0<32>
	Mem3473[esp_3460 - 8<i32>:word32] = 2<32>
	word32 esi_7839
	Mem3495[esp_3460 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_3449, Mem3473[esp_3460 - 8<i32>:word32]), 0<32>, ebx_3447, es, ds, Mem3473[esp_3460 - 4<32>:word32], out esi_7839)
	Mem3497[esp_3460 - 8<i32>:word32] = 1<32>
	Mem3502[esp_3460 - 8<32>:word32] = fn0040F760(edi_3449, Mem3497[esp_3460 - 8<i32>:word32])
	word32 esp_3519 = <invalid>
	word32 ebp_3505
	word32 ebx_3506
	word32 ecx_7840
	word32 esi_7841
	word32 edi_7842
	Mem3528[esp_3519:word32] = fn0041C910(ebx_3447, es, ds, Mem3502[esp_3460 - 8<32>:word32], Mem3502[esp_3460 + 0x1C<32>:word32], out ecx_7840, out ebx_3506, out ebp_3505, out esi_7841, out edi_7842)
	word32 edx_7843
	word32 eax_3530 = fn0041C740(Mem3528[esp_3519:word32], Mem3528[esp_3519 + 4<i32>:word16], Mem3528[esp_3519 + 8<i32>:word32], out edx_7843)
	Mem3548[esp_3519 + 8<32>:word32] = 0x28<32>
	Mem3570[ebx_3506 + 96<i32>:word32] = eax_3530 + fn0041C5C0(Mem3548[esp_3519 + 8<32>:word32])
	Mem3572[fs:0x00000000<p32>:word32] = Mem3570[ebp_3505 - 12<i32>:word32]
	word32 ecx_3573 = Mem3572[esp_3519 + 0xC<32>:word32]
	word32 esi_3577 = Mem3572[esp_3519 + 0x14<32>:word32]
	ebpOut = Mem3572[ebp_3505:word32]
	esiOut = esi_3577
	return ecx_3573
l0041FE51:
	Mem3584[esp_1642:word32] = 3<32>
	Mem3590[esp_1642:word32] = fn0040F760(edi_1656, Mem3584[esp_1642:word32])
	word32 esp_3607 = <invalid>
	word32 ebx_3594
	word32 edi_3596
	word32 ecx_7828
	word32 ebp_7829
	word32 esi_7830
	Mem3616[esp_3607:word32] = fn0041C910(ebx_1654, es, ds, Mem3590[esp_1642:word32], Mem3590[esp_1642 + 36<i32>:word32], out ecx_7828, out ebx_3594, out ebp_7829, out esi_7830, out edi_3596)
	Mem3618[esp_3607 - 4<i32>:word32] = 0<32>
	Mem3620[esp_3607 - 8<i32>:word32] = 2<32>
	word32 esi_7831
	Mem3642[esp_3607 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_3596, Mem3620[esp_3607 - 8<i32>:word32]), 0<32>, ebx_3594, es, ds, Mem3620[esp_3607 - 4<32>:word32], out esi_7831)
	Mem3644[esp_3607 - 8<i32>:word32] = 1<32>
	Mem3649[esp_3607 - 8<32>:word32] = fn0040F760(edi_3596, Mem3644[esp_3607 - 8<i32>:word32])
	word32 esp_3666 = <invalid>
	word32 ebp_3652
	word32 ebx_3653
	word32 ecx_7832
	word32 esi_7833
	word32 edi_7834
	Mem3675[esp_3666:word32] = fn0041C910(ebx_3594, es, ds, Mem3649[esp_3607 - 8<32>:word32], Mem3649[esp_3607 + 0x1C<32>:word32], out ecx_7832, out ebx_3653, out ebp_3652, out esi_7833, out edi_7834)
	word32 edx_7835
	word32 eax_3677 = fn0041C740(Mem3675[esp_3666:word32], Mem3675[esp_3666 + 4<i32>:word16], Mem3675[esp_3666 + 8<i32>:word32], out edx_7835)
	Mem3695[esp_3666 + 8<32>:word32] = 0x22<32>
	Mem3717[ebx_3653 + 96<i32>:word32] = eax_3677 + fn0041C5C0(Mem3695[esp_3666 + 8<32>:word32])
	Mem3719[fs:0x00000000<p32>:word32] = Mem3717[ebp_3652 - 12<i32>:word32]
	word32 ecx_3720 = Mem3719[esp_3666 + 0xC<32>:word32]
	word32 esi_3724 = Mem3719[esp_3666 + 0x14<32>:word32]
	ebpOut = Mem3719[ebp_3652:word32]
	esiOut = esi_3724
	return ecx_3720
l0041FDBE:
	Mem3731[esp_1582:word32] = 3<32>
	Mem3737[esp_1582:word32] = fn0040F760(edi_1596, Mem3731[esp_1582:word32])
	word32 esp_3754 = <invalid>
	word32 ebx_3741
	word32 edi_3743
	word32 ecx_7814
	word32 ebp_7815
	word32 esi_7816
	Mem3763[esp_3754:word32] = fn0041C910(ebx_1594, es, ds, Mem3737[esp_1582:word32], Mem3737[esp_1582 + 36<i32>:word32], out ecx_7814, out ebx_3741, out ebp_7815, out esi_7816, out edi_3743)
	Mem3765[esp_3754 - 4<i32>:word32] = 2<32>
	Mem3771[esp_3754 - 4<i32>:word32] = fn0040F760(edi_3743, Mem3765[esp_3754 - 4<i32>:word32])
	word32 esp_3788 = <invalid>
	word32 ebx_3775
	word32 edi_3777
	word32 ecx_7817
	word32 ebp_7818
	word32 esi_7819
	Mem3797[esp_3788:word32] = fn0041C910(ebx_3741, es, ds, Mem3771[esp_3754 - 4<i32>:word32], Mem3771[esp_3754 + 32<i32>:word32], out ecx_7817, out ebx_3775, out ebp_7818, out esi_7819, out edi_3777)
	Mem3799[esp_3788 - 4<i32>:word32] = 1<32>
	Mem3805[esp_3788 - 4<i32>:word32] = fn0040F760(edi_3777, Mem3799[esp_3788 - 4<i32>:word32])
	word32 esp_3822 = <invalid>
	word32 ecx_7820
	word32 esi_7821
	word32 edi_7822
	Mem3831[esp_3822:word32] = fn0041C910(ebx_3775, es, ds, Mem3805[esp_3788 - 4<i32>:word32], Mem3805[esp_3788 + 32<i32>:word32], out ecx_7820, out ebx_2349, out ebp_2253, out esi_7821, out edi_7822)
	word32 ecx_7823
	word32 eax_3833 = fn0041C680(Mem3831[esp_3822:word32], Mem3831[esp_3822 + 4<i32>:word32], Mem3831[esp_3822 + 8<i32>:word32], out ecx_7823)
	Mem3851[esp_3822 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_3833
	esp_2249 = esp_3822 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem3851[esp_3822 + 8<32>:word32]) + 0x42C<32>
l0041FD2B:
	Mem3874[esp_1522:word32] = 3<32>
	Mem3880[esp_1522:word32] = fn0040F760(edi_1536, Mem3874[esp_1522:word32])
	word32 esp_3897 = <invalid>
	word32 ebx_3884
	word32 edi_3886
	word32 ecx_7800
	word32 ebp_7801
	word32 esi_7802
	Mem3906[esp_3897:word32] = fn0041C910(ebx_1534, es, ds, Mem3880[esp_1522:word32], Mem3880[esp_1522 + 36<i32>:word32], out ecx_7800, out ebx_3884, out ebp_7801, out esi_7802, out edi_3886)
	Mem3908[esp_3897 - 4<i32>:word32] = 2<32>
	Mem3914[esp_3897 - 4<i32>:word32] = fn0040F760(edi_3886, Mem3908[esp_3897 - 4<i32>:word32])
	word32 esp_3931 = <invalid>
	word32 ebx_3918
	word32 edi_3920
	word32 ecx_7803
	word32 ebp_7804
	word32 esi_7805
	Mem3940[esp_3931:word32] = fn0041C910(ebx_3884, es, ds, Mem3914[esp_3897 - 4<i32>:word32], Mem3914[esp_3897 + 32<i32>:word32], out ecx_7803, out ebx_3918, out ebp_7804, out esi_7805, out edi_3920)
	Mem3942[esp_3931 - 4<i32>:word32] = 1<32>
	Mem3948[esp_3931 - 4<i32>:word32] = fn0040F760(edi_3920, Mem3942[esp_3931 - 4<i32>:word32])
	word32 esp_3965 = <invalid>
	word32 ecx_7806
	word32 esi_7807
	word32 edi_7808
	Mem3974[esp_3965:word32] = fn0041C910(ebx_3918, es, ds, Mem3948[esp_3931 - 4<i32>:word32], Mem3948[esp_3931 + 32<i32>:word32], out ecx_7806, out ebx_2349, out ebp_2253, out esi_7807, out edi_7808)
	word32 ecx_7809
	word32 eax_3976 = fn0041C680(Mem3974[esp_3965:word32], Mem3974[esp_3965 + 4<i32>:word32], Mem3974[esp_3965 + 8<i32>:word32], out ecx_7809)
	Mem3994[esp_3965 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_3976
	esp_2249 = esp_3965 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem3994[esp_3965 + 8<32>:word32]) + 0x62C<32>
l0041FC93:
	Mem4017[esp_1462:word32] = 3<32>
	Mem4023[esp_1462:word32] = fn0040F760(edi_1476, Mem4017[esp_1462:word32])
	word32 esp_4040 = <invalid>
	word32 ebx_4027
	word32 edi_4029
	word32 ecx_7788
	word32 ebp_7789
	word32 esi_7790
	Mem4049[esp_4040:word32] = fn0041C910(ebx_1474, es, ds, Mem4023[esp_1462:word32], Mem4023[esp_1462 + 36<i32>:word32], out ecx_7788, out ebx_4027, out ebp_7789, out esi_7790, out edi_4029)
	Mem4051[esp_4040 - 4<i32>:word32] = 0<32>
	Mem4053[esp_4040 - 8<i32>:word32] = 2<32>
	word32 esi_7791
	Mem4076[esp_4040 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_4029, Mem4053[esp_4040 - 8<i32>:word32]), 0<32>, ebx_4027, es, ds, Mem4053[esp_4040 - 4<32>:word32], out esi_7791) << 2<32>
	Mem4078[esp_4040 - 8<i32>:word32] = 1<32>
	Mem4083[esp_4040 - 8<32>:word32] = fn0040F760(edi_4029, Mem4078[esp_4040 - 8<i32>:word32])
	word32 esp_4100 = <invalid>
	word32 ecx_7792
	word32 esi_7793
	word32 edi_7794
	Mem4109[esp_4100:word32] = fn0041C910(ebx_4027, es, ds, Mem4083[esp_4040 - 8<32>:word32], Mem4083[esp_4040 + 0x1C<32>:word32], out ecx_7792, out ebx_2349, out ebp_2253, out esi_7793, out edi_7794)
	word32 edx_7795
	word32 eax_4111 = fn0041C740(Mem4109[esp_4100:word32], Mem4109[esp_4100 + 4<i32>:word16], Mem4109[esp_4100 + 8<i32>:word32], out edx_7795)
	Mem4129[esp_4100 + 8<32>:word32] = 0x3A<32>
	esi_2393 = eax_4111
	esp_2249 = esp_4100 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem4129[esp_4100 + 8<32>:word32]) + 1<32>
l0041FBEB:
	Mem4152[esp_1402:word32] = 3<32>
	Mem4158[esp_1402:word32] = fn0040F760(edi_1416, Mem4152[esp_1402:word32])
	word32 esp_4175 = <invalid>
	word32 ebx_4162
	word32 edi_4164
	word32 ecx_7776
	word32 ebp_7777
	word32 esi_7778
	Mem4184[esp_4175:word32] = fn0041C910(ebx_1414, es, ds, Mem4158[esp_1402:word32], Mem4158[esp_1402 + 36<i32>:word32], out ecx_7776, out ebx_4162, out ebp_7777, out esi_7778, out edi_4164)
	Mem4186[esp_4175 - 4<i32>:word32] = 0<32>
	Mem4188[esp_4175 - 8<i32>:word32] = 2<32>
	word32 esi_7779
	Mem4210[esp_4175 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_4164, Mem4188[esp_4175 - 8<i32>:word32]), 0<32>, ebx_4162, es, ds, Mem4188[esp_4175 - 4<32>:word32], out esi_7779)
	Mem4212[esp_4175 - 8<i32>:word32] = 1<32>
	Mem4217[esp_4175 - 8<32>:word32] = fn0040F760(edi_4164, Mem4212[esp_4175 - 8<i32>:word32])
	word32 esp_4234 = <invalid>
	word32 ebp_4220
	word32 ebx_4221
	word32 ecx_7780
	word32 esi_7781
	word32 edi_7782
	Mem4243[esp_4234:word32] = fn0041C910(ebx_4162, es, ds, Mem4217[esp_4175 - 8<32>:word32], Mem4217[esp_4175 + 0x1C<32>:word32], out ecx_7780, out ebx_4221, out ebp_4220, out esi_7781, out edi_7782)
	word32 edx_7783
	word32 eax_4245 = fn0041C740(Mem4243[esp_4234:word32], Mem4243[esp_4234 + 4<i32>:word16], Mem4243[esp_4234 + 8<i32>:word32], out edx_7783)
	Mem4263[esp_4234 + 8<32>:word32] = 0x33<32>
	Mem4285[ebx_4221 + 96<i32>:word32] = eax_4245 + fn0041C5C0(Mem4263[esp_4234 + 8<32>:word32])
	Mem4287[fs:0x00000000<p32>:word32] = Mem4285[ebp_4220 - 12<i32>:word32]
	word32 ecx_4288 = Mem4287[esp_4234 + 0xC<32>:word32]
	word32 esi_4292 = Mem4287[esp_4234 + 0x14<32>:word32]
	ebpOut = Mem4287[ebp_4220:word32]
	esiOut = esi_4292
	return ecx_4288
l0041FB43:
	Mem4299[esp_1342:word32] = 3<32>
	Mem4305[esp_1342:word32] = fn0040F760(edi_1356, Mem4299[esp_1342:word32])
	word32 esp_4322 = <invalid>
	word32 ebx_4309
	word32 edi_4311
	word32 ecx_7764
	word32 ebp_7765
	word32 esi_7766
	Mem4331[esp_4322:word32] = fn0041C910(ebx_1354, es, ds, Mem4305[esp_1342:word32], Mem4305[esp_1342 + 36<i32>:word32], out ecx_7764, out ebx_4309, out ebp_7765, out esi_7766, out edi_4311)
	Mem4333[esp_4322 - 4<i32>:word32] = 0<32>
	Mem4335[esp_4322 - 8<i32>:word32] = 2<32>
	word32 esi_7767
	Mem4357[esp_4322 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_4311, Mem4335[esp_4322 - 8<i32>:word32]), 0<32>, ebx_4309, es, ds, Mem4335[esp_4322 - 4<32>:word32], out esi_7767)
	Mem4359[esp_4322 - 8<i32>:word32] = 1<32>
	Mem4364[esp_4322 - 8<32>:word32] = fn0040F760(edi_4311, Mem4359[esp_4322 - 8<i32>:word32])
	word32 esp_4381 = <invalid>
	word32 ebp_4367
	word32 ebx_4368
	word32 ecx_7768
	word32 esi_7769
	word32 edi_7770
	Mem4390[esp_4381:word32] = fn0041C910(ebx_4309, es, ds, Mem4364[esp_4322 - 8<32>:word32], Mem4364[esp_4322 + 0x1C<32>:word32], out ecx_7768, out ebx_4368, out ebp_4367, out esi_7769, out edi_7770)
	word32 edx_7771
	word32 eax_4392 = fn0041C740(Mem4390[esp_4381:word32], Mem4390[esp_4381 + 4<i32>:word16], Mem4390[esp_4381 + 8<i32>:word32], out edx_7771)
	Mem4410[esp_4381 + 8<32>:word32] = 0x31<32>
	Mem4432[ebx_4368 + 96<i32>:word32] = eax_4392 + fn0041C5C0(Mem4410[esp_4381 + 8<32>:word32])
	Mem4434[fs:0x00000000<p32>:word32] = Mem4432[ebp_4367 - 12<i32>:word32]
	word32 ecx_4435 = Mem4434[esp_4381 + 0xC<32>:word32]
	word32 esi_4439 = Mem4434[esp_4381 + 0x14<32>:word32]
	ebpOut = Mem4434[ebp_4367:word32]
	esiOut = esi_4439
	return ecx_4435
l0041FA9B:
	Mem4446[esp_1282:word32] = 3<32>
	Mem4452[esp_1282:word32] = fn0040F760(edi_1296, Mem4446[esp_1282:word32])
	word32 esp_4469 = <invalid>
	word32 ebx_4456
	word32 edi_4458
	word32 ecx_7752
	word32 ebp_7753
	word32 esi_7754
	Mem4478[esp_4469:word32] = fn0041C910(ebx_1294, es, ds, Mem4452[esp_1282:word32], Mem4452[esp_1282 + 36<i32>:word32], out ecx_7752, out ebx_4456, out ebp_7753, out esi_7754, out edi_4458)
	Mem4480[esp_4469 - 4<i32>:word32] = 0<32>
	Mem4482[esp_4469 - 8<i32>:word32] = 2<32>
	word32 esi_7755
	Mem4504[esp_4469 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_4458, Mem4482[esp_4469 - 8<i32>:word32]), 0<32>, ebx_4456, es, ds, Mem4482[esp_4469 - 4<32>:word32], out esi_7755)
	Mem4506[esp_4469 - 8<i32>:word32] = 1<32>
	Mem4511[esp_4469 - 8<32>:word32] = fn0040F760(edi_4458, Mem4506[esp_4469 - 8<i32>:word32])
	word32 esp_4528 = <invalid>
	word32 ebp_4514
	word32 ebx_4515
	word32 ecx_7756
	word32 esi_7757
	word32 edi_7758
	Mem4537[esp_4528:word32] = fn0041C910(ebx_4456, es, ds, Mem4511[esp_4469 - 8<32>:word32], Mem4511[esp_4469 + 0x1C<32>:word32], out ecx_7756, out ebx_4515, out ebp_4514, out esi_7757, out edi_7758)
	word32 edx_7759
	word32 eax_4539 = fn0041C740(Mem4537[esp_4528:word32], Mem4537[esp_4528 + 4<i32>:word16], Mem4537[esp_4528 + 8<i32>:word32], out edx_7759)
	Mem4557[esp_4528 + 8<32>:word32] = 0x21<32>
	Mem4579[ebx_4515 + 96<i32>:word32] = eax_4539 + fn0041C5C0(Mem4557[esp_4528 + 8<32>:word32])
	Mem4581[fs:0x00000000<p32>:word32] = Mem4579[ebp_4514 - 12<i32>:word32]
	word32 ecx_4582 = Mem4581[esp_4528 + 0xC<32>:word32]
	word32 esi_4586 = Mem4581[esp_4528 + 0x14<32>:word32]
	ebpOut = Mem4581[ebp_4514:word32]
	esiOut = esi_4586
	return ecx_4582
l0041F9F3:
	Mem4593[esp_1222:word32] = 3<32>
	Mem4599[esp_1222:word32] = fn0040F760(edi_1236, Mem4593[esp_1222:word32])
	word32 esp_4616 = <invalid>
	word32 ebx_4603
	word32 edi_4605
	word32 ecx_7740
	word32 ebp_7741
	word32 esi_7742
	Mem4625[esp_4616:word32] = fn0041C910(ebx_1234, es, ds, Mem4599[esp_1222:word32], Mem4599[esp_1222 + 36<i32>:word32], out ecx_7740, out ebx_4603, out ebp_7741, out esi_7742, out edi_4605)
	Mem4627[esp_4616 - 4<i32>:word32] = 0<32>
	Mem4629[esp_4616 - 8<i32>:word32] = 2<32>
	word32 esi_7743
	Mem4651[esp_4616 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_4605, Mem4629[esp_4616 - 8<i32>:word32]), 0<32>, ebx_4603, es, ds, Mem4629[esp_4616 - 4<32>:word32], out esi_7743)
	Mem4653[esp_4616 - 8<i32>:word32] = 1<32>
	Mem4658[esp_4616 - 8<32>:word32] = fn0040F760(edi_4605, Mem4653[esp_4616 - 8<i32>:word32])
	word32 esp_4675 = <invalid>
	word32 ebp_4661
	word32 ebx_4662
	word32 ecx_7744
	word32 esi_7745
	word32 edi_7746
	Mem4684[esp_4675:word32] = fn0041C910(ebx_4603, es, ds, Mem4658[esp_4616 - 8<32>:word32], Mem4658[esp_4616 + 0x1C<32>:word32], out ecx_7744, out ebx_4662, out ebp_4661, out esi_7745, out edi_7746)
	word32 edx_7747
	word32 eax_4686 = fn0041C740(Mem4684[esp_4675:word32], Mem4684[esp_4675 + 4<i32>:word16], Mem4684[esp_4675 + 8<i32>:word32], out edx_7747)
	Mem4704[esp_4675 + 8<32>:word32] = 0x2B<32>
	Mem4726[ebx_4662 + 96<i32>:word32] = eax_4686 + fn0041C5C0(Mem4704[esp_4675 + 8<32>:word32])
	Mem4728[fs:0x00000000<p32>:word32] = Mem4726[ebp_4661 - 12<i32>:word32]
	word32 ecx_4729 = Mem4728[esp_4675 + 0xC<32>:word32]
	word32 esi_4733 = Mem4728[esp_4675 + 0x14<32>:word32]
	ebpOut = Mem4728[ebp_4661:word32]
	esiOut = esi_4733
	return ecx_4729
l0041F94B:
	Mem4740[esp_1162:word32] = 3<32>
	Mem4746[esp_1162:word32] = fn0040F760(edi_1176, Mem4740[esp_1162:word32])
	word32 esp_4763 = <invalid>
	word32 ebx_4750
	word32 edi_4752
	word32 ecx_7728
	word32 ebp_7729
	word32 esi_7730
	Mem4772[esp_4763:word32] = fn0041C910(ebx_1174, es, ds, Mem4746[esp_1162:word32], Mem4746[esp_1162 + 36<i32>:word32], out ecx_7728, out ebx_4750, out ebp_7729, out esi_7730, out edi_4752)
	Mem4774[esp_4763 - 4<i32>:word32] = 0<32>
	Mem4776[esp_4763 - 8<i32>:word32] = 2<32>
	word32 esi_7731
	Mem4798[esp_4763 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_4752, Mem4776[esp_4763 - 8<i32>:word32]), 0<32>, ebx_4750, es, ds, Mem4776[esp_4763 - 4<32>:word32], out esi_7731)
	Mem4800[esp_4763 - 8<i32>:word32] = 1<32>
	Mem4805[esp_4763 - 8<32>:word32] = fn0040F760(edi_4752, Mem4800[esp_4763 - 8<i32>:word32])
	word32 esp_4822 = <invalid>
	word32 ebp_4808
	word32 ebx_4809
	word32 ecx_7732
	word32 esi_7733
	word32 edi_7734
	Mem4831[esp_4822:word32] = fn0041C910(ebx_4750, es, ds, Mem4805[esp_4763 - 8<32>:word32], Mem4805[esp_4763 + 0x1C<32>:word32], out ecx_7732, out ebx_4809, out ebp_4808, out esi_7733, out edi_7734)
	word32 edx_7735
	word32 eax_4833 = fn0041C740(Mem4831[esp_4822:word32], Mem4831[esp_4822 + 4<i32>:word16], Mem4831[esp_4822 + 8<i32>:word32], out edx_7735)
	Mem4851[esp_4822 + 8<32>:word32] = 0x29<32>
	Mem4873[ebx_4809 + 96<i32>:word32] = eax_4833 + fn0041C5C0(Mem4851[esp_4822 + 8<32>:word32])
	Mem4875[fs:0x00000000<p32>:word32] = Mem4873[ebp_4808 - 12<i32>:word32]
	word32 ecx_4876 = Mem4875[esp_4822 + 0xC<32>:word32]
	word32 esi_4880 = Mem4875[esp_4822 + 0x14<32>:word32]
	ebpOut = Mem4875[ebp_4808:word32]
	esiOut = esi_4880
	return ecx_4876
l0041F8A3:
	Mem4887[esp_1102:word32] = 3<32>
	Mem4893[esp_1102:word32] = fn0040F760(edi_1116, Mem4887[esp_1102:word32])
	word32 esp_4910 = <invalid>
	word32 ebx_4897
	word32 edi_4899
	word32 ecx_7716
	word32 ebp_7717
	word32 esi_7718
	Mem4919[esp_4910:word32] = fn0041C910(ebx_1114, es, ds, Mem4893[esp_1102:word32], Mem4893[esp_1102 + 36<i32>:word32], out ecx_7716, out ebx_4897, out ebp_7717, out esi_7718, out edi_4899)
	Mem4921[esp_4910 - 4<i32>:word32] = 0<32>
	Mem4923[esp_4910 - 8<i32>:word32] = 2<32>
	word32 esi_7719
	Mem4945[esp_4910 - 4<i32>:word32] = fn00403C30(fn0040F760(edi_4899, Mem4923[esp_4910 - 8<i32>:word32]), 0<32>, ebx_4897, es, ds, Mem4923[esp_4910 - 4<32>:word32], out esi_7719)
	Mem4947[esp_4910 - 8<i32>:word32] = 1<32>
	Mem4952[esp_4910 - 8<32>:word32] = fn0040F760(edi_4899, Mem4947[esp_4910 - 8<i32>:word32])
	word32 esp_4969 = <invalid>
	word32 ebp_4955
	word32 ebx_4956
	word32 ecx_7720
	word32 esi_7721
	word32 edi_7722
	Mem4978[esp_4969:word32] = fn0041C910(ebx_4897, es, ds, Mem4952[esp_4910 - 8<32>:word32], Mem4952[esp_4910 + 0x1C<32>:word32], out ecx_7720, out ebx_4956, out ebp_4955, out esi_7721, out edi_7722)
	word32 edx_7723
	word32 eax_4980 = fn0041C740(Mem4978[esp_4969:word32], Mem4978[esp_4969 + 4<i32>:word16], Mem4978[esp_4969 + 8<i32>:word32], out edx_7723)
	Mem4998[esp_4969 + 8<32>:word32] = 0x23<32>
	Mem5020[ebx_4956 + 96<i32>:word32] = eax_4980 + fn0041C5C0(Mem4998[esp_4969 + 8<32>:word32])
	Mem5022[fs:0x00000000<p32>:word32] = Mem5020[ebp_4955 - 12<i32>:word32]
	word32 ecx_5023 = Mem5022[esp_4969 + 0xC<32>:word32]
	word32 esi_5027 = Mem5022[esp_4969 + 0x14<32>:word32]
	ebpOut = Mem5022[ebp_4955:word32]
	esiOut = esi_5027
	return ecx_5023
l0041F812:
	Mem5034[esp_1042:word32] = 3<32>
	Mem5040[esp_1042:word32] = fn0040F760(edi_1056, Mem5034[esp_1042:word32])
	word32 esp_5057 = <invalid>
	word32 ebx_5044
	word32 edi_5046
	word32 ecx_7702
	word32 ebp_7703
	word32 esi_7704
	Mem5066[esp_5057:word32] = fn0041C910(ebx_1054, es, ds, Mem5040[esp_1042:word32], Mem5040[esp_1042 + 36<i32>:word32], out ecx_7702, out ebx_5044, out ebp_7703, out esi_7704, out edi_5046)
	Mem5068[esp_5057 - 4<i32>:word32] = 2<32>
	Mem5074[esp_5057 - 4<i32>:word32] = fn0040F760(edi_5046, Mem5068[esp_5057 - 4<i32>:word32])
	word32 esp_5091 = <invalid>
	word32 ebx_5078
	word32 edi_5080
	word32 ecx_7705
	word32 ebp_7706
	word32 esi_7707
	Mem5100[esp_5091:word32] = fn0041C910(ebx_5044, es, ds, Mem5074[esp_5057 - 4<i32>:word32], Mem5074[esp_5057 + 32<i32>:word32], out ecx_7705, out ebx_5078, out ebp_7706, out esi_7707, out edi_5080)
	Mem5102[esp_5091 - 4<i32>:word32] = 1<32>
	Mem5108[esp_5091 - 4<i32>:word32] = fn0040F760(edi_5080, Mem5102[esp_5091 - 4<i32>:word32])
	word32 esp_5125 = <invalid>
	word32 ecx_7708
	word32 esi_7709
	word32 edi_7710
	Mem5134[esp_5125:word32] = fn0041C910(ebx_5078, es, ds, Mem5108[esp_5091 - 4<i32>:word32], Mem5108[esp_5091 + 32<i32>:word32], out ecx_7708, out ebx_2349, out ebp_2253, out esi_7709, out edi_7710)
	word32 ecx_7711
	word32 eax_5136 = fn0041C680(Mem5134[esp_5125:word32], Mem5134[esp_5125 + 4<i32>:word32], Mem5134[esp_5125 + 8<i32>:word32], out ecx_7711)
	Mem5154[esp_5125 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_5136
	esp_2249 = esp_5125 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem5154[esp_5125 + 8<32>:word32]) + 0x2A<32>
l0041F77F:
	Mem5177[esp_982:word32] = 3<32>
	Mem5183[esp_982:word32] = fn0040F760(edi_996, Mem5177[esp_982:word32])
	word32 esp_5200 = <invalid>
	word32 ebx_5187
	word32 edi_5189
	word32 ecx_7688
	word32 ebp_7689
	word32 esi_7690
	Mem5209[esp_5200:word32] = fn0041C910(ebx_994, es, ds, Mem5183[esp_982:word32], Mem5183[esp_982 + 36<i32>:word32], out ecx_7688, out ebx_5187, out ebp_7689, out esi_7690, out edi_5189)
	Mem5211[esp_5200 - 4<i32>:word32] = 2<32>
	Mem5217[esp_5200 - 4<i32>:word32] = fn0040F760(edi_5189, Mem5211[esp_5200 - 4<i32>:word32])
	word32 esp_5234 = <invalid>
	word32 ebx_5221
	word32 edi_5223
	word32 ecx_7691
	word32 ebp_7692
	word32 esi_7693
	Mem5243[esp_5234:word32] = fn0041C910(ebx_5187, es, ds, Mem5217[esp_5200 - 4<i32>:word32], Mem5217[esp_5200 + 32<i32>:word32], out ecx_7691, out ebx_5221, out ebp_7692, out esi_7693, out edi_5223)
	Mem5245[esp_5234 - 4<i32>:word32] = 1<32>
	Mem5251[esp_5234 - 4<i32>:word32] = fn0040F760(edi_5223, Mem5245[esp_5234 - 4<i32>:word32])
	word32 esp_5268 = <invalid>
	word32 ecx_7694
	word32 esi_7695
	word32 edi_7696
	Mem5277[esp_5268:word32] = fn0041C910(ebx_5221, es, ds, Mem5251[esp_5234 - 4<i32>:word32], Mem5251[esp_5234 + 32<i32>:word32], out ecx_7694, out ebx_2349, out ebp_2253, out esi_7695, out edi_7696)
	word32 ecx_7697
	word32 eax_5279 = fn0041C680(Mem5277[esp_5268:word32], Mem5277[esp_5268 + 4<i32>:word32], Mem5277[esp_5268 + 8<i32>:word32], out ecx_7697)
	Mem5297[esp_5268 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_5279
	esp_2249 = esp_5268 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem5297[esp_5268 + 8<32>:word32]) + 0x4AE<32>
l0041F6EC:
	Mem5320[esp_922:word32] = 3<32>
	Mem5326[esp_922:word32] = fn0040F760(edi_936, Mem5320[esp_922:word32])
	word32 esp_5343 = <invalid>
	word32 ebx_5330
	word32 edi_5332
	word32 ecx_7674
	word32 ebp_7675
	word32 esi_7676
	Mem5352[esp_5343:word32] = fn0041C910(ebx_934, es, ds, Mem5326[esp_922:word32], Mem5326[esp_922 + 36<i32>:word32], out ecx_7674, out ebx_5330, out ebp_7675, out esi_7676, out edi_5332)
	Mem5354[esp_5343 - 4<i32>:word32] = 2<32>
	Mem5360[esp_5343 - 4<i32>:word32] = fn0040F760(edi_5332, Mem5354[esp_5343 - 4<i32>:word32])
	word32 esp_5377 = <invalid>
	word32 ebx_5364
	word32 edi_5366
	word32 ecx_7677
	word32 ebp_7678
	word32 esi_7679
	Mem5386[esp_5377:word32] = fn0041C910(ebx_5330, es, ds, Mem5360[esp_5343 - 4<i32>:word32], Mem5360[esp_5343 + 32<i32>:word32], out ecx_7677, out ebx_5364, out ebp_7678, out esi_7679, out edi_5366)
	Mem5388[esp_5377 - 4<i32>:word32] = 1<32>
	Mem5394[esp_5377 - 4<i32>:word32] = fn0040F760(edi_5366, Mem5388[esp_5377 - 4<i32>:word32])
	word32 esp_5411 = <invalid>
	word32 ecx_7680
	word32 esi_7681
	word32 edi_7682
	Mem5420[esp_5411:word32] = fn0041C910(ebx_5364, es, ds, Mem5394[esp_5377 - 4<i32>:word32], Mem5394[esp_5377 + 32<i32>:word32], out ecx_7680, out ebx_2349, out ebp_2253, out esi_7681, out edi_7682)
	word32 ecx_7683
	word32 eax_5422 = fn0041C680(Mem5420[esp_5411:word32], Mem5420[esp_5411 + 4<i32>:word32], Mem5420[esp_5411 + 8<i32>:word32], out ecx_7683)
	Mem5440[esp_5411 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_5422
	esp_2249 = esp_5411 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem5440[esp_5411 + 8<32>:word32]) + 0x42E<32>
l0041F659:
	Mem5463[esp_862:word32] = 3<32>
	Mem5469[esp_862:word32] = fn0040F760(edi_876, Mem5463[esp_862:word32])
	word32 esp_5486 = <invalid>
	word32 ebx_5473
	word32 edi_5475
	word32 ecx_7660
	word32 ebp_7661
	word32 esi_7662
	Mem5495[esp_5486:word32] = fn0041C910(ebx_874, es, ds, Mem5469[esp_862:word32], Mem5469[esp_862 + 36<i32>:word32], out ecx_7660, out ebx_5473, out ebp_7661, out esi_7662, out edi_5475)
	Mem5497[esp_5486 - 4<i32>:word32] = 2<32>
	Mem5503[esp_5486 - 4<i32>:word32] = fn0040F760(edi_5475, Mem5497[esp_5486 - 4<i32>:word32])
	word32 esp_5520 = <invalid>
	word32 ebx_5507
	word32 edi_5509
	word32 ecx_7663
	word32 ebp_7664
	word32 esi_7665
	Mem5529[esp_5520:word32] = fn0041C910(ebx_5473, es, ds, Mem5503[esp_5486 - 4<i32>:word32], Mem5503[esp_5486 + 32<i32>:word32], out ecx_7663, out ebx_5507, out ebp_7664, out esi_7665, out edi_5509)
	Mem5531[esp_5520 - 4<i32>:word32] = 1<32>
	Mem5537[esp_5520 - 4<i32>:word32] = fn0040F760(edi_5509, Mem5531[esp_5520 - 4<i32>:word32])
	word32 esp_5554 = <invalid>
	word32 ecx_7666
	word32 esi_7667
	word32 edi_7668
	Mem5563[esp_5554:word32] = fn0041C910(ebx_5507, es, ds, Mem5537[esp_5520 - 4<i32>:word32], Mem5537[esp_5520 + 32<i32>:word32], out ecx_7666, out ebx_2349, out ebp_2253, out esi_7667, out edi_7668)
	word32 ecx_7669
	word32 eax_5565 = fn0041C680(Mem5563[esp_5554:word32], Mem5563[esp_5554 + 4<i32>:word32], Mem5563[esp_5554 + 8<i32>:word32], out ecx_7669)
	Mem5583[esp_5554 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_5565
	esp_2249 = esp_5554 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem5583[esp_5554 + 8<32>:word32]) + 0x2AA<32>
l0041F5C8:
	Mem5606[esp_802:word32] = 3<32>
	Mem5612[esp_802:word32] = fn0040F760(edi_816, Mem5606[esp_802:word32])
	word32 esp_5629 = <invalid>
	word32 ebx_5616
	word32 edi_5618
	word32 ecx_7646
	word32 ebp_7647
	word32 esi_7648
	Mem5638[esp_5629:word32] = fn0041C910(ebx_814, es, ds, Mem5612[esp_802:word32], Mem5612[esp_802 + 36<i32>:word32], out ecx_7646, out ebx_5616, out ebp_7647, out esi_7648, out edi_5618)
	Mem5640[esp_5629 - 4<i32>:word32] = 2<32>
	Mem5646[esp_5629 - 4<i32>:word32] = fn0040F760(edi_5618, Mem5640[esp_5629 - 4<i32>:word32])
	word32 esp_5663 = <invalid>
	word32 ebx_5650
	word32 edi_5652
	word32 ecx_7649
	word32 ebp_7650
	word32 esi_7651
	Mem5672[esp_5663:word32] = fn0041C910(ebx_5616, es, ds, Mem5646[esp_5629 - 4<i32>:word32], Mem5646[esp_5629 + 32<i32>:word32], out ecx_7649, out ebx_5650, out ebp_7650, out esi_7651, out edi_5652)
	Mem5674[esp_5663 - 4<i32>:word32] = 1<32>
	Mem5680[esp_5663 - 4<i32>:word32] = fn0040F760(edi_5652, Mem5674[esp_5663 - 4<i32>:word32])
	word32 esp_5697 = <invalid>
	word32 ecx_7652
	word32 esi_7653
	word32 edi_7654
	Mem5706[esp_5697:word32] = fn0041C910(ebx_5650, es, ds, Mem5680[esp_5663 - 4<i32>:word32], Mem5680[esp_5663 + 32<i32>:word32], out ecx_7652, out ebx_2349, out ebp_2253, out esi_7653, out edi_7654)
	word32 ecx_7655
	word32 eax_5708 = fn0041C680(Mem5706[esp_5697:word32], Mem5706[esp_5697 + 4<i32>:word32], Mem5706[esp_5697 + 8<i32>:word32], out ecx_7655)
	Mem5726[esp_5697 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_5708
	esp_2249 = esp_5697 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem5726[esp_5697 + 8<32>:word32]) + 0x2E<32>
l0041F535:
	Mem5749[esp_742:word32] = 3<32>
	Mem5755[esp_742:word32] = fn0040F760(edi_756, Mem5749[esp_742:word32])
	word32 esp_5772 = <invalid>
	word32 ebx_5759
	word32 edi_5761
	word32 ecx_7632
	word32 ebp_7633
	word32 esi_7634
	Mem5781[esp_5772:word32] = fn0041C910(ebx_754, es, ds, Mem5755[esp_742:word32], Mem5755[esp_742 + 36<i32>:word32], out ecx_7632, out ebx_5759, out ebp_7633, out esi_7634, out edi_5761)
	Mem5783[esp_5772 - 4<i32>:word32] = 2<32>
	Mem5789[esp_5772 - 4<i32>:word32] = fn0040F760(edi_5761, Mem5783[esp_5772 - 4<i32>:word32])
	word32 esp_5806 = <invalid>
	word32 ebx_5793
	word32 edi_5795
	word32 ecx_7635
	word32 ebp_7636
	word32 esi_7637
	Mem5815[esp_5806:word32] = fn0041C910(ebx_5759, es, ds, Mem5789[esp_5772 - 4<i32>:word32], Mem5789[esp_5772 + 32<i32>:word32], out ecx_7635, out ebx_5793, out ebp_7636, out esi_7637, out edi_5795)
	Mem5817[esp_5806 - 4<i32>:word32] = 1<32>
	Mem5823[esp_5806 - 4<i32>:word32] = fn0040F760(edi_5795, Mem5817[esp_5806 - 4<i32>:word32])
	word32 esp_5840 = <invalid>
	word32 ecx_7638
	word32 esi_7639
	word32 edi_7640
	Mem5849[esp_5840:word32] = fn0041C910(ebx_5793, es, ds, Mem5823[esp_5806 - 4<i32>:word32], Mem5823[esp_5806 + 32<i32>:word32], out ecx_7638, out ebx_2349, out ebp_2253, out esi_7639, out edi_7640)
	word32 ecx_7641
	word32 eax_5851 = fn0041C680(Mem5849[esp_5840:word32], Mem5849[esp_5840 + 4<i32>:word32], Mem5849[esp_5840 + 8<i32>:word32], out ecx_7641)
	Mem5869[esp_5840 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_5851
	esp_2249 = esp_5840 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem5869[esp_5840 + 8<32>:word32]) + 0x2AE<32>
l0041F4A2:
	Mem5892[esp_682:word32] = 3<32>
	Mem5898[esp_682:word32] = fn0040F760(edi_696, Mem5892[esp_682:word32])
	word32 esp_5915 = <invalid>
	word32 ebx_5902
	word32 edi_5904
	word32 ecx_7618
	word32 ebp_7619
	word32 esi_7620
	Mem5924[esp_5915:word32] = fn0041C910(ebx_694, es, ds, Mem5898[esp_682:word32], Mem5898[esp_682 + 36<i32>:word32], out ecx_7618, out ebx_5902, out ebp_7619, out esi_7620, out edi_5904)
	Mem5926[esp_5915 - 4<i32>:word32] = 2<32>
	Mem5932[esp_5915 - 4<i32>:word32] = fn0040F760(edi_5904, Mem5926[esp_5915 - 4<i32>:word32])
	word32 esp_5949 = <invalid>
	word32 ebx_5936
	word32 edi_5938
	word32 ecx_7621
	word32 ebp_7622
	word32 esi_7623
	Mem5958[esp_5949:word32] = fn0041C910(ebx_5902, es, ds, Mem5932[esp_5915 - 4<i32>:word32], Mem5932[esp_5915 + 32<i32>:word32], out ecx_7621, out ebx_5936, out ebp_7622, out esi_7623, out edi_5938)
	Mem5960[esp_5949 - 4<i32>:word32] = 1<32>
	Mem5966[esp_5949 - 4<i32>:word32] = fn0040F760(edi_5938, Mem5960[esp_5949 - 4<i32>:word32])
	word32 esp_5983 = <invalid>
	word32 ecx_7624
	word32 esi_7625
	word32 edi_7626
	Mem5992[esp_5983:word32] = fn0041C910(ebx_5936, es, ds, Mem5966[esp_5949 - 4<i32>:word32], Mem5966[esp_5949 + 32<i32>:word32], out ecx_7624, out ebx_2349, out ebp_2253, out esi_7625, out edi_7626)
	word32 ecx_7627
	word32 eax_5994 = fn0041C680(Mem5992[esp_5983:word32], Mem5992[esp_5983 + 4<i32>:word32], Mem5992[esp_5983 + 8<i32>:word32], out ecx_7627)
	Mem6012[esp_5983 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_5994
	esp_2249 = esp_5983 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem6012[esp_5983 + 8<32>:word32]) + 0x22E<32>
l0041F40F:
	Mem6035[esp_622:word32] = 3<32>
	Mem6041[esp_622:word32] = fn0040F760(edi_636, Mem6035[esp_622:word32])
	word32 esp_6058 = <invalid>
	word32 ebx_6045
	word32 edi_6047
	word32 ecx_7604
	word32 ebp_7605
	word32 esi_7606
	Mem6067[esp_6058:word32] = fn0041C910(ebx_634, es, ds, Mem6041[esp_622:word32], Mem6041[esp_622 + 36<i32>:word32], out ecx_7604, out ebx_6045, out ebp_7605, out esi_7606, out edi_6047)
	Mem6069[esp_6058 - 4<i32>:word32] = 2<32>
	Mem6075[esp_6058 - 4<i32>:word32] = fn0040F760(edi_6047, Mem6069[esp_6058 - 4<i32>:word32])
	word32 esp_6092 = <invalid>
	word32 ebx_6079
	word32 edi_6081
	word32 ecx_7607
	word32 ebp_7608
	word32 esi_7609
	Mem6101[esp_6092:word32] = fn0041C910(ebx_6045, es, ds, Mem6075[esp_6058 - 4<i32>:word32], Mem6075[esp_6058 + 32<i32>:word32], out ecx_7607, out ebx_6079, out ebp_7608, out esi_7609, out edi_6081)
	Mem6103[esp_6092 - 4<i32>:word32] = 1<32>
	Mem6109[esp_6092 - 4<i32>:word32] = fn0040F760(edi_6081, Mem6103[esp_6092 - 4<i32>:word32])
	word32 esp_6126 = <invalid>
	word32 ecx_7610
	word32 esi_7611
	word32 edi_7612
	Mem6135[esp_6126:word32] = fn0041C910(ebx_6079, es, ds, Mem6109[esp_6092 - 4<i32>:word32], Mem6109[esp_6092 + 32<i32>:word32], out ecx_7610, out ebx_2349, out ebp_2253, out esi_7611, out edi_7612)
	word32 ecx_7613
	word32 eax_6137 = fn0041C680(Mem6135[esp_6126:word32], Mem6135[esp_6126 + 4<i32>:word32], Mem6135[esp_6126 + 8<i32>:word32], out ecx_7613)
	Mem6155[esp_6126 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_6137
	esp_2249 = esp_6126 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem6155[esp_6126 + 8<32>:word32]) + 0xAE<32>
l0041F37E:
	Mem6178[esp_562:word32] = 3<32>
	Mem6184[esp_562:word32] = fn0040F760(edi_576, Mem6178[esp_562:word32])
	word32 esp_6201 = <invalid>
	word32 ebx_6188
	word32 edi_6190
	word32 ecx_7590
	word32 ebp_7591
	word32 esi_7592
	Mem6210[esp_6201:word32] = fn0041C910(ebx_574, es, ds, Mem6184[esp_562:word32], Mem6184[esp_562 + 36<i32>:word32], out ecx_7590, out ebx_6188, out ebp_7591, out esi_7592, out edi_6190)
	Mem6212[esp_6201 - 4<i32>:word32] = 2<32>
	Mem6218[esp_6201 - 4<i32>:word32] = fn0040F760(edi_6190, Mem6212[esp_6201 - 4<i32>:word32])
	word32 esp_6235 = <invalid>
	word32 ebx_6222
	word32 edi_6224
	word32 ecx_7593
	word32 ebp_7594
	word32 esi_7595
	Mem6244[esp_6235:word32] = fn0041C910(ebx_6188, es, ds, Mem6218[esp_6201 - 4<i32>:word32], Mem6218[esp_6201 + 32<i32>:word32], out ecx_7593, out ebx_6222, out ebp_7594, out esi_7595, out edi_6224)
	Mem6246[esp_6235 - 4<i32>:word32] = 1<32>
	Mem6252[esp_6235 - 4<i32>:word32] = fn0040F760(edi_6224, Mem6246[esp_6235 - 4<i32>:word32])
	word32 esp_6269 = <invalid>
	word32 ecx_7596
	word32 esi_7597
	word32 edi_7598
	Mem6278[esp_6269:word32] = fn0041C910(ebx_6222, es, ds, Mem6252[esp_6235 - 4<i32>:word32], Mem6252[esp_6235 + 32<i32>:word32], out ecx_7596, out ebx_2349, out ebp_2253, out esi_7597, out edi_7598)
	word32 ecx_7599
	word32 eax_6280 = fn0041C680(Mem6278[esp_6269:word32], Mem6278[esp_6269 + 4<i32>:word32], Mem6278[esp_6269 + 8<i32>:word32], out ecx_7599)
	Mem6298[esp_6269 + 8<32>:word32] = 0x1F<32>
	esi_2393 = eax_6280
	esp_2249 = esp_6269 + 0xC<32>
	eax_2411 = fn0041C5C0(Mem6298[esp_6269 + 8<32>:word32]) + 0x6A<32>
l004204A7:
	eax_6322 = eax_2411 + esi_2393
l0041F2E2:
	word128 xmm0_6327 = fn00427210()
	word32 ecx_7575
	word32 edx_7576
	fn0042D911(SEQ(SLICE(xmm0_6327, word64, 64), SLICE(xmm0_6327, real64, 0) * Mem510[0x00432EE0<p32>:real64]), out ecx_7575, out edx_7576)
	Mem6352[esp_502 - 4<i32>:word32] = Mem510[Mem510[ebp_512 + 8<i32>:word32]:word32] + 72<i32>
	word32 esp_6369 = <invalid>
	word32 ebx_6356
	word32 esi_6360
	word32 ecx_7577
	word32 ebp_7578
	word32 edi_7579
	Mem6378[esp_6369:word32] = fn0041C910(ebx_513, es, ds, Mem6352[esp_502 - 4<i32>:word32], Mem6352[esp_502 + 32<i32>:word32], out ecx_7577, out ebx_6356, out ebp_7578, out esi_6360, out edi_7579)
	Mem6381[esp_6369 - 4<i32>:word32] = esi_6360 + 48<i32>
	word32 esp_6398 = <invalid>
	word32 ebx_6385
	word32 esi_6389
	word32 ecx_7580
	word32 ebp_7581
	word32 edi_7582
	Mem6407[esp_6398:word32] = fn0041C910(ebx_6356, es, ds, Mem6381[esp_6369 - 4<i32>:word32], Mem6381[esp_6369 + 32<i32>:word32], out ecx_7580, out ebx_6385, out ebp_7581, out esi_6389, out edi_7582)
	Mem6411[esp_6398 - 4<i32>:word32] = esi_6389 + 24<i32>
	word32 esp_6427 = <invalid>
	word32 edi_6416
	word32 ecx_7583
	word32 esi_7584
	Mem6436[esp_6427:word32] = fn0041C910(ebx_6385, es, ds, Mem6411[esp_6398 - 4<i32>:word32], Mem6411[esp_6398 + 32<i32>:word32], out ecx_7583, out ebx_2349, out ebp_2253, out esi_7584, out edi_6416)
	esp_2249 = esp_6427 + 0xC<32>
	word32 ecx_7585
	eax_6322 = fn0041C680(Mem6436[esp_6427:word32], Mem6436[esp_6427 + 4<i32>:word32], Mem6436[esp_6427 + 8<i32>:word32], out ecx_7585) + 0x4EE<32> + edi_6416
l0041F234:
	word128 xmm0_6461 = fn00427210()
	word32 ecx_7560
	word32 edx_7561
	fn0042D911(SEQ(SLICE(xmm0_6461, word64, 64), SLICE(xmm0_6461, real64, 0) * Mem440[0x00432EE0<p32>:real64]), out ecx_7560, out edx_7561)
	Mem6486[esp_432 - 4<i32>:word32] = Mem440[Mem440[ebp_442 + 8<i32>:word32]:word32] + 72<i32>
	word32 esp_6503 = <invalid>
	word32 ebx_6490
	word32 esi_6494
	word32 ecx_7562
	word32 ebp_7563
	word32 edi_7564
	Mem6512[esp_6503:word32] = fn0041C910(ebx_443, es, ds, Mem6486[esp_432 - 4<i32>:word32], Mem6486[esp_432 + 32<i32>:word32], out ecx_7562, out ebx_6490, out ebp_7563, out esi_6494, out edi_7564)
	Mem6515[esp_6503 - 4<i32>:word32] = esi_6494 + 48<i32>
	word32 esp_6532 = <invalid>
	word32 ebx_6519
	word32 esi_6523
	word32 ecx_7565
	word32 ebp_7566
	word32 edi_7567
	Mem6541[esp_6532:word32] = fn0041C910(ebx_6490, es, ds, Mem6515[esp_6503 - 4<i32>:word32], Mem6515[esp_6503 + 32<i32>:word32], out ecx_7565, out ebx_6519, out ebp_7566, out esi_6523, out edi_7567)
	Mem6545[esp_6532 - 4<i32>:word32] = esi_6523 + 24<i32>
	word32 esp_6561 = <invalid>
	word32 edi_6550
	word32 ecx_7568
	word32 esi_7569
	Mem6570[esp_6561:word32] = fn0041C910(ebx_6519, es, ds, Mem6545[esp_6532 - 4<i32>:word32], Mem6545[esp_6532 + 32<i32>:word32], out ecx_7568, out ebx_2349, out ebp_2253, out esi_7569, out edi_6550)
	esp_2249 = esp_6561 + 0xC<32>
	word32 ecx_7570
	eax_6322 = fn0041C680(Mem6570[esp_6561:word32], Mem6570[esp_6561 + 4<i32>:word32], Mem6570[esp_6561 + 8<i32>:word32], out ecx_7570) + 0x46E<32> + edi_6550
l0041F186:
	word128 xmm0_6595 = fn00427210()
	word32 ecx_7544
	word32 edx_7545
	fn0042D911(SEQ(SLICE(xmm0_6595, word64, 64), SLICE(xmm0_6595, real64, 0) * Mem370[0x00432EE0<p32>:real64]), out ecx_7544, out edx_7545)
	Mem6620[esp_362 - 4<i32>:word32] = Mem370[Mem370[ebp_372 + 8<i32>:word32]:word32] + 72<i32>
	word32 esp_6637 = <invalid>
	word32 ebx_6624
	word32 esi_6628
	word32 ecx_7546
	word32 ebp_7547
	word32 edi_7548
	Mem6646[esp_6637:word32] = fn0041C910(ebx_373, es, ds, Mem6620[esp_362 - 4<i32>:word32], Mem6620[esp_362 + 32<i32>:word32], out ecx_7546, out ebx_6624, out ebp_7547, out esi_6628, out edi_7548)
	Mem6649[esp_6637 - 4<i32>:word32] = esi_6628 + 48<i32>
	word32 esp_6666 = <invalid>
	word32 ebx_6653
	word32 esi_6657
	word32 ecx_7549
	word32 ebp_7550
	word32 edi_7551
	Mem6675[esp_6666:word32] = fn0041C910(ebx_6624, es, ds, Mem6649[esp_6637 - 4<i32>:word32], Mem6649[esp_6637 + 32<i32>:word32], out ecx_7549, out ebx_6653, out ebp_7550, out esi_6657, out edi_7551)
	Mem6679[esp_6666 - 4<i32>:word32] = esi_6657 + 24<i32>
	word32 esp_6695 = <invalid>
	word32 edi_6684
	word32 ecx_7552
	word32 esi_7553
	Mem6704[esp_6695:word32] = fn0041C910(ebx_6653, es, ds, Mem6679[esp_6666 - 4<i32>:word32], Mem6679[esp_6666 + 32<i32>:word32], out ecx_7552, out ebx_2349, out ebp_2253, out esi_7553, out edi_6684)
	esp_2249 = esp_6695 + 0xC<32>
	word32 ecx_7554
	eax_6322 = fn0041C680(Mem6704[esp_6695:word32], Mem6704[esp_6695 + 4<i32>:word32], Mem6704[esp_6695 + 8<i32>:word32], out ecx_7554) + 0x2EA<32> + edi_6684
l0041F0DA:
	word128 xmm0_6729 = fn00427210()
	word32 ecx_7528
	word32 edx_7529
	fn0042D911(SEQ(SLICE(xmm0_6729, word64, 64), SLICE(xmm0_6729, real64, 0) * Mem300[0x00432EE0<p32>:real64]), out ecx_7528, out edx_7529)
	Mem6754[esp_292 - 4<i32>:word32] = Mem300[Mem300[ebp_302 + 8<i32>:word32]:word32] + 72<i32>
	word32 esp_6771 = <invalid>
	word32 ebx_6758
	word32 esi_6762
	word32 ecx_7530
	word32 ebp_7531
	word32 edi_7532
	Mem6780[esp_6771:word32] = fn0041C910(ebx_303, es, ds, Mem6754[esp_292 - 4<i32>:word32], Mem6754[esp_292 + 32<i32>:word32], out ecx_7530, out ebx_6758, out ebp_7531, out esi_6762, out edi_7532)
	Mem6783[esp_6771 - 4<i32>:word32] = esi_6762 + 48<i32>
	word32 esp_6800 = <invalid>
	word32 ebx_6787
	word32 esi_6791
	word32 ecx_7533
	word32 ebp_7534
	word32 edi_7535
	Mem6809[esp_6800:word32] = fn0041C910(ebx_6758, es, ds, Mem6783[esp_6771 - 4<i32>:word32], Mem6783[esp_6771 + 32<i32>:word32], out ecx_7533, out ebx_6787, out ebp_7534, out esi_6791, out edi_7535)
	Mem6813[esp_6800 - 4<i32>:word32] = esi_6791 + 24<i32>
	word32 esp_6829 = <invalid>
	word32 edi_6818
	word32 ecx_7536
	word32 esi_7537
	Mem6838[esp_6829:word32] = fn0041C910(ebx_6787, es, ds, Mem6813[esp_6800 - 4<i32>:word32], Mem6813[esp_6800 + 32<i32>:word32], out ecx_7536, out ebx_2349, out ebp_2253, out esi_7537, out edi_6818)
	esp_2249 = esp_6829 + 0xC<32>
	word32 ecx_7538
	eax_6322 = fn0041C680(Mem6838[esp_6829:word32], Mem6838[esp_6829 + 4<i32>:word32], Mem6838[esp_6829 + 8<i32>:word32], out ecx_7538) + 0x6E<32> + edi_6818
l0041F02C:
	word128 xmm0_6863 = fn00427210()
	word32 ecx_7512
	word32 edx_7513
	fn0042D911(SEQ(SLICE(xmm0_6863, word64, 64), SLICE(xmm0_6863, real64, 0) * Mem230[0x00432EE0<p32>:real64]), out ecx_7512, out edx_7513)
	Mem6888[esp_222 - 4<i32>:word32] = Mem230[Mem230[ebp_232 + 8<i32>:word32]:word32] + 72<i32>
	word32 esp_6905 = <invalid>
	word32 ebx_6892
	word32 esi_6896
	word32 ecx_7514
	word32 ebp_7515
	word32 edi_7516
	Mem6914[esp_6905:word32] = fn0041C910(ebx_233, es, ds, Mem6888[esp_222 - 4<i32>:word32], Mem6888[esp_222 + 32<i32>:word32], out ecx_7514, out ebx_6892, out ebp_7515, out esi_6896, out edi_7516)
	Mem6917[esp_6905 - 4<i32>:word32] = esi_6896 + 48<i32>
	word32 esp_6934 = <invalid>
	word32 ebx_6921
	word32 esi_6925
	word32 ecx_7517
	word32 ebp_7518
	word32 edi_7519
	Mem6943[esp_6934:word32] = fn0041C910(ebx_6892, es, ds, Mem6917[esp_6905 - 4<i32>:word32], Mem6917[esp_6905 + 32<i32>:word32], out ecx_7517, out ebx_6921, out ebp_7518, out esi_6925, out edi_7519)
	Mem6947[esp_6934 - 4<i32>:word32] = esi_6925 + 24<i32>
	word32 esp_6963 = <invalid>
	word32 edi_6952
	word32 ecx_7520
	word32 esi_7521
	Mem6972[esp_6963:word32] = fn0041C910(ebx_6921, es, ds, Mem6947[esp_6934 - 4<i32>:word32], Mem6947[esp_6934 + 32<i32>:word32], out ecx_7520, out ebx_2349, out ebp_2253, out esi_7521, out edi_6952)
	esp_2249 = esp_6963 + 0xC<32>
	word32 ecx_7522
	eax_6322 = fn0041C680(Mem6972[esp_6963:word32], Mem6972[esp_6963 + 4<i32>:word32], Mem6972[esp_6963 + 8<i32>:word32], out ecx_7522) + 0x2EE<32> + edi_6952
l0041EF7E:
	word128 xmm0_6997 = fn00427210()
	word32 ecx_7496
	word32 edx_7497
	fn0042D911(SEQ(SLICE(xmm0_6997, word64, 64), SLICE(xmm0_6997, real64, 0) * Mem160[0x00432EE0<p32>:real64]), out ecx_7496, out edx_7497)
	Mem7022[esp_152 - 4<i32>:word32] = Mem160[Mem160[ebp_162 + 8<i32>:word32]:word32] + 72<i32>
	word32 esp_7039 = <invalid>
	word32 ebx_7026
	word32 esi_7030
	word32 ecx_7498
	word32 ebp_7499
	word32 edi_7500
	Mem7048[esp_7039:word32] = fn0041C910(ebx_163, es, ds, Mem7022[esp_152 - 4<i32>:word32], Mem7022[esp_152 + 32<i32>:word32], out ecx_7498, out ebx_7026, out ebp_7499, out esi_7030, out edi_7500)
	Mem7051[esp_7039 - 4<i32>:word32] = esi_7030 + 48<i32>
	word32 esp_7068 = <invalid>
	word32 ebx_7055
	word32 esi_7059
	word32 ecx_7501
	word32 ebp_7502
	word32 edi_7503
	Mem7077[esp_7068:word32] = fn0041C910(ebx_7026, es, ds, Mem7051[esp_7039 - 4<i32>:word32], Mem7051[esp_7039 + 32<i32>:word32], out ecx_7501, out ebx_7055, out ebp_7502, out esi_7059, out edi_7503)
	Mem7081[esp_7068 - 4<i32>:word32] = esi_7059 + 24<i32>
	word32 esp_7097 = <invalid>
	word32 edi_7086
	word32 ecx_7504
	word32 esi_7505
	Mem7106[esp_7097:word32] = fn0041C910(ebx_7055, es, ds, Mem7081[esp_7068 - 4<i32>:word32], Mem7081[esp_7068 + 32<i32>:word32], out ecx_7504, out ebx_2349, out ebp_2253, out esi_7505, out edi_7086)
	esp_2249 = esp_7097 + 0xC<32>
	word32 ecx_7506
	eax_6322 = fn0041C680(Mem7106[esp_7097:word32], Mem7106[esp_7097 + 4<i32>:word32], Mem7106[esp_7097 + 8<i32>:word32], out ecx_7506) + 0x26E<32> + edi_7086
l0041EED0:
	word128 xmm0_7131 = fn00427210()
	word32 ecx_7480
	word32 edx_7481
	fn0042D911(SEQ(SLICE(xmm0_7131, word64, 64), SLICE(xmm0_7131, real64, 0) * Mem85[0x00432EE0<p32>:real64]), out ecx_7480, out edx_7481)
	Mem7156[esp_77 - 4<i32>:word32] = Mem85[Mem85[ebp_92 + 8<i32>:word32]:word32] + 72<i32>
	word32 esp_7173 = <invalid>
	word32 ebx_7160
	word32 esi_7164
	word32 ecx_7482
	word32 ebp_7483
	word32 edi_7484
	Mem7182[esp_7173:word32] = fn0041C910(ebx_93, es, ds, Mem7156[esp_77 - 4<i32>:word32], Mem7156[esp_77 + 32<i32>:word32], out ecx_7482, out ebx_7160, out ebp_7483, out esi_7164, out edi_7484)
	Mem7185[esp_7173 - 4<i32>:word32] = esi_7164 + 48<i32>
	word32 esp_7202 = <invalid>
	word32 ebx_7189
	word32 esi_7193
	word32 ecx_7485
	word32 ebp_7486
	word32 edi_7487
	Mem7211[esp_7202:word32] = fn0041C910(ebx_7160, es, ds, Mem7185[esp_7173 - 4<i32>:word32], Mem7185[esp_7173 + 32<i32>:word32], out ecx_7485, out ebx_7189, out ebp_7486, out esi_7193, out edi_7487)
	Mem7215[esp_7202 - 4<i32>:word32] = esi_7193 + 24<i32>
	word32 esp_7231 = <invalid>
	word32 edi_7220
	word32 ecx_7488
	word32 esi_7489
	Mem7240[esp_7231:word32] = fn0041C910(ebx_7189, es, ds, Mem7215[esp_7202 - 4<i32>:word32], Mem7215[esp_7202 + 32<i32>:word32], out ecx_7488, out ebx_2349, out ebp_2253, out esi_7489, out edi_7220)
	esp_2249 = esp_7231 + 0xC<32>
	word32 ecx_7490
	eax_6322 = fn0041C680(Mem7240[esp_7231:word32], Mem7240[esp_7231 + 4<i32>:word32], Mem7240[esp_7231 + 8<i32>:word32], out ecx_7490) + 0xEE<32> + edi_7220
l004204A9:
	Mem7265[ebx_2349 + 96<i32>:word32] = eax_6322
l004204AC:
	Mem7274[fs:0x00000000<p32>:word32] = Mem7269[ebp_2253 - 12<i32>:word32]
	word32 ecx_7278 = Mem7274[esp_2249:word32]
	word32 esi_7282 = Mem7274[esp_2249 + 8<i32>:word32]
	ebpOut = Mem7274[ebp_2253:word32]
	esiOut = esi_7282
	return ecx_7278
fn0041EE50_exit:


word32 fn004204C0(selector es, selector ds, word32 dwArg04, ptr32 & ebpOut, ptr32 & esiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0041AEF0
// MayUse:  cs:[0..15] ds:[0..15] es:[0..15] fs:[0..15] gs:[0..15] ss:[0..15] Stack +0004:[0..31]
// LiveOut: ebp ecx esi esp
// Trashed: SCZDOP eax ebp ebx ecx edi edx esi esp Top xmm0 xmm1 xmm2 xmm3 xmm4 xmm5 xmm6 xmm7
// Preserved: cs ds es fs gs ss
fn004204C0_entry:
	ptr32 fp
	selector fs
	struct <anonymous> tLoc50
l004204C0:
	word32 edx_1994
	word32 esp_1986
	word32 ebp_1990
	word32 ebx_2069
	word32 eax_2578
	word32 esi_2110
	word32 eax_2132
	Mem32[fs:0<32>:word32] = fp - 16<i32>
	Mem42[&tLoc50 + 16<i32>:word32] = 0<32>
	Mem43[&tLoc50 + 20<i32>:word32] = 0xF<32>
	Mem46[&tLoc50:byte] = 0<8>
	word32 ebp_48
	word32 ebx_49
	word32 edi_51
	word32 edx_5096
	word32 esi_5097
	word32 ecx_5095
	fn00402A70(&tLoc50, dwArg04, 0x4328E0<32>, 5<32>, Mem46[&tLoc50 + 12<i32>:word32], out ecx_5095, out edx_5096, out ebx_49, out ebp_48, out esi_5097, out edi_51)
	Mem63[ebp_48 - 4<i32>:word32] = 0<32>
	word32 esp_55 = <invalid>
	Mem67[esp_55 - 0x14<32>:word32] = Mem63[edi_51:word32]
	word32 ebp_70
	word32 edx_5098
	fn004028D0(esp_55 - 0x10<32>, edi_51, Mem67[esp_55 - 0x14<32>:word32], out edx_5098, out ebp_70)
	Mem80[ebp_70 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_71 = <invalid>
	word32 ebp_87
	word32 ebx_88
	word32 edi_90
	word32 esi_5101
	word32 edx_5100
	word32 ecx_5099
	branch SLICE(fn0041C1F0(ebx_49, ebx_49, ebp_70, es, ds, Mem80[esp_71 + 0x2C<32>:word32], out ecx_5099, out edx_5100, out ebx_88, out ebp_87, out esi_5101, out edi_90), byte, 0) == 0<8> l00420582
l00420582:
	Mem107[ebp_87 - 20<i32>:word32] = esp_71 - 0x14<32>
	Mem109[esp_71 - 0x18<32>:word32] = 5<32>
	Mem110[esp_71 - 4<32>:word32] = 0<32>
	Mem111[esp_71:word32] = 0xF<32>
	Mem113[esp_71 - 0x1C<32>:word32] = 0x4328E8<32>
	Mem114[esp_71 - 0x14<32>:byte] = 0<8>
	word32 ebp_116
	word32 ebx_117
	word32 edi_119
	word32 esi_5104
	word32 edx_5103
	word32 ecx_5102
	fn00402A70(esp_71 - 0x14<32>, edi_90, Mem114[esp_71 - 0x1C<32>:word32], Mem114[esp_71 - 0x18<32>:word32], Mem114[esp_71 - 8<32>:word32], out ecx_5102, out edx_5103, out ebx_117, out ebp_116, out esi_5104, out edi_119)
	Mem131[ebp_116 - 4<i32>:word32] = 1<32>
	word32 esp_123 = <invalid>
	Mem135[esp_123 - 0x14<32>:word32] = Mem131[edi_119:word32]
	word32 ebp_138
	word32 edx_5105
	fn004028D0(esp_123 - 0x10<32>, edi_119, Mem135[esp_123 - 0x14<32>:word32], out edx_5105, out ebp_138)
	Mem148[ebp_138 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_139 = <invalid>
	word32 ebp_150
	word32 ebx_151
	word32 edi_153
	word32 esi_5108
	word32 ecx_5106
	word32 edx_5107
	branch SLICE(fn0041C1F0(ebx_117, ebx_117, ebp_138, es, ds, Mem148[esp_139 + 0x2C<32>:word32], out ecx_5106, out edx_5107, out ebx_151, out ebp_150, out esi_5108, out edi_153), byte, 0) == 0<8> l00420614
l00420614:
	Mem170[ebp_150 - 20<i32>:word32] = esp_139 - 0x14<32>
	Mem172[esp_139 - 0x18<32>:word32] = 5<32>
	Mem173[esp_139 - 4<32>:word32] = 0<32>
	Mem174[esp_139:word32] = 0xF<32>
	Mem176[esp_139 - 0x1C<32>:word32] = 0x4328F0<32>
	Mem177[esp_139 - 0x14<32>:byte] = 0<8>
	word32 ebp_179
	word32 ebx_180
	word32 edi_182
	word32 esi_5122
	word32 ecx_5120
	word32 edx_5121
	fn00402A70(esp_139 - 0x14<32>, edi_153, Mem177[esp_139 - 0x1C<32>:word32], Mem177[esp_139 - 0x18<32>:word32], Mem177[esp_139 - 8<32>:word32], out ecx_5120, out edx_5121, out ebx_180, out ebp_179, out esi_5122, out edi_182)
	Mem194[ebp_179 - 4<i32>:word32] = 2<32>
	word32 esp_186 = <invalid>
	Mem198[esp_186 - 0x14<32>:word32] = Mem194[edi_182:word32]
	word32 ebp_201
	word32 edx_5123
	fn004028D0(esp_186 - 0x10<32>, edi_182, Mem198[esp_186 - 0x14<32>:word32], out edx_5123, out ebp_201)
	Mem211[ebp_201 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_202 = <invalid>
	word32 ebp_213
	word32 ebx_214
	word32 edi_216
	word32 edx_5125
	word32 ecx_5124
	word32 esi_5126
	branch SLICE(fn0041C1F0(ebx_180, ebx_180, ebp_201, es, ds, Mem211[esp_202 + 0x2C<32>:word32], out ecx_5124, out edx_5125, out ebx_214, out ebp_213, out esi_5126, out edi_216), byte, 0) == 0<8> l004206A6
l004206A6:
	Mem233[ebp_213 - 20<i32>:word32] = esp_202 - 0x14<32>
	Mem235[esp_202 - 0x18<32>:word32] = 6<32>
	Mem236[esp_202 - 4<32>:word32] = 0<32>
	Mem237[esp_202:word32] = 0xF<32>
	Mem239[esp_202 - 0x1C<32>:word32] = 0x4328F8<32>
	Mem240[esp_202 - 0x14<32>:byte] = 0<8>
	word32 ebp_242
	word32 ebx_243
	word32 edi_245
	word32 ecx_5138
	word32 edx_5139
	word32 esi_5140
	fn00402A70(esp_202 - 0x14<32>, edi_216, Mem240[esp_202 - 0x1C<32>:word32], Mem240[esp_202 - 0x18<32>:word32], Mem240[esp_202 - 8<32>:word32], out ecx_5138, out edx_5139, out ebx_243, out ebp_242, out esi_5140, out edi_245)
	Mem257[ebp_242 - 4<i32>:word32] = 3<32>
	word32 esp_249 = <invalid>
	Mem261[esp_249 - 0x14<32>:word32] = Mem257[edi_245:word32]
	word32 ebp_264
	word32 edx_5141
	fn004028D0(esp_249 - 0x10<32>, edi_245, Mem261[esp_249 - 0x14<32>:word32], out edx_5141, out ebp_264)
	Mem274[ebp_264 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_265 = <invalid>
	word32 ebp_276
	word32 ebx_277
	word32 edi_279
	word32 ecx_5142
	word32 edx_5143
	word32 esi_5144
	branch SLICE(fn0041C1F0(ebx_243, ebx_243, ebp_264, es, ds, Mem274[esp_265 + 0x2C<32>:word32], out ecx_5142, out edx_5143, out ebx_277, out ebp_276, out esi_5144, out edi_279), byte, 0) == 0<8> l00420738
l00420738:
	Mem296[ebp_276 - 20<i32>:word32] = esp_265 - 0x14<32>
	Mem298[esp_265 - 0x18<32>:word32] = 6<32>
	Mem299[esp_265 - 4<32>:word32] = 0<32>
	Mem300[esp_265:word32] = 0xF<32>
	Mem302[esp_265 - 0x1C<32>:word32] = 0x432900<32>
	Mem303[esp_265 - 0x14<32>:byte] = 0<8>
	word32 ebp_305
	word32 ebx_306
	word32 edi_308
	word32 ecx_5156
	word32 edx_5157
	word32 esi_5158
	fn00402A70(esp_265 - 0x14<32>, edi_279, Mem303[esp_265 - 0x1C<32>:word32], Mem303[esp_265 - 0x18<32>:word32], Mem303[esp_265 - 8<32>:word32], out ecx_5156, out edx_5157, out ebx_306, out ebp_305, out esi_5158, out edi_308)
	Mem320[ebp_305 - 4<i32>:word32] = 4<32>
	word32 esp_312 = <invalid>
	Mem324[esp_312 - 0x14<32>:word32] = Mem320[edi_308:word32]
	word32 ebp_327
	word32 edx_5159
	fn004028D0(esp_312 - 0x10<32>, edi_308, Mem324[esp_312 - 0x14<32>:word32], out edx_5159, out ebp_327)
	Mem337[ebp_327 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_328 = <invalid>
	word32 ebp_339
	word32 ebx_340
	word32 edi_342
	word32 ecx_5160
	word32 edx_5161
	word32 esi_5162
	branch SLICE(fn0041C1F0(ebx_306, ebx_306, ebp_327, es, ds, Mem337[esp_328 + 0x2C<32>:word32], out ecx_5160, out edx_5161, out ebx_340, out ebp_339, out esi_5162, out edi_342), byte, 0) == 0<8> l004207CA
l004207CA:
	Mem359[ebp_339 - 20<i32>:word32] = esp_328 - 0x14<32>
	Mem361[esp_328 - 0x18<32>:word32] = 5<32>
	Mem362[esp_328 - 4<32>:word32] = 0<32>
	Mem363[esp_328:word32] = 0xF<32>
	Mem365[esp_328 - 0x1C<32>:word32] = 0x432908<32>
	Mem366[esp_328 - 0x14<32>:byte] = 0<8>
	word32 ebp_368
	word32 ebx_369
	word32 edi_371
	word32 ecx_5174
	word32 edx_5175
	word32 esi_5176
	fn00402A70(esp_328 - 0x14<32>, edi_342, Mem366[esp_328 - 0x1C<32>:word32], Mem366[esp_328 - 0x18<32>:word32], Mem366[esp_328 - 8<32>:word32], out ecx_5174, out edx_5175, out ebx_369, out ebp_368, out esi_5176, out edi_371)
	Mem383[ebp_368 - 4<i32>:word32] = 5<32>
	word32 esp_375 = <invalid>
	Mem387[esp_375 - 0x14<32>:word32] = Mem383[edi_371:word32]
	word32 ebp_390
	word32 edx_5177
	fn004028D0(esp_375 - 0x10<32>, edi_371, Mem387[esp_375 - 0x14<32>:word32], out edx_5177, out ebp_390)
	Mem400[ebp_390 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_391 = <invalid>
	word32 ebp_402
	word32 ebx_403
	word32 edi_405
	word32 ecx_5178
	word32 edx_5179
	word32 esi_5180
	branch SLICE(fn0041C1F0(ebx_369, ebx_369, ebp_390, es, ds, Mem400[esp_391 + 0x2C<32>:word32], out ecx_5178, out edx_5179, out ebx_403, out ebp_402, out esi_5180, out edi_405), byte, 0) == 0<8> l0042085C
l0042085C:
	Mem422[ebp_402 - 20<i32>:word32] = esp_391 - 0x14<32>
	Mem424[esp_391 - 0x18<32>:word32] = 4<32>
	Mem425[esp_391 - 4<32>:word32] = 0<32>
	Mem426[esp_391:word32] = 0xF<32>
	Mem428[esp_391 - 0x1C<32>:word32] = 0x432910<32>
	Mem429[esp_391 - 0x14<32>:byte] = 0<8>
	word32 ebp_431
	word32 ebx_432
	word32 edi_434
	word32 ecx_5192
	word32 edx_5193
	word32 esi_5194
	fn00402A70(esp_391 - 0x14<32>, edi_405, Mem429[esp_391 - 0x1C<32>:word32], Mem429[esp_391 - 0x18<32>:word32], Mem429[esp_391 - 8<32>:word32], out ecx_5192, out edx_5193, out ebx_432, out ebp_431, out esi_5194, out edi_434)
	Mem446[ebp_431 - 4<i32>:word32] = 6<32>
	word32 esp_438 = <invalid>
	Mem450[esp_438 - 0x14<32>:word32] = Mem446[edi_434:word32]
	word32 ebp_453
	word32 edx_5195
	fn004028D0(esp_438 - 0x10<32>, edi_434, Mem450[esp_438 - 0x14<32>:word32], out edx_5195, out ebp_453)
	Mem463[ebp_453 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_454 = <invalid>
	word32 ebp_465
	word32 ebx_466
	word32 edi_468
	word32 ecx_5196
	word32 edx_5197
	word32 esi_5198
	branch SLICE(fn0041C1F0(ebx_432, ebx_432, ebp_453, es, ds, Mem463[esp_454 + 0x2C<32>:word32], out ecx_5196, out edx_5197, out ebx_466, out ebp_465, out esi_5198, out edi_468), byte, 0) == 0<8> l004208EE
l004208EE:
	Mem485[ebp_465 - 20<i32>:word32] = esp_454 - 0x14<32>
	Mem487[esp_454 - 0x18<32>:word32] = 4<32>
	Mem488[esp_454 - 4<32>:word32] = 0<32>
	Mem489[esp_454:word32] = 0xF<32>
	Mem491[esp_454 - 0x1C<32>:word32] = 0x432918<32>
	Mem492[esp_454 - 0x14<32>:byte] = 0<8>
	word32 ebp_494
	word32 ebx_495
	word32 edi_497
	word32 ecx_5210
	word32 edx_5211
	word32 esi_5212
	fn00402A70(esp_454 - 0x14<32>, edi_468, Mem492[esp_454 - 0x1C<32>:word32], Mem492[esp_454 - 0x18<32>:word32], Mem492[esp_454 - 8<32>:word32], out ecx_5210, out edx_5211, out ebx_495, out ebp_494, out esi_5212, out edi_497)
	Mem509[ebp_494 - 4<i32>:word32] = 7<32>
	word32 esp_501 = <invalid>
	Mem513[esp_501 - 0x14<32>:word32] = Mem509[edi_497:word32]
	word32 ebp_516
	word32 edx_5213
	fn004028D0(esp_501 - 0x10<32>, edi_497, Mem513[esp_501 - 0x14<32>:word32], out edx_5213, out ebp_516)
	Mem526[ebp_516 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_517 = <invalid>
	word32 ebp_528
	word32 ebx_529
	word32 edi_531
	word32 ecx_5214
	word32 edx_5215
	word32 esi_5216
	branch SLICE(fn0041C1F0(ebx_495, ebx_495, ebp_516, es, ds, Mem526[esp_517 + 0x2C<32>:word32], out ecx_5214, out edx_5215, out ebx_529, out ebp_528, out esi_5216, out edi_531), byte, 0) == 0<8> l00420980
l00420980:
	Mem548[ebp_528 - 20<i32>:word32] = esp_517 - 0x14<32>
	Mem550[esp_517 - 0x18<32>:word32] = 4<32>
	Mem551[esp_517 - 4<32>:word32] = 0<32>
	Mem552[esp_517:word32] = 0xF<32>
	Mem554[esp_517 - 0x1C<32>:word32] = 0x432920<32>
	Mem555[esp_517 - 0x14<32>:byte] = 0<8>
	word32 ebp_557
	word32 ebx_558
	word32 edi_560
	word32 ecx_5228
	word32 edx_5229
	word32 esi_5230
	fn00402A70(esp_517 - 0x14<32>, edi_531, Mem555[esp_517 - 0x1C<32>:word32], Mem555[esp_517 - 0x18<32>:word32], Mem555[esp_517 - 8<32>:word32], out ecx_5228, out edx_5229, out ebx_558, out ebp_557, out esi_5230, out edi_560)
	Mem572[ebp_557 - 4<i32>:word32] = 8<32>
	word32 esp_564 = <invalid>
	Mem576[esp_564 - 0x14<32>:word32] = Mem572[edi_560:word32]
	word32 ebp_579
	word32 edx_5231
	fn004028D0(esp_564 - 0x10<32>, edi_560, Mem576[esp_564 - 0x14<32>:word32], out edx_5231, out ebp_579)
	Mem589[ebp_579 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_580 = <invalid>
	word32 ebp_591
	word32 ebx_592
	word32 edi_594
	word32 ecx_5232
	word32 edx_5233
	word32 esi_5234
	branch SLICE(fn0041C1F0(ebx_558, ebx_558, ebp_579, es, ds, Mem589[esp_580 + 0x2C<32>:word32], out ecx_5232, out edx_5233, out ebx_592, out ebp_591, out esi_5234, out edi_594), byte, 0) == 0<8> l00420A12
l00420A12:
	Mem611[ebp_591 - 20<i32>:word32] = esp_580 - 0x14<32>
	Mem613[esp_580 - 0x18<32>:word32] = 5<32>
	Mem614[esp_580 - 4<32>:word32] = 0<32>
	Mem615[esp_580:word32] = 0xF<32>
	Mem617[esp_580 - 0x1C<32>:word32] = 0x432928<32>
	Mem618[esp_580 - 0x14<32>:byte] = 0<8>
	word32 ebp_620
	word32 ebx_621
	word32 edi_623
	word32 ecx_5246
	word32 edx_5247
	word32 esi_5248
	fn00402A70(esp_580 - 0x14<32>, edi_594, Mem618[esp_580 - 0x1C<32>:word32], Mem618[esp_580 - 0x18<32>:word32], Mem618[esp_580 - 8<32>:word32], out ecx_5246, out edx_5247, out ebx_621, out ebp_620, out esi_5248, out edi_623)
	Mem635[ebp_620 - 4<i32>:word32] = 9<32>
	word32 esp_627 = <invalid>
	Mem639[esp_627 - 0x14<32>:word32] = Mem635[edi_623:word32]
	word32 ebp_642
	word32 edx_5249
	fn004028D0(esp_627 - 0x10<32>, edi_623, Mem639[esp_627 - 0x14<32>:word32], out edx_5249, out ebp_642)
	Mem652[ebp_642 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_643 = <invalid>
	word32 ebp_654
	word32 ebx_655
	word32 edi_657
	word32 ecx_5250
	word32 edx_5251
	word32 esi_5252
	branch SLICE(fn0041C1F0(ebx_621, ebx_621, ebp_642, es, ds, Mem652[esp_643 + 0x2C<32>:word32], out ecx_5250, out edx_5251, out ebx_655, out ebp_654, out esi_5252, out edi_657), byte, 0) == 0<8> l00420AA4
l00420AA4:
	Mem674[ebp_654 - 20<i32>:word32] = esp_643 - 0x14<32>
	Mem676[esp_643 - 0x18<32>:word32] = 5<32>
	Mem677[esp_643 - 4<32>:word32] = 0<32>
	Mem678[esp_643:word32] = 0xF<32>
	Mem680[esp_643 - 0x1C<32>:word32] = 0x432930<32>
	Mem681[esp_643 - 0x14<32>:byte] = 0<8>
	word32 ebp_683
	word32 ebx_684
	word32 edi_686
	word32 ecx_5264
	word32 edx_5265
	word32 esi_5266
	fn00402A70(esp_643 - 0x14<32>, edi_657, Mem681[esp_643 - 0x1C<32>:word32], Mem681[esp_643 - 0x18<32>:word32], Mem681[esp_643 - 8<32>:word32], out ecx_5264, out edx_5265, out ebx_684, out ebp_683, out esi_5266, out edi_686)
	Mem698[ebp_683 - 4<i32>:word32] = 0xA<32>
	word32 esp_690 = <invalid>
	Mem702[esp_690 - 0x14<32>:word32] = Mem698[edi_686:word32]
	word32 ebp_705
	word32 edx_5267
	fn004028D0(esp_690 - 0x10<32>, edi_686, Mem702[esp_690 - 0x14<32>:word32], out edx_5267, out ebp_705)
	Mem715[ebp_705 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_706 = <invalid>
	word32 ebp_717
	word32 ebx_718
	word32 edi_720
	word32 ecx_5268
	word32 edx_5269
	word32 esi_5270
	branch SLICE(fn0041C1F0(ebx_684, ebx_684, ebp_705, es, ds, Mem715[esp_706 + 0x2C<32>:word32], out ecx_5268, out edx_5269, out ebx_718, out ebp_717, out esi_5270, out edi_720), byte, 0) == 0<8> l00420B36
l00420B36:
	Mem737[ebp_717 - 20<i32>:word32] = esp_706 - 0x14<32>
	Mem739[esp_706 - 0x18<32>:word32] = 4<32>
	Mem740[esp_706 - 4<32>:word32] = 0<32>
	Mem741[esp_706:word32] = 0xF<32>
	Mem743[esp_706 - 0x1C<32>:word32] = 0x432938<32>
	Mem744[esp_706 - 0x14<32>:byte] = 0<8>
	word32 ebp_746
	word32 ebx_747
	word32 edi_749
	word32 ecx_5282
	word32 edx_5283
	word32 esi_5284
	fn00402A70(esp_706 - 0x14<32>, edi_720, Mem744[esp_706 - 0x1C<32>:word32], Mem744[esp_706 - 0x18<32>:word32], Mem744[esp_706 - 8<32>:word32], out ecx_5282, out edx_5283, out ebx_747, out ebp_746, out esi_5284, out edi_749)
	Mem761[ebp_746 - 4<i32>:word32] = 0xB<32>
	word32 esp_753 = <invalid>
	Mem765[esp_753 - 0x14<32>:word32] = Mem761[edi_749:word32]
	word32 ebp_768
	word32 edx_5285
	fn004028D0(esp_753 - 0x10<32>, edi_749, Mem765[esp_753 - 0x14<32>:word32], out edx_5285, out ebp_768)
	Mem778[ebp_768 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_769 = <invalid>
	word32 ebp_780
	word32 ebx_781
	word32 edi_783
	word32 ecx_5286
	word32 edx_5287
	word32 esi_5288
	branch SLICE(fn0041C1F0(ebx_747, ebx_747, ebp_768, es, ds, Mem778[esp_769 + 0x2C<32>:word32], out ecx_5286, out edx_5287, out ebx_781, out ebp_780, out esi_5288, out edi_783), byte, 0) == 0<8> l00420BC8
l00420BC8:
	word32 esp_2433
	Mem800[ebp_780 - 20<i32>:word32] = esp_769 - 0x14<32>
	Mem802[esp_769 - 0x18<32>:word32] = 4<32>
	Mem803[esp_769 - 4<32>:word32] = 0<32>
	Mem804[esp_769:word32] = 0xF<32>
	Mem806[esp_769 - 0x1C<32>:word32] = 0x432940<32>
	Mem807[esp_769 - 0x14<32>:byte] = 0<8>
	word32 ebp_809
	word32 ebx_810
	word32 edi_812
	word32 ecx_5300
	word32 edx_5301
	word32 esi_5302
	fn00402A70(esp_769 - 0x14<32>, edi_783, Mem807[esp_769 - 0x1C<32>:word32], Mem807[esp_769 - 0x18<32>:word32], Mem807[esp_769 - 8<32>:word32], out ecx_5300, out edx_5301, out ebx_810, out ebp_809, out esi_5302, out edi_812)
	Mem824[ebp_809 - 4<i32>:word32] = 0xC<32>
	word32 esp_816 = <invalid>
	Mem828[esp_816 - 0x14<32>:word32] = Mem824[edi_812:word32]
	word32 ebp_831
	word32 edx_5303
	fn004028D0(esp_816 - 0x10<32>, edi_812, Mem828[esp_816 - 0x14<32>:word32], out edx_5303, out ebp_831)
	Mem841[ebp_831 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_832 = <invalid>
	word32 esp_839 = esp_832 + 4<32>
	word32 ebx_844
	word32 ecx_5304
	word32 edx_5305
	word32 esi_5306
	word32 edi_1048
	word32 ebp_1045
	branch SLICE(fn0041C1F0(ebx_810, ebx_810, ebp_831, es, ds, Mem841[esp_832 + 0x2C<32>:word32], out ecx_5304, out edx_5305, out ebx_844, out ebp_1045, out esi_5306, out edi_1048), byte, 0) == 0<8> l00420CAD
l00420C16:
	word128 xmm0_862 = fn00427210()
	word32 ecx_5325
	word32 edx_5326
	word32 eax_867 = fn0042D911(SEQ(SLICE(xmm0_862, word64, 64), SLICE(xmm0_862, real64, 0) * Mem841[0x00432F00<p32>:real64]), out ecx_5325, out edx_5326)
	word32 esi_882 = Mem841[edi_1048:word32]
	Mem883[ebp_1045 - 20<i32>:word32] = eax_867
	Mem885[ebp_1045 - 32<i32>:word32] = esi_882 + 72<i32>
	word32 eax_886 = _errno()
	Mem888[ebp_1045 - 36<i32>:word32] = eax_886
	word32 esi_887 = esi_882 + 0x30<32>
	branch Mem888[esi_882 + 0x44<32>:word32] <u 0x10<32> l00420C4C
l00420C4A:
	esi_887 = Mem888[esi_882 + 0x30<32>:word32]
l00420C4C:
	Mem893[eax_886:word32] = 0<32>
	Mem898[esp_832:word32] = 0<32>
	Mem900[esp_832 - 4<i32>:word32] = ebp_1045 - 24<i32>
	Mem903[esp_832 - 8<i32>:word32] = esi_887
	Mem906[ebp_1045 - 28<i32>:word32] = strtol(Mem903[esp_832 - 8<i32>:(ptr32 charconst )], Mem903[esp_832 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem903[esp_832:int32])
	esp_2433 = esp_832 + 4<32>
	branch esi_887 != Mem906[ebp_1045 - 24<i32>:word32] l00420C75
l00420C6A:
	Mem910[esp_832:word32] = 0x431878<32>
	_Xinvalid_argument(Mem910[esp_832:(ptr32 charconst )])
	esp_2433 = esp_832
l00420C75:
	branch Mem912[Mem912[ebp_1045 - 36<i32>:word32]:word32] == 0x22<32> l00420CA2
l00420CA2:
	esp_839 = esp_2433 - 4<i32>
	Mem918[esp_839:word32] = 0x431890<32>
	_Xout_of_range(Mem918[esp_839:(ptr32 charconst )])
l00420CAD:
	word32 eax_2437
	word32 esi_3058
	word32 eax_3057
	word32 esp_920 = esp_839 - 0x18<32>
	Mem925[ebp_1045 - 20<i32>:word32] = esp_920
	Mem927[esp_920 - 4<i32>:word32] = 4<32>
	Mem928[esp_920 + 16<i32>:word32] = 0<32>
	Mem929[esp_920 + 20<i32>:word32] = 0xF<32>
	Mem931[esp_920 - 8<i32>:word32] = 0x432948<32>
	Mem932[esp_920:byte] = 0<8>
	word32 ebp_938
	word32 ebx_939
	word32 edi_941
	word32 ecx_5318
	word32 edx_5319
	word32 esi_5320
	fn00402A70(esp_920, edi_1048, Mem932[esp_920 - 8<i32>:word32], Mem932[esp_920 - 4<i32>:word32], Mem932[esp_920 + 12<i32>:word32], out ecx_5318, out edx_5319, out ebx_939, out ebp_938, out esi_5320, out edi_941)
	Mem953[ebp_938 - 4<i32>:word32] = 0xD<32>
	word32 esp_945 = <invalid>
	Mem957[esp_945 - 0x14<32>:word32] = Mem953[edi_941:word32]
	word32 ebp_960
	word32 edx_5321
	fn004028D0(esp_945 - 0x10<32>, edi_941, Mem957[esp_945 - 0x14<32>:word32], out edx_5321, out ebp_960)
	Mem970[ebp_960 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_961 = <invalid>
	word32 esp_1041 = esp_961 + 4<32>
	word32 ecx_5322
	word32 edx_5323
	word32 esi_5324
	word32 ebx_1046
	branch SLICE(fn0041C1F0(ebx_939, ebx_939, ebp_960, es, ds, Mem970[esp_961 + 0x2C<32>:word32], out ecx_5322, out edx_5323, out ebx_1046, out ebp_1045, out esi_5324, out edi_1048), byte, 0) == 0<8> l00420D8B
l00420D8B:
	word128 xmm0_2586
	Mem1002[ebp_1045 - 20<i32>:word32] = esp_961 - 0x14<32>
	Mem1004[esp_961 - 0x18<32>:word32] = 4<32>
	Mem1005[esp_961 - 4<32>:word32] = 0<32>
	Mem1006[esp_961:word32] = 0xF<32>
	Mem1008[esp_961 - 0x1C<32>:word32] = 0x432950<32>
	Mem1009[esp_961 - 0x14<32>:byte] = 0<8>
	word32 ebp_1011
	word32 ebx_1012
	word32 edi_1014
	word32 ecx_5327
	word32 edx_5328
	word32 esi_5329
	fn00402A70(esp_961 - 0x14<32>, edi_1048, Mem1009[esp_961 - 0x1C<32>:word32], Mem1009[esp_961 - 0x18<32>:word32], Mem1009[esp_961 - 8<32>:word32], out ecx_5327, out edx_5328, out ebx_1012, out ebp_1011, out esi_5329, out edi_1014)
	Mem1026[ebp_1011 - 4<i32>:word32] = 0xE<32>
	word32 esp_1018 = <invalid>
	Mem1030[esp_1018 - 0x14<32>:word32] = Mem1026[edi_1014:word32]
	word32 ebp_1033
	word32 edx_5330
	fn004028D0(esp_1018 - 0x10<32>, edi_1014, Mem1030[esp_1018 - 0x14<32>:word32], out edx_5330, out ebp_1033)
	Mem1043[ebp_1033 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1034 = <invalid>
	esp_1041 = esp_1034 + 4<32>
	word32 ecx_5331
	word32 edx_5332
	word32 esi_5333
	branch SLICE(fn0041C1F0(ebx_1012, ebx_1012, ebp_1033, es, ds, Mem1043[esp_1034 + 0x2C<32>:word32], out ecx_5331, out edx_5332, out ebx_1046, out ebp_1045, out esi_5333, out edi_1048), byte, 0) == 0<8> l00420E12
l00420E12:
	Mem1065[ebp_1045 - 20<i32>:word32] = esp_1034 - 0x14<32>
	Mem1067[esp_1034 - 0x18<32>:word32] = 5<32>
	Mem1068[esp_1034 - 4<32>:word32] = 0<32>
	Mem1069[esp_1034:word32] = 0xF<32>
	Mem1071[esp_1034 - 0x1C<32>:word32] = 0x432958<32>
	Mem1072[esp_1034 - 0x14<32>:byte] = 0<8>
	word32 ebp_1074
	word32 ebx_1075
	word32 edi_1077
	word32 ecx_5336
	word32 edx_5337
	word32 esi_5338
	fn00402A70(esp_1034 - 0x14<32>, edi_1048, Mem1072[esp_1034 - 0x1C<32>:word32], Mem1072[esp_1034 - 0x18<32>:word32], Mem1072[esp_1034 - 8<32>:word32], out ecx_5336, out edx_5337, out ebx_1075, out ebp_1074, out esi_5338, out edi_1077)
	Mem1089[ebp_1074 - 4<i32>:word32] = 0xF<32>
	word32 esp_1081 = <invalid>
	Mem1093[esp_1081 - 0x14<32>:word32] = Mem1089[edi_1077:word32]
	word32 ebp_1096
	word32 edx_5339
	fn004028D0(esp_1081 - 0x10<32>, edi_1077, Mem1093[esp_1081 - 0x14<32>:word32], out edx_5339, out ebp_1096)
	Mem1106[ebp_1096 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1097 = <invalid>
	esp_1041 = esp_1097 + 4<32>
	word32 ecx_5340
	word32 edx_5341
	word32 esi_5342
	branch SLICE(fn0041C1F0(ebx_1075, ebx_1075, ebp_1096, es, ds, Mem1106[esp_1097 + 0x2C<32>:word32], out ecx_5340, out edx_5341, out ebx_1046, out ebp_1045, out esi_5342, out edi_1048), byte, 0) == 0<8> l00420E73
l00420E73:
	Mem1128[ebp_1045 - 20<i32>:word32] = esp_1097 - 0x14<32>
	Mem1130[esp_1097 - 0x18<32>:word32] = 5<32>
	Mem1131[esp_1097 - 4<32>:word32] = 0<32>
	Mem1132[esp_1097:word32] = 0xF<32>
	Mem1134[esp_1097 - 0x1C<32>:word32] = 0x432960<32>
	Mem1135[esp_1097 - 0x14<32>:byte] = 0<8>
	word32 ebp_1137
	word32 ebx_1138
	word32 edi_1140
	word32 ecx_5348
	word32 edx_5349
	word32 esi_5350
	fn00402A70(esp_1097 - 0x14<32>, edi_1048, Mem1135[esp_1097 - 0x1C<32>:word32], Mem1135[esp_1097 - 0x18<32>:word32], Mem1135[esp_1097 - 8<32>:word32], out ecx_5348, out edx_5349, out ebx_1138, out ebp_1137, out esi_5350, out edi_1140)
	Mem1152[ebp_1137 - 4<i32>:word32] = 0x10<32>
	word32 esp_1144 = <invalid>
	Mem1156[esp_1144 - 0x14<32>:word32] = Mem1152[edi_1140:word32]
	word32 ebp_1159
	word32 edx_5351
	fn004028D0(esp_1144 - 0x10<32>, edi_1140, Mem1156[esp_1144 - 0x14<32>:word32], out edx_5351, out ebp_1159)
	Mem1169[ebp_1159 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1160 = <invalid>
	esp_1041 = esp_1160 + 4<32>
	word32 ecx_5352
	word32 edx_5353
	word32 esi_5354
	branch SLICE(fn0041C1F0(ebx_1138, ebx_1138, ebp_1159, es, ds, Mem1169[esp_1160 + 0x2C<32>:word32], out ecx_5352, out edx_5353, out ebx_1046, out ebp_1045, out esi_5354, out edi_1048), byte, 0) == 0<8> l00420ED4
l00420ED4:
	Mem1191[ebp_1045 - 20<i32>:word32] = esp_1160 - 0x14<32>
	Mem1193[esp_1160 - 0x18<32>:word32] = 4<32>
	Mem1194[esp_1160 - 4<32>:word32] = 0<32>
	Mem1195[esp_1160:word32] = 0xF<32>
	Mem1197[esp_1160 - 0x1C<32>:word32] = 0x432968<32>
	Mem1198[esp_1160 - 0x14<32>:byte] = 0<8>
	word32 ebp_1200
	word32 ebx_1201
	word32 edi_1203
	word32 ecx_5357
	word32 edx_5358
	word32 esi_5359
	fn00402A70(esp_1160 - 0x14<32>, edi_1048, Mem1198[esp_1160 - 0x1C<32>:word32], Mem1198[esp_1160 - 0x18<32>:word32], Mem1198[esp_1160 - 8<32>:word32], out ecx_5357, out edx_5358, out ebx_1201, out ebp_1200, out esi_5359, out edi_1203)
	Mem1215[ebp_1200 - 4<i32>:word32] = 0x11<32>
	word32 esp_1207 = <invalid>
	Mem1219[esp_1207 - 0x14<32>:word32] = Mem1215[edi_1203:word32]
	word32 ebp_1222
	word32 edx_5360
	fn004028D0(esp_1207 - 0x10<32>, edi_1203, Mem1219[esp_1207 - 0x14<32>:word32], out edx_5360, out ebp_1222)
	Mem1232[ebp_1222 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1223 = <invalid>
	word32 ecx_5361
	word32 edx_5362
	word32 esi_5363
	branch SLICE(fn0041C1F0(ebx_1201, ebx_1201, ebp_1222, es, ds, Mem1232[esp_1223 + 0x2C<32>:word32], out ecx_5361, out edx_5362, out ebx_1046, out ebp_1045, out esi_5363, out edi_1048), byte, 0) == 0<8> l00420FB2
l00420FB2:
	Mem1254[ebp_1045 - 20<i32>:word32] = esp_1223 - 0x14<32>
	Mem1256[esp_1223 - 0x18<32>:word32] = 6<32>
	Mem1257[esp_1223 - 4<32>:word32] = 0<32>
	Mem1258[esp_1223:word32] = 0xF<32>
	Mem1260[esp_1223 - 0x1C<32>:word32] = 0x432970<32>
	Mem1261[esp_1223 - 0x14<32>:byte] = 0<8>
	word32 ebp_1263
	word32 ebx_1264
	word32 edi_1266
	word32 ecx_5364
	word32 edx_5365
	word32 esi_5366
	fn00402A70(esp_1223 - 0x14<32>, edi_1048, Mem1261[esp_1223 - 0x1C<32>:word32], Mem1261[esp_1223 - 0x18<32>:word32], Mem1261[esp_1223 - 8<32>:word32], out ecx_5364, out edx_5365, out ebx_1264, out ebp_1263, out esi_5366, out edi_1266)
	Mem1278[ebp_1263 - 4<i32>:word32] = 0x12<32>
	word32 esp_1270 = <invalid>
	Mem1282[esp_1270 - 0x14<32>:word32] = Mem1278[edi_1266:word32]
	word32 ebp_1285
	word32 edx_5367
	fn004028D0(esp_1270 - 0x10<32>, edi_1266, Mem1282[esp_1270 - 0x14<32>:word32], out edx_5367, out ebp_1285)
	Mem1295[ebp_1285 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1286 = <invalid>
	word32 ebp_1297
	word32 ebx_1298
	word32 edi_1300
	word32 ecx_5368
	word32 edx_5369
	word32 esi_5370
	branch SLICE(fn0041C1F0(ebx_1264, ebx_1264, ebp_1285, es, ds, Mem1295[esp_1286 + 0x2C<32>:word32], out ecx_5368, out edx_5369, out ebx_1298, out ebp_1297, out esi_5370, out edi_1300), byte, 0) == 0<8> l00421044
l00421044:
	Mem1317[ebp_1297 - 20<i32>:word32] = esp_1286 - 0x14<32>
	Mem1319[esp_1286 - 0x18<32>:word32] = 6<32>
	Mem1320[esp_1286 - 4<32>:word32] = 0<32>
	Mem1321[esp_1286:word32] = 0xF<32>
	Mem1323[esp_1286 - 0x1C<32>:word32] = 0x432978<32>
	Mem1324[esp_1286 - 0x14<32>:byte] = 0<8>
	word32 ebp_1326
	word32 ebx_1327
	word32 edi_1329
	word32 ecx_5383
	word32 edx_5384
	word32 esi_5385
	fn00402A70(esp_1286 - 0x14<32>, edi_1300, Mem1324[esp_1286 - 0x1C<32>:word32], Mem1324[esp_1286 - 0x18<32>:word32], Mem1324[esp_1286 - 8<32>:word32], out ecx_5383, out edx_5384, out ebx_1327, out ebp_1326, out esi_5385, out edi_1329)
	Mem1341[ebp_1326 - 4<i32>:word32] = 0x13<32>
	word32 esp_1333 = <invalid>
	Mem1345[esp_1333 - 0x14<32>:word32] = Mem1341[edi_1329:word32]
	word32 ebp_1348
	word32 edx_5386
	fn004028D0(esp_1333 - 0x10<32>, edi_1329, Mem1345[esp_1333 - 0x14<32>:word32], out edx_5386, out ebp_1348)
	Mem1358[ebp_1348 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1349 = <invalid>
	word32 ebp_1360
	word32 ebx_1361
	word32 edi_1363
	word32 ecx_5387
	word32 edx_5388
	word32 esi_5389
	branch SLICE(fn0041C1F0(ebx_1327, ebx_1327, ebp_1348, es, ds, Mem1358[esp_1349 + 0x2C<32>:word32], out ecx_5387, out edx_5388, out ebx_1361, out ebp_1360, out esi_5389, out edi_1363), byte, 0) == 0<8> l004210D6
l004210D6:
	Mem1380[ebp_1360 - 20<i32>:word32] = esp_1349 - 0x14<32>
	Mem1382[esp_1349 - 0x18<32>:word32] = 3<32>
	Mem1383[esp_1349 - 4<32>:word32] = 0<32>
	Mem1384[esp_1349:word32] = 0xF<32>
	Mem1386[esp_1349 - 0x1C<32>:word32] = 0x432980<32>
	Mem1387[esp_1349 - 0x14<32>:byte] = 0<8>
	word32 ebp_1389
	word32 ebx_1390
	word32 edi_1392
	word32 ecx_5401
	word32 edx_5402
	word32 esi_5403
	fn00402A70(esp_1349 - 0x14<32>, edi_1363, Mem1387[esp_1349 - 0x1C<32>:word32], Mem1387[esp_1349 - 0x18<32>:word32], Mem1387[esp_1349 - 8<32>:word32], out ecx_5401, out edx_5402, out ebx_1390, out ebp_1389, out esi_5403, out edi_1392)
	Mem1404[ebp_1389 - 4<i32>:word32] = 0x14<32>
	word32 esp_1396 = <invalid>
	Mem1408[esp_1396 - 0x14<32>:word32] = Mem1404[edi_1392:word32]
	word32 ebp_1411
	word32 edx_5404
	fn004028D0(esp_1396 - 0x10<32>, edi_1392, Mem1408[esp_1396 - 0x14<32>:word32], out edx_5404, out ebp_1411)
	Mem1421[ebp_1411 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1412 = <invalid>
	esp_1041 = esp_1412 + 4<32>
	word32 ecx_5405
	word32 edx_5406
	word32 esi_5407
	branch SLICE(fn0041C1F0(ebx_1390, ebx_1390, ebp_1411, es, ds, Mem1421[esp_1412 + 0x2C<32>:word32], out ecx_5405, out edx_5406, out ebx_1046, out ebp_1045, out esi_5407, out edi_1048), byte, 0) == 0<8> l00421137
l00421137:
	Mem1443[ebp_1045 - 20<i32>:word32] = esp_1412 - 0x14<32>
	Mem1445[esp_1412 - 0x18<32>:word32] = 3<32>
	Mem1446[esp_1412 - 4<32>:word32] = 0<32>
	Mem1447[esp_1412:word32] = 0xF<32>
	Mem1449[esp_1412 - 0x1C<32>:word32] = 0x432984<32>
	Mem1450[esp_1412 - 0x14<32>:byte] = 0<8>
	word32 ebp_1452
	word32 ebx_1453
	word32 edi_1455
	word32 ecx_5419
	word32 edx_5420
	word32 esi_5421
	fn00402A70(esp_1412 - 0x14<32>, edi_1048, Mem1450[esp_1412 - 0x1C<32>:word32], Mem1450[esp_1412 - 0x18<32>:word32], Mem1450[esp_1412 - 8<32>:word32], out ecx_5419, out edx_5420, out ebx_1453, out ebp_1452, out esi_5421, out edi_1455)
	Mem1467[ebp_1452 - 4<i32>:word32] = 0x15<32>
	word32 esp_1459 = <invalid>
	Mem1471[esp_1459 - 0x14<32>:word32] = Mem1467[edi_1455:word32]
	word32 ebp_1474
	word32 edx_5422
	fn004028D0(esp_1459 - 0x10<32>, edi_1455, Mem1471[esp_1459 - 0x14<32>:word32], out edx_5422, out ebp_1474)
	Mem1484[ebp_1474 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1475 = <invalid>
	esp_1041 = esp_1475 + 4<32>
	word32 ecx_5423
	word32 edx_5424
	word32 esi_5425
	branch SLICE(fn0041C1F0(ebx_1453, ebx_1453, ebp_1474, es, ds, Mem1484[esp_1475 + 0x2C<32>:word32], out ecx_5423, out edx_5424, out ebx_1046, out ebp_1045, out esi_5425, out edi_1048), byte, 0) == 0<8> l00421198
l00421198:
	Mem1506[ebp_1045 - 20<i32>:word32] = esp_1475 - 0x14<32>
	Mem1508[esp_1475 - 0x18<32>:word32] = 3<32>
	Mem1509[esp_1475 - 4<32>:word32] = 0<32>
	Mem1510[esp_1475:word32] = 0xF<32>
	Mem1512[esp_1475 - 0x1C<32>:word32] = 0x432988<32>
	Mem1513[esp_1475 - 0x14<32>:byte] = 0<8>
	word32 ebp_1515
	word32 ebx_1516
	word32 edi_1518
	word32 ecx_5426
	word32 edx_5427
	word32 esi_5428
	fn00402A70(esp_1475 - 0x14<32>, edi_1048, Mem1513[esp_1475 - 0x1C<32>:word32], Mem1513[esp_1475 - 0x18<32>:word32], Mem1513[esp_1475 - 8<32>:word32], out ecx_5426, out edx_5427, out ebx_1516, out ebp_1515, out esi_5428, out edi_1518)
	Mem1530[ebp_1515 - 4<i32>:word32] = 0x16<32>
	word32 esp_1522 = <invalid>
	Mem1534[esp_1522 - 0x14<32>:word32] = Mem1530[edi_1518:word32]
	word32 ebp_1537
	word32 edx_5429
	fn004028D0(esp_1522 - 0x10<32>, edi_1518, Mem1534[esp_1522 - 0x14<32>:word32], out edx_5429, out ebp_1537)
	Mem1547[ebp_1537 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1538 = <invalid>
	esp_1041 = esp_1538 + 4<32>
	word32 ecx_5430
	word32 edx_5431
	word32 esi_5432
	branch SLICE(fn0041C1F0(ebx_1516, ebx_1516, ebp_1537, es, ds, Mem1547[esp_1538 + 0x2C<32>:word32], out ecx_5430, out edx_5431, out ebx_1046, out ebp_1045, out esi_5432, out edi_1048), byte, 0) == 0<8> l004211F9
l004211F9:
	Mem1569[ebp_1045 - 20<i32>:word32] = esp_1538 - 0x14<32>
	Mem1571[esp_1538 - 0x18<32>:word32] = 4<32>
	Mem1572[esp_1538 - 4<32>:word32] = 0<32>
	Mem1573[esp_1538:word32] = 0xF<32>
	Mem1575[esp_1538 - 0x1C<32>:word32] = 0x43298C<32>
	Mem1576[esp_1538 - 0x14<32>:byte] = 0<8>
	word32 ebp_1578
	word32 ebx_1579
	word32 edi_1581
	word32 ecx_5433
	word32 edx_5434
	word32 esi_5435
	fn00402A70(esp_1538 - 0x14<32>, edi_1048, Mem1576[esp_1538 - 0x1C<32>:word32], Mem1576[esp_1538 - 0x18<32>:word32], Mem1576[esp_1538 - 8<32>:word32], out ecx_5433, out edx_5434, out ebx_1579, out ebp_1578, out esi_5435, out edi_1581)
	Mem1593[ebp_1578 - 4<i32>:word32] = 0x17<32>
	word32 esp_1585 = <invalid>
	Mem1597[esp_1585 - 0x14<32>:word32] = Mem1593[edi_1581:word32]
	word32 ebp_1600
	word32 edx_5436
	fn004028D0(esp_1585 - 0x10<32>, edi_1581, Mem1597[esp_1585 - 0x14<32>:word32], out edx_5436, out ebp_1600)
	Mem1610[ebp_1600 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1601 = <invalid>
	esp_1041 = esp_1601 + 4<32>
	word32 ecx_5437
	word32 edx_5438
	word32 esi_5439
	branch SLICE(fn0041C1F0(ebx_1579, ebx_1579, ebp_1600, es, ds, Mem1610[esp_1601 + 0x2C<32>:word32], out ecx_5437, out edx_5438, out ebx_1046, out ebp_1045, out esi_5439, out edi_1048), byte, 0) == 0<8> l0042125A
l0042125A:
	Mem1632[ebp_1045 - 20<i32>:word32] = esp_1601 - 0x14<32>
	Mem1634[esp_1601 - 0x18<32>:word32] = 4<32>
	Mem1635[esp_1601 - 4<32>:word32] = 0<32>
	Mem1636[esp_1601:word32] = 0xF<32>
	Mem1638[esp_1601 - 0x1C<32>:word32] = 0x432994<32>
	Mem1639[esp_1601 - 0x14<32>:byte] = 0<8>
	word32 ebp_1641
	word32 ebx_1642
	word32 edi_1644
	word32 ecx_5440
	word32 edx_5441
	word32 esi_5442
	fn00402A70(esp_1601 - 0x14<32>, edi_1048, Mem1639[esp_1601 - 0x1C<32>:word32], Mem1639[esp_1601 - 0x18<32>:word32], Mem1639[esp_1601 - 8<32>:word32], out ecx_5440, out edx_5441, out ebx_1642, out ebp_1641, out esi_5442, out edi_1644)
	Mem1656[ebp_1641 - 4<i32>:word32] = 0x18<32>
	word32 esp_1648 = <invalid>
	Mem1660[esp_1648 - 0x14<32>:word32] = Mem1656[edi_1644:word32]
	word32 ebp_1663
	word32 edx_5443
	fn004028D0(esp_1648 - 0x10<32>, edi_1644, Mem1660[esp_1648 - 0x14<32>:word32], out edx_5443, out ebp_1663)
	Mem1673[ebp_1663 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1664 = <invalid>
	esp_1041 = esp_1664 + 4<32>
	word32 ecx_5444
	word32 edx_5445
	word32 esi_5446
	branch SLICE(fn0041C1F0(ebx_1642, ebx_1642, ebp_1663, es, ds, Mem1673[esp_1664 + 0x2C<32>:word32], out ecx_5444, out edx_5445, out ebx_1046, out ebp_1045, out esi_5446, out edi_1048), byte, 0) == 0<8> l004212BB
l004212BB:
	Mem1695[ebp_1045 - 20<i32>:word32] = esp_1664 - 0x14<32>
	Mem1697[esp_1664 - 0x18<32>:word32] = 3<32>
	Mem1698[esp_1664 - 4<32>:word32] = 0<32>
	Mem1699[esp_1664:word32] = 0xF<32>
	Mem1701[esp_1664 - 0x1C<32>:word32] = 0x43299C<32>
	Mem1702[esp_1664 - 0x14<32>:byte] = 0<8>
	word32 ebp_1704
	word32 ebx_1705
	word32 edi_1707
	word32 ecx_5447
	word32 edx_5448
	word32 esi_5449
	fn00402A70(esp_1664 - 0x14<32>, edi_1048, Mem1702[esp_1664 - 0x1C<32>:word32], Mem1702[esp_1664 - 0x18<32>:word32], Mem1702[esp_1664 - 8<32>:word32], out ecx_5447, out edx_5448, out ebx_1705, out ebp_1704, out esi_5449, out edi_1707)
	Mem1719[ebp_1704 - 4<i32>:word32] = 0x19<32>
	word32 esp_1711 = <invalid>
	Mem1723[esp_1711 - 0x14<32>:word32] = Mem1719[edi_1707:word32]
	word32 ebp_1726
	word32 edx_5450
	fn004028D0(esp_1711 - 0x10<32>, edi_1707, Mem1723[esp_1711 - 0x14<32>:word32], out edx_5450, out ebp_1726)
	Mem1736[ebp_1726 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1727 = <invalid>
	word32 ecx_5451
	word32 edx_5452
	word32 esi_5453
	branch SLICE(fn0041C1F0(ebx_1705, ebx_1705, ebp_1726, es, ds, Mem1736[esp_1727 + 0x2C<32>:word32], out ecx_5451, out edx_5452, out ebx_1046, out ebp_1045, out esi_5453, out edi_1048), byte, 0) == 0<8> l00421396
l00421396:
	Mem1758[ebp_1045 - 20<i32>:word32] = esp_1727 - 0x14<32>
	Mem1760[esp_1727 - 0x18<32>:word32] = 4<32>
	Mem1761[esp_1727 - 4<32>:word32] = 0<32>
	Mem1762[esp_1727:word32] = 0xF<32>
	Mem1764[esp_1727 - 0x1C<32>:word32] = 0x4329A0<32>
	Mem1765[esp_1727 - 0x14<32>:byte] = 0<8>
	word32 ebp_1767
	word32 ebx_1768
	word32 edi_1770
	word32 ecx_5454
	word32 edx_5455
	word32 esi_5456
	fn00402A70(esp_1727 - 0x14<32>, edi_1048, Mem1765[esp_1727 - 0x1C<32>:word32], Mem1765[esp_1727 - 0x18<32>:word32], Mem1765[esp_1727 - 8<32>:word32], out ecx_5454, out edx_5455, out ebx_1768, out ebp_1767, out esi_5456, out edi_1770)
	Mem1782[ebp_1767 - 4<i32>:word32] = 0x1A<32>
	word32 esp_1774 = <invalid>
	Mem1786[esp_1774 - 0x14<32>:word32] = Mem1782[edi_1770:word32]
	word32 ebp_1789
	word32 edx_5457
	fn004028D0(esp_1774 - 0x10<32>, edi_1770, Mem1786[esp_1774 - 0x14<32>:word32], out edx_5457, out ebp_1789)
	Mem1799[ebp_1789 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1790 = <invalid>
	word32 ecx_5458
	word32 edx_5459
	word32 esi_5460
	branch SLICE(fn0041C1F0(ebx_1768, ebx_1768, ebp_1789, es, ds, Mem1799[esp_1790 + 0x2C<32>:word32], out ecx_5458, out edx_5459, out ebx_1046, out ebp_1045, out esi_5460, out edi_1048), byte, 0) == 0<8> l00421440
l00421440:
	Mem1821[ebp_1045 - 20<i32>:word32] = esp_1790 - 0x14<32>
	Mem1823[esp_1790 - 0x18<32>:word32] = 5<32>
	Mem1824[esp_1790 - 4<32>:word32] = 0<32>
	Mem1825[esp_1790:word32] = 0xF<32>
	Mem1827[esp_1790 - 0x1C<32>:word32] = 0x4329A8<32>
	Mem1828[esp_1790 - 0x14<32>:byte] = 0<8>
	word32 ebp_1830
	word32 ebx_1831
	word32 edi_1833
	word32 ecx_5463
	word32 edx_5464
	word32 esi_5465
	fn00402A70(esp_1790 - 0x14<32>, edi_1048, Mem1828[esp_1790 - 0x1C<32>:word32], Mem1828[esp_1790 - 0x18<32>:word32], Mem1828[esp_1790 - 8<32>:word32], out ecx_5463, out edx_5464, out ebx_1831, out ebp_1830, out esi_5465, out edi_1833)
	Mem1845[ebp_1830 - 4<i32>:word32] = 0x1B<32>
	word32 esp_1837 = <invalid>
	Mem1849[esp_1837 - 0x14<32>:word32] = Mem1845[edi_1833:word32]
	word32 ebp_1852
	word32 edx_5466
	fn004028D0(esp_1837 - 0x10<32>, edi_1833, Mem1849[esp_1837 - 0x14<32>:word32], out edx_5466, out ebp_1852)
	Mem1862[ebp_1852 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1853 = <invalid>
	word32 ebp_1864
	word32 ebx_1865
	word32 edi_1867
	word32 ecx_5467
	word32 edx_5468
	word32 esi_5469
	branch SLICE(fn0041C1F0(ebx_1831, ebx_1831, ebp_1852, es, ds, Mem1862[esp_1853 + 0x2C<32>:word32], out ecx_5467, out edx_5468, out ebx_1865, out ebp_1864, out esi_5469, out edi_1867), byte, 0) == 0<8> l004214D2
l004214D2:
	Mem1884[ebp_1864 - 20<i32>:word32] = esp_1853 - 0x14<32>
	Mem1886[esp_1853 - 0x18<32>:word32] = 5<32>
	Mem1887[esp_1853 - 4<32>:word32] = 0<32>
	Mem1888[esp_1853:word32] = 0xF<32>
	Mem1890[esp_1853 - 0x1C<32>:word32] = 0x4329B0<32>
	Mem1891[esp_1853 - 0x14<32>:byte] = 0<8>
	word32 ebp_1893
	word32 ebx_1894
	word32 edi_1896
	word32 ecx_5477
	word32 edx_5478
	word32 esi_5479
	fn00402A70(esp_1853 - 0x14<32>, edi_1867, Mem1891[esp_1853 - 0x1C<32>:word32], Mem1891[esp_1853 - 0x18<32>:word32], Mem1891[esp_1853 - 8<32>:word32], out ecx_5477, out edx_5478, out ebx_1894, out ebp_1893, out esi_5479, out edi_1896)
	Mem1908[ebp_1893 - 4<i32>:word32] = 0x1C<32>
	word32 esp_1900 = <invalid>
	Mem1912[esp_1900 - 0x14<32>:word32] = Mem1908[edi_1896:word32]
	word32 ebp_1915
	word32 edx_5480
	fn004028D0(esp_1900 - 0x10<32>, edi_1896, Mem1912[esp_1900 - 0x14<32>:word32], out edx_5480, out ebp_1915)
	Mem1925[ebp_1915 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1916 = <invalid>
	word32 ebp_1927
	word32 ebx_1928
	word32 edi_1930
	word32 ecx_5481
	word32 edx_5482
	word32 esi_5483
	branch SLICE(fn0041C1F0(ebx_1894, ebx_1894, ebp_1915, es, ds, Mem1925[esp_1916 + 0x2C<32>:word32], out ecx_5481, out edx_5482, out ebx_1928, out ebp_1927, out esi_5483, out edi_1930), byte, 0) == 0<8> l00421564
l00421564:
	Mem1947[ebp_1927 - 20<i32>:word32] = esp_1916 - 0x14<32>
	Mem1949[esp_1916 - 0x18<32>:word32] = 6<32>
	Mem1950[esp_1916 - 4<32>:word32] = 0<32>
	Mem1951[esp_1916:word32] = 0xF<32>
	Mem1953[esp_1916 - 0x1C<32>:word32] = 0x4329B8<32>
	Mem1954[esp_1916 - 0x14<32>:byte] = 0<8>
	word32 ebp_1956
	word32 ebx_1957
	word32 edi_1959
	word32 ecx_5495
	word32 edx_5496
	word32 esi_5497
	fn00402A70(esp_1916 - 0x14<32>, edi_1930, Mem1954[esp_1916 - 0x1C<32>:word32], Mem1954[esp_1916 - 0x18<32>:word32], Mem1954[esp_1916 - 8<32>:word32], out ecx_5495, out edx_5496, out ebx_1957, out ebp_1956, out esi_5497, out edi_1959)
	Mem1971[ebp_1956 - 4<i32>:word32] = 0x1D<32>
	word32 esp_1963 = <invalid>
	Mem1975[esp_1963 - 0x14<32>:word32] = Mem1971[edi_1959:word32]
	word32 ebp_1978
	word32 edx_5498
	fn004028D0(esp_1963 - 0x10<32>, edi_1959, Mem1975[esp_1963 - 0x14<32>:word32], out edx_5498, out ebp_1978)
	Mem1988[ebp_1978 - 4<i32>:word32] = 0xFFFFFFFF<32>
	word32 esp_1979 = <invalid>
	esp_1986 = esp_1979 + 4<32>
	word32 ebx_1991
	word32 edi_1993
	word32 ecx_5499
	word32 esi_5500
	branch SLICE(fn0041C1F0(ebx_1957, ebx_1957, ebp_1978, es, ds, Mem1988[esp_1979 + 0x2C<32>:word32], out ecx_5499, out edx_1994, out ebx_1991, out ebp_1990, out esi_5500, out edi_1993), byte, 0) == 0<8> l004215F6
l004215AE:
	Mem2010[esp_1979:word32] = Mem1988[edi_1993:word32] + 72<i32>
	word32 esp_2026 = <invalid>
	word32 ebx_2013
	word32 esi_2017
	word32 ecx_5513
	word32 ebp_5514
	word32 edi_5515
	Mem2035[esp_2026:word32] = fn0041C910(ebx_1991, es, ds, Mem2010[esp_1979:word32], Mem2010[esp_1979 + 36<i32>:word32], out ecx_5513, out ebx_2013, out ebp_5514, out esi_2017, out edi_5515)
	Mem2038[esp_2026 - 4<i32>:word32] = esi_2017 + 48<i32>
	word32 esp_2054 = <invalid>
	word32 ebx_2041
	word32 esi_2045
	word32 ecx_5516
	word32 ebp_5517
	word32 edi_5518
	Mem2063[esp_2054:word32] = fn0041C910(ebx_2013, es, ds, Mem2038[esp_2026 - 4<i32>:word32], Mem2038[esp_2026 + 32<i32>:word32], out ecx_5516, out ebx_2041, out ebp_5517, out esi_2045, out edi_5518)
	Mem2066[esp_2054 - 4<i32>:word32] = esi_2045 + 24<i32>
	word32 esp_2082 = <invalid>
	word32 ecx_5519
	word32 esi_5520
	word32 edi_5521
	Mem2091[esp_2082:word32] = fn0041C910(ebx_2041, es, ds, Mem2066[esp_2054 - 4<i32>:word32], Mem2066[esp_2054 + 32<i32>:word32], out ecx_5519, out ebx_2069, out ebp_1990, out esi_5520, out edi_5521)
	word32 ecx_5522
	esi_2110 = fn0041C680(Mem2091[esp_2082:word32], Mem2091[esp_2082 + 4<i32>:word32], Mem2091[esp_2082 + 8<i32>:word32], out ecx_5522)
	word128 xmm0_2112 = fn00427210()
	esp_1986 = esp_2082 + 0xC<32>
	word32 ecx_5523
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_2112, word64, 64), SLICE(xmm0_2112, real64, 0) * Mem2091[0x00432EE0<p32>:real64]), out ecx_5523, out edx_1994) + 0x7AE<32>
l0042151C:
	Mem2137[esp_1916:word32] = Mem1925[edi_1930:word32] + 72<i32>
	word32 esp_2153 = <invalid>
	word32 ebx_2140
	word32 esi_2144
	word32 ecx_5501
	word32 ebp_5502
	word32 edi_5503
	Mem2162[esp_2153:word32] = fn0041C910(ebx_1928, es, ds, Mem2137[esp_1916:word32], Mem2137[esp_1916 + 36<i32>:word32], out ecx_5501, out ebx_2140, out ebp_5502, out esi_2144, out edi_5503)
	Mem2165[esp_2153 - 4<i32>:word32] = esi_2144 + 48<i32>
	word32 esp_2181 = <invalid>
	word32 ebx_2168
	word32 esi_2172
	word32 ecx_5504
	word32 ebp_5505
	word32 edi_5506
	Mem2190[esp_2181:word32] = fn0041C910(ebx_2140, es, ds, Mem2165[esp_2153 - 4<i32>:word32], Mem2165[esp_2153 + 32<i32>:word32], out ecx_5504, out ebx_2168, out ebp_5505, out esi_2172, out edi_5506)
	Mem2193[esp_2181 - 4<i32>:word32] = esi_2172 + 24<i32>
	word32 esp_2209 = <invalid>
	word32 ecx_5507
	word32 esi_5508
	word32 edi_5509
	Mem2218[esp_2209:word32] = fn0041C910(ebx_2168, es, ds, Mem2193[esp_2181 - 4<i32>:word32], Mem2193[esp_2181 + 32<i32>:word32], out ecx_5507, out ebx_2069, out ebp_1990, out esi_5508, out edi_5509)
	word32 ecx_5510
	esi_2110 = fn0041C680(Mem2218[esp_2209:word32], Mem2218[esp_2209 + 4<i32>:word32], Mem2218[esp_2209 + 8<i32>:word32], out ecx_5510)
	word128 xmm0_2239 = fn00427210()
	esp_1986 = esp_2209 + 0xC<32>
	word32 ecx_5511
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_2239, word64, 64), SLICE(xmm0_2239, real64, 0) * Mem2218[0x00432EE0<p32>:real64]), out ecx_5511, out edx_1994) + 0x52A<32>
l0042148A:
	Mem2264[esp_1853:word32] = Mem1862[edi_1867:word32] + 72<i32>
	word32 esp_2280 = <invalid>
	word32 ebx_2267
	word32 esi_2271
	word32 ecx_5484
	word32 ebp_5485
	word32 edi_5486
	Mem2289[esp_2280:word32] = fn0041C910(ebx_1865, es, ds, Mem2264[esp_1853:word32], Mem2264[esp_1853 + 36<i32>:word32], out ecx_5484, out ebx_2267, out ebp_5485, out esi_2271, out edi_5486)
	Mem2292[esp_2280 - 4<i32>:word32] = esi_2271 + 48<i32>
	word32 esp_2308 = <invalid>
	word32 ebx_2295
	word32 esi_2299
	word32 ecx_5487
	word32 ebp_5488
	word32 edi_5489
	Mem2317[esp_2308:word32] = fn0041C910(ebx_2267, es, ds, Mem2292[esp_2280 - 4<i32>:word32], Mem2292[esp_2280 + 32<i32>:word32], out ecx_5487, out ebx_2295, out ebp_5488, out esi_2299, out edi_5489)
	Mem2320[esp_2308 - 4<i32>:word32] = esi_2299 + 24<i32>
	word32 esp_2336 = <invalid>
	word32 ecx_5490
	word32 esi_5491
	word32 edi_5492
	Mem2345[esp_2336:word32] = fn0041C910(ebx_2295, es, ds, Mem2320[esp_2308 - 4<i32>:word32], Mem2320[esp_2308 + 32<i32>:word32], out ecx_5490, out ebx_2069, out ebp_1990, out esi_5491, out edi_5492)
	word32 ecx_5493
	esi_2110 = fn0041C680(Mem2345[esp_2336:word32], Mem2345[esp_2336 + 4<i32>:word32], Mem2345[esp_2336 + 8<i32>:word32], out ecx_5493)
	word128 xmm0_2366 = fn00427210()
	esp_1986 = esp_2336 + 0xC<32>
	word32 ecx_5494
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_2366, word64, 64), SLICE(xmm0_2366, real64, 0) * Mem2345[0x00432EE0<p32>:real64]), out ecx_5494, out edx_1994) + 0x5AA<32>
l004213E0:
	word128 xmm0_2390 = fn00427210()
	word32 ecx_5470
	word32 edx_5471
	word32 eax_2395 = fn0042D911(SEQ(SLICE(xmm0_2390, word64, 64), SLICE(xmm0_2390, real64, 0) * Mem1799[0x00432F18<p32>:real64]), out ecx_5470, out edx_5471)
	word32 esi_2410 = Mem1799[edi_1048:word32]
	Mem2411[ebp_1045 - 24<i32>:word32] = eax_2395
	Mem2413[ebp_1045 - 32<i32>:word32] = esi_2410 + 72<i32>
	word32 eax_2414 = _errno()
	Mem2416[ebp_1045 - 20<i32>:word32] = eax_2414
	word32 esi_2415 = esi_2410 + 0x30<32>
	branch Mem2416[esi_2410 + 0x44<32>:word32] <u 0x10<32> l00421416
l00421414:
	esi_2415 = Mem2416[esi_2410 + 0x30<32>:word32]
l00421416:
	Mem2421[eax_2414:word32] = 0<32>
	Mem2426[esp_1790:word32] = 0<32>
	Mem2428[esp_1790 - 4<i32>:word32] = ebp_1045 - 28<i32>
	Mem2431[esp_1790 - 8<i32>:word32] = esi_2415
	Mem2434[ebp_1045 - 36<i32>:word32] = strtol(Mem2431[esp_1790 - 8<i32>:(ptr32 charconst )], Mem2431[esp_1790 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2431[esp_1790:int32])
	esp_2433 = esp_1790 + 4<32>
	branch esi_2415 == Mem2434[ebp_1045 - 28<i32>:word32] l00420D4F
l00421438:
	eax_2437 = Mem2434[ebp_1045 - 20<i32>:word32]
l00421309:
	word128 xmm0_2440 = fn00427210()
	word32 ecx_5461
	word32 edx_5462
	word32 eax_2445 = fn0042D911(SEQ(SLICE(xmm0_2440, word64, 64), SLICE(xmm0_2440, real64, 0) * Mem1736[0x00432F50<p32>:real64]), out ecx_5461, out edx_5462)
	word32 esi_2460 = Mem1736[edi_1048:word32]
	Mem2461[ebp_1045 - 24<i32>:word32] = eax_2445
	Mem2463[ebp_1045 - 32<i32>:word32] = esi_2460 + 72<i32>
	word32 eax_2464 = _errno()
	Mem2466[ebp_1045 - 28<i32>:word32] = eax_2464
	word32 esi_2465 = esi_2460 + 0x30<32>
	branch Mem2466[esi_2460 + 0x44<32>:word32] <u 0x10<32> l0042133F
l0042133D:
	esi_2465 = Mem2466[esi_2460 + 0x30<32>:word32]
l0042133F:
	Mem2471[eax_2464:word32] = 0<32>
	Mem2476[esp_1727:word32] = 0<32>
	Mem2478[esp_1727 - 4<i32>:word32] = ebp_1045 - 20<i32>
	Mem2481[esp_1727 - 8<i32>:word32] = esi_2465
	Mem2484[ebp_1045 - 36<i32>:word32] = strtol(Mem2481[esp_1727 - 8<i32>:(ptr32 charconst )], Mem2481[esp_1727 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2481[esp_1727:int32])
	esp_2433 = esp_1727 + 4<32>
	branch esi_2465 == Mem2484[ebp_1045 - 20<i32>:word32] l00420D4F
l00421361:
	branch Mem2484[Mem2484[ebp_1045 - 28<i32>:word32]:word32] == 0x22<32> l00420CA2
l0042136D:
	Mem2494[esp_1727:word32] = Mem2484[ebp_1045 - 32<i32>:word32]
	word32 esp_2519 = <invalid>
	word32 ebp_2505
	word32 ebx_2506
	word32 esi_2510
	word32 ecx_5472
	word32 edi_5473
	Mem2528[esp_2519:word32] = fn0041C910(ebx_1046, es, ds, Mem2494[esp_1727:word32], Mem2494[esp_1727 + 36<i32>:word32], out ecx_5472, out ebx_2506, out ebp_2505, out esi_2510, out edi_5473)
	Mem2533[esp_2519 - 4<i32>:word32] = Mem2528[ebp_2505 - 36<i32>:word32] << 2<32>
	Mem2535[esp_2519 - 8<i32>:word32] = esi_2510
	word32 esp_2551 = <invalid>
	word32 ecx_5474
	word32 esi_5475
	word32 edi_5476
	Mem2560[esp_2551:word32] = fn0041C910(ebx_2506, es, ds, Mem2535[esp_2519 - 8<i32>:word32], Mem2535[esp_2519 + 28<i32>:word32], out ecx_5474, out ebx_2069, out ebp_1990, out esi_5475, out edi_5476)
	esp_1986 = esp_2551 + 0xC<32>
	eax_2578 = fn0041C740(Mem2560[esp_2551:word32], Mem2560[esp_2551 + 4<i32>:word16], Mem2560[esp_2551 + 8<i32>:word32], out edx_1994) + Mem2560[ebp_1990 - 24<i32>:word32]
l004212A4:
	word128 xmm0_2582 = fn00427210()
	xmm0_2586 = SEQ(SLICE(xmm0_2582, word64, 64), SLICE(xmm0_2582, real64, 0) * Mem1673[0x00432F30<p32>:real64])
l00421243:
	word128 xmm0_2589 = fn00427210()
	xmm0_2586 = SEQ(SLICE(xmm0_2589, word64, 64), SLICE(xmm0_2589, real64, 0) * Mem1610[0x00432F20<p32>:real64])
l004211E2:
	word128 xmm0_2596 = fn00427210()
	xmm0_2586 = SEQ(SLICE(xmm0_2596, word64, 64), SLICE(xmm0_2596, real64, 0) * Mem1547[0x00432EE8<p32>:real64])
l00421181:
	word128 xmm0_2603 = fn00427210()
	xmm0_2586 = SEQ(SLICE(xmm0_2603, word64, 64), SLICE(xmm0_2603, real64, 0) * Mem1484[0x00432F08<p32>:real64])
l00421120:
	word128 xmm0_2610 = fn00427210()
	xmm0_2586 = SEQ(SLICE(xmm0_2610, word64, 64), SLICE(xmm0_2610, real64, 0) * Mem1421[0x00432EF8<p32>:real64])
l0042108E:
	Mem2618[esp_1349:word32] = Mem1358[edi_1363:word32] + 72<i32>
	word32 esp_2634 = <invalid>
	word32 ebx_2621
	word32 esi_2625
	word32 ecx_5408
	word32 ebp_5409
	word32 edi_5410
	Mem2643[esp_2634:word32] = fn0041C910(ebx_1361, es, ds, Mem2618[esp_1349:word32], Mem2618[esp_1349 + 36<i32>:word32], out ecx_5408, out ebx_2621, out ebp_5409, out esi_2625, out edi_5410)
	Mem2646[esp_2634 - 4<i32>:word32] = esi_2625 + 48<i32>
	word32 esp_2662 = <invalid>
	word32 ebx_2649
	word32 esi_2653
	word32 ecx_5411
	word32 ebp_5412
	word32 edi_5413
	Mem2671[esp_2662:word32] = fn0041C910(ebx_2621, es, ds, Mem2646[esp_2634 - 4<i32>:word32], Mem2646[esp_2634 + 32<i32>:word32], out ecx_5411, out ebx_2649, out ebp_5412, out esi_2653, out edi_5413)
	Mem2674[esp_2662 - 4<i32>:word32] = esi_2653 + 24<i32>
	word32 esp_2690 = <invalid>
	word32 ecx_5414
	word32 esi_5415
	word32 edi_5416
	Mem2699[esp_2690:word32] = fn0041C910(ebx_2649, es, ds, Mem2674[esp_2662 - 4<i32>:word32], Mem2674[esp_2662 + 32<i32>:word32], out ecx_5414, out ebx_2069, out ebp_1990, out esi_5415, out edi_5416)
	word32 ecx_5417
	esi_2110 = fn0041C680(Mem2699[esp_2690:word32], Mem2699[esp_2690 + 4<i32>:word32], Mem2699[esp_2690 + 8<i32>:word32], out ecx_5417)
	word128 xmm0_2720 = fn00427210()
	esp_1986 = esp_2690 + 0xC<32>
	word32 ecx_5418
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_2720, word64, 64), SLICE(xmm0_2720, real64, 0) * Mem2699[0x00432EE0<p32>:real64]), out ecx_5418, out edx_1994) + 0x52C<32>
l00420FFC:
	Mem2745[esp_1286:word32] = Mem1295[edi_1300:word32] + 72<i32>
	word32 esp_2761 = <invalid>
	word32 ebx_2748
	word32 esi_2752
	word32 ecx_5390
	word32 ebp_5391
	word32 edi_5392
	Mem2770[esp_2761:word32] = fn0041C910(ebx_1298, es, ds, Mem2745[esp_1286:word32], Mem2745[esp_1286 + 36<i32>:word32], out ecx_5390, out ebx_2748, out ebp_5391, out esi_2752, out edi_5392)
	Mem2773[esp_2761 - 4<i32>:word32] = esi_2752 + 48<i32>
	word32 esp_2789 = <invalid>
	word32 ebx_2776
	word32 esi_2780
	word32 ecx_5393
	word32 ebp_5394
	word32 edi_5395
	Mem2798[esp_2789:word32] = fn0041C910(ebx_2748, es, ds, Mem2773[esp_2761 - 4<i32>:word32], Mem2773[esp_2761 + 32<i32>:word32], out ecx_5393, out ebx_2776, out ebp_5394, out esi_2780, out edi_5395)
	Mem2801[esp_2789 - 4<i32>:word32] = esi_2780 + 24<i32>
	word32 esp_2817 = <invalid>
	word32 ecx_5396
	word32 esi_5397
	word32 edi_5398
	Mem2826[esp_2817:word32] = fn0041C910(ebx_2776, es, ds, Mem2801[esp_2789 - 4<i32>:word32], Mem2801[esp_2789 + 32<i32>:word32], out ecx_5396, out ebx_2069, out ebp_1990, out esi_5397, out edi_5398)
	word32 ecx_5399
	esi_2110 = fn0041C680(Mem2826[esp_2817:word32], Mem2826[esp_2817 + 4<i32>:word32], Mem2826[esp_2817 + 8<i32>:word32], out ecx_5399)
	word128 xmm0_2847 = fn00427210()
	esp_1986 = esp_2817 + 0xC<32>
	word32 ecx_5400
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_2847, word64, 64), SLICE(xmm0_2847, real64, 0) * Mem2826[0x00432EE0<p32>:real64]), out ecx_5400, out edx_1994) + 0x72C<32>
l00420F22:
	word128 xmm0_2871 = fn00427210()
	word32 ecx_5371
	word32 edx_5372
	word32 eax_2876 = fn0042D911(SEQ(SLICE(xmm0_2871, word64, 64), SLICE(xmm0_2871, real64, 0) * Mem1232[0x00432F50<p32>:real64]), out ecx_5371, out edx_5372)
	word32 esi_2891 = Mem1232[edi_1048:word32]
	Mem2892[ebp_1045 - 24<i32>:word32] = eax_2876
	Mem2894[ebp_1045 - 32<i32>:word32] = esi_2891 + 72<i32>
	word32 eax_2895 = _errno()
	Mem2897[ebp_1045 - 28<i32>:word32] = eax_2895
	word32 esi_2896 = esi_2891 + 0x30<32>
	branch Mem2897[esi_2891 + 0x44<32>:word32] <u 0x10<32> l00420F58
l00420F56:
	esi_2896 = Mem2897[esi_2891 + 0x30<32>:word32]
l00420F58:
	Mem2902[eax_2895:word32] = 0<32>
	Mem2907[esp_1223:word32] = 0<32>
	Mem2909[esp_1223 - 4<i32>:word32] = ebp_1045 - 20<i32>
	Mem2912[esp_1223 - 8<i32>:word32] = esi_2896
	Mem2915[ebp_1045 - 36<i32>:word32] = strtol(Mem2912[esp_1223 - 8<i32>:(ptr32 charconst )], Mem2912[esp_1223 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem2912[esp_1223:int32])
	esp_2433 = esp_1223 + 4<32>
	branch esi_2896 == Mem2915[ebp_1045 - 20<i32>:word32] l00420D4F
l00420F7A:
	branch Mem2915[Mem2915[ebp_1045 - 28<i32>:word32]:word32] == 0x22<32> l00420CA2
l00420F86:
	Mem2925[esp_1223:word32] = Mem2915[ebp_1045 - 32<i32>:word32]
	word32 esp_2950 = <invalid>
	word32 ebp_2936
	word32 ebx_2937
	word32 esi_2941
	word32 ecx_5378
	word32 edi_5379
	Mem2959[esp_2950:word32] = fn0041C910(ebx_1046, es, ds, Mem2925[esp_1223:word32], Mem2925[esp_1223 + 36<i32>:word32], out ecx_5378, out ebx_2937, out ebp_2936, out esi_2941, out edi_5379)
	Mem2964[esp_2950 - 4<i32>:word32] = Mem2959[ebp_2936 - 36<i32>:word32] << 2<32>
	Mem2966[esp_2950 - 8<i32>:word32] = esi_2941
	word32 esp_2982 = <invalid>
	word32 ecx_5380
	word32 esi_5381
	word32 edi_5382
	Mem2991[esp_2982:word32] = fn0041C910(ebx_2937, es, ds, Mem2966[esp_2950 - 8<i32>:word32], Mem2966[esp_2950 + 28<i32>:word32], out ecx_5380, out ebx_2069, out ebp_1990, out esi_5381, out edi_5382)
	esp_1986 = esp_2982 + 0xC<32>
	eax_2578 = fn0041C740(Mem2991[esp_2982:word32], Mem2991[esp_2982 + 4<i32>:word16], Mem2991[esp_2982 + 8<i32>:word32], out edx_1994) + (Mem2991[ebp_1990 - 24<i32>:word32] + 1<32>)
l00420EBD:
	word128 xmm0_3015 = fn00427210()
	xmm0_2586 = SEQ(SLICE(xmm0_3015, word64, 64), SLICE(xmm0_3015, real64, 0) * Mem1169[0x00432F38<p32>:real64])
l00420E5C:
	word128 xmm0_3022 = fn00427210()
	xmm0_2586 = SEQ(SLICE(xmm0_3022, word64, 64), SLICE(xmm0_3022, real64, 0) * Mem1106[0x00432F28<p32>:real64])
l00420DD5:
	word128 xmm0_3029 = fn00427210()
	xmm0_2586 = SEQ(SLICE(xmm0_3029, word64, 64), SLICE(xmm0_3029, real64, 0) * Mem1043[0x00432EF0<p32>:real64])
l00420DE7:
	word32 ecx_5355
	word32 edx_5356
	word32 eax_3035 = fn0042D911(xmm0_2586, out ecx_5355, out edx_5356)
	word32 esi_3052 = Mem3051[edi_1048:word32]
	Mem3054[ebp_1045 - 24<i32>:word32] = eax_3035
	Mem3056[ebp_1045 - 32<i32>:word32] = esi_3052 + 72<i32>
	eax_3057 = _errno()
	Mem3059[ebp_1045 - 28<i32>:word32] = eax_3057
	esi_3058 = esi_3052 + 0x30<32>
	branch Mem3059[esi_3052 + 0x44<32>:word32] <u 0x10<32> l00420D31
l00420E0D:
l00420CFB:
	word128 xmm0_3064 = fn00427210()
	word32 ecx_5334
	word32 edx_5335
	word32 eax_3069 = fn0042D911(SEQ(SLICE(xmm0_3064, word64, 64), SLICE(xmm0_3064, real64, 0) * Mem970[0x00432F10<p32>:real64]), out ecx_5334, out edx_5335)
	word32 esi_3084 = Mem970[edi_1048:word32]
	Mem3085[ebp_1045 - 24<i32>:word32] = eax_3069
	Mem3087[ebp_1045 - 32<i32>:word32] = esi_3084 + 72<i32>
	eax_3057 = _errno()
	Mem3090[ebp_1045 - 28<i32>:word32] = eax_3057
	esi_3058 = esi_3084 + 0x30<32>
	branch Mem3090[esi_3084 + 0x44<32>:word32] <u 0x10<32> l00420D31
l00420D2F:
	esi_3058 = Mem3094[esi_3058:word32]
l00420D31:
	Mem3098[eax_3057:word32] = 0<32>
	word32 esp_3105 = esp_1041 - 4<i32>
	Mem3106[esp_3105:word32] = 0<32>
	Mem3108[esp_3105 - 4<i32>:word32] = ebp_1045 - 20<i32>
	Mem3111[esp_3105 - 8<i32>:word32] = esi_3058
	Mem3114[ebp_1045 - 36<i32>:word32] = strtol(Mem3111[esp_3105 - 8<i32>:(ptr32 charconst )], Mem3111[esp_3105 - 4<i32>:(ptr32 (ptr32 charconst ))], Mem3111[esp_3105:int32])
	esp_2433 = esp_3105 + 4<32>
	branch esi_3058 != Mem3114[ebp_1045 - 20<i32>:word32] l00420D5A
l00420D4F:
	esp_2433 = esp_2433 - 4<i32>
	Mem3119[esp_2433:word32] = 0x431878<32>
	_Xinvalid_argument(Mem3119[esp_2433:(ptr32 charconst )])
l00420D5A:
	eax_2437 = Mem3122[ebp_1045 - 28<i32>:word32]
l00420D5D:
	branch Mem3125[eax_2437:word32] == 0x22<32> l00420CA2
l00420D66:
	word32 esp_3139 = esp_2433 - 4<i32>
	Mem3140[esp_3139:word32] = Mem3125[ebp_1045 - 32<i32>:word32]
	word32 esp_3207 = <invalid>
	word32 ebp_3193
	word32 ebx_3194
	word32 esi_3198
	word32 ecx_5373
	word32 edi_5374
	Mem3216[esp_3207:word32] = fn0041C910(ebx_1046, es, ds, Mem3140[esp_3139:word32], Mem3140[esp_3139 + 36<i32>:word32], out ecx_5373, out ebx_3194, out ebp_3193, out esi_3198, out edi_5374)
	Mem3219[esp_3207 - 4<i32>:word32] = Mem3216[ebp_3193 - 36<i32>:word32]
	Mem3221[esp_3207 - 8<i32>:word32] = esi_3198
	word32 esp_3237 = <invalid>
	word32 ecx_5375
	word32 esi_5376
	word32 edi_5377
	Mem3246[esp_3237:word32] = fn0041C910(ebx_3194, es, ds, Mem3221[esp_3207 - 8<i32>:word32], Mem3221[esp_3207 + 28<i32>:word32], out ecx_5375, out ebx_2069, out ebp_1990, out esi_5376, out edi_5377)
	esp_1986 = esp_3237 + 0xC<32>
	eax_2578 = fn0041C740(Mem3246[esp_3237:word32], Mem3246[esp_3237 + 4<i32>:word16], Mem3246[esp_3237 + 8<i32>:word32], out edx_1994) + Mem3246[ebp_1990 - 24<i32>:word32]
l00420C7D:
	word32 esp_3271 = esp_2433 - 4<i32>
	Mem3272[esp_3271:word32] = Mem912[ebp_1045 - 32<i32>:word32]
	word32 esp_3304 = <invalid>
	word32 ebp_3290
	word32 ebx_3291
	word32 esi_3295
	word32 ecx_5343
	word32 edi_5344
	Mem3313[esp_3304:word32] = fn0041C910(ebx_844, es, ds, Mem3272[esp_3271:word32], Mem3272[esp_3271 + 36<i32>:word32], out ecx_5343, out ebx_3291, out ebp_3290, out esi_3295, out edi_5344)
	Mem3316[esp_3304 - 4<i32>:word32] = Mem3313[ebp_3290 - 28<i32>:word32]
	Mem3318[esp_3304 - 8<i32>:word32] = esi_3295
	word32 esp_3334 = <invalid>
	word32 ecx_5345
	word32 esi_5346
	word32 edi_5347
	Mem3343[esp_3334:word32] = fn0041C910(ebx_3291, es, ds, Mem3318[esp_3304 - 8<i32>:word32], Mem3318[esp_3304 + 28<i32>:word32], out ecx_5345, out ebx_2069, out ebp_1990, out esi_5346, out edi_5347)
	esp_1986 = esp_3334 + 0xC<32>
	eax_2578 = fn0041C740(Mem3343[esp_3334:word32], Mem3343[esp_3334 + 4<i32>:word16], Mem3343[esp_3334 + 8<i32>:word32], out edx_1994) + Mem3343[ebp_1990 - 20<i32>:word32]
l00420B80:
	Mem3366[esp_769:word32] = Mem778[edi_783:word32] + 72<i32>
	word32 esp_3382 = <invalid>
	word32 ebx_3369
	word32 esi_3373
	word32 ecx_5307
	word32 ebp_5308
	word32 edi_5309
	Mem3391[esp_3382:word32] = fn0041C910(ebx_781, es, ds, Mem3366[esp_769:word32], Mem3366[esp_769 + 36<i32>:word32], out ecx_5307, out ebx_3369, out ebp_5308, out esi_3373, out edi_5309)
	Mem3394[esp_3382 - 4<i32>:word32] = esi_3373 + 48<i32>
	word32 esp_3410 = <invalid>
	word32 ebx_3397
	word32 esi_3401
	word32 ecx_5310
	word32 ebp_5311
	word32 edi_5312
	Mem3419[esp_3410:word32] = fn0041C910(ebx_3369, es, ds, Mem3394[esp_3382 - 4<i32>:word32], Mem3394[esp_3382 + 32<i32>:word32], out ecx_5310, out ebx_3397, out ebp_5311, out esi_3401, out edi_5312)
	Mem3422[esp_3410 - 4<i32>:word32] = esi_3401 + 24<i32>
	word32 esp_3438 = <invalid>
	word32 ecx_5313
	word32 esi_5314
	word32 edi_5315
	Mem3447[esp_3438:word32] = fn0041C910(ebx_3397, es, ds, Mem3422[esp_3410 - 4<i32>:word32], Mem3422[esp_3410 + 32<i32>:word32], out ecx_5313, out ebx_2069, out ebp_1990, out esi_5314, out edi_5315)
	word32 ecx_5316
	esi_2110 = fn0041C680(Mem3447[esp_3438:word32], Mem3447[esp_3438 + 4<i32>:word32], Mem3447[esp_3438 + 8<i32>:word32], out ecx_5316)
	word128 xmm0_3468 = fn00427210()
	esp_1986 = esp_3438 + 0xC<32>
	word32 ecx_5317
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_3468, word64, 64), SLICE(xmm0_3468, real64, 0) * Mem3447[0x00432EE0<p32>:real64]), out ecx_5317, out edx_1994) + 0x12A<32>
l00420AEE:
	Mem3493[esp_706:word32] = Mem715[edi_720:word32] + 72<i32>
	word32 esp_3509 = <invalid>
	word32 ebx_3496
	word32 esi_3500
	word32 ecx_5289
	word32 ebp_5290
	word32 edi_5291
	Mem3518[esp_3509:word32] = fn0041C910(ebx_718, es, ds, Mem3493[esp_706:word32], Mem3493[esp_706 + 36<i32>:word32], out ecx_5289, out ebx_3496, out ebp_5290, out esi_3500, out edi_5291)
	Mem3521[esp_3509 - 4<i32>:word32] = esi_3500 + 48<i32>
	word32 esp_3537 = <invalid>
	word32 ebx_3524
	word32 esi_3528
	word32 ecx_5292
	word32 ebp_5293
	word32 edi_5294
	Mem3546[esp_3537:word32] = fn0041C910(ebx_3496, es, ds, Mem3521[esp_3509 - 4<i32>:word32], Mem3521[esp_3509 + 32<i32>:word32], out ecx_5292, out ebx_3524, out ebp_5293, out esi_3528, out edi_5294)
	Mem3549[esp_3537 - 4<i32>:word32] = esi_3528 + 24<i32>
	word32 esp_3565 = <invalid>
	word32 ecx_5295
	word32 esi_5296
	word32 edi_5297
	Mem3574[esp_3565:word32] = fn0041C910(ebx_3524, es, ds, Mem3549[esp_3537 - 4<i32>:word32], Mem3549[esp_3537 + 32<i32>:word32], out ecx_5295, out ebx_2069, out ebp_1990, out esi_5296, out edi_5297)
	word32 ecx_5298
	esi_2110 = fn0041C680(Mem3574[esp_3565:word32], Mem3574[esp_3565 + 4<i32>:word32], Mem3574[esp_3565 + 8<i32>:word32], out ecx_5298)
	word128 xmm0_3595 = fn00427210()
	esp_1986 = esp_3565 + 0xC<32>
	word32 ecx_5299
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_3595, word64, 64), SLICE(xmm0_3595, real64, 0) * Mem3574[0x00432EE0<p32>:real64]), out ecx_5299, out edx_1994) + 0x5AE<32>
l00420A5C:
	Mem3620[esp_643:word32] = Mem652[edi_657:word32] + 72<i32>
	word32 esp_3636 = <invalid>
	word32 ebx_3623
	word32 esi_3627
	word32 ecx_5271
	word32 ebp_5272
	word32 edi_5273
	Mem3645[esp_3636:word32] = fn0041C910(ebx_655, es, ds, Mem3620[esp_643:word32], Mem3620[esp_643 + 36<i32>:word32], out ecx_5271, out ebx_3623, out ebp_5272, out esi_3627, out edi_5273)
	Mem3648[esp_3636 - 4<i32>:word32] = esi_3627 + 48<i32>
	word32 esp_3664 = <invalid>
	word32 ebx_3651
	word32 esi_3655
	word32 ecx_5274
	word32 ebp_5275
	word32 edi_5276
	Mem3673[esp_3664:word32] = fn0041C910(ebx_3623, es, ds, Mem3648[esp_3636 - 4<i32>:word32], Mem3648[esp_3636 + 32<i32>:word32], out ecx_5274, out ebx_3651, out ebp_5275, out esi_3655, out edi_5276)
	Mem3676[esp_3664 - 4<i32>:word32] = esi_3655 + 24<i32>
	word32 esp_3692 = <invalid>
	word32 ecx_5277
	word32 esi_5278
	word32 edi_5279
	Mem3701[esp_3692:word32] = fn0041C910(ebx_3651, es, ds, Mem3676[esp_3664 - 4<i32>:word32], Mem3676[esp_3664 + 32<i32>:word32], out ecx_5277, out ebx_2069, out ebp_1990, out esi_5278, out edi_5279)
	word32 ecx_5280
	esi_2110 = fn0041C680(Mem3701[esp_3692:word32], Mem3701[esp_3692 + 4<i32>:word32], Mem3701[esp_3692 + 8<i32>:word32], out ecx_5280)
	word128 xmm0_3722 = fn00427210()
	esp_1986 = esp_3692 + 0xC<32>
	word32 ecx_5281
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_3722, word64, 64), SLICE(xmm0_3722, real64, 0) * Mem3701[0x00432EE0<p32>:real64]), out ecx_5281, out edx_1994) + 0x52E<32>
l004209CA:
	Mem3747[esp_580:word32] = Mem589[edi_594:word32] + 72<i32>
	word32 esp_3763 = <invalid>
	word32 ebx_3750
	word32 esi_3754
	word32 ecx_5253
	word32 ebp_5254
	word32 edi_5255
	Mem3772[esp_3763:word32] = fn0041C910(ebx_592, es, ds, Mem3747[esp_580:word32], Mem3747[esp_580 + 36<i32>:word32], out ecx_5253, out ebx_3750, out ebp_5254, out esi_3754, out edi_5255)
	Mem3775[esp_3763 - 4<i32>:word32] = esi_3754 + 48<i32>
	word32 esp_3791 = <invalid>
	word32 ebx_3778
	word32 esi_3782
	word32 ecx_5256
	word32 ebp_5257
	word32 edi_5258
	Mem3800[esp_3791:word32] = fn0041C910(ebx_3750, es, ds, Mem3775[esp_3763 - 4<i32>:word32], Mem3775[esp_3763 + 32<i32>:word32], out ecx_5256, out ebx_3778, out ebp_5257, out esi_3782, out edi_5258)
	Mem3803[esp_3791 - 4<i32>:word32] = esi_3782 + 24<i32>
	word32 esp_3819 = <invalid>
	word32 ecx_5259
	word32 esi_5260
	word32 edi_5261
	Mem3828[esp_3819:word32] = fn0041C910(ebx_3778, es, ds, Mem3803[esp_3791 - 4<i32>:word32], Mem3803[esp_3791 + 32<i32>:word32], out ecx_5259, out ebx_2069, out ebp_1990, out esi_5260, out edi_5261)
	word32 ecx_5262
	esi_2110 = fn0041C680(Mem3828[esp_3819:word32], Mem3828[esp_3819 + 4<i32>:word32], Mem3828[esp_3819 + 8<i32>:word32], out ecx_5262)
	word128 xmm0_3849 = fn00427210()
	esp_1986 = esp_3819 + 0xC<32>
	word32 ecx_5263
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_3849, word64, 64), SLICE(xmm0_3849, real64, 0) * Mem3828[0x00432EE0<p32>:real64]), out ecx_5263, out edx_1994) + 0x12E<32>
l00420938:
	Mem3874[esp_517:word32] = Mem526[edi_531:word32] + 72<i32>
	word32 esp_3890 = <invalid>
	word32 ebx_3877
	word32 esi_3881
	word32 ecx_5235
	word32 ebp_5236
	word32 edi_5237
	Mem3899[esp_3890:word32] = fn0041C910(ebx_529, es, ds, Mem3874[esp_517:word32], Mem3874[esp_517 + 36<i32>:word32], out ecx_5235, out ebx_3877, out ebp_5236, out esi_3881, out edi_5237)
	Mem3902[esp_3890 - 4<i32>:word32] = esi_3881 + 48<i32>
	word32 esp_3918 = <invalid>
	word32 ebx_3905
	word32 esi_3909
	word32 ecx_5238
	word32 ebp_5239
	word32 edi_5240
	Mem3927[esp_3918:word32] = fn0041C910(ebx_3877, es, ds, Mem3902[esp_3890 - 4<i32>:word32], Mem3902[esp_3890 + 32<i32>:word32], out ecx_5238, out ebx_3905, out ebp_5239, out esi_3909, out edi_5240)
	Mem3930[esp_3918 - 4<i32>:word32] = esi_3909 + 24<i32>
	word32 esp_3946 = <invalid>
	word32 ecx_5241
	word32 esi_5242
	word32 edi_5243
	Mem3955[esp_3946:word32] = fn0041C910(ebx_3905, es, ds, Mem3930[esp_3918 - 4<i32>:word32], Mem3930[esp_3918 + 32<i32>:word32], out ecx_5241, out ebx_2069, out ebp_1990, out esi_5242, out edi_5243)
	word32 ecx_5244
	esi_2110 = fn0041C680(Mem3955[esp_3946:word32], Mem3955[esp_3946 + 4<i32>:word32], Mem3955[esp_3946 + 8<i32>:word32], out ecx_5244)
	word128 xmm0_3976 = fn00427210()
	esp_1986 = esp_3946 + 0xC<32>
	word32 ecx_5245
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_3976, word64, 64), SLICE(xmm0_3976, real64, 0) * Mem3955[0x00432EE0<p32>:real64]), out ecx_5245, out edx_1994) + 0x32E<32>
l004208A6:
	Mem4001[esp_454:word32] = Mem463[edi_468:word32] + 72<i32>
	word32 esp_4017 = <invalid>
	word32 ebx_4004
	word32 esi_4008
	word32 ecx_5217
	word32 ebp_5218
	word32 edi_5219
	Mem4026[esp_4017:word32] = fn0041C910(ebx_466, es, ds, Mem4001[esp_454:word32], Mem4001[esp_454 + 36<i32>:word32], out ecx_5217, out ebx_4004, out ebp_5218, out esi_4008, out edi_5219)
	Mem4029[esp_4017 - 4<i32>:word32] = esi_4008 + 48<i32>
	word32 esp_4045 = <invalid>
	word32 ebx_4032
	word32 esi_4036
	word32 ecx_5220
	word32 ebp_5221
	word32 edi_5222
	Mem4054[esp_4045:word32] = fn0041C910(ebx_4004, es, ds, Mem4029[esp_4017 - 4<i32>:word32], Mem4029[esp_4017 + 32<i32>:word32], out ecx_5220, out ebx_4032, out ebp_5221, out esi_4036, out edi_5222)
	Mem4057[esp_4045 - 4<i32>:word32] = esi_4036 + 24<i32>
	word32 esp_4073 = <invalid>
	word32 ecx_5223
	word32 esi_5224
	word32 edi_5225
	Mem4082[esp_4073:word32] = fn0041C910(ebx_4032, es, ds, Mem4057[esp_4045 - 4<i32>:word32], Mem4057[esp_4045 + 32<i32>:word32], out ecx_5223, out ebx_2069, out ebp_1990, out esi_5224, out edi_5225)
	word32 ecx_5226
	esi_2110 = fn0041C680(Mem4082[esp_4073:word32], Mem4082[esp_4073 + 4<i32>:word32], Mem4082[esp_4073 + 8<i32>:word32], out ecx_5226)
	word128 xmm0_4103 = fn00427210()
	esp_1986 = esp_4073 + 0xC<32>
	word32 ecx_5227
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_4103, word64, 64), SLICE(xmm0_4103, real64, 0) * Mem4082[0x00432EE0<p32>:real64]), out ecx_5227, out edx_1994) + 0x1AE<32>
l00420814:
	Mem4128[esp_391:word32] = Mem400[edi_405:word32] + 72<i32>
	word32 esp_4144 = <invalid>
	word32 ebx_4131
	word32 esi_4135
	word32 ecx_5199
	word32 ebp_5200
	word32 edi_5201
	Mem4153[esp_4144:word32] = fn0041C910(ebx_403, es, ds, Mem4128[esp_391:word32], Mem4128[esp_391 + 36<i32>:word32], out ecx_5199, out ebx_4131, out ebp_5200, out esi_4135, out edi_5201)
	Mem4156[esp_4144 - 4<i32>:word32] = esi_4135 + 48<i32>
	word32 esp_4172 = <invalid>
	word32 ebx_4159
	word32 esi_4163
	word32 ecx_5202
	word32 ebp_5203
	word32 edi_5204
	Mem4181[esp_4172:word32] = fn0041C910(ebx_4131, es, ds, Mem4156[esp_4144 - 4<i32>:word32], Mem4156[esp_4144 + 32<i32>:word32], out ecx_5202, out ebx_4159, out ebp_5203, out esi_4163, out edi_5204)
	Mem4184[esp_4172 - 4<i32>:word32] = esi_4163 + 24<i32>
	word32 esp_4200 = <invalid>
	word32 ecx_5205
	word32 esi_5206
	word32 edi_5207
	Mem4209[esp_4200:word32] = fn0041C910(ebx_4159, es, ds, Mem4184[esp_4172 - 4<i32>:word32], Mem4184[esp_4172 + 32<i32>:word32], out ecx_5205, out ebx_2069, out ebp_1990, out esi_5206, out edi_5207)
	word32 ecx_5208
	esi_2110 = fn0041C680(Mem4209[esp_4200:word32], Mem4209[esp_4200 + 4<i32>:word32], Mem4209[esp_4200 + 8<i32>:word32], out ecx_5208)
	word128 xmm0_4230 = fn00427210()
	esp_1986 = esp_4200 + 0xC<32>
	word32 ecx_5209
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_4230, word64, 64), SLICE(xmm0_4230, real64, 0) * Mem4209[0x00432EE0<p32>:real64]), out ecx_5209, out edx_1994) + 0x16A<32>
l00420782:
	Mem4255[esp_328:word32] = Mem337[edi_342:word32] + 72<i32>
	word32 esp_4271 = <invalid>
	word32 ebx_4258
	word32 esi_4262
	word32 ecx_5181
	word32 ebp_5182
	word32 edi_5183
	Mem4280[esp_4271:word32] = fn0041C910(ebx_340, es, ds, Mem4255[esp_328:word32], Mem4255[esp_328 + 36<i32>:word32], out ecx_5181, out ebx_4258, out ebp_5182, out esi_4262, out edi_5183)
	Mem4283[esp_4271 - 4<i32>:word32] = esi_4262 + 48<i32>
	word32 esp_4299 = <invalid>
	word32 ebx_4286
	word32 esi_4290
	word32 ecx_5184
	word32 ebp_5185
	word32 edi_5186
	Mem4308[esp_4299:word32] = fn0041C910(ebx_4258, es, ds, Mem4283[esp_4271 - 4<i32>:word32], Mem4283[esp_4271 + 32<i32>:word32], out ecx_5184, out ebx_4286, out ebp_5185, out esi_4290, out edi_5186)
	Mem4311[esp_4299 - 4<i32>:word32] = esi_4290 + 24<i32>
	word32 esp_4327 = <invalid>
	word32 ecx_5187
	word32 esi_5188
	word32 edi_5189
	Mem4336[esp_4327:word32] = fn0041C910(ebx_4286, es, ds, Mem4311[esp_4299 - 4<i32>:word32], Mem4311[esp_4299 + 32<i32>:word32], out ecx_5187, out ebx_2069, out ebp_1990, out esi_5188, out edi_5189)
	word32 ecx_5190
	esi_2110 = fn0041C680(Mem4336[esp_4327:word32], Mem4336[esp_4327 + 4<i32>:word32], Mem4336[esp_4327 + 8<i32>:word32], out ecx_5190)
	word128 xmm0_4357 = fn00427210()
	esp_1986 = esp_4327 + 0xC<32>
	word32 ecx_5191
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_4357, word64, 64), SLICE(xmm0_4357, real64, 0) * Mem4336[0x00432EE0<p32>:real64]), out ecx_5191, out edx_1994) + 0x5EE<32>
l004206F0:
	Mem4382[esp_265:word32] = Mem274[edi_279:word32] + 72<i32>
	word32 esp_4398 = <invalid>
	word32 ebx_4385
	word32 esi_4389
	word32 ecx_5163
	word32 ebp_5164
	word32 edi_5165
	Mem4407[esp_4398:word32] = fn0041C910(ebx_277, es, ds, Mem4382[esp_265:word32], Mem4382[esp_265 + 36<i32>:word32], out ecx_5163, out ebx_4385, out ebp_5164, out esi_4389, out edi_5165)
	Mem4410[esp_4398 - 4<i32>:word32] = esi_4389 + 48<i32>
	word32 esp_4426 = <invalid>
	word32 ebx_4413
	word32 esi_4417
	word32 ecx_5166
	word32 ebp_5167
	word32 edi_5168
	Mem4435[esp_4426:word32] = fn0041C910(ebx_4385, es, ds, Mem4410[esp_4398 - 4<i32>:word32], Mem4410[esp_4398 + 32<i32>:word32], out ecx_5166, out ebx_4413, out ebp_5167, out esi_4417, out edi_5168)
	Mem4438[esp_4426 - 4<i32>:word32] = esi_4417 + 24<i32>
	word32 esp_4454 = <invalid>
	word32 ecx_5169
	word32 esi_5170
	word32 edi_5171
	Mem4463[esp_4454:word32] = fn0041C910(ebx_4413, es, ds, Mem4438[esp_4426 - 4<i32>:word32], Mem4438[esp_4426 + 32<i32>:word32], out ecx_5169, out ebx_2069, out ebp_1990, out esi_5170, out edi_5171)
	word32 ecx_5172
	esi_2110 = fn0041C680(Mem4463[esp_4454:word32], Mem4463[esp_4454 + 4<i32>:word32], Mem4463[esp_4454 + 8<i32>:word32], out ecx_5172)
	word128 xmm0_4484 = fn00427210()
	esp_1986 = esp_4454 + 0xC<32>
	word32 ecx_5173
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_4484, word64, 64), SLICE(xmm0_4484, real64, 0) * Mem4463[0x00432EE0<p32>:real64]), out ecx_5173, out edx_1994) + 0x56E<32>
l0042065E:
	Mem4509[esp_202:word32] = Mem211[edi_216:word32] + 72<i32>
	word32 esp_4525 = <invalid>
	word32 ebx_4512
	word32 esi_4516
	word32 ecx_5145
	word32 ebp_5146
	word32 edi_5147
	Mem4534[esp_4525:word32] = fn0041C910(ebx_214, es, ds, Mem4509[esp_202:word32], Mem4509[esp_202 + 36<i32>:word32], out ecx_5145, out ebx_4512, out ebp_5146, out esi_4516, out edi_5147)
	Mem4537[esp_4525 - 4<i32>:word32] = esi_4516 + 48<i32>
	word32 esp_4553 = <invalid>
	word32 ebx_4540
	word32 esi_4544
	word32 ecx_5148
	word32 ebp_5149
	word32 edi_5150
	Mem4562[esp_4553:word32] = fn0041C910(ebx_4512, es, ds, Mem4537[esp_4525 - 4<i32>:word32], Mem4537[esp_4525 + 32<i32>:word32], out ecx_5148, out ebx_4540, out ebp_5149, out esi_4544, out edi_5150)
	Mem4565[esp_4553 - 4<i32>:word32] = esi_4544 + 24<i32>
	word32 esp_4581 = <invalid>
	word32 ecx_5151
	word32 esi_5152
	word32 edi_5153
	Mem4590[esp_4581:word32] = fn0041C910(ebx_4540, es, ds, Mem4565[esp_4553 - 4<i32>:word32], Mem4565[esp_4553 + 32<i32>:word32], out ecx_5151, out ebx_2069, out ebp_1990, out esi_5152, out edi_5153)
	word32 ecx_5154
	esi_2110 = fn0041C680(Mem4590[esp_4581:word32], Mem4590[esp_4581 + 4<i32>:word32], Mem4590[esp_4581 + 8<i32>:word32], out ecx_5154)
	word128 xmm0_4611 = fn00427210()
	esp_1986 = esp_4581 + 0xC<32>
	word32 ecx_5155
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_4611, word64, 64), SLICE(xmm0_4611, real64, 0) * Mem4590[0x00432EE0<p32>:real64]), out ecx_5155, out edx_1994) + 0x16E<32>
l004205CC:
	Mem4636[esp_139:word32] = Mem148[edi_153:word32] + 72<i32>
	word32 esp_4652 = <invalid>
	word32 ecx_5127
	word32 ebp_5128
	word32 edi_5129
	word32 ebx_4639
	word32 esi_4643
	Mem4661[esp_4652:word32] = fn0041C910(ebx_151, es, ds, Mem4636[esp_139:word32], Mem4636[esp_139 + 36<i32>:word32], out ecx_5127, out ebx_4639, out ebp_5128, out esi_4643, out edi_5129)
	Mem4664[esp_4652 - 4<i32>:word32] = esi_4643 + 48<i32>
	word32 esp_4680 = <invalid>
	word32 ecx_5130
	word32 ebp_5131
	word32 edi_5132
	word32 ebx_4667
	word32 esi_4671
	Mem4689[esp_4680:word32] = fn0041C910(ebx_4639, es, ds, Mem4664[esp_4652 - 4<i32>:word32], Mem4664[esp_4652 + 32<i32>:word32], out ecx_5130, out ebx_4667, out ebp_5131, out esi_4671, out edi_5132)
	Mem4692[esp_4680 - 4<i32>:word32] = esi_4671 + 24<i32>
	word32 esp_4708 = <invalid>
	word32 esi_5134
	word32 ecx_5133
	word32 edi_5135
	Mem4717[esp_4708:word32] = fn0041C910(ebx_4667, es, ds, Mem4692[esp_4680 - 4<i32>:word32], Mem4692[esp_4680 + 32<i32>:word32], out ecx_5133, out ebx_2069, out ebp_1990, out esi_5134, out edi_5135)
	word32 ecx_5136
	esi_2110 = fn0041C680(Mem4717[esp_4708:word32], Mem4717[esp_4708 + 4<i32>:word32], Mem4717[esp_4708 + 8<i32>:word32], out ecx_5136)
	word128 xmm0_4738 = fn00427210()
	esp_1986 = esp_4708 + 0xC<32>
	word32 ecx_5137
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_4738, word64, 64), SLICE(xmm0_4738, real64, 0) * Mem4717[0x00432EE0<p32>:real64]), out ecx_5137, out edx_1994) + 0x36E<32>
l0042053A:
	Mem4763[esp_71:word32] = Mem80[edi_90:word32] + 72<i32>
	word32 esp_4779 = <invalid>
	word32 edi_5111
	word32 ebx_4766
	word32 esi_4770
	word32 ebp_5110
	word32 ecx_5109
	Mem4788[esp_4779:word32] = fn0041C910(ebx_88, es, ds, Mem4763[esp_71:word32], Mem4763[esp_71 + 36<i32>:word32], out ecx_5109, out ebx_4766, out ebp_5110, out esi_4770, out edi_5111)
	Mem4791[esp_4779 - 4<i32>:word32] = esi_4770 + 48<i32>
	word32 esp_4807 = <invalid>
	word32 ecx_5112
	word32 ebp_5113
	word32 edi_5114
	word32 ebx_4794
	word32 esi_4798
	Mem4816[esp_4807:word32] = fn0041C910(ebx_4766, es, ds, Mem4791[esp_4779 - 4<i32>:word32], Mem4791[esp_4779 + 32<i32>:word32], out ecx_5112, out ebx_4794, out ebp_5113, out esi_4798, out edi_5114)
	Mem4819[esp_4807 - 4<i32>:word32] = esi_4798 + 24<i32>
	word32 esp_4835 = <invalid>
	word32 ecx_5115
	word32 edi_5117
	word32 esi_5116
	Mem4844[esp_4835:word32] = fn0041C910(ebx_4794, es, ds, Mem4819[esp_4807 - 4<i32>:word32], Mem4819[esp_4807 + 32<i32>:word32], out ecx_5115, out ebx_2069, out ebp_1990, out esi_5116, out edi_5117)
	word32 ecx_5118
	esi_2110 = fn0041C680(Mem4844[esp_4835:word32], Mem4844[esp_4835 + 4<i32>:word32], Mem4844[esp_4835 + 8<i32>:word32], out ecx_5118)
	word128 xmm0_4865 = fn00427210()
	esp_1986 = esp_4835 + 0xC<32>
	word32 ecx_5119
	eax_2132 = fn0042D911(SEQ(SLICE(xmm0_4865, word64, 64), SLICE(xmm0_4865, real64, 0) * Mem4844[0x00432EE0<p32>:real64]), out ecx_5119, out edx_1994) + 0x1EE<32>
l004215F1:
	eax_2578 = eax_2132 + esi_2110
l004215F3:
	Mem4894[ebx_2069 + 96<i32>:word32] = eax_2578
l004215F6:
	Mem4903[fs:0x00000000<p32>:word32] = Mem4898[ebp_1990 - 12<i32>:word32]
	word32 esp_4908 = esp_1986 + 4<i32>
	word32 esi_4911 = Mem4903[esp_4908 + 4<i32>:word32]
	word32 ecx_4938
	word32 eax_5512
	fn00427500(Mem4903[ebp_1990 - 16<i32>:word32] ^ ebp_1990, edx_1994, Mem4903[esp_4908 + 8<i32>:word32], ebp_1990, esi_4911, Mem4903[esp_4908:word32], es, ds, Mem4903[esp_4908 + 8<i32>:word32], out eax_5512, out ecx_4938)
	ebpOut = Mem4903[ebp_1990:word32]
	esiOut = esi_4911
	return ecx_4938
fn004204C0_exit:


